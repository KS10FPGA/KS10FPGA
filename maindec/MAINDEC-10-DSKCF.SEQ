;DSKCF
                                                                                                                           SEQ 0001






				IDENTIFICATION
				--------------

	PRODUCT CODE:		AH-F247C-DD

	DIAGNOSTIC CODE:	DSKCF

	PRODUCT NAME:		DSKCFC0 DECSYSTEM 2020 ADVANCED
				INSTRUCTION DIAGNOSTIC (6)

	VERSION:		0.3

	DATE RELEASED:		SEPTEMBER 1979

	MAINTAINED BY:		DIAGNOSTIC ENGINEERING

	AUTHOR:			JOHN R. KIRCHOFF
				RICHARD E. STOCKDALE

		        COPYRIGHT (C) 1978, 1979

	        DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.

	THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR  USE  ONLY  ON  A
	SINGLE COMPUTER SYSTEM AND MAY BE COPIED ONLY WITH THE INCLUSION
	OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE,  OR  ANY  OTHER
	COPIES  THEREOF, MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE
	TO ANY OTHER PERSON EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO
	AGREES  TO  THESE  LICENSE TERMS.  TITLE TO AND OWNERSHIP OF THE
	SOFTWARE  SHALL  AT   ALL  TIMES  REMAIN  IN  DIGITAL  EQUIPMENT
	CORPORATION.

	THE INFORMATION IN THIS DOCUMENT IS SUBJECT  TO  CHANGE  WITHOUT
	NOTICE  AND  SHOULD  NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
	EQUIPMENT CORPORATION.

	DIGITAL EQUIPMENT CORPORATION ASSUMES NO  RESPONSIBILITY FOR THE
	USE  OR  RELIABILITY  OF  ITS SOFTWARE IN EQUIPMENT WHICH IS NOT
	SUPPLIED BY DIGITAL EQUIPMENT CORPORATION.
							MAINDEC-10-DSKCF.TXT
							PAGE 2                                                             SEQ 0002

			TABLE OF CONTENTS
			-----------------

1.0	ABSTRACT

2.0	REQUIREMENTS

2.1	EQUIPMENT

2.2	STORAGE

2.3	PRELIMINARY PROGRAMS

3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURE

3.2	STARTING PROCEDURE

3.3	OPERATING PROCEDURE

4.0	DATA SWITCH FUNCTIONS

5.0	ERRORS

6.0	ITERATION COUNTER

7.0	CYCLE TIME

8.0	OPERATIONAL VARIATIONS

9.0	MISCELLANEOUS

10.0	LISTING
							MAINDEC-10-DSKCF.TXT
							PAGE 3                                                             SEQ 0003

1.0	ABSTRACT

	THIS DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC IS THE
	SIXTH  IN  A  SERIES  OF DECSYSTEM 2020 ADVANCED PROCESSOR
	DIAGNOSTICS.

	THE DIAGNOSTIC PERFORMS  LOGIC  TESTING  OF THE PROCESSOR
	AND MICRO-CODE DOUBLE PRECISION FIXED POINT INSTRUCTIONS:
	DADD, DSUB, DMUL, DDIV.


2.0	REQUIREMENTS

2.1	EQUIPMENT

	A DECSYSTEM 2020 EQUIPPED WITH A MINIMUM OF 32K OF MEMORY

	CONSOLE PROCESSOR
	CONSOLE TELETYPE
	LOAD DEVICE

2.2	STORAGE

	THE PROGRAM RUNS WITHIN 32K OF MEMORY.

2.3	PRELIMINARY PROGRAMS

	PREVIOUS PROCESSOR DIAGNOSTICS

3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURE

	****** NOTE ******
	THIS DIAGNOSTIC REQUIRES THAT THE DECSYSTEM 2020 SUBROUTINE
	PROGRAM BE RESIDENT IN THE DECSYSTEM 2020.

	FOLLOW THE APPROPRIATE DIAGNOSTIC LOADING PROCEDURES.
							MAINDEC-10-DSKCF.TXT
							PAGE 4                                                             SEQ 0004

3.2	STARTING PROCEDURE

	A.  SELECT OPERATIONAL CONSOLE DATA SWITCH SETTINGS (REFER TO
	    4.0 DATA SWITCH FUNCTIONS).

	    RUN UNDER "SMMON".
	    THE FOLLOWING QUESTIONS WILL BE ASKED TO SELECT THE
	    OPERATIONAL SWITCHES:

		    TELETYPE SWITCH CONTROL ? 0,S OR Y (CR) -

		    IF THE OPERATOR TYPES "Y", THE FOLLOWING QUESTIONS
		    ARE ASKED AND THE OPERATOR RESPONDS BY TYPING  THE
		    ANSWER AS SIX OCTAL DIGITS REPRESENTING THE DESIRED
		    SWITCH SETTINGS.

		    SPECIFY LH SWITCHES IN OCTAL-

		    SPECIFY RH SWITCHES IN OCTAL-

		    IF THE OPERATOR TYPES "0", ZERO'S ARE USED FOR
		    THE SWITCH SETTINGS.

		    IF THE OPERATOR TYPES "S", PREVIOUSLY SET SWITCHES
		    ARE USED. THIS IS ONLY VALID UPON RESTARTING OF AN
		    INTERRUPTED PROGRAM.
							MAINDEC-10-DSKCE.TXT
							PAGE 5                                                             SEQ 0005

3.3	OPERATING PROCEDURE

	A.  TO THROUGHLY TEST ALL HARDWARE, ALL TEST CONTROL DATA 
	    SWITCHES SHOULD BE SET TO 0.

	B.  WHEN  DEBUGGING  HARDWARE, SET  SWITCHES  TO 0.  ALLOW THE 
	    TELETYPE TO PRINT THE  ERROR  MESSAGES.  THIS  ALLOWS  THE 
	    PROGRAM TO RUN A COMPLETE PASS AND THEN THE ERROR MESSAGES
	    MAY BE CORRELATED TO QUICKLY  DIAGNOSE  THE FAILURE.  IF A
	    HARDWARE PROBLEM IS SUCH THAT THE ERROR MESSAGES, AFTER THE
	    FIRST ONE, HAVE NO MEANING (FIRST ERROR CAUSES ALL FOLLOWING
	    TESTS TO FAIL) SET THE LOOP ON ERROR SWITCH AND RESTART THE
	    TEST FROM THE BEGINNING.  THE FIRST FAILURE WILL THEN CAUSE
	    THE PROGRAM TO ENTER A LOOP SUITABLE FOR SCOPING.

	    THE ERROR MESSAGE USED IN CONJUNCTION WITH THE LISTING AND
	    SCOPING IF NECESSARY SHOULD ALLOW THE FAILING CONPONENT TO
	    BE ISOLATED AND REPLACED AND/OR REPAIRED.

	C.  WHEN TAKING MARGINS, SET DATA  SWITCHES 'NOPNT' AND 'DING'.
	    THIS WILL INHIBIT PRINTOUT BUT WILL ALLOW THE TELETYPE BELL
	    TO BE RUNG WHEN A ERROR OCCURS.  IF  THE MARGIN OBTAINED IS
	    UNACCEPTABLE, THE  OPERATOR  MAY  REVERT TO STANDARD SWITCH
	    SETTINGS FOR DEBUGGING PURPOSES.

	D.  ERROR INFORMATION MAY BE OBTAINED QUICKLY BY PRINTING 
	    ERRORS ON THE LINE PRINTER.

	E.  IN THE EVENT OF A PRINT ROUTINE FAILURE THE 'NOPNT' SWITCH
	    AND THE 'ERSTOP' SWITCH MAY BE SET TO INHIBIT PRINTOUT BUT
	    HALT THE PROGRAM POINTING TO THE ERROR.
							MAINDEC-10-DSKCF.TXT
							PAGE 6                                                             SEQ 0006

4.0	DATA SWITCH FUNCTIONS

	SWITCH		STATE	FUNCTION
	------		-----	--------

	0    ABORT	0	NORMAL OPERATION
			1	ABORT AT END OF PASS

	1    RSTART		NOT USED

	2    TOTALS		NOT USED

	3    NOPNT	0	NORMAL TYPEOUT
			1	INHIBIT ALL PRINT/TYPEOUT
				(EXCEPT FORCED)

	4    PNTLPT	0	NORMAL OUTPUT TO TTY
			1	PRINT ALL DATA ON LPT
				(LOGICAL DEVICE, USER MODE)

	5    DING	0	NO FUNCTION
			1	RING TTY BELL ON ERROR

	6    LOOPER	0	PROCEED TO NEXT TEST
			1	ENTER SCOPE LOOP ON TEST ERROR

	7    ERSTOP	0	NO FUNCTION
			1	HALT ON TEST ERROR

	8    PALERS	0	PRINT ONLY FIRST ERROR WHEN LOOPING
			1	PRINT ALL ERRORS, EVEN IF SAME ERROR

	9    RELIAB		NOT USED

	10   TXTINH	0	PRINT FULL ERROR MESSAGES.
			1	INHIBIT COMMENT PORTION OF 
				ERROR MESSAGES.

	11   INHPAG	0	ALLOW PAGING AND TRAP ENABLE
			1	INHIBIT PAGING AND TRAPPING

	12   MODDVC		NOT USED

	13   INHCSH	0	ALLOW CACHE USE
			1	INHIBIT CACHE
							MAINDEC-10-DSKCF.TXT
							PAGE 7                                                             SEQ 0007

5.0	ERRORS

	ERRORS ARE PRINTED ON THE TTY OR LINE PRINTER. THE ERROR PRINTOUT
	CONTAINS THE TEST TITLE, THE PC OF THE FAILURE, ERROR  NUMBER AND
	THE CONTENTS OF AN APPLICABLE AC.

	THE PC VALUE IS USEFUL IN RELATING THE FAILURE TO THE LISTING.
	THE ERROR NUMBER IS PROVIDED SUCH THAT AN ERROR DICTIONARY MAY
	BE MADE AT SOME FUTURE DATE.

	IF AN AUDIO INDICATION OF A CONTINUING ERROR IS DESIRED THE 'DING'
	SWITCH MAY BE SET.

6.0	ITERATION COUNTER

	THE ITERATION COUNT OF THE PROGRAM IS PRINTED BY THE CONSOLE PROCESSOR.

7.0	CYCLE TIME

	THE CYCLE TIME OF THE PROGRAM IS IN THE MILLISECOND RANGE AND IS
	THEREFORE SUITABLE FOR TAKING MARGINS, VIBRATION TESTS, ETC.
							MAINDEC-10-DSKCF.TXT
							PAGE 8                                                             SEQ 0008

8.0	OPERATIONAL VARIATIONS

	A.  DIAGNOSTIC MONITOR

	    THE PROGRAM IS USABLE WITH THE DIAGNOSTIC MONITOR  TO  PROVIDE
	    RELIABILITY TESTS, ACCEPTANCE TESTS, AND/OR TO PROVIDE A QUICK
	    METHOD  OF  ISOLATION  OF  A FAULT TO A PARTICULAR AREA OF THE
	    PROCESSOR.  CERTAIN  PROCEDURES  ARE  USED WHEN THE PROGRAM IS
	    USED IN THIS MANNER.  THEY ARE:

	    1.	THE DIAGNOSTIC MONITOR TRANSFERS CONTROL TO THE PROGRAM
		AND STARTS IT AT LOCATION 30002.

	    2.	MONCTL - LOCATION 30043 IS USED AS THE DIAGNOSTIC MONITOR
		CONTROL WORD.
			LH = 0, STAND-ALONE OPERATION
			    -1, RUNNING UNDER DIAGNOSTIC MONITOR

			RH = RIGHT HALF OF CONSOLE SWITCHES IF UNDER
			     DIAGNOSTIC MONITOR CONTROL.

	B.  USER MODE

	    TO OUTPUT THE PRINTED ERROR MESSAGES TO A USER SPECIFIED
	    DEVICE IN USER MODE, ASSIGN THE DESIRED OUTPUT DEVICE TO
	    DEVICE NAME 'DEV' AND SET SWITCH 'PNTLPT'.  THE PHYSICAL
	    DEVICE USED CAN BE ANY DEVICE THAT CAN ACCEPT ASCII OUTPUT
	    FORMAT SUCH AS LPT, DSK, DTA, ETC.  THE CORRESPONDING 
	    OUTPUT FILE IS 'DSKCF.LPT'

	    EXAMPLE DEVICE ASSIGNMENT:

	    .ASSIGN DSK DEV

	    IN USER MODE THE PROGRAM WILL MAKE 10(8) PASSES AND THEN
	    RETURN TO SMMON COMMAND MODE.
							MAINDEC-10-DSKCF.TXT
							PAGE 9                                                             SEQ 0009

8.0	OPERATIONAL VARIATIONS (CON'T)

	THE OUTPUT FILE (IF USED) MAY THEN BE LISTED BY USING THE
	NORMAL MONITOR COMMANDS (PRINT, LIST, TYPE, PIP, ETC.).

	IF THE PROGRAM IS ABORTED BEFORE COMPLETION (BY ^C, ETC.) THE
	OUTPUT FILE MAY BE CLOSED BY USING THE MONITOR 'REENTER' 
	COMMAND.

	C.  SYSTEM EXERCISER

	    START ADDRESS IS 30003.  DATA SWITCHES ARE PRESTORED IN
	    'SWTEXR' LOC 30023.

9.0	MISCELLANEOUS

	THE NON-EX-MEMORY AND PARITY STOP SWITCHES SHOULD BE RESET 
	(0).  THESE ERRORS, ILLEGAL UUO'S AND OTHER ERRORS OF THIS
	TYPE ARE HANDLED BY PRINTOUT ON THE TELETYPE.

10.0	LISTING
		HISTORY FILE FOR DSKCF
                                                                                                                           SEQ 0010
---------------------------------------------------------------

CODE:		MAINDEC-10-DSKCF

TITLE:		DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC (6)

VERSION:	0.3

DATE:		SEPTEMBER 1979

AUTHOR:		JOHN R. KIRCHOFF

REASON:		CLEANUP OF DOCUMENTATION PRIOR TO CONVERSION TO A KL10
		PROGRAM.
---------------------------------------------------------------

VERSION:	0.2

DATE:		APRIL 1979

AUTHOR:		RICHARD E. STOCKDALE

REASON:		ADDED ADDL CODE TO ALLOW IT TO RUN ON A KL10
		AS WELL AS A KS10 (RE:  DDIV AND HOW OVERFLOW
		CONDITION IS HANDLED).
---------------------------------------------------------------

VERSION:	0.1

DATE:		NOVEMBER 1978

AUTHOR:		RICHARD E. STOCKDALE

REASON:		ORIGINAL RELEASE OF THIS PROGRAM FOR KS-10.
---------------------------------------------------------------
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 1             
                                                                                                                           SEQ 0011




















				   DOCUMENT
				**************
       DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3
				**************

















		    COPYRIGHT 1979
		    DIGITAL EQUIPMENT CORPORATION
		    MAYNARD, MASS. 01754

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 2             
                                                                                                                           SEQ 0012

				 TABLE OF CONTENTS
				*******************


	29	ASSEMBLY TIME PARAMETERS

	72	MACROS

	280	CONSOLE DATA SWITCH ASSIGNMENTS, SEPTEMBER 1979

	315	PROGRAM/SUBROUTINE PARAMETERS

	517	ERROR HANDLING UUO DEFINITIONS

	555	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979

	883	INITIALIZATION SECTION

	922	DADD - TEST A

	1112	DADD - TEST B

	1618	DADD - TEST C

	1671	DADD - TEST D

	1730	DADD - TEST E

	2062	DADD - TEST F

	3680	DADD - TEST G

	4143	DSUB - TEST A

	4307	DSUB - TEST B

	4455	DSUB - TEST C

	5533	DSUB - TEST D

	6006	DMUL - TEST A

	6269	DMUL - TEST B

	6509	DMUL - TEST C

	7076	DMUL - TEST D
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 3             
                                                                                                                           SEQ 0013

				 TABLE OF CONTENTS
				*******************


	7647	DMUL - TEST E (OVERFLOW)

	7698	DMUL - TEST F - TEST NEGATIVE OPERANDS

	7819	DMUL - TEST G

	8479	DDIV - TEST A

	8531	DDIV - TEST B

	8581	DDIV - TEST C

	9075	DDIV - TEST D

	9419	DDIV - TEST E

	9882	DDIV - TEST F

	10130	DDIV - TEST G

	11106	TESTING SUBROUTINES

	11281	ADDL ERROR PRINT ROUTINES

	11453	*STOR* RESERVED STORAGE, SEPTEMBER 1979
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 4             
                                                                                                                           SEQ 0014
		1	MAINDEC-10-DSKCF

		18	COPYRIGHT 1979
			DIGITAL EQUIPMENT CORPORATION
			MARLBORO, MASS.

		22	JOHN R. KIRCHOFF
			RICHARD E. STOCKDALE

		*****************************************************************
	29	ASSEMBLY TIME PARAMETERS
		*****************************************************************

		32	ACCUMULATOR DEFINITIONS

		46	BEGIN PARAMETERS

		*****************************************************************
	72	MACROS
		*****************************************************************

		75	PCSAVE - GET AND SAVE PC

		85	TFLAG - TEST PC FLAGS SET BY THE PRIOR DADD/DSUB

		98	MULT - PERFORM DMUL AND TEST RESULTS

		115	MULTF - PERFORM DMUL AND TEST RESULTS & PC FLAGS

		136	PDIV - PERFORM DDIV AND TEST RESULTS

		154	PDIVF - PERFORM DDIV AND TEST RESULTS & PC FLAGS

		176	ODIV - PERFORM DDIV AND TEST RESULTS & PC FLAGS
			       (HANDLES OVERFLOW/NO DIVIDE CONDITIONS)

		200	CHECKA - CHECK RESULTS OF A DADD & DO ERROR HANDLING
				 (RESULT 'R1' IS PASSED AS THE OCTAL DATA ITSELF)

		220	CHECKS - CHECK RESULTS OF A DSUB & DO ERROR HANDLING
				 (RESULT 'R1' IS PASSED AS THE OCTAL DATA ITSELF)

		241	CHECKB - CHECK RESULTS OF A DADD & DO ERROR HANDLING
				 (RESULT 'R1' IS PASSED AS THE ADDRESS OF THE DATA)

		261	CHECKT - CHECK RESULTS OF A DSUB & DO ERROR HANDLING
				 (RESULT 'R1' IS PASSED AS THE ADDRESS OF THE DATA)

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 5             
                                                                                                                           SEQ 0015
		*****************************************************************
	280	CONSOLE DATA SWITCH ASSIGNMENTS, SEPTEMBER 1979
		*****************************************************************

		285	DATA SWITCHES
			LEFT HALF SWITCHES ARE PRE-ASSIGNED FOR SUBROUTINE PACKAGE USE
			AND CONTROL LOOPING, PRINTING (TTY OR OTHER DEVICE) AND MISC. FUNCTIONS

		*****************************************************************
	315	PROGRAM/SUBROUTINE PARAMETERS
		*****************************************************************

		318	SPECIAL SUBPROGRAM LINKAGES

		329	SPECIAL SUBROUTINE FATAL HALTS
			USED TO REPORT ERRORS THAT CAUSE THE SUBROUTINES TO BE UNUSABLE

		*****************************************************************
	517	ERROR HANDLING UUO DEFINITIONS
		*****************************************************************

		*****************************************************************
	555	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979
		*****************************************************************

		*****************************************************************
	883	INITIALIZATION SECTION
		*****************************************************************

		*****************************************************************
	922	DADD - TEST A
		*****************************************************************

		927	DADD - TEST A
			
				0,# + 0,0 = 0,#		SIMPLE TESTS TO SEE IF DADD
				#,0 + 0,0 = #,0		WORKS AT ALL.
				#,# + 0,0 = #,#
				0,0 + 0,# = 0,#
				0,0 + #,0 = #,0
				0,0 + #,# = #,#
				0,0 + 0,0 = 0,0

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 6             
                                                                                                                           SEQ 0016
		*****************************************************************
	1112	DADD - TEST B
		*****************************************************************

		1116	
				FLOATING 1 + 0 = FLOATING 1	THESE TESTS ARE DONE FOR A 1 OR
				0 + FLOATING 1 = FLOATING 1	A 0 IN BITS 0,34,36,70 OF THE
				FLOATING 0 + 0 = FLOATING 0	DOUBLEWORD ADDEND OR AUGEND.
				0 + FLOATING 0 = FLOATING 0	THIS WILL TEST THE WORD BOUND- 
								ARY INTEGRITY OF THE DADD
								INSTRUCTION.

		1126		REPEAT THE FOLLOWING BLOCK OF CODE 8 TIMES TO STEP DOWN A LIST
				OF TEST CASES.  THE TEST CASES CONSIST OF 8 DOUBLEWORDS - THE
				FIRST 4 FLOAT A 1 ACROSS IN BITS 0,34,36,70; THE SECOND 4 FLOAT
				A 0 ACROSS IN BITS 0,34,36,70.  THE RESULT SHOULD BE ACS WITH
				CONTENTS EQUAL TO THE FLOATING 1/0.

		*****************************************************************
	1618	DADD - TEST C
		*****************************************************************

		1622	
				FLOATING 1 + FLOATING 1 = FLOATING 1 SHIFTED LEFT ONE BIT AT
				A TIME ACROSS THE DOUBLEWORD EXCLUDING SIGN BITS AND THE MOST
				SIGNIFICANT BIT (WE'RE NOT TESTING OVERFLOW CONDITIONS). THIS
				TEST VERIFIES THE ABILITY OF THE DADD TO HANDLE A SINGLE CARRY
				PROPAGATED 1 BIT WHETHER IT CROSSES A WORD BOUNDARY OR NOT.

		*****************************************************************
	1671	DADD - TEST D
		*****************************************************************

		1674	DADD - TEST D
			
				0,-1 + 0,1 = 1,0		ADDITIONAL TEST TO SEE THAT A
				0,1 + 0,-1 = 1,0		CARRY IS PROPAGATED ACROSS WORD
								BOUNDARIES.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 7             
                                                                                                                           SEQ 0017
		*****************************************************************
	1730	DADD - TEST E
		*****************************************************************

		1733	DADD - TEST E
			
				FLOATING 0 + 1 = 11111000..	
				1 + FLOATING 0 = 11111000..	

		1740		THE NEXT 6 TESTS VERIFY THAT A CARRY IS PROPERLY PROPAGATED
				  DOWN A WORD.   A 1 IS ADDED TO A  FLOATING 0  CAUSING THE
				  CARRY TO RIPPLE DOWN THE WORD.  THE RESULT IS VERIFIED AS
				  1111..110000....  THE FLOATING 0 IS LOCATED IN BITS 34,36,
				  71 FOR NEGATIVE NUMBERS AND BITS 33,36,70 FOR POSITIVE
				  NUMBERS.  CARRY FLAGS ARE VERIFIED IN ADDITION.

		*****************************************************************
	2062	DADD - TEST F
		*****************************************************************

		2065	DADD - TEST F
			
				THE FOLLOWING TESTS VERIFY THAT THE DADD INSTRUCTION HANDLES
				  THE SIGN OF THE RESULT PROPERLY (COPYING THE SIGN INTO THE
				  HIGH ORDER BIT OF EACH WORD OF THE DOUBLEWORD RESULT.  THE
				  TESTS ADD VARIOUS COMBINATIONS OF INCONSISTENT SIGNS IN THE
				  ADDEND AND AUGEND AND VERIFY THAT THE SIGNS OF THE RESULT
				  ARE CORRECT.
			
				THERE ARE 5 SETS OF TEST: (1) 0 + P/N = P/N
							  (2) N + N = N
							  (3) P + P = P
							  (4) N + P = N
							  (5) N + P = P
							WHERE N-NEGATIVE NUMBER
							      P-POSITIVE NUMBER

		*****************************************************************
	3680	DADD - TEST G
		*****************************************************************

		3683	DADD - TEST G
			
				2**N + (2**70 - 2**N) = 1000... (AROV & CARRY 1 SET)
				(2**70 - 2**N) + 2**N = 1000... (AROV & CARRY 1 SET)
				-2**N + (-2**70 + 2**N - 1) = 0111... (AROV & CARRY 0 SET)
				(-2**70 + 2**N - 1) + -2**N = 0111... (AROV & CARRY 0 SET)
			
				THEST TESTS CHECK THE SETTING OF AROV & CARRY 1 AND AROV &
				CARRY 0 FLAGS.  CHECKED FOR BITS 0,34,36,70.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 8             
                                                                                                                           SEQ 0018
		3695		THE FOLLOWING SECTION OF CODE IS REPEATED 8 TIMES.  THE FIRST
				  4 TESTS FLOAT A 1 ACROSS A  DOUBLEWORD  IN BITS 0,35,36,71.
				  THIS NUMBER IS THEN ADDED TO THE SMALLEST  POSITIVE INTEGER
				  WHICH WILL PRODUCE AN OVERFLOW - THE RESULT IS A DOUBLEWORD
				  OF 0S WITH 1 IN THE SIGN BIT - WITH OVERFLOW & CARRY 1 SET.
				  THE NEXT 4 TESTS FLOAT A 0 ACROSS A  DOUBLEWORD  IN BITS 1,
				  35,36,71 (A NEGATIVE NUMBER).   THIS NUMBER IS ADDED TO THE
				  SMALLEST  NEGATIVE INTEGER WHICH WILL PRODUCE AN OVERFLOW -
				  THE RESULT IS A DOUBLEWORD OF 1S WITH A 0 IN THE SIGN BIT -
				  WITH OVERFLOW AND CARRY 0 SET.
				  THE DOUBLEWORDS  USED IN THIS  TEST ARE LOCATED IN THE LIST
				  'CONST2'.

		*****************************************************************
	4143	DSUB - TEST A
		*****************************************************************

		4148	DSUB - TEST A
			
				0,# - 0,0 = 0,#			GENERAL TESTING TO SEE THAT
				#,0 - 0,0 = #,0			DSUB CAN HANDLE DOUBLEWORDS
				#,# - 0,0 = #,#
				0,0 - 0,# = -(0,#)
				0,0 - #,0 = -(#,0)
				0,0 - #,# = -(#,#)

		*****************************************************************
	4307	DSUB - TEST B
		*****************************************************************

		4310	DSUB - TEST B
			
				TEST ALL PERMUTATIONS OF 0,1,-1 IN THE MINUEND AND
				SUBTRAHEND -- TEST:
				0,0 - 0,0	0,1 - 0,0	0,-1 - 0,0	....
				0,0 - 0,1	0,1 - 0,1	0,-1 - 0,1	....
				0,0 - 0,-1	0,1 - 0,-1	0,-1 - 0,-1	....
				0,0 - 1,0	  ....		   ....		....
				0,0 - 1,1	  ....		   ....		....
				0,0 - 1,-1	  ....		   ....		....
				0,0 - -1,0	  ....		   ....		....
				0,0 - -1,1	  ....		   ....		....
				0,0 - -1,-1	  ....		   ....		....

		4326	     THESE  COMBINATIONS TEST THE ABILITY OF THE  DSUB  TO HANDLE
				BORROWS FROM THE NEXT WORD AND SIGNS CHANGING.  THE RESULT
				IS VERIFIED AND THE PC FLAGS ARE CHECKED TO SEE THAT THEY
				ARE SET PROPERLY.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 9             
                                                                                                                           SEQ 0019
		4333	PROCEDURE - (1) SET UP A POINTER 'MINU' TO SEQUENCE THE MINUEND
				     (2) LOOP ON MINUEND
				     (3) SET UP A POINTER 'SUBTR' TO SEQUENCE THE SUBTRAHEND
				     (4) LOOP ON SUBTRAHEND
				     (5) CALCULATE THE EXPECTED RESULT OF THE DSUB
				     (6) DO DSUB
				     (7) COMPARE RESULTS - ACTUAL VS. EXPECTED
				     (8) TEST FLAGS
				     (9) CONTINUE AT (4)

		*****************************************************************
	4455	DSUB - TEST C
		*****************************************************************

		4458	DSUB - TEST C
			
				THE FOLLOWING TESTS VERIFY THAT THE DSUB INSTRUCTION HANDLES
				  THE SIGN OF THE RESULT PROPERLY (COPYING THE SIGN INTO THE
				  HIGH ORDER BIT OF EACH WORD OF THE DOUBLEWORD RESULT.  THE
				  TESTS SUBTRACT VARIOUS COMBINATIONS OF INCONSISTENT  SIGNS
				  IN THE SUBTRAHEND AND MINUEND AND VERIFY THAT THE SIGNS OF
				  THE RESULT ARE CORRECT.
			
				THERE ARE 5 SETS OF TEST: (1) 0 - P/N = N/P
							  (2) N - N = P/N
							  (3) P - P = N/P
							  (4) N - P = N/P
							  (5) N - P = N/P
							WHERE N-NEGATIVE NUMBER
							      P-POSITIVE NUMBER

		*****************************************************************
	5533	DSUB - TEST D
		*****************************************************************

		5536	DSUB - TEST D
			
				2**N - (-2**70 + 2**N) = 1000... (AROV & CARRY 1 SET)
				(-2**70 + 2**N) - 2**N = 1000... (AROV & CARRY 1 SET)
				-2**N - (2**70 - 2**N + 1) = 0111... (AROV & CARRY 0 SET)
				(2**70 - 2**N + 1) - -2**N = 0111... (AROV & CARRY 0 SET)

		5545		THE FOLLOWING SECTION OF CODE IS REPEATED 8 TIMES.  THE FIRST
				  4 TESTS FLOAT A 1 ACROSS A  DOUBLEWORD  IN BITS 1,35,37,71.
				  FROM THIS NUMBER IS SUBTRACTED THE SMALLEST (MAGNITUDE)
				  NEGATIVE INTEGER WHICH WILL PRODUCE AN OVERFLOW - THE RESULT
				  IS A DOUBLEWORD OF 0'S WITH 1 IN THE SIGN BIT - WITH OVERFLOW
				  & CARRY 1 SET.  THE NEXT 4 TESTS FLOAT A 0 ACROSS A DOUBLE-
				  WORD IN BITS 1,35,37,71 (A NEG NUMBER). FROM THIS NUMBER IS
				  SUBTRACTED THE SMALLEST POSITIVE INTEGER WHICH WILL PRODUCE
				  AN OVERFLOW - THE RESULT IS A DOUBLEWORD OF 1S WITH A 0 IN
				  THE SIGN BIT - WITH OVERFLOW AND CARRY 0 SET.
				  THE DOUBLEWORDS  USED IN THIS  TEST ARE LOCATED IN THE LIST
				  'SCOND'.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 10            
                                                                                                                           SEQ 0020
		*****************************************************************
	6006	DMUL - TEST A
		*****************************************************************

		6011	DMUL - TEST A
			
				0,# * 0 = 0	0 * 0,# = 0	THESE ARE GENERAL TESTS TO
				#,0 * 0 = 0	0 * #,0 = 0	ASCERTAIN THAT THE DMUL CAN
				#,# * 0 = 0	0 * #,# = 0	HANDLE DOUBLEWORDS.  THE ACS
			      -1,-# * 0 = 0	0 * -1,-# = 0	WILL CONTAIN THE RESULT ARE
			      -#,0 * 0 = 0	0 * -#,0 = 0	FILLED WITH GARBAGE AND THE
			      -#,-# * 0 = 0	0 * -#,-# = 0	RESULT IS CHECKED TO SEE THAT
				0,0 * 0 = 0			DMUL PRODUCES A 4-WORD LONG
								RESULT IN THE ACS.

		*****************************************************************
	6269	DMUL - TEST B
		*****************************************************************

		6272	DMUL - TEST B
			
				0,# * 1 = 0,#		THESE TEST THE DMUL ON A SLIGHTLY
				#,0 * 1 = #,0		STEEPER GRADIENT.  THIS WILL VERIFY
				#,# * 1 = #,#		THAT THE DMUL HANDLES DOUBLEWORDS AND
				-1,-# * 1 = -1,-#	A NON-ZERO MULTIPLIER.  THESE TESTS ARE
				-#,-1 * 1 = -#,-1	REPEATED WITH THE MULTIPLICAND AND THE
				-#,-# * 1 = -#,-#	MULTIPLIER REVERSED.

		*****************************************************************
	6509	DMUL - TEST C
		*****************************************************************

		6512	DMUL - TEST C
			
				0,1777.. * 2		THESE TESTS VERIFY THAT BITS ARE
				0,3777.. * 2		SHIFTED ACROSS WORD BOUNDARIES. A WORD
				1777..,3777.. * 2	OF ONES IS MULTIPLIED BY A FLOATING 1
				3777..,3777.. * 2	WHICH WILL CAUSE A SHIFT ACROSS WORD
				0,3777.. * 1,0		BOUNDARIES OR NOT. THE TEST VERIFIES
				1,3777.. * 1,0		THAT THE SHIFT IS DONE PROPERLY FOR
				3777..,3777.. * 1,0	BOUNDARY CONDITIONS.
				0,1777.. * 2,0		IN EACH TEST THE PC FLAGS ARE TESTED
				0,3777.. * 2,0		SINCE THERE ARE NO OVERFLOW CONDITIONS
				3777..,3777.. * 2,0	THE LEFTMOST BIT OF THE PC SHOULD BE
							0 (NO AROV).
							THESE TESTS ARE REPEATED WITH MULT-
							PLICAND AND MULTIPLIER REVERSED.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 11            
                                                                                                                           SEQ 0021
		*****************************************************************
	7076	DMUL - TEST D
		*****************************************************************

		7079	DMUL - TEST D
			
				7777..,6000.. * 2	THESE TESTS VERIFY THAT BITS ARE
				7777..,4000.. * 2	SHIFTED ACROSS WORD BOUNDARIES. A WORD
				6000..,4000.. * 2	OF ONES IS MULTIPLIED BY A FLOATING 1
				4000..,4000.. * 2	WHICH WILL CAUSE A SHIFT ACROSS WORD
				777..,400.. * 1,0	BOUNDARIES OR NOT. THE TEST VERIFIES
				..776,400.. * 1,0	THAT THE SHIFT IS DONE PROPERLY FOR
				400..,400.. * 1,0	BOUNDARY CONDITIONS.
				777..,600.. * 2,0	IN EACH TEST THE PC FLAGS ARE TESTED
				777..,400.. * 2,0	SINCE THERE ARE NO OVERFLOW CONDITIONS
				400..,400.. * 2,0	THE LEFTMOST BIT OF THE PC SHOULD BE
							0 (NO AROV).
							THESE TESTS ARE REPEATED WITH MULT-
							PLICAND AND MULTIPLIER REVERSED.

		*****************************************************************
	7647	DMUL - TEST E (OVERFLOW)
		*****************************************************************

		7650	DMUL - TEST E
			
			  -2^70 * -2^70	THIS IS THE ONLY CASE THAT CAN SET
						THE AROV FLAG.  THIS TEST VERIFIES THE
						RESULT AND CHECKS THE SETTING OF THE
						AROV FLAG.
			
			 ------- MULTIPLICAND = (4000...,4000...)
			 ------- MULTIPLIER === (4000...,4000...)
			 ------- RESULT ======= (4000...,4000...,4000...,4000...)

		*****************************************************************
	7698	DMUL - TEST F - TEST NEGATIVE OPERANDS
		*****************************************************************

		7701	DMUL - TEST F
			
			       -2 * -3		THESE TESTS VERIFY THAT THE DMUL HANDLES
			       -2,0 * -3		THE SIGNS PROPERLY WHEN MULTIPLYING 
			       -2 * -3,0		OPERANDS WHICH ARE BOTH NEGATIVE.  TESTS
			       -2,0 * -3,0		B,C,D TESTED THE COMBINATIONS POS*POS,
							POS*NEG AND NEG*POS BUT NOT NEG*NEG. THE
							AROV FLAG IS ALSO TESTED TO ASCERTAIN 
							THAT IT WAS NOT SET.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 12            
                                                                                                                           SEQ 0022
		*****************************************************************
	7819	DMUL - TEST G
		*****************************************************************

		7822	DMUL - TEST G
			
				2 * 3	  2,0 * 3,0	THESE TESTS MULTIPLY NUMBERS WHICH HAVE
				2 * -3	  2,0 * -3,0	INCONSISTENT SIGNS AMONGST THE WORDS OF
			      -2 * 3	 -2,-1 * 3,0	EACH OPERAND.  THE FLAGS IS ALSO TESTED
			      -2 * -3	 -2,-1 * -3,0	TO VERIFY THAT IT IS NOT SET.

		*****************************************************************
	8479	DDIV - TEST A
		*****************************************************************

		8484	DDIV - TEST A
			
				(0,0,0,#) / 1		THESE BASIC TESTS VERIFY THAT THE DDIV
				(0,0,#,0) / 1		HANDLES A QUADRUPLE WORD DIVIDEND. FOR
							EACH TEST ALL PERMUTATIONS OF POSITIVE
							AND NEGATIVE OPERANDS ARE TESTED.

		*****************************************************************
	8531	DDIV - TEST B
		*****************************************************************

		8534	DDIV - TEST B
			
				(0,0,0,#) / #		THESE TESTS PERFORM SOME CASES MORE
				(0,0,#,0) / (#,0)	DIFFICULT THAN (A).  PERMUTATIONS OF
							POSITIVE AND NEGATIVE OPERANDS ARE
							TESTED.

		*****************************************************************
	8581	DDIV - TEST C
		*****************************************************************

		8584	DDIV - TEST C
			
				(0,0,0,1)  (0,0,1,0)  (0,0,1,0)  (0,1,0,0)  (0,1,0,0)  (1,0,0,0)
				 -------    -------    -------    -------    -------    -------
				    2	       2	 2,0	     2	       2,0	  2,0
			
				THESE TESTS PERFORM DIVISIONS WHICH RESULT IN A SHIFT OF THE
				THE DIVIDEND ACROSS WORD BOUNDARIES.
				THESE TESTS ARE REPEATED FOR THE VARIOUS PERMUTATIONS OF
				POSITIVE AND NEGATIVE OPERANDS.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 13            
                                                                                                                           SEQ 0023
		*****************************************************************
	9075	DDIV - TEST D
		*****************************************************************

		9078	DDIV - TEST D
			
				MISCELLANEOUS TESTING.  THESE TESTS DIVIDE 2 NUMBERS AND JUST
				CHECK TO SEE THAT THE DDIV GETS THE CORRECT ANSWERS.

		*****************************************************************
	9419	DDIV - TEST E
		*****************************************************************

		9422	DDIV - TEST E
			
				-4/-2		-4/2		4/-2		4/2
				(-3,0,0,0)/(-6,0)   (-3,0,0,0)/(6,0)	3/-6	3/6
			
				THESE TESTS VERIFY THAT THE DDIV HANDLES THE SIGN OF ITS
				OPERANDS PROPERLY.  THE SIGN BITS OF THE LOW ORDER WORDS ARE
				INITIALLY DIFFERENT FROM THE HIGH ORDER WORD.  THE SIGN SHOULD
				BE FORMED CORRECTLY IN SPITE OF THAT.

		*****************************************************************
	9882	DDIV - TEST F
		*****************************************************************

		9885	DDIV - TEST F
			
				 1,0,0,0     -1,0,0,0     0,-1,-1,-1     -1,0,0,1
				 -------     --------     ----------     --------
				   1,1          1,1           1,0           1,0
			
				 1,0,0,0     -1,0,0,0     0,-1,-1,-1     -1,0,0,1
				 -------     --------     ----------     --------
				  -2,-1        -2,-1         -1,0          -1,0
			
				THESE TESTS VERIFY THAT THE DDIV WILL NOT GENERATE AN
				OVERFLOW AND NO DIVIDE CONDITION WHEN THE DIVISOR IS
				JUST LARGE ENOUGH TO NOT CAUSE ONE.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 14            
                                                                                                                           SEQ 0024
		*****************************************************************
	10130	DDIV - TEST G
		*****************************************************************

		10133	DDIV - TEST G
			
				   1     1,0     1,0,0     1,0,0,0     -1
				   -     ---     -----     -------      -
				   0      0        0          0         0
			
				   1,0,0     1,0,0     1,0,0,0     1,0,0,0
				   -----     -----     -------     -------
				     1        -1          1           -1
			
				   -1,0,0     -1,0,0     -1,0,0,0     -1,0,0,0
				   ------     ------     --------     --------
				      1         -1           1           -1
			
				   1,0,0,0     1,0,0,0     -1,0,0,0     -1,0,0,0
				   -------     -------     --------     --------
				     1,0         -1,0         1,0         -1,0
			
				   0,-1,-1,-1     0,-1,-1,-1     -1,0,0,1     -1,0,0,1
				   ----------     ----------     --------     --------
				      0,-1           -1,1          0,-1         -1,1
			
				   1,0,-1,-1     1,0,-1,-1     -2,-1,0,1     -2,-1,0,1
				   ---------     ---------     ---------     ---------
				     0,-1          -1,1           0,-1         -1,1
			
				   -2^140     2^140-1     2^140-1     -2^70+1,-2^70
				   ------     -------     -------     -------------
				    -2^70      2^70-1     -2^70+1        2^70-1
			
				THESE TESTS ATTEMPT TO PERFORM VARIOUS DIVISIONS THAT
				SHOULD RESULT IN OVERFLOW.  THE SETTING OF AROV AND NO
				DIVIDE FLAGS IS VERIFIED AND THE DIVIDEND IS CHECKED TO
				SEE THAT IT DID NOT CHANGE.
			
				ALSO TRY A FEW WITH INCONSISTENT SIGNS IN THE LEAST
				SIGNIFICANT WORDS OF THE DIVIDEND AND DIVISOR JUST TO MAKE
				SURE THAT THE DIVIDEND DOES NOT CHANGE ON ANY CONDITION.

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 15            
                                                                                                                           SEQ 0025
		*****************************************************************
	11106	TESTING SUBROUTINES
		*****************************************************************

		11109	MSUBR - SUBROUTINE TO DO MULTIPLICATION CALCULATIONS
			
				ARGUMENTS:	MCAND - CONTAINS MULTIPLICAND
						MPLIER - CONTAINS MULTIPLIER
						MRES - CONTAINS THE EXPECTED RESULT

		11157	PSUBR - SUBROUTINE TO DO DIVISION CALCULATIONS
			
				ARGUMENTS:	PDEND - CONTAINS DIVIDEND
						PISOR - CONTAINS DIVISOR
						PRES - CONTAINS THE EXPECTED RESULT

		11205	OSUBR - SUBROUTINE TO DO DIVISION CALCULATIONS
			
				ARGUMENTS:	ODEND - CONTAINS DIVIDEND
						OISOR - CONTAINS DIVISOR
			
				NOTE:	WHEN ENCOUNTERING A OVERFLOW/NO DIVIDE SITUATION THE PROCESSOR
					ENSURES THAT THE OPERANDS DO  NOT  CHANGE.  THE KL10 ENSURES
					THAT NEITHER THE MAGNITUDE PORTION NOR THE SIGN BITS CHANGE.
					THE KS10 ENSURES THAT THE MAGNITUDE PORTION OF  EITHER  WORD
					DOES NOT CHANGE - HOWEVER, IT ONLY  PROTECTS THE SIGN BIT OF
					THE MOST SIGNIFICANT WORD.  THE SIGN BIT OF THE  OTHER  WORD
					IS INDETERMINATE.  THIS TEST CHECKS TO FIND OUT WHAT TYPE OF
					PROCESSOR WE HAVE AND WILL MODIFY THE TEST FOR A KS10.
			
					THE ABOVE WAS NOTICED WHEN RUNNING THE  DIAGNOSTIC ON THE KS10
					AFTER DEBUGGING ON A KL10. ACCORDING TO DON LEWINE, THIS WAS
					DONE TO SAVE SPACE IN THE KS10 MICROCODE.

		*****************************************************************
	11281	ADDL ERROR PRINT ROUTINES
		*****************************************************************

		11284	APRINT - ADDITION ERROR PRINTER

		11321	SPRINT - SUBTRACTION ERROR PRINTER

		11358	MPRINT - MULTIPLICATION ERROR PRINTER

		11401	DPRINT - DIVIDE ERROR PRINTER

DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3        DECDOC VER  00.24   26-SEP-79 15:52:49   PAGE 16            
                                                                                                                           SEQ 0026
		*****************************************************************
	11453	*STOR* RESERVED STORAGE, SEPTEMBER 1979
		*****************************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1
DSKCFT	MAC	26-Sep-79 15:41		CONSOLE DATA SWITCH ASSIGNMENTS, SEPTEMBER 1979                                    SEQ 0027

     1					;*MAINDEC-10-DSKCF
     2
     3			000000		MCNVER=0
     4			000003		DECVER=3
     5
     6						XLIST
     7						LIST
     8						LALL
     9
    10					NAME	\MCNVER,\DECVER^
    11
    12					TITLE	DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3
    13					^
    14
    15	000137					LOC	137
    16	000137	000000	000003		MCNVER,,DECVER
    17
    18					;*COPYRIGHT 1979
    19					;*DIGITAL EQUIPMENT CORPORATION
    20					;*MARLBORO, MASS.
    21
    22					;*JOHN R. KIRCHOFF
    23					;*RICHARD E. STOCKDALE
    24
    25						SEARCH	MONSYM
    26						NOSYM
    27
    28					IF2,<PRINTX	[STARTING PASS 2]>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 2
DSKCFT	MAC	26-Sep-79 15:41		ASSEMBLY TIME PARAMETERS                                                           SEQ 0028

    29					SUBTTL	ASSEMBLY TIME PARAMETERS
    30
    31					; **********************************************************************
    32					;*ACCUMULATOR DEFINITIONS
    33					; **********************************************************************
    34
    35			000001		AC1=1				;AC,AC+1,AC+2,AC+3 - CONTAIN OPERANDS USED
    36									;  BY DADD,DSUB,DMUL,DDIV
    37
    38			000011		CNT=11				;COUNT AC
    39
    40			000012		SCR0=12				;SCRATCH ACS USED IN THE ADDL ERROR PRINT
    41			000013		SCR1=SCR0+1			;  ROUTINE
    42			000014		SCR2=SCR0+2
    43			000015		SCR3=SCR0+3
    44
    45					; **********************************************************************
    46					;*BEGIN PARAMETERS
    47					; **********************************************************************
    48
    49			030624		SADR1=STARTA
    50			030624		SADR2=STARTA
    51			030623		SADR3=START
    52			030007		SADR4=SRTDDT
    53			030624		SADR5=STARTA
    54			040450		SADR6=PHALT
    55		254200	030000		SADR7=HALT BEGIN
    56		254200	030000		SADR8=HALT BEGIN
    57		254200	030000		SADR9=HALT BEGIN
    58		254200	030000		SADR10=HALT BEGIN
    59		254200	030000		SADR11=HALT BEGIN
    60			000010		ITERAT=10
    61			000000		PAREA1=0
    62			000000		PAREA2=0
    63		446353	434600		PAREA3=SIXBIT/DSKCF/
    64		546364	000000		PAREA4=SIXBIT/LST/
    65			000000		PAREA5=0
    66			000000		PAREA6=0
    67
    68			000001		PGMEND==1
    69			000001		EXCASB==1
    70			000001		USRASB==1
    71			000030		DEBUG==30
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3
DSKCFT	MAC	26-Sep-79 15:41		MACROS                                                                             SEQ 0029

    72					SUBTTL	MACROS
    73
    74					; **********************************************************************
    75					;*PCSAVE - GET AND SAVE PC
    76					; **********************************************************************
    77
    78					DEFINE	PCSAVE<
    79						JSR	.+1		;STORE PC
    80					FLAGL=.				;LOCATION OF PC
    81						0			;PC
    82					>
    83
    84					; **********************************************************************
    85					;*TFLAG - TEST PC FLAGS SET BY THE PRIOR DADD/DSUB
    86					; **********************************************************************
    87
    88					DEFINE	TFLAG (FLGGS,TT,ADDR<APRINT>,LOC<LOC>)<
    89					
    90						MOVE	SCR1,FLAGL	;GET FLAGS
    91						MOVE	SCR2,FLGGS 	;SCR2 - CORRECT FLAGS
    92						XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
    93						TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
    94						ERROR	(LOC,13,SCR2,FLAGL,,^_
    95					TEST 'TT' - PC FLAGS INCORRECT (LEFT 4 BITS),ADDR)
    96					>
    97					; **********************************************************************
    98					;*MULT - PERFORM DMUL AND TEST RESULTS
    99					; **********************************************************************
   100
   101					DEFINE	MULT (T,A1<0>,A2<0>,E1<0>,E2<0>,R1<0>,R2<0>,R3<0>,R4<0>,%BEGIN)<
   102					
   103					; --- MULTIPLICAND = (A1,A2)
   104					; --- MULTIPLIER === (E1,E2)
   105					; --- RESULT ======= (R1,R2,R3,R4)
   106					
   107					%BEGIN:	MOVE	AC1,[[EXP A1,A2,E1,E2,R1,R2,R3,R4],,MCAND]
   108						BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
   109						GO	MSUBR		;GO DO TEST
   110						ERROR	(%BEGIN,14,SCR1,SCR2,,^_
   111					TEST 'T' - RESULT CALCULATED INCORRECTLY,MPRINT)
   112					>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 4
DSKCFT	MAC	26-Sep-79 15:41		MACROS                                                                             SEQ 0030

   113
   114					; **********************************************************************
   115					;*MULTF - PERFORM DMUL AND TEST RESULTS & PC FLAGS
   116					; **********************************************************************
   117
   118					DEFINE	MULTF (T,A1<0>,A2<0>,E1<0>,E2<0>,R1<0>,R2<0>,R3<0>,R4<0>,%BEGIN,%TSTPC)<
   119					
   120					; --- MULTIPLICAND = (A1,A2)
   121					; --- MULTIPLIER === (E1,E2)
   122					; --- RESULT ======= (R1,R2,R3,R4)
   123					
   124					%BEGIN:	MOVE	AC1,[[EXP A1,A2,E1,E2,R1,R2,R3,R4],,MCAND]
   125						BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
   126						GO	MSUBR		;GO DO TEST
   127						ERROR	(%BEGIN,14,SCR1,SCR2,,^_
   128					TEST 'T' - RESULT CALCULATED INCORRECTLY,MPRINT)
   129					
   130					%TSTPC:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
   131						TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
   132						ERROR	(%BEGIN,13,SCR2,MFLOC,,^_
   133					TEST 'T' - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)
   134					>
   135					; **********************************************************************
   136					;*PDIV - PERFORM DDIV AND TEST RESULTS
   137					; **********************************************************************
   138
   139					DEFINE	PDIV (T,A1,A2,A3,A4,E1,E2,R1<0>,R2<0>,R3<0>,R4<0>,%BEGIN)<
   140					
   141					; --- DIVIDEND == (A1,A2,A3,A4)
   142					; --- DIVISOR === (E1,E2)
   143					; --- QUOTIENT == (R1,R2)
   144					; --- REMAINDER = (R3,R4)
   145					
   146					%BEGIN:	MOVE	AC1,[[EXP A1,A2,A3,A4,E1,E2,R1,R2,R3,R4],,PDEND]
   147						BLT	AC1,PRES+3	;SET UP OPERANDS
   148						GO	PSUBR		;GO DO TEST
   149						ERROR	(%BEGIN,14,SCR1,SCR2,,^_
   150					TEST 'T' - QUOTIENT/REMAINDER INCORRECT,DPRINT)
   151					>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 5
DSKCFT	MAC	26-Sep-79 15:41		MACROS                                                                             SEQ 0031

   152
   153					; **********************************************************************
   154					;*PDIVF - PERFORM DDIV AND TEST RESULTS & PC FLAGS
   155					; **********************************************************************
   156
   157					DEFINE	PDIVF (T,A1,A2,A3,A4,E1,E2,R1<0>,R2<0>,R3<0>,R4<0>,%BEGIN,%TSTPC)<
   158					
   159					; --- DIVIDEND == (A1,A2,A3,A4)
   160					; --- DIVISOR === (E1,E2)
   161					; --- QUOTIENT == (R1,R2)
   162					; --- REMAINDER = (R3,R4)
   163					
   164					%BEGIN:	MOVE	AC1,[[EXP A1,A2,A3,A4,E1,E2,R1,R2,R3,R4],,PDEND]
   165						BLT	AC1,PRES+3	;SET UP OPERANDS
   166						GO	PSUBR		;GO DO TEST
   167						ERROR	(%BEGIN,14,SCR1,SCR2,,^_
   168					TEST 'T' - QUOTIENT/REMAINDER INCORRECT,DPRINT)
   169					
   170					%TSTPC:	MOVE	SCR2,PFLOC	;GET PC
   171						TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
   172						ERROR	(%BEGIN,13,SCR2,PFLOC,,^_
   173					TEST 'T' - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)
   174					>
   175					; **********************************************************************
   176					;*ODIV - PERFORM DDIV AND TEST RESULTS & PC FLAGS
   177					;*       (HANDLES OVERFLOW/NO DIVIDE CONDITIONS)
   178					; **********************************************************************
   179
   180					DEFINE	ODIV (A1,A2,A3,A4,E1,E2,%BEGIN,%TSTPC)<
   181					
   182					; --- DIVIDEND == (A1,A2,A3,A4)
   183					; --- DIVISOR === (E1,E2)
   184					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
   185					
   186					%BEGIN:	MOVE	AC1,[[EXP A1,A2,A3,A4,E1,E2],,ODEND]
   187						BLT	AC1,ORES-1	;SET UP OPERANDS
   188						GO	OSUBR		;GO DO TEST
   189						ERROR	(%BEGIN,14,SCR1,SCR2,,^_
   190					TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)
   191					
   192					%TSTPC:	MOVE	SCR2,OFLOC	;GET PC
   193						IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
   194						CAME	SCR2,OFLOC	;PC CORRECT?
   195						ERROR	(%BEGIN,13,SCR2,OFLOC,,^_
   196					TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)
   197					>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6
DSKCFT	MAC	26-Sep-79 15:41		MACROS                                                                             SEQ 0032

   198
   199					; **********************************************************************
   200					;*CHECKA - CHECK RESULTS OF A DADD & DO ERROR HANDLING
   201					;*	 (RESULT 'R1' IS PASSED AS THE OCTAL DATA ITSELF)
   202					; **********************************************************************
   203
   204					DEFINE	CHECKA (LOC,T,R1< 0>,R2< 0>,%ERROR,%END)<
   205					
   206						SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
   207						CAME	AC1,[R1]	;IS LEFT HALF OF RESULT CORRECT?
   208						JRST	%ERROR		;NO - GO TO ERROR HANDLING
   209						MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
   210						CAMN	AC1+1,[R2]	;IS RIGHT HALF CORRECT?
   211						JRST	%END+1  	;YES - DONT DO ERROR HANDLING
   212									; EXCEPT FOR ERLOOP
   213					
   214					%ERROR:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
   215						MOVE	SCR1,[EXP R1,R2](SCR1)	;GET CORRECT RESULT
   216					%END:	ERROR	(LOC,14,SCR1,SCR2,,^_
   217					TEST 'T' - RESULT IS INCORRECT,APRINT)
   218					>
   219					; **********************************************************************
   220					;*CHECKS - CHECK RESULTS OF A DSUB & DO ERROR HANDLING
   221					;*	 (RESULT 'R1' IS PASSED AS THE OCTAL DATA ITSELF)
   222					; **********************************************************************
   223
   224					DEFINE	CHECKS (LOC,T,R1< 0>,R2< 0>,%ERROR,%END)<
   225					
   226						SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
   227						CAME	AC1,[R1]	;IS LEFT HALF OF RESULT CORRECT?
   228						JRST	%ERROR		;NO - GO TO ERROR HANDLING
   229						MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
   230						CAMN	AC1+1,[R2]	;IS RIGHT HALF CORRECT?
   231						JRST	%END+1  	;YES - DONT DO ERROR HANDLING
   232									;	EXCEPT FOR ERLOOP
   233					
   234					%ERROR:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
   235						MOVE	SCR1,[EXP R1,R2](SCR1)	;GET CORRECT RESULT
   236					%END:	ERROR	(LOC,14,SCR1,SCR2,,^_
   237					TEST 'T' - RESULT IS INCORRECT,SPRINT)
   238					>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 7
DSKCFT	MAC	26-Sep-79 15:41		MACROS                                                                             SEQ 0033

   239
   240					; **********************************************************************
   241					;*CHECKB - CHECK RESULTS OF A DADD & DO ERROR HANDLING
   242					;*	 (RESULT 'R1' IS PASSED AS THE ADDRESS OF THE DATA)
   243					; **********************************************************************
   244
   245					DEFINE	CHECKB (LOC,T,R1,%ERROR,%END)<
   246					
   247						SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
   248						CAME	AC1,R1		;IS LEFT HALF OF RESULT CORRECT?
   249						JRST	%ERROR		;NO - GO TO ERROR HANDLING
   250						MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
   251						CAMN	AC1+1,R1+1	;IS RIGHT HALF CORRECT?
   252						JRST	%END+1  	;YES - DONT DO ERROR HANDLING
   253									;	EXCEPT FOR ERLOOP
   254					
   255					%ERROR:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
   256						MOVE	SCR1,R1(SCR1)	;GET CORRECT WORD OF RESULT
   257					%END:	ERROR	(LOC,14,SCR1,SCR2,,^_
   258					TEST 'T' - RESULT IS INCORRECT,APRINT)
   259					>
   260					; **********************************************************************
   261					;*CHECKT - CHECK RESULTS OF A DSUB & DO ERROR HANDLING
   262					;*	 (RESULT 'R1' IS PASSED AS THE ADDRESS OF THE DATA)
   263					; **********************************************************************
   264
   265					DEFINE	CHECKT (LOC,T,R1,%ERROR,%END)<
   266					
   267						SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
   268						CAME	AC1,R1  	;IS LEFT HALF OF RESULT CORRECT?
   269						JRST	%ERROR		;NO - GO TO ERROR HANDLING
   270						MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
   271						CAMN	AC1+1,R1+1      	;IS RIGHT HALF CORRECT?
   272						JRST	%END+1  	;YES - DONT DO ERROR HANDLING
   273									;	EXCEPT FOR ERLOOP
   274					
   275					%ERROR:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
   276						MOVE	SCR1,R1(SCR1)	;GET CORRECT WORD OF RESULT
   277					%END:	ERROR	(LOC,14,SCR1,SCR2,,^_
   278					TEST 'T' - RESULT IS INCORRECT,SPRINT)
   279					>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1
PARAM	KSM	18-Sep-79 17:18		CONSOLE DATA SWITCH ASSIGNMENTS, SEPTEMBER 1979                                    SEQ 0034

   280					SUBTTL	CONSOLE DATA SWITCH ASSIGNMENTS, SEPTEMBER 1979
   281
   282					DEFINE	S,<; *********************************************************************>
   283
   284					; **********************************************************************
   285					;*DATA SWITCHES
   286					;*LEFT HALF SWITCHES ARE PRE-ASSIGNED FOR SUBROUTINE PACKAGE USE
   287					;*AND CONTROL LOOPING, PRINTING (TTY OR OTHER DEVICE) AND MISC. FUNCTIONS
   288					; **********************************************************************
   289
   290			400000		ABORT==	400000			;ABORT PROGRAM ON PASS COMPLETION
   291			200000		RSTART==200000			;RESTART TEST, PRINT TOTALS
   292			100000		TOTALS==100000			;PRINT TOTALS, CONTINUE
   293
   294			040000		NOPNT==	040000			;INHIBIT ALL PRINT/TYPE OUT (EXCEPT FORCED)
   295			020000		PNTLPT==020000			;PRINT ALL DATA ON LPT (LOGICAL DEVICE, USER MODE)
   296			010000		DING==	010000			;RING BELL ON ERROR
   297
   298			004000		LOOPER==004000			;ENTER EXERCISE/CHECK LOOP ON ERROR
   299			002000		ERSTOP==002000			;HALT ON TEST ERROR
   300			001000		PALERS==001000			;PRINT ALL ERRORS
   301
   302			000400		RELIAB==000400			;RELIABILITY MODE
   303			000200		TXTINH==000200			;INHIBIT ERROR TEXT
   304			000100		INHPAG==000100			;INHIBIT PAGING
   305
   306			000040		MODDVC==000040			;MODIFY DEVICE CODE
   307			000020		INHCSH==000020			;INHIBIT CACHE
   308			000010		OPRSEL==000010			;OPERATOR SELECTION
   309
   310			000004		CHAIN==	000004			;CHAIN CONTROL SWITCH
   311
   312									;SWITCH 16 RESERVED
   313
   314									;SWITCH 17 RESERVED !!!
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 2
PARAM	KSM	18-Sep-79 17:18		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0035

   315					SUBTTL	PROGRAM/SUBROUTINE PARAMETERS
   316
   317					; **********************************************************************
   318					;*SPECIAL SUBPROGRAM LINKAGES
   319					; **********************************************************************
   320
   321			027772		FSELNK=	27772	;FILE SELECT LINK
   322			027773		FRDLNK=	27773	;FILE READ LINK
   323			027774		LDLNK=	27774	;LOAD LINKAGE ADDRESS
   324			027775		DDTLNK=	27775	;DDT LINKAGE ADDRESS
   325			027776		MODLNK=	27776	;OPERATIONAL MODE CHECK LINKAGE ADDRESS
   326			027777		SUBLNK=	27777	;SUBROUTINE LINKAGE ADDRESS
   327
   328					; **********************************************************************
   329					;*SPECIAL SUBROUTINE FATAL HALTS
   330					;*USED TO REPORT ERRORS THAT CAUSE THE SUBROUTINES TO BE UNUSABLE
   331					; **********************************************************************
   332
   333					;ADDRESS   TAG	REASON
   334					;---------------------
   335
   336					; 1010 	NOEXEC	;PROGRAM NOT CODED FOR EXEC MODE OPERATION
   337					; 1011  PLERR	;FATAL PUSH LIST POINTER ERROR
   338					; 1012  PLERR1	;INITIAL PUSH LIST POINTER ERROR
   339					; 1013  MUOERR	;MUUO WITH LUUO HANDLER WIPED OUT
   340					; 1014  SMBER	;KS-10 INTERRUPT WITHOUT DOORBELL
   341					; 1015  SMCER	;KS-10 CLOCK INTERRUPT WITHOUT FLAG SET
   342					; 1016  CPIERR	;CPU INITIALIZATION ERROR
   343					; 1017  EOPERR	;END OF PROGRAM ERROR
   344					; 1020  LUOERR	;INTERRUPT WITH LUUO HANDLER WIPED OUT
   345
   346					; **********************************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3
PARAM	KSM	18-Sep-79 17:18		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0036

   347					; **********************************************************************
   348					;OPERATOR DEFINITIONS (NON-UUO'S)
   349					; **********************************************************************
   350
   351		260740	000000		OPDEF	GO	[PUSHJ	P,]	;SUBROUTINE CALL
   352		263740	000000		OPDEF	RTN	[POPJ	P,]	;SUBROUTINE RETURN 
   353		261740	000000		OPDEF	PUT	[PUSH	P,]	;PUT DATA ON PUSH LIST
   354		262740	000000		OPDEF	GET	[POP	P,]	;GET DATA FROM PUSH LIST 
   355		254000	000000		OPDEF	PJRST	[JRST	]	;JRST TO ROUTINE THAT RTN'S
   356		254200	000000		OPDEF	HALT	[JRST	4,]	;DEFINITION FOR DDT
   357		254100	000000		OPDEF	JRSTF	[JRST	2,]	;DEFINITION FOR DDT
   358		254500	000000		OPDEF	JEN	[JRST	12,]	;DEFINITION FOR DDT
   359
   360					; **********************************************************************
   361					;SUBROUTINE INITIALIZATION CALL
   362					; **********************************************************************
   363
   364		265000	030011		OPDEF	PGMINT	[JSP	0,SBINIT]	;SUBROUTINE INITIALIZATION
   365
   366					; **********************************************************************
   367					;HALTING UUO'S (A MORE GRACEFUL HALT THAN SIMPLY USING THE HALT INSTRUCTION).
   368					; **********************************************************************
   369
   370		037640	000004		OPDEF	FATAL	[37B8!15B12!4]	;FATAL PROGRAMMING HALT
   371		037600	000004		OPDEF	ERRHLT	[37B8!14B12!4]	;PROGRAM ERROR HALT
   372
   373					; **********************************************************************
   374					;TERMINAL INPUT UUO'S
   375					;ALWAYS COME FROM THE CONSOLE TERMINAL IN EXEC MODE OR THE
   376					;CONTROLLING TERMINAL (REAL TERMINAL OR PTY) IN USER MODE.
   377					; **********************************************************************
   378
   379		037000	000003		OPDEF	TTICHR 	[37B8!0B12!3]	;TTY, INPUT ANY CHARACTER
   380		037040	000003		OPDEF	TTIYES	[37B8!1B12!3]	;TTY, NORMAL RETURN Y
   381		037100	000003		OPDEF	TTINO	[37B8!2B12!3]	;TTY, NORMAL RETURN N
   382		037140	000003		OPDEF	TTIOCT	[37B8!3B12!3]	;TTY, INPUT OCTAL WORD
   383		037200	000003		OPDEF	TTIDEC	[37B8!4B12!3]	;TTY, INPUT DECIMAL WORD
   384		037240	000003		OPDEF	TTICNV	[37B8!5B12!3]	;TTY, INPUT CONVERTABLE WORD
   385		037300	000003		OPDEF	TTLOOK	[37B8!6B12!3]	;TTY, KEYBOARD CHECK
   386		037340	000003		OPDEF	TTALTM	[37B8!7B12!3]	;TTY, ALT-MODE CHECK
   387		037400	000003		OPDEF	TTSIXB	[37B8!10B12!3]	;TTY, INPUT SIXBIT WORD
   388		037440	000003		OPDEF	TTYINP	[37B8!11B12!3]	;TTY, IMAGE MODE INPUT
   389		037500	000003		OPDEF	TTICLR	[37B8!12B12!3]	;TTY, CLEAR INPUT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 4
PARAM	KSM	18-Sep-79 17:18		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0037

   390					;TERMINAL OUTPUT UUO'S.
   391
   392		037000	000000		OPDEF	PNTA	[37B8!0B12!0]	;PRINT ASCII WORD
   393		037000	000001		OPDEF	PNTAF	[37B8!0B12!1]	;PRINT ASCII WORD FORCED
   394		037740	000000		OPDEF	PNTAL	[37B8!17B12!0]	;PRINT ASCIZ LINE
   395		037740	000001		OPDEF	PNTALF	[37B8!17B12!1]	;PRINT ASCIZ LINE FORCED
   396		037600	000003		OPDEF	PSIXL	[37B8!14B12!3]	;PRINT SIXBIT'Z LINE
   397		037640	000003		OPDEF	PSIXLF	[37B8!15B12!3]	;PRINT SIXBIT'Z LINE FORCED
   398		037000	000000		OPDEF	PNTMSG	[37B8!0B12!0]	;PRINT MESSAGE IMMEDIATE
   399		037040	000000		OPDEF	PNTMSF	[37B8!1B12!0]	;PRINT MESSAGE IMMEDIATE FORCED
   400		037100	000000		OPDEF	PSIXM	[37B8!2B12!0]	;PRINT SIXBIT'Z MSG IMMEDIATE
   401		037200	000000		OPDEF	PSIXMF	[37B8!4B12!0]	;PRINT SIXBIT'Z MSG IMM FORCED
   402		037000	000000		OPDEF	PNTCI	[37B8!0B12!0]	;PRINT CHARACTER IMMEDIATE
   403		037040	000000		OPDEF	PNTCIF	[37B8!1B12!0]	;PRINT CHARACTER IMMEDIATE FORCED
   404		037500	000000		OPDEF	PNTCHR	[37B8!12B12!0]	;PRINT CHARACTER
   405		037500	000001		OPDEF	PNTCHF	[37B8!12B12!1]	;PRINT CHARACTER FORCED
   406		037040	000000		OPDEF	PNT1	[37B8!1B12!0]	;PRINT ONE OCTAL DIGIT
   407		037040	000001		OPDEF	PNT1F	[37B8!1B12!1]	;PRINT 1 OCTAL DIGIT FORCED	
   408		037100	000000		OPDEF	PNT2	[37B8!2B12!0]	;PRINT TWO OCTAL DIGITS
   409		037100	000001		OPDEF	PNT2F	[37B8!2B12!1]	;PRINT 2 OCTAL DIGITS FORCED	
   410		037140	000000		OPDEF	PNT3	[37B8!3B12!0]	;PRINT THREE OCTAL DIGITS
   411		037140	000001		OPDEF	PNT3F	[37B8!3B12!1]	;PRINT THREE OCTAL DIGITS FORCED	
   412		037200	000000		OPDEF	PNT4	[37B8!4B12!0]	;PRINT FOUR OCTAL DIGITS
   413		037200	000001		OPDEF	PNT4F	[37B8!4B12!1]	;PRINT FOUR OCTAL DIGITS FORCED
   414		037240	000000		OPDEF	PNT5	[37B8!5B12!0]	;PRINT FIVE OCTAL DIGITS
   415		037240	000001		OPDEF	PNT5F	[37B8!5B12!1]	;PRINT FIVE OCTAL DIGITS FORCED
   416		037300	000000		OPDEF	PNT6	[37B8!6B12!0]	;PRINT SIX OCTAL DIGITS
   417		037300	000001		OPDEF	PNT6F	[37B8!6B12!1]	;PRINT SIX OCTAL DIGITS FORCED
   418		037340	000000		OPDEF	PNT7	[37B8!7B12!0]	;PRINT 7 OCTAL DIGITS
   419		037340	000001		OPDEF	PNT7F	[37B8!7B12!1]	;PRINT 7 OCTAL DIGITS FORCED
   420		037440	000000		OPDEF	PNT11	[37B8!11B12!0]	;PRINT 11 OCTAL DIGITS
   421		037440	000001		OPDEF	PNT11F	[37B8!11B12!1]	;PRINT 11 OCTAL DIGITS FORCED.
   422		037400	000000		OPDEF	PNTADR	[37B8!10B12!0]	;PRINT PHYSICAL ADDRESS
   423		037400	000001		OPDEF	PNTADF	[37B8!10B12!1]	;PRINT PHYSICAL ADDRESS FORCED
   424		037600	000000		OPDEF	PNTOCT  [37B8!14B12!0]	;PRINT FULL WORD OCTAL
   425		037600	000001		OPDEF	PNTOTF	[37B8!14B12!1]	;PRINT FULL WORD OCTAL FORCED
   426		037540	000000		OPDEF	PNTHW	[37B8!13B12!0]	;PRINT OCTAL HALF WORDS, 6 SP 6
   427		037540	000001		OPDEF	PNTHWF	[37B8!13B12!1]	;PRINT OCTAL HALF WORDS, 6 SP 6 FORCED
   428		037700	000003		OPDEF	PNTOCS	[37B8!16B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S
   429		037740	000003		OPDEF	PNTOCF	[37B8!17B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S FORCED
   430		037640	000000		OPDEF	PNTDEC	[37B8!15B12!0]	;PRINT DECIMAL, SUPRESS LEADING 0'S
   431		037640	000001		OPDEF	PNTDCF	[37B8!15B12!1]	;PRINT DECIMAL, SUPRESS LEADING 0'S FORCED
   432		037700	000000		OPDEF	PNTDS	[37B8!16B12!0]	;PRINT DECIMAL, SPACES FOR LD 0'S
   433		037700	000001		OPDEF	PNTDSF	[37B8!16B12!1]	;PRINT DECIMAL, SPACES FOR LD 0'S FORCED
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 5
PARAM	KSM	18-Sep-79 17:18		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0038

   434		037200	000002		OPDEF	PNTNM	[37B8!4B12!2]	;PRINT PROGRAM NAME
   435		037000	000002		OPDEF	PNTSIX	[37B8!0B12!2]	;PRINT SIXBIT WORD
   436		037040	000002		OPDEF	PNTSXF	[37B8!1B12!2]	;PRINT SIXBIT WORD FORCED
   437		037240	000002		OPDEF	DROPDV	[37B8!5B12!2]	;CLOSE LOGICAL FILE, USER MODE
   438		037100	000002		OPDEF	PNTCW	[37B8!2B12!2]	;PRINT DF10 CONTROL WORD
   439		037140	000002		OPDEF	PNTCWF	[37B8!3B12!2]	;PRINT DF10 CONTROL WORD FORCED
   440		037000	030242		OPDEF	PCRL	[37B8!0B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED
   441		037040	030242		OPDEF	PCRLF	[37B8!1B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED FORCED
   442		037000	000040		OPDEF	PSP	[37B8!0B12!40]	;PRINT SPACE
   443		037040	000040		OPDEF	PSPF	[37B8!1B12!40]	;PRINT SPACE FORCED
   444		037000	030243		OPDEF	PCRL2	[37B8!0B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE)
   445		037040	030243		OPDEF	PCRL2F	[37B8!1B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE) FORCED
   446		037040	000007		OPDEF	PBELL	[37B8!1B12!7]	;PRINT TTY BELL
   447
   448		037040	000026		OPDEF	PFORCE	[37B8!1B12!26]	;PRINT FORCE, CONTROL O OVERRIDE
   449
   450					DEFINE	PMSG	(ARG),<
   451						PSIXM	[SIXBIT\ARG'_\]>
   452
   453					DEFINE	PMSGF	(ARG),<
   454						PSIXMF	[SIXBIT\ARG'_\]>
   455
   456					;SIXBTZ -- MACRO TO GENERATE SIXBIT DATA FOR PRINTING
   457					;	CONSERVES CORE OVER ASCIZ
   458
   459					DEFINE	SIXBTZ	(ARG),<	[SIXBIT\ARG'_\]>
   460
   461					;CONSOLE SWITCH INPUT UUO.
   462					;READS CONSOLE SWITCHES IF IN EXEC MODE OR ASKS FOR THEM IF
   463					; USER MODE.
   464
   465		037400	000002		OPDEF	SWITCH	[37B8!10B12!2]	;INPUT CONSOLE SWITCHES
   466
   467					;CLOCK INITIALIZATION UUO - TO SET DESIRED CLOCK OPERATION
   468					;EITHER IGNORE CLOCK, ONLY LET IT TICK OR CAUSE INTERRUPT TO OCCUR.
   469
   470		037540	000004		OPDEF	CLOKOP	[37B8!13B12!4]	;CLOCK OPERATION UUO - CLOCK
   471		037200	000004		OPDEF	MTROP	[37B8!4B12!4]	;CLOCK OPERATION UUO - METER
   472
   473					;KS-10 CACHE OPERATION UUO'S
   474
   475		037040	000004		OPDEF	CINVAL	[37B8!1B12!4]	;CACHE INVALIDATE
   476		037100	000004		OPDEF	CFLUSH	[37B8!2B12!4]	;CACHE FLUSH
   477		037140	000004		OPDEF	CWRTBI	[37B8!3B12!4]	;CACHE WRITE-BACK & INVALIDATE
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6
PARAM	KSM	18-Sep-79 17:18		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0039

   478					;END OF PASS/PROGRAM UUOS
   479
   480					;PERFORMS THE END OF PASS FUNCTIONS. INCREMENT PASS COUNT,
   481					;DECREMENT ITERATION COUNT, CHECK IF FINISHED WITH THIS PROGRAM ETC.
   482
   483		037500	000004		OPDEF	ENDUUO	[37B8!12B12!4]	;UUO TO DISPLAY LIGHTS
   484		037700	000004		OPDEF	EOPUUO	[37B8!16B12!4]	;END OF PROGRAM UUO
   485
   486					;MEMORY MANAGEMENT UUO'S
   487					;UUO'S TO PERFORM VARIOUS MEMORY FUNCTIONS. MAPPING, ZEROING, PAGING,
   488					;ADDRESS CONVERSION, ETC...
   489
   490		037000	000004		OPDEF	MAPMEM	[37B8!0B12!4]	;MAP MEMORY
   491		037500	000002		OPDEF	MEMZRO	[37B8!12B12!2]	;ZERO MEMORY
   492		037440	000002		OPDEF	MEMSEG	[37B8!11B12!2]	;SETUP MEMORY SEGMENT
   493		037540	000002		OPDEF	MAPADR	[37B8!13B12!2]	;VIRTUAL TO PHYSICAL ADR CONVERT
   494		037640	000002		OPDEF	MAPCNK	[37B8!15B12!2]	;MAP MEMORY CHUNK
   495		037600	000002		OPDEF	MAPSET	[37B8!14B12!2]	;SET KI10 EXEC PAGE MAP
   496		037740	000002		OPDEF	MAPPNT	[37B8!17B12!2]	;PRINT MEMORY MAP
   497
   498					;DEVICE CODE MODIFICATION UUO
   499					;ALLOWS THE MODIFICATION OF IOT'S TO ONE DEVICE TO BE CHANGED TO
   500					;IOT'S TO A DIFFERENT DEVICE CODE.
   501
   502		037340	000002		OPDEF	MODPCU	[37B8!7B12!2]	;MODIFY PERHIPERAL CODE, USER
   503		037300	000002		OPDEF	MODPCP	[37B8!6B12!2]	;MODIFY PERHIPERAL CODE, PROGRAM
   504
   505			030000			IFNDEF	MODDVL,<MODDVL==BEGIN>
   506			030000			IFNDEF	MODDVU,<MODDVU==BEGIN>
   507
   508					;"DIAMON" FILE SELECTION AND READ UUOS
   509
   510		037240	000004		OPDEF	FSELECT	[37B8!5B12!4]	;FILE SELECTION
   511		037300	000004		OPDEF	FREAD	[37B8!6B12!4]	;FILE READ - ASCII DATA
   512		037340	000004		OPDEF	FRD36	[37B8!7B12!4]	;FILE READ - 36 BIT DATA
   513		037400	000004		OPDEF	FRD8	[37B8!10B12!4]	;FILE READ - 8 BIT DATA
   514
   515						XLIST
   516					IFNDEF	EROLD,<LIST
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 7
PARAM	KSM	18-Sep-79 17:18		ERROR HANDLING UUO DEFINITIONS                                                     SEQ 0040

   517					SUBTTL	ERROR HANDLING UUO DEFINITIONS
   518
   519					; **********************************************************************
   520					;ERROR HANDLER PARAMETERS
   521					; **********************************************************************
   522
   523		036000	000000		OPDEF	ERUUO	[36B8]		;ERROR CALL UUO
   524		035000	000000		OPDEF	ERLOOP	[35B8]		;ERROR LOOP, CHECKS PC,REPT,REPT1,ERROR
   525		035040	000000		OPDEF	ERLP1	[35B8!1B12]	;ERROR LOOP IF PC'S MATCH
   526		035100	000000		OPDEF	ERLP2	[35B8!2B12]	;ERROR LOOP IF ANY ERROR
   527		034000	000000		OPDEF	REPTUO	[34B8]		;REPEAT LOOP UUO
   528
   529					;THE ERROR HANDLER MACROS
   530
   531					;A MACRO TO REPORT AN ERROR AND LOOP
   532
   533						DEFINE	ERROR	(ADR,FORMAT,CORECT,ACTUAL,F,D,ERR)<
   534												SALL
   535						ERUUO	FORMAT,[T,,[SIXBIT\F'_\]
   536							   CORECT,,ACTUAL
   537							   [SIXBIT\D'_\],,ERR]
   538												XALL
   539						ERLOOP	ADR		;IF ERROR, LOOP TO ADR
   540					>
   541
   542					;A MACRO TO REPORT AN ERROR AND NOT LOOP
   543
   544						DEFINE	ERROR1	(FORMAT,CORECT,ACTUAL,F,D,ERR)<
   545												SALL
   546						ERUUO	FORMAT,[T,,[SIXBIT\F'_\]
   547							   CORECT,,ACTUAL
   548							   [SIXBIT\D'_\],,ERR]
   549												XALL>
   550
   551					>;END OF EROLD CONDITIONAL
   552
   553						XLIST
   554						LIST
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1
FIXED	KSM	18-Sep-79 17:08		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979                         SEQ 0041

   555					SUBTTL	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979
   556
   557	030000					LOC	30000
   558
   559					; **********************************************************************
   560					;PROGRAM STARTING ADDRESSES
   561					;THESE ADDRESSES CALL VARIOUS SPECIAL START ROUTINES AND OR OPTIONS
   562					;NORMAL START ADDRESS IS 30000 ALL OTHERS ARE SPECIAL. INVOKED BECAUSE
   563					;OF END OF PASS, POWER FAILURE, DDT START, RE-ENTERING(TYPICALLY USER
   564					;MODE), OR ANY NUMBER OF SPECIAL FEATURE TESTS.
   565					; **********************************************************************
   566
   567	030000	254 00 1 00 027776 	BEGIN:	JRST	@MODLNK		;STAND-ALONE START
   568	030001	254 00 0 00 030623 	$START:	JRST	START		;MODE CHECK STARTING ADDRESS
   569
   570	030002	254 00 1 00 027774 	DIAGMN:	JRST	@LDLNK		;DIAGNOSTIC MONITOR START
   571
   572	030003	254 00 1 00 027774 	SYSEXR:	JRST	@LDLNK		;SYSTEM EXERCISER START
   573
   574	030004	254 00 0 00 030624 	SFSTRT:	JRST	SADR1		;SPECIAL FEATURE START
   575
   576	030005	254 00 0 00 030624 	PFSTRT:	JRST	SADR2		;POWER FAIL RESTART
   577
   578	030006	254 00 0 00 030623 	REENTR:	JRST	SADR3		;REENTER START(USUALLY USER MODE ONLY)
   579
   580	030007				SRTDDT:				;COMMONLY MISTAKEN NAME FOR "DDTSRT"
   581	030007	254 00 1 00 027775 	DDTSRT:	JRST	@DDTLNK		;DDT START
   582
   583	030010	254 00 0 00 030624 	BEGIN1:	JRST	STARTA		;LOOP START(END OF PASS COMES HERE)
   584	030011	254 00 1 00 027777 	SBINIT:	JRST	@SUBLNK		;PMGINT LINKAGE
   585	030012	000000	000000		RETURN:	0			;RETURN ADDRESS STORAGE
   586
   587	030013	254200	030000		START1:	SADR7			;OPTIONAL STARTING ADR/INSTRUCTIONS
   588	030014	254200	030000		START2:	SADR8			; "
   589	030015	254200	030000		START3:	SADR9			; "
   590	030016	254200	030000		START4:	SADR10			; "
   591	030017	254200	030000		START5:	SADR11			; "
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 2
FIXED	KSM	18-Sep-79 17:08		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979                         SEQ 0042

   592					; **********************************************************************
   593					;PROGRAM FIXED PARAMETER AREA
   594					; **********************************************************************
   595
   596	030020	446353	434600		PNTNAM:	PAREA3		;SIXBIT PROGRAM NAME
   597	030021	546364	000000		PNTEXT:	PAREA4		;SIXBIT PROGRAM EXTENSION
   598	030022	000000	000000		RANDBS:	PAREA1		;RANDOM BASE NUMBER
   599	030023	000000	000000		SWTEXR:	PAREA2		;SYSTEM EXERCISER SWITCHES
   600	030024	000000	000010		ITRCNT:	ITERAT		;PROGRAM ITERATIONS
   601	030025	000000	030600		$PNAME:	PGMNAM		;POINTER TO PROGRAMS NAME
   602	030026	000000	000003		$PVER:	MCNVER,,DECVER	;MCN & DEC VERSION LEVEL
   603	030027	000000	030000		$MODVL:	MODDVL		;DEVICE CODE CHANGE LOWER LIMIT
   604	030030	000000	030000		$MODVU:	MODDVU		;DEVICE CODE CHANGE UPPER LIMIT
   605	030031	777777	777777		$EMODE:	IFNDEF EXCASB,<0> IFDEF EXCASB,<-1>	;EXEC ALLOWED
   606	030032	777777	777777		$UMODE:	IFNDEF USRASB,<0> IFDEF USRASB,<-1>	;USER ALLOWED
   607	030033	000000	000000		$DSKUP:	IFNDEF DSKUPD,<0> IFDEF DSKUPD,<-1>	;DISK UPDATE MODE
   608	030034	000000	000000		$MMAP:	IFNDEF MEMMAP,<0> IFDEF MEMMAP,<-1>	;ALLOW MEMORY RTNS
   609	030035	000000	000000		PAREA7:	PAREA5		;OPTIONAL PARAMETER
   610	030036	000000	000000		PAREA8:	PAREA6		;OPTIONAL PARAMETER
   611
   612					; **********************************************************************
   613					;PROGRAM VARIABLE PARAMETER AREA
   614					; **********************************************************************
   615
   616	030037	000000	000000		USER:	0		; 0 = EXEC, -1 = USER MODE FLAG
   617	030040	000000	000000		KAIFLG:	0		;PROCESSOR TYPE, 0 = KA10, -1 = KI10
   618	030041	777777	777777		KLFLG:	-1		;PROCESSOR TYPE, 0 = KA/KI, -1 = KL10
   619	030042	777777	777777		MONFLG:	-1		;DIAG MONITOR SPECIAL USER FLAG
   620	030043	000000	000000		MONCTL:	0		;DIAG MON/SYS EXR FLAG
   621	030044	000000	000000		MONTEN:	0		;-1= LOADED BY 10
   622	030045	000000	000000		CLOCKF:	0		;CLOCK TICKED FLAG
   623	030046	000000	000000		CONSW:	0		;CONSOLE SWITCH SETTINGS
   624	030047	000000	000000		PASCNT:	0		;PROGRAM PASS COUNT
   625	030050	000000	000000		RUNFLG:	0		;PROGRAM RUN FLAG
   626	030051	000000	000000		TESTPC:	0		;SUBTEST PC
   627	030052	000000	000000		ERRPC:	0		;ERROR PC
   628	030053	000000	000000		ERRTLS:	0		;ERROR TOTALS
   629	030054	000000	000000		TICKS:	0		;PROGRAM RUNNING TIME
   630	030055	000000	000000		MARGIN:	0		;KI10 MARGIN WORD VALUE
   631	030056	000000	000000		$ONETM:	0		;SUBROUTINE INITIALIZATION FLAG
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3
FIXED	KSM	18-Sep-79 17:08		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979                         SEQ 0043

   632					; **********************************************************************
   633					;SPECIAL PROGRAM DISPATCH ADDRESSES
   634					; **********************************************************************
   635
   636	030057	037 12 0 00 000004 	BEGEND:	ENDUUO		;END OF PASS
   637	030060	254 00 0 00 030010 	$BEND1:	JRST	BEGIN1	;KEEP RUNNING PROGRAM
   638	030061	037 16 0 00 000004 	$BEND2:	EOPUUO		;END OF PROGRAM - NO RETURN
   639	030062	000000	030624		CNTLC:	SADR5		;CONTROL C XFER ADDRESS
   640	030063	000000	040450		ALTMGO:	SADR6		;ALTMODE XFER ADDRESS
   641	030064				CPOPJ1:			;SKIP RETURN
   642	030064	350 00 0 17 000000 	UUOSKP:	AOS	(P)	;SKIP RETURN FROM UUO
   643	030065				CPOPJ:			;NON-SKIP REGULAR RETURN
   644	030065	263 17 0 00 000000 	UUOEXT:	RTN		;UUO RETURN
   645	030066	255 00 0 00 000000 	UUORTN:	JFCL		;ADDITIONAL USERS UUO ROUTINE
   646	030067	255 00 0 00 000000 	$UORTX:	JFCL		;ADDITIONAL UUO LINKAGE
   647	030070	255 00 0 00 000000 	$UUOER:	JFCL		;INITED AS (JRST $UOERX)
   648	030071	255 00 0 00 000000 	$ITRHL:	JFCL		;ADDITIONAL INTERRUPT LINKAGE
   649	030072	255 00 0 00 000000 	$ITRX1:	JFCL		; "
   650	030073	255 00 0 00 000000 	$USRHL:	JFCL		; "
   651	030074	255 00 0 00 000000 	$RSRTX:	JFCL		;ADDITIONAL POWER FAIL LINKAGE
   652	030075	255 00 0 00 000000 	$RSRTY:	JFCL		; "
   653	030076	255 00 0 00 000000 	RESRT1:	JFCL		; INITED AS (JRST RESRTX)
   654	030077	255 00 0 00 000000 	RESRT2:	JFCL		; "
   655	030100	255 00 0 00 000000 	$PARER:	JFCL		;ADDITIONAL PARITY ERROR LINKAGE
   656	030101	255 00 0 00 000000 	ERMORE:	JFCL		;ADDITIONAL ERROR HANDLER LINKAGE
   657	030102	254 04 0 00 030102 		HALT	.	;IMPROPER TRANSFER HALT
   658
   659	030103	000000	000000		$PSHER:	0		;INITED AS (JRST PSHERR)
   660	030104	000000	000000		ITRCH1:	0		;PC & FLAGS OF CURRENT INTERRUPT
   661	030105	000000	000000			0		;INITED AS (JRST $ITRC1)
   662
   663					; **********************************************************************
   664					;PROCESSOR CONTROL STORAGE
   665					; **********************************************************************
   666
   667	030106	000000	000000		$ACC0:	0		;INTERRUPT SAVED AC0
   668	030107	000000	000000		$SVPI:	0		;INTERRUPT SAVED PI
   669	030110	000000	000000		$SVAPR:	0		;INTERRUPT SAVED APR
   670	030111	000000	000000		$SVPAG:	0		;INTERRUPT SAVED PAG (DATAI)
   671	030112	000000	000000		$SPAG1:	0		;INTERRUPT SAVED PAG (CONI)
   672
   673	030113	000000	000000		$SVUUO:	0		;CURRENT USERS UUO
   674	030114	000000	000000		$SVUPC:	0		;PC OF CURRENT USERS UUO
   675
   676	030115	000000	000000		REPTU:	0		;REPEAT UUO ITERATIONS
   677	030116	000000	000000		SCOPE:	0		;ERROR HANDLER SCOPE LOOP FLAG
   678	030117	000000	000000		%CORFLG:0		; " CORRECT FLAG
   679	030120	000000	000000		%COREC:	0		; " CORRECT DATA
   680	030121	000000	000000		%ACTFL:	0		; " ACTUAL FLAG
   681	030122	000000	000000		%ACTUL:	0		; " ACTUAL DATA
   682	030123	000000	000000		%DISCR:	0		; " DISCREPENCY DATA
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 4
FIXED	KSM	18-Sep-79 17:08		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979                         SEQ 0044

   683					; **********************************************************************
   684					;UUO DISPATCH TABLE
   685					; **********************************************************************
   686						XLIST
   687						LIST
   688	030124	030070	030070		UUODIS:	LUUO1,,$UUOER
   689	030125	030070	030070			LUUO3,,LUUO2
   690	030126	030070	030070			LUUO5,,LUUO4
   691	030127	030070	030070			LUUO7,,LUUO6
   692	030130	030070	030070			LUUO11,,LUUO10
   693	030131	030070	030070			LUUO13,,LUUO12
   694	030132	030070	030070			LUUO15,,LUUO14
   695	030133	030070	030070			LUUO17,,LUUO16
   696	030134	030070	030070			LUUO21,,LUUO20
   697	030135	030070	030070			LUUO23,,LUUO22
   698	030136	030070	030070			LUUO25,,LUUO24
   699	030137	030070	030070			LUUO27,,LUUO26
   700	030140	030070	030070			LUUO31,,LUUO30
   701	030141	030070	030070			LUUO33,,LUUO32
   702
   703					; **********************************************************************
   704					;MEMORY MANAGMENT STORAGE
   705					; **********************************************************************
   706
   707	030142	000000	000000		DF22F:	0		;DF10 CONTROL FLAG, 0 = 18, -1 = 22 BIT
   708	030143	000000	000000		MAPNEW:	0		;MEMORY MAPPING CONTROL FLAG, -1 = 4096K MAPPING
   709	030144	000000	000000		MEMTOT:	0		;TOTAL MEMORY SIZE IN K (1024.)
   710	030145	000000	000000		MEMLOW:	0		;LOWEST USABLE MEMORY
   711	030146				MEMSIZ:	BLOCK ^D41	;MEMORY SEGMENT POINTER TABLE
   712
   713					; **********************************************************************
   714					;PRINT CONTROL STORAGE
   715					; **********************************************************************
   716
   717	030217	000000	000000		PNTFLG:	0		;PRINT FLAG, -1 WHILE IN PRINT ROUTINE
   718	030220	000000	000000		PNTENB:	0		;PRINT ENABLE
   719	030221	000000	000000		PDISF:	0		;PRINT DISABLED FLAG
   720	030222	000000	000000		PNTINH:	0		;INHIBIT PRINT INPUT CHECKS
   721	030223	000000	000000		PNTSPC:	0		;PRINT SPACE CONTROL
   722	030224	000000	000000		OPTIME:	0		;TYPE-IN WAIT TIME
   723	030225	000000	000000		$TWCNT:	0		;TIME WAITED
   724	030226	000000	000000		$DVOFF:	0		;LOGICAL DEVICE INITED FLAG
   725	030227	000000	000000		TTYFIL:	0		;TTY EXEC FILLERS FLAG
   726	030230	000000	000000		TTYSPD:	0		;TTY EXEC BAUD RATE
   727	030231	000000	000000		$TTCHR:	0		;ACTUAL TYPED IN CHAR
   728	030232	000000	000000		$CHRIN:	0		;UPPER CASED & PARITY STRIPPED CHAR
   729	030233	000000	000000		$TYPNB:	0		;TYPED IN NUMBER
   730	030234	000000	000000		$CRLF:	0		;FREE CR/LF FLAG
   731	030235	000000	000000		$TABF:	0		;TAB CONVERSION FLAG
   732	030236	000000	000000		$FFF:	0		;FORM FEED CONVERSION FLAG
   733	030237	000000	000000		$VTF:	0		;VERTICAL TAB CONVERSION FLAG
   734	030240	000000	000000		USRLFF:	0		;USER LF FILLERS
   735	030241	000000	000000		USRCRF:	0		;USER CR FILLERS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 5
FIXED	KSM	18-Sep-79 17:08		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979                         SEQ 0045

   736					; **********************************************************************
   737					;THE FOLLOWING MISCELLANEOUS PRINT CHARACTERS ARE INCLUDED
   738					;TO FACILITATE PRINTING AND ARE CALLED AS FOLLOWS:
   739					;	MOVEI	NAME
   740					;	PNTA		;OR PNTAF
   741					; **********************************************************************
   742
   743	030242				CRLF:	ASCII/
   744	030242	015 012 000 000 000 	/
   745	030243				CRLF2:	ASCII/
   746
   747	030243	015 012 015 012 000 	/
   748	030244	054 000 000 000 000 	COMMA:	ASCII/,/
   749	030245	056 000 000 000 000 	PERIOD:	ASCII/./
   750	030246	040 000 000 000 000 	SPACE:	ASCII/ /
   751	030247	011 000 000 000 000 	TAB:	ASCII/	/
   752	030250				MINUS:
   753	030250	055 000 000 000 000 	HYPEN:	ASCII/-/
   754	030251	053 000 000 000 000 	PLUS:	ASCII/+/
   755	030252	052 000 000 000 000 	AST:	ASCII/*/
   756	030253	100 000 000 000 000 	ATSIN:	ASCII/@/
   757	030254	050 000 000 000 000 	LFP:	ASCII/(/
   758	030255	051 000 000 000 000 	RTP:	ASCII/)/
   759	030256	007 0000000000 		BELL:	BYTE (7) 007
   760	030257	077 000 000 000 000 	QUEST:	ASCII/?/
   761	030260	057 000 000 000 000 	SLASH:	ASCII!/!
   762	030261	044 000 000 000 000 	DOLLAR:	ASCII/$/
   763	030262	000000	000012		RADIX:	^D10			;DECIMAL PRINT RADIX
   764	030263	000000	000040		RADLSP:	40			;DECIMAL PRINT LEADING CHAR
   765	030264	000000	000012		RADLSC:	^D10			;DECIMAL PRINT LEADING CHAR COUNT
   766
   767					; **********************************************************************
   768					;USER MODE OUTPUT FILE INFORMATION
   769					; **********************************************************************
   770
   771	030265				$OBUF:	BLOCK	3		;LOGICAL FILE OUTPUT BUFFER HEADER
   772	030270	60 62 51 56 64 00 	$OUTNM:	SIXBIT	/PRINT/		;FILE NAME
   773	030271	60 56 64 00 00 00 	$OUTEX:	SIXBIT	/PNT/		;FILE NAME EXTENSION
   774	030272					BLOCK	2
   775
   776					; **********************************************************************
   777					;DISK UPDATE MODE FILE INFORMATION
   778					; **********************************************************************
   779
   780	030274				$IBUF:	BLOCK	3
   781	030277	60 62 51 56 64 00 	$INNM:	SIXBIT	/PRINT/
   782	030300	60 56 64 00 00 00 	$INEXT:	SIXBIT	/PNT/
   783	030301					BLOCK	2
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6
FIXED	KSM	18-Sep-79 17:08		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979                         SEQ 0046

   784					; **********************************************************************
   785					;PUSHDOWN LIST CONTROL INFORMATION
   786					; **********************************************************************
   787
   788	030303	777577	030303		PLIST:	PLIST-PLISTE,,PLIST
   789	030304				PLISTS:	BLOCK	200
   790	030504	000000	000000		PLISTE:	0		;END OF PUSHDOWN LIST
   791
   792					; **********************************************************************
   793					;POWER LINE CLOCK FREQUENCY FLAG
   794					; **********************************************************************
   795
   796	030505	000000	000000		CYCL60:	0	;0 = 60, -1 = 50 CYCLE
   797
   798					; **********************************************************************
   799					;KL10 CACHE CONTROL FLAGS
   800					; **********************************************************************
   801
   802	030506	000000	000000		CSHFLG:	0	;ALLOW CACHE IF 0
   803	030507	000000	000000		CSHMEM:	0	;CACHE MEMORY SEGMENTS IF 0
   804
   805					; **********************************************************************
   806					;NUMBER INPUT DIGIT FLAG
   807					; **********************************************************************
   808
   809	030510	000000	000000		TTNBRF:	0	;-1 IF ANY DIGIT TYPED
   810
   811					; **********************************************************************
   812					;KL10 & KI10 "INHPAG" SWITCH PAGING PREVENTION
   813					; **********************************************************************
   814
   815	030511	000000	000000		PVPAGI:	0	;IF NON-ZERO, OVERRIDE "INHPAG" SWITCH ACTION
   816
   817					; **********************************************************************
   818					;ERROR REPORTING ROUTINE ADDITIONAL USERS CONTROL INSTRUCTIONS
   819					; **********************************************************************
   820
   821	030512	000000	000000		%ERHI1:	0	;IF NON-ZERO, XCT'D AT START OF %ERUUO
   822	030513	000000	000000		%ERHI2:	0	;IF NON-ZERO, XCT'D AT END OF %ERUUO
   823	030514	000000	000000		%ERHI3:	0	;IF NON-ZERO, XCT'D AFTER "PC" OF %ERUUO
   824
   825					; **********************************************************************
   826					;SPECIAL USERS UUO INTERCEPT INSTRUCTION
   827					; **********************************************************************
   828
   829	030515	000000	000000		$$UUO:	0	;IF NON-ZERO, XCT'D AT START OF $UORTN
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 7
FIXED	KSM	18-Sep-79 17:08		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, SEPTEMBER 1979                         SEQ 0047

   830					; **********************************************************************
   831					;USER MODE MONITOR TYPE FLAG
   832					; **********************************************************************
   833
   834	030516	000000	000000		MONTYP:	0	;0 = TOPS10, -1 = TOPS20
   835
   836					; **********************************************************************
   837					;SPECIAL USERS MUUO INTERCEPT INSTRUCTION
   838					; **********************************************************************
   839
   840	030517	000000	000000		$$MUUO:	0	;IF NON-ZERO, XCT'D AT START OF MUUOER
   841
   842					; **********************************************************************
   843					;SPECIAL USERS USER MODE OUTPUT ERROR INTERCEPT INSTUCTION
   844					; **********************************************************************
   845
   846	030520	000000	000000		$$OUTER:0	;IF NON-ZERO, XCT'D AT END OF USER MODE ERROR
   847
   848					; **********************************************************************
   849					;"SWITCH" CALL USAGE CONTROL
   850					; **********************************************************************
   851
   852	030521	000000	000000		$$TOGGLE:0	;IF NON-ZERO, USE C(CONSW) FOR SWITCHES
   853
   854					; **********************************************************************
   855					;SPECIAL USERS ALTMODE SWITCH CALL INTERCEPT INSTRUCTIONS
   856					; **********************************************************************
   857
   858	030522	000000	000000		$$TAX1:	0	;IF NON-ZERO, XCT'D AT START OF ALTMODE SWITCH CALL
   859	030523	000000	000000		$$TAX2:	0	;IF NON-ZERO, XCT'D AT END OF ALTMODE SWITCH CALL
   860
   861					; **********************************************************************
   862					;SM10 (KS-10) PROCESSOR TYPE FLAG
   863					; **********************************************************************
   864
   865	030524	777777	777777		SM10:	0	;IF -1 THIS IS AN KS-10
   866
   867					; **********************************************************************
   868					;RIGHT HALF SWITCHES PROMPT TABLE ADDRESS
   869					; **********************************************************************
   870
   871	030525	000000	000000		SWPTAB:	0	;0 = NO PROMPT, ADR = ADR OF SIXBIT PROMPT TABLE
   872
   873					; **********************************************************************
   874					;SPECIAL FUTURE EXPANSION ROOM
   875					; **********************************************************************
   876
   877					; **********************************************************************
   878					;END OF FIXED STORAGE
   879					; **********************************************************************
   880
   881	030577					LOC	30577
   882	030577	000000	000000		ENDFIX:	0		;END OF FIXED STORAGE
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1
DSKCFM	MAC	26-Sep-79 15:49		INITIALIZATION SECTION                                                             SEQ 0048

   883					SUBTTL	INITIALIZATION SECTION
   884
   885					LALL					;EXPAND MACROS
   886
   887	030600				PGMNAM:	ASCIZ/
   888	030600	015 012 104 105 103 	DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6 [DSKCF]
   889	030601	123 131 123 124 105 
   890	030602	115 040 062 060 062 
   891	030603	060 040 101 104 126 
   892	030604	101 116 103 105 104 
   893	030605	040 111 116 123 124 
   894	030606	122 125 103 124 111 
   895	030607	117 116 040 104 111 
   896	030610	101 107 116 117 123 
   897	030611	124 111 103 040 043 
   898	030612	066 040 133 104 123 
   899	030613	113 103 106 135 015 
   900	030614	012 104 117 125 102 	DOUBLE PRECISION INSTRUCTIONS
   901	030615	114 105 040 120 122 
   902	030616	105 103 111 123 111 
   903	030617	117 116 040 111 116 
   904	030620	123 124 122 125 103 
   905	030621	124 111 117 116 123 
   906	030622	015 012 000 000 000 	/
   907		123456	765432			NUM=123456765432
   908
   909					; A MACRO TO REPORT AN ERROR AND LOOP
   910					;	THIS IS REDEFINED HERE TO CHANGE THE LISTING CONTROL STATEMENTS
   911
   912					DEFINE	ERROR	(ADR,FORMAT,CORECT,ACTUAL,F,D,ERR)<SALL
   913						ERUUO	FORMAT,[T,,[SIXBIT\F'_\]
   914							   CORECT,,ACTUAL
   915							   [SIXBIT\D'_\],,ERR]
   916														LALL
   917						ERLOOP	ADR			;IF ERROR, LOOP TO ADR
   918					>
   919
   920	030623	265 00 0 00 030011 	START:	PGMINT				;INITIALIZE PROGRAM
   921	030624				STARTA:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 2
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST A                                                                      SEQ 0049

   922					SUBTTL	DADD - TEST A
   923														SALL
   924			041016		T=SIXBTZ<DADD TEST>
   925														LALL
   926					; **********************************************************************
   927					;*DADD - TEST A
   928					;*
   929					;*	0,# + 0,0 = 0,#		SIMPLE TESTS TO SEE IF DADD
   930					;*	#,0 + 0,0 = #,0		WORKS AT ALL.
   931					;*	#,# + 0,0 = #,#
   932					;*	0,0 + 0,# = 0,#
   933					;*	0,0 + #,0 = #,0
   934					;*	0,0 + #,# = #,#
   935					;*	0,0 + 0,0 = 0,0
   936					; **********************************************************************
   937
   938					; **********************************************************************
   939					; ----------  DADD (0,#) + (0,0) = (0,#)  ----------
   940					; **********************************************************************
   941
   942	030624	200 15 0 00 041024 	ATEST1:	MOVE	SCR3,[[EXP 0,NUM],,[EXP 0,0]] ;ADDR FOR APRINT
   943	030625	120 01 0 00 041020 		DMOVE	AC1,[EXP 0,NUM]		;INIT AUGEND TO (0,#)
   944	030626	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD (0,#)+(0,0)
   945						CHECKA	(ATEST1,A1,0,NUM)^
   946
   947	030627	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
   948	030630	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
   949	030631	254 00 0 00 030635 		JRST	..0001		;NO - GO TO ERROR HANDLING
   950	030632	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
   951	030633	316 02 0 00 041021 		CAMN	AC1+1,[NUM]	;IS RIGHT HALF CORRECT?
   952	030634	254 00 0 00 030640 		JRST	..0002+1  	;YES - DONT DO ERROR HANDLING
   953									; EXCEPT FOR ERLOOP
   954
   955	030635	200 14 0 13 000001 	..0001:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
   956	030636	200 13 0 13 041020 		MOVE	SCR1,[EXP 0,NUM](SCR1)	;GET CORRECT RESULT
   957	030637				..0002:	ERROR	(ATEST1,14,SCR1,SCR2,,TEST A1 - RESULT IS INCORRECT,APRINT)^SALL
   958	030637	036 14 0 00 041033 
   959	030640	255 00 0 00 000000
   960					^
   961					^
   962
   963					; **********************************************************************
   964					; ----------  DADD (#,0) + (0,0) = (#,0)  ----------
   965					; **********************************************************************
   966
   967	030641	200 15 0 00 041036 	ATEST2:	MOVE	SCR3,[[EXP NUM,0],,[EXP 0,0]] ;ADDR FOR APRINT
   968	030642	120 01 0 00 041021 		DMOVE	AC1,[EXP NUM,0]		;INIT AUGEND TO (#,0)
   969	030643	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD (#,0)+(0,0)
   970						CHECKA	(ATEST2,A2,NUM,0)^
   971
   972	030644	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
   973	030645	312 01 0 00 041021 		CAME	AC1,[NUM]	;IS LEFT HALF OF RESULT CORRECT?
   974	030646	254 00 0 00 030652 		JRST	..0003		;NO - GO TO ERROR HANDLING
   975	030647	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
   976	030650	316 02 0 00 041020 		CAMN	AC1+1,[0]	;IS RIGHT HALF CORRECT?
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 2-1
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST A                                                                      SEQ 0050

   977	030651	254 00 0 00 030655 		JRST	..0004+1  	;YES - DONT DO ERROR HANDLING
   978									; EXCEPT FOR ERLOOP
   979
   980	030652	200 14 0 13 000001 	..0003:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
   981	030653	200 13 0 13 041021 		MOVE	SCR1,[EXP NUM,0](SCR1)	;GET CORRECT RESULT
   982	030654				..0004:	ERROR	(ATEST2,14,SCR1,SCR2,,TEST A2 - RESULT IS INCORRECT,APRINT)^SALL
   983	030654	036 14 0 00 041044 
   984	030655	255 00 0 00 000000
   985					^
   986					^
   987
   988					; **********************************************************************
   989					; ----------  DADD (#,#) + (0,0) = (#,#)  ----------
   990					; **********************************************************************
   991
   992	030656	200 15 0 00 041051 	ATEST3:	MOVE	SCR3,[[EXP NUM,NUM],,[EXP 0,0]] ;ADDR FOR APRINT
   993	030657	120 01 0 00 041047 		DMOVE	AC1,[EXP NUM,NUM]	;INIT AUGEND TO (#,#)
   994	030660	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD (#,#)+(0,0)
   995						CHECKA	(ATEST3,A3,NUM,NUM)^
   996
   997	030661	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
   998	030662	312 01 0 00 041021 		CAME	AC1,[NUM]	;IS LEFT HALF OF RESULT CORRECT?
   999	030663	254 00 0 00 030667 		JRST	..0005		;NO - GO TO ERROR HANDLING
  1000	030664	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1001	030665	316 02 0 00 041021 		CAMN	AC1+1,[NUM]	;IS RIGHT HALF CORRECT?
  1002	030666	254 00 0 00 030672 		JRST	..0006+1  	;YES - DONT DO ERROR HANDLING
  1003									; EXCEPT FOR ERLOOP
  1004
  1005	030667	200 14 0 13 000001 	..0005:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1006	030670	200 13 0 13 041047 		MOVE	SCR1,[EXP NUM,NUM](SCR1)	;GET CORRECT RESULT
  1007	030671				..0006:	ERROR	(ATEST3,14,SCR1,SCR2,,TEST A3 - RESULT IS INCORRECT,APRINT)^SALL
  1008	030671	036 14 0 00 041057 
  1009	030672	255 00 0 00 000000
  1010					^
  1011					^
  1012
  1013					; **********************************************************************
  1014					; ----------  DADD (0,0) + (0,#) = (0,#)  ----------
  1015					; **********************************************************************
  1016
  1017	030673	200 15 0 00 041062 	ATEST4:	MOVE	SCR3,[[EXP 0,0],,[EXP 0,NUM]] ;ADDR FOR APRINT
  1018	030674	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1019	030675	114 01 0 00 041020 		DADD	AC1,[EXP 0,NUM]		;ADD (0,0) + (0,#)
  1020						CHECKA	(ATEST4,A4,0,NUM)^
  1021
  1022	030676	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1023	030677	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  1024	030700	254 00 0 00 030704 		JRST	..0007		;NO - GO TO ERROR HANDLING
  1025	030701	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1026	030702	316 02 0 00 041021 		CAMN	AC1+1,[NUM]	;IS RIGHT HALF CORRECT?
  1027	030703	254 00 0 00 030707 		JRST	..0010+1  	;YES - DONT DO ERROR HANDLING
  1028									; EXCEPT FOR ERLOOP
  1029
  1030	030704	200 14 0 13 000001 	..0007:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1031	030705	200 13 0 13 041020 		MOVE	SCR1,[EXP 0,NUM](SCR1)	;GET CORRECT RESULT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 2-2
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST A                                                                      SEQ 0051

  1032	030706				..0010:	ERROR	(ATEST4,14,SCR1,SCR2,,TEST A4 - RESULT IS INCORRECT,APRINT)^SALL
  1033	030706	036 14 0 00 041070 
  1034	030707	255 00 0 00 000000
  1035					^
  1036					^
  1037
  1038					; **********************************************************************
  1039					; ----------  DADD (0,0) + (#,0) = (#,0)  ----------
  1040					; **********************************************************************
  1041
  1042	030710	200 15 0 00 041073 	ATEST5:	MOVE	SCR3,[[EXP 0,0],,[EXP NUM,0]] ;ADDR FOR APRINT
  1043	030711	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1044	030712	114 01 0 00 041021 		DADD	AC1,[EXP NUM,0]		;ADD (0,0) + (#,0)
  1045						CHECKA	(ATEST5,A5,NUM,0)^
  1046
  1047	030713	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1048	030714	312 01 0 00 041021 		CAME	AC1,[NUM]	;IS LEFT HALF OF RESULT CORRECT?
  1049	030715	254 00 0 00 030721 		JRST	..0011		;NO - GO TO ERROR HANDLING
  1050	030716	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1051	030717	316 02 0 00 041020 		CAMN	AC1+1,[0]	;IS RIGHT HALF CORRECT?
  1052	030720	254 00 0 00 030724 		JRST	..0012+1  	;YES - DONT DO ERROR HANDLING
  1053									; EXCEPT FOR ERLOOP
  1054
  1055	030721	200 14 0 13 000001 	..0011:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1056	030722	200 13 0 13 041021 		MOVE	SCR1,[EXP NUM,0](SCR1)	;GET CORRECT RESULT
  1057	030723				..0012:	ERROR	(ATEST5,14,SCR1,SCR2,,TEST A5 - RESULT IS INCORRECT,APRINT)^SALL
  1058	030723	036 14 0 00 041101 
  1059	030724	255 00 0 00 000000
  1060					^
  1061					^
  1062
  1063					; **********************************************************************
  1064					; ----------  DADD (0,0) + (#,#) = (#,#)  ----------
  1065					; **********************************************************************
  1066
  1067	030725	200 15 0 00 041104 	ATEST6:	MOVE	SCR3,[[EXP 0,0],,[EXP NUM,NUM]] ;ADDR FOR APRINT
  1068	030726	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1069	030727	114 01 0 00 041047 		DADD	AC1,[EXP NUM,NUM]	;ADD (0,0)+(#,#)
  1070						CHECKA	(ATEST6,A6,NUM,NUM)^
  1071
  1072	030730	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1073	030731	312 01 0 00 041021 		CAME	AC1,[NUM]	;IS LEFT HALF OF RESULT CORRECT?
  1074	030732	254 00 0 00 030736 		JRST	..0013		;NO - GO TO ERROR HANDLING
  1075	030733	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1076	030734	316 02 0 00 041021 		CAMN	AC1+1,[NUM]	;IS RIGHT HALF CORRECT?
  1077	030735	254 00 0 00 030741 		JRST	..0014+1  	;YES - DONT DO ERROR HANDLING
  1078									; EXCEPT FOR ERLOOP
  1079
  1080	030736	200 14 0 13 000001 	..0013:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1081	030737	200 13 0 13 041047 		MOVE	SCR1,[EXP NUM,NUM](SCR1)	;GET CORRECT RESULT
  1082	030740				..0014:	ERROR	(ATEST6,14,SCR1,SCR2,,TEST A6 - RESULT IS INCORRECT,APRINT)^SALL
  1083	030740	036 14 0 00 041112 
  1084	030741	255 00 0 00 000000
  1085					^
  1086					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 2-3
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST A                                                                      SEQ 0052

  1087
  1088					; **********************************************************************
  1089					; ----------  DADD (0,0) + (0,0) = (0,0)  ----------
  1090					; **********************************************************************
  1091
  1092	030742	200 15 0 00 041115 	ATEST7:	MOVE	SCR3,[[EXP 0,0],,[EXP 0,0]] ;ADDR FOR APRINT
  1093	030743	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1094	030744	114 01 0 00 000001 		DADD	AC1,AC1			;ADD (0,0) + (0,0)
  1095						CHECKA	(ATEST7,A7,0,0)^
  1096
  1097	030745	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1098	030746	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  1099	030747	254 00 0 00 030753 		JRST	..0015		;NO - GO TO ERROR HANDLING
  1100	030750	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1101	030751	316 02 0 00 041020 		CAMN	AC1+1,[0]	;IS RIGHT HALF CORRECT?
  1102	030752	254 00 0 00 030756 		JRST	..0016+1  	;YES - DONT DO ERROR HANDLING
  1103									; EXCEPT FOR ERLOOP
  1104
  1105	030753	200 14 0 13 000001 	..0015:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1106	030754	200 13 0 13 041022 		MOVE	SCR1,[EXP 0,0](SCR1)	;GET CORRECT RESULT
  1107	030755				..0016:	ERROR	(ATEST7,14,SCR1,SCR2,,TEST A7 - RESULT IS INCORRECT,APRINT)^SALL
  1108	030755	036 14 0 00 041123 
  1109	030756	255 00 0 00 000000
  1110					^
  1111					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0053

  1112					SUBTTL	DADD - TEST B
  1113
  1114					; **********************************************************************
  1115					;DADD - TEST B
  1116					;*
  1117					;*	FLOATING 1 + 0 = FLOATING 1	THESE TESTS ARE DONE FOR A 1 OR
  1118					;*	0 + FLOATING 1 = FLOATING 1	A 0 IN BITS 0,34,36,70 OF THE
  1119					;*	FLOATING 0 + 0 = FLOATING 0	DOUBLEWORD ADDEND OR AUGEND.
  1120					;*	0 + FLOATING 0 = FLOATING 0	THIS WILL TEST THE WORD BOUND- 
  1121					;*					ARY INTEGRITY OF THE DADD
  1122					;*					INSTRUCTION.
  1123					; **********************************************************************
  1124
  1125					; **********************************************************************
  1126					;*	REPEAT THE FOLLOWING BLOCK OF CODE 8 TIMES TO STEP DOWN A LIST
  1127					;*	OF TEST CASES.  THE TEST CASES CONSIST OF 8 DOUBLEWORDS - THE
  1128					;*	FIRST 4 FLOAT A 1 ACROSS IN BITS 0,34,36,70; THE SECOND 4 FLOAT
  1129					;*	A 0 ACROSS IN BITS 0,34,36,70.  THE RESULT SHOULD BE ACS WITH
  1130					;*	CONTENTS EQUAL TO THE FLOATING 1/0.
  1131					; **********************************************************************
  1132
  1133			000000			REP=0
  1134			000000			REPP=0
  1135
  1136						REPEAT	^D8,<
  1137					;   ************************************************
  1138					
  1139						REP=REP+1
  1140						LOC=.				;ERROR LOOP RETURN ADDRESS
  1141						ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1142						ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1143						IFE	REPP-1,<ALEFT=^-ALEFT
  1144								ARIGHT=^-ARIGHT>
  1145					
  1146						MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1147						DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1148						DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1149						CHECKA	(LOC,B1,ALEFT,ARIGHT)
  1150					
  1151						LOC=.				;ERROR LOOP RETURN ADDRESS
  1152						SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1153						MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1154						DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1155						CHECKA	(LOC,B2,ALEFT,ARIGHT)
  1156					
  1157						IFE	REP-4,<REPP=1
  1158							       REP=0>
  1159					;   ************************************************
  1160					>
  1161
  1162					;   ************************************************
  1163
  1164			000001			REP=REP+1
  1165			030757			LOC=.				;ERROR LOOP RETURN ADDRESS
  1166			000000			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-1
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0054

  1167			000001			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1168						IFE	REPP-1,<ALEFT=^-ALEFT
  1169								ARIGHT=^-ARIGHT>
  1170
  1171	030757	200 15 0 00 041130 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1172	030760	120 01 0 00 041126 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1173	030761	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1174						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1175
  1176	030762	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1177	030763	312 01 0 00 041020 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1178	030764	254 00 0 00 030770 		JRST	..0017		;NO - GO TO ERROR HANDLING
  1179	030765	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1180	030766	316 02 0 00 041127 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1181	030767	254 00 0 00 030773 		JRST	..0020+1  	;YES - DONT DO ERROR HANDLING
  1182									; EXCEPT FOR ERLOOP
  1183
  1184	030770	200 14 0 13 000001 	..0017:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1185	030771	200 13 0 13 041126 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1186	030772				..0020:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1187	030772	036 14 0 00 041136 
  1188	030773	255 00 0 00 000000
  1189					^
  1190					^
  1191
  1192			030774			LOC=.				;ERROR LOOP RETURN ADDRESS
  1193	030774	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1194	030775	200 15 0 00 041141 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1195	030776	114 01 0 00 041126 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1196						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1197
  1198	030777	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1199	031000	312 01 0 00 041020 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1200	031001	254 00 0 00 031005 		JRST	..0021		;NO - GO TO ERROR HANDLING
  1201	031002	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1202	031003	316 02 0 00 041127 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1203	031004	254 00 0 00 031010 		JRST	..0022+1  	;YES - DONT DO ERROR HANDLING
  1204									; EXCEPT FOR ERLOOP
  1205
  1206	031005	200 14 0 13 000001 	..0021:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1207	031006	200 13 0 13 041126 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1208	031007				..0022:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1209	031007	036 14 0 00 041147 
  1210	031010	255 00 0 00 000000
  1211					^
  1212					^
  1213
  1214						IFE	REP-4,<REPP=1
  1215							       REP=0>
  1216					;   ************************************************
  1217
  1218
  1219					;   ************************************************
  1220
  1221			000002			REP=REP+1
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-2
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0055

  1222			031011			LOC=.				;ERROR LOOP RETURN ADDRESS
  1223			000000			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1224		200000	000000			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1225						IFE	REPP-1,<ALEFT=^-ALEFT
  1226								ARIGHT=^-ARIGHT>
  1227
  1228	031011	200 15 0 00 041154 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1229	031012	120 01 0 00 041152 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1230	031013	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1231						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1232
  1233	031014	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1234	031015	312 01 0 00 041020 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1235	031016	254 00 0 00 031022 		JRST	..0023		;NO - GO TO ERROR HANDLING
  1236	031017	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1237	031020	316 02 0 00 041153 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1238	031021	254 00 0 00 031025 		JRST	..0024+1  	;YES - DONT DO ERROR HANDLING
  1239									; EXCEPT FOR ERLOOP
  1240
  1241	031022	200 14 0 13 000001 	..0023:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1242	031023	200 13 0 13 041152 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1243	031024				..0024:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1244	031024	036 14 0 00 041136 
  1245	031025	255 00 0 00 000000
  1246					^
  1247					^
  1248
  1249			031026			LOC=.				;ERROR LOOP RETURN ADDRESS
  1250	031026	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1251	031027	200 15 0 00 041155 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1252	031030	114 01 0 00 041152 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1253						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1254
  1255	031031	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1256	031032	312 01 0 00 041020 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1257	031033	254 00 0 00 031037 		JRST	..0025		;NO - GO TO ERROR HANDLING
  1258	031034	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1259	031035	316 02 0 00 041153 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1260	031036	254 00 0 00 031042 		JRST	..0026+1  	;YES - DONT DO ERROR HANDLING
  1261									; EXCEPT FOR ERLOOP
  1262
  1263	031037	200 14 0 13 000001 	..0025:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1264	031040	200 13 0 13 041152 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1265	031041				..0026:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1266	031041	036 14 0 00 041147 
  1267	031042	255 00 0 00 000000
  1268					^
  1269					^
  1270
  1271						IFE	REP-4,<REPP=1
  1272							       REP=0>
  1273					;   ************************************************
  1274
  1275
  1276					;   ************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-3
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0056

  1277
  1278			000003			REP=REP+1
  1279			031043			LOC=.				;ERROR LOOP RETURN ADDRESS
  1280			000001			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1281			000000			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1282						IFE	REPP-1,<ALEFT=^-ALEFT
  1283								ARIGHT=^-ARIGHT>
  1284
  1285	031043	200 15 0 00 041160 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1286	031044	120 01 0 00 041156 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1287	031045	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1288						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1289
  1290	031046	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1291	031047	312 01 0 00 041127 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1292	031050	254 00 0 00 031054 		JRST	..0027		;NO - GO TO ERROR HANDLING
  1293	031051	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1294	031052	316 02 0 00 041020 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1295	031053	254 00 0 00 031057 		JRST	..0030+1  	;YES - DONT DO ERROR HANDLING
  1296									; EXCEPT FOR ERLOOP
  1297
  1298	031054	200 14 0 13 000001 	..0027:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1299	031055	200 13 0 13 041156 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1300	031056				..0030:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1301	031056	036 14 0 00 041136 
  1302	031057	255 00 0 00 000000
  1303					^
  1304					^
  1305
  1306			031060			LOC=.				;ERROR LOOP RETURN ADDRESS
  1307	031060	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1308	031061	200 15 0 00 041161 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1309	031062	114 01 0 00 041156 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1310						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1311
  1312	031063	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1313	031064	312 01 0 00 041127 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1314	031065	254 00 0 00 031071 		JRST	..0031		;NO - GO TO ERROR HANDLING
  1315	031066	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1316	031067	316 02 0 00 041020 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1317	031070	254 00 0 00 031074 		JRST	..0032+1  	;YES - DONT DO ERROR HANDLING
  1318									; EXCEPT FOR ERLOOP
  1319
  1320	031071	200 14 0 13 000001 	..0031:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1321	031072	200 13 0 13 041156 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1322	031073				..0032:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1323	031073	036 14 0 00 041147 
  1324	031074	255 00 0 00 000000
  1325					^
  1326					^
  1327
  1328						IFE	REP-4,<REPP=1
  1329							       REP=0>
  1330					;   ************************************************
  1331
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-4
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0057

  1332
  1333					;   ************************************************
  1334
  1335			000004			REP=REP+1
  1336			031075			LOC=.				;ERROR LOOP RETURN ADDRESS
  1337		200000	000000			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1338			000000			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1339						IFE	REPP-1,<ALEFT=^-ALEFT
  1340								ARIGHT=^-ARIGHT>
  1341
  1342	031075	200 15 0 00 041164 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1343	031076	120 01 0 00 041162 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1344	031077	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1345						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1346
  1347	031100	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1348	031101	312 01 0 00 041153 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1349	031102	254 00 0 00 031106 		JRST	..0033		;NO - GO TO ERROR HANDLING
  1350	031103	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1351	031104	316 02 0 00 041020 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1352	031105	254 00 0 00 031111 		JRST	..0034+1  	;YES - DONT DO ERROR HANDLING
  1353									; EXCEPT FOR ERLOOP
  1354
  1355	031106	200 14 0 13 000001 	..0033:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1356	031107	200 13 0 13 041162 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1357	031110				..0034:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1358	031110	036 14 0 00 041136 
  1359	031111	255 00 0 00 000000
  1360					^
  1361					^
  1362
  1363			031112			LOC=.				;ERROR LOOP RETURN ADDRESS
  1364	031112	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1365	031113	200 15 0 00 041165 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1366	031114	114 01 0 00 041162 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1367						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1368
  1369	031115	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1370	031116	312 01 0 00 041153 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1371	031117	254 00 0 00 031123 		JRST	..0035		;NO - GO TO ERROR HANDLING
  1372	031120	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1373	031121	316 02 0 00 041020 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1374	031122	254 00 0 00 031126 		JRST	..0036+1  	;YES - DONT DO ERROR HANDLING
  1375									; EXCEPT FOR ERLOOP
  1376
  1377	031123	200 14 0 13 000001 	..0035:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1378	031124	200 13 0 13 041162 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1379	031125				..0036:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1380	031125	036 14 0 00 041147 
  1381	031126	255 00 0 00 000000
  1382					^
  1383					^
  1384
  1385			000001			IFE	REP-4,<REPP=1
  1386			000000				       REP=0>
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-5
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0058

  1387					;   ************************************************
  1388
  1389
  1390					;   ************************************************
  1391
  1392			000001			REP=REP+1
  1393			031127			LOC=.				;ERROR LOOP RETURN ADDRESS
  1394			000000			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1395			000001			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1396		777777	777777			IFE	REPP-1,<ALEFT=^-ALEFT
  1397		777777	777776					ARIGHT=^-ARIGHT>
  1398
  1399	031127	200 15 0 00 041170 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1400	031130	120 01 0 00 041166 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1401	031131	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1402						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1403
  1404	031132	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1405	031133	312 01 0 00 041166 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1406	031134	254 00 0 00 031140 		JRST	..0037		;NO - GO TO ERROR HANDLING
  1407	031135	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1408	031136	316 02 0 00 041167 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1409	031137	254 00 0 00 031143 		JRST	..0040+1  	;YES - DONT DO ERROR HANDLING
  1410									; EXCEPT FOR ERLOOP
  1411
  1412	031140	200 14 0 13 000001 	..0037:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1413	031141	200 13 0 13 041166 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1414	031142				..0040:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1415	031142	036 14 0 00 041136 
  1416	031143	255 00 0 00 000000
  1417					^
  1418					^
  1419
  1420			031144			LOC=.				;ERROR LOOP RETURN ADDRESS
  1421	031144	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1422	031145	200 15 0 00 041171 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1423	031146	114 01 0 00 041166 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1424						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1425
  1426	031147	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1427	031150	312 01 0 00 041166 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1428	031151	254 00 0 00 031155 		JRST	..0041		;NO - GO TO ERROR HANDLING
  1429	031152	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1430	031153	316 02 0 00 041167 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1431	031154	254 00 0 00 031160 		JRST	..0042+1  	;YES - DONT DO ERROR HANDLING
  1432									; EXCEPT FOR ERLOOP
  1433
  1434	031155	200 14 0 13 000001 	..0041:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1435	031156	200 13 0 13 041166 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1436	031157				..0042:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1437	031157	036 14 0 00 041147 
  1438	031160	255 00 0 00 000000
  1439					^
  1440					^
  1441
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-6
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0059

  1442						IFE	REP-4,<REPP=1
  1443							       REP=0>
  1444					;   ************************************************
  1445
  1446
  1447					;   ************************************************
  1448
  1449			000002			REP=REP+1
  1450			031161			LOC=.				;ERROR LOOP RETURN ADDRESS
  1451			000000			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1452		200000	000000			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1453		777777	777777			IFE	REPP-1,<ALEFT=^-ALEFT
  1454		577777	777777					ARIGHT=^-ARIGHT>
  1455
  1456	031161	200 15 0 00 041174 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1457	031162	120 01 0 00 041172 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1458	031163	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1459						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1460
  1461	031164	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1462	031165	312 01 0 00 041166 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1463	031166	254 00 0 00 031172 		JRST	..0043		;NO - GO TO ERROR HANDLING
  1464	031167	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1465	031170	316 02 0 00 041173 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1466	031171	254 00 0 00 031175 		JRST	..0044+1  	;YES - DONT DO ERROR HANDLING
  1467									; EXCEPT FOR ERLOOP
  1468
  1469	031172	200 14 0 13 000001 	..0043:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1470	031173	200 13 0 13 041172 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1471	031174				..0044:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1472	031174	036 14 0 00 041136 
  1473	031175	255 00 0 00 000000
  1474					^
  1475					^
  1476
  1477			031176			LOC=.				;ERROR LOOP RETURN ADDRESS
  1478	031176	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1479	031177	200 15 0 00 041175 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1480	031200	114 01 0 00 041172 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1481						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1482
  1483	031201	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1484	031202	312 01 0 00 041166 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1485	031203	254 00 0 00 031207 		JRST	..0045		;NO - GO TO ERROR HANDLING
  1486	031204	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1487	031205	316 02 0 00 041173 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1488	031206	254 00 0 00 031212 		JRST	..0046+1  	;YES - DONT DO ERROR HANDLING
  1489									; EXCEPT FOR ERLOOP
  1490
  1491	031207	200 14 0 13 000001 	..0045:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1492	031210	200 13 0 13 041172 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1493	031211				..0046:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1494	031211	036 14 0 00 041147 
  1495	031212	255 00 0 00 000000
  1496					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-7
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0060

  1497					^
  1498
  1499						IFE	REP-4,<REPP=1
  1500							       REP=0>
  1501					;   ************************************************
  1502
  1503
  1504					;   ************************************************
  1505
  1506			000003			REP=REP+1
  1507			031213			LOC=.				;ERROR LOOP RETURN ADDRESS
  1508			000001			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1509			000000			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1510		777777	777776			IFE	REPP-1,<ALEFT=^-ALEFT
  1511		777777	777777					ARIGHT=^-ARIGHT>
  1512
  1513	031213	200 15 0 00 041200 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1514	031214	120 01 0 00 041176 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1515	031215	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1516						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1517
  1518	031216	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1519	031217	312 01 0 00 041167 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1520	031220	254 00 0 00 031224 		JRST	..0047		;NO - GO TO ERROR HANDLING
  1521	031221	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1522	031222	316 02 0 00 041166 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1523	031223	254 00 0 00 031227 		JRST	..0050+1  	;YES - DONT DO ERROR HANDLING
  1524									; EXCEPT FOR ERLOOP
  1525
  1526	031224	200 14 0 13 000001 	..0047:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1527	031225	200 13 0 13 041176 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1528	031226				..0050:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1529	031226	036 14 0 00 041136 
  1530	031227	255 00 0 00 000000
  1531					^
  1532					^
  1533
  1534			031230			LOC=.				;ERROR LOOP RETURN ADDRESS
  1535	031230	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1536	031231	200 15 0 00 041201 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1537	031232	114 01 0 00 041176 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1538						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1539
  1540	031233	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1541	031234	312 01 0 00 041167 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1542	031235	254 00 0 00 031241 		JRST	..0051		;NO - GO TO ERROR HANDLING
  1543	031236	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1544	031237	316 02 0 00 041166 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1545	031240	254 00 0 00 031244 		JRST	..0052+1  	;YES - DONT DO ERROR HANDLING
  1546									; EXCEPT FOR ERLOOP
  1547
  1548	031241	200 14 0 13 000001 	..0051:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1549	031242	200 13 0 13 041176 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1550	031243				..0052:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1551	031243	036 14 0 00 041147 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-8
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0061

  1552	031244	255 00 0 00 000000
  1553					^
  1554					^
  1555
  1556						IFE	REP-4,<REPP=1
  1557							       REP=0>
  1558					;   ************************************************
  1559
  1560
  1561					;   ************************************************
  1562
  1563			000004			REP=REP+1
  1564			031245			LOC=.				;ERROR LOOP RETURN ADDRESS
  1565		200000	000000			ALEFT=0+IFE REP-3,<1>+IFE REP-4,<1B1>
  1566			000000			ARIGHT=0+IFE REP-1,<1>+IFE REP-2,<1B1>
  1567		577777	777777			IFE	REPP-1,<ALEFT=^-ALEFT
  1568		777777	777777					ARIGHT=^-ARIGHT>
  1569
  1570	031245	200 15 0 00 041204 		MOVE	SCR3,[[EXP ALEFT,ARIGHT],,[EXP 0,0]] ;ADDR FOR APRINT
  1571	031246	120 01 0 00 041202 		DMOVE	AC1,[EXP ALEFT,ARIGHT]	;INIT AUGEND TO FLOATING 1/0
  1572	031247	114 01 0 00 041022 		DADD	AC1,[EXP 0,0]		;ADD FLOATING 1/0 + (0,0)
  1573						CHECKA	(LOC,B1,ALEFT,ARIGHT)^
  1574
  1575	031250	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1576	031251	312 01 0 00 041173 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1577	031252	254 00 0 00 031256 		JRST	..0053		;NO - GO TO ERROR HANDLING
  1578	031253	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1579	031254	316 02 0 00 041166 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1580	031255	254 00 0 00 031261 		JRST	..0054+1  	;YES - DONT DO ERROR HANDLING
  1581									; EXCEPT FOR ERLOOP
  1582
  1583	031256	200 14 0 13 000001 	..0053:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1584	031257	200 13 0 13 041202 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
  1585	031260				..0054:	ERROR	(LOC,14,SCR1,SCR2,,TEST B1 - RESULT IS INCORRECT,APRINT)^SALL
  1586	031260	036 14 0 00 041136 
  1587	031261	255 00 0 00 000000
  1588					^
  1589					^
  1590
  1591			031262			LOC=.				;ERROR LOOP RETURN ADDRESS
  1592	031262	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT AUGEND TO (0,0)
  1593	031263	200 15 0 00 041205 		MOVE	SCR3,[[EXP 0,0],,[EXP ALEFT,ARIGHT]] ;ADDR FOR APRINT
  1594	031264	114 01 0 00 041202 		DADD	AC1,[EXP ALEFT,ARIGHT]	;ADD (0,0) + FLOATING 1/0
  1595						CHECKA	(LOC,B2,ALEFT,ARIGHT)^
  1596
  1597	031265	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1598	031266	312 01 0 00 041173 		CAME	AC1,[ALEFT]	;IS LEFT HALF OF RESULT CORRECT?
  1599	031267	254 00 0 00 031273 		JRST	..0055		;NO - GO TO ERROR HANDLING
  1600	031270	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1601	031271	316 02 0 00 041166 		CAMN	AC1+1,[ARIGHT]	;IS RIGHT HALF CORRECT?
  1602	031272	254 00 0 00 031276 		JRST	..0056+1  	;YES - DONT DO ERROR HANDLING
  1603									; EXCEPT FOR ERLOOP
  1604
  1605	031273	200 14 0 13 000001 	..0055:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1606	031274	200 13 0 13 041202 		MOVE	SCR1,[EXP ALEFT,ARIGHT](SCR1)	;GET CORRECT RESULT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 3-9
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST B                                                                      SEQ 0062

  1607	031275				..0056:	ERROR	(LOC,14,SCR1,SCR2,,TEST B2 - RESULT IS INCORRECT,APRINT)^SALL
  1608	031275	036 14 0 00 041147 
  1609	031276	255 00 0 00 000000
  1610					^
  1611					^
  1612
  1613			000001			IFE	REP-4,<REPP=1
  1614			000000				       REP=0>
  1615					;   ************************************************
  1616
  1617	031277				AENDB:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 4
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST C                                                                      SEQ 0063

  1618					SUBTTL	DADD - TEST C
  1619
  1620					; **********************************************************************
  1621					;DADD - TEST C
  1622					;*
  1623					;*	FLOATING 1 + FLOATING 1 = FLOATING 1 SHIFTED LEFT ONE BIT AT
  1624					;*	A TIME ACROSS THE DOUBLEWORD EXCLUDING SIGN BITS AND THE MOST
  1625					;*	SIGNIFICANT BIT (WE'RE NOT TESTING OVERFLOW CONDITIONS). THIS
  1626					;*	TEST VERIFIES THE ABILITY OF THE DADD TO HANDLE A SINGLE CARRY
  1627					;*	PROPAGATED 1 BIT WHETHER IT CROSSES A WORD BOUNDARY OR NOT.
  1628					; **********************************************************************
  1629
  1630					; **********************************************************************
  1631					;DADD FLOATING 1 + FLOATING 1 = FLOATING 1 * 2
  1632					; **********************************************************************
  1633
  1634	031277	400 11 0 00 000000 		SETZ	CNT,			;COUNT FROM 0 TO 68
  1635	031300	120 01 0 00 041126 		DMOVE	AC1,[EXP 0,1]		;SET UP OPERANDS - AUGEND,ADDEND - EACH
  1636										;  WILL BE THE DOUBLEWORD - AC1,AC1+1
  1637	031301	137 11 0 00 031333 	ALOOP:	DPB	CNT,ASHIFT		;SET UP ASHC TO CALCULATE OPERANDS
  1638	031302	256 00 0 00 031333 		XCT	ASHIFT			;DO THE SHIFT - RESULT IS A DOUBLEWORD
  1639										;  FLOATING 1 IN AC1,AC1+1
  1640	031303	124 01 0 00 031327 		DMOVEM	AC1,ADATA		;SAVE THE ARGUMENTS FOR ADDL PRINT
  1641	031304	200 15 0 00 041206 		MOVE	SCR3,[ADATA,,ADATA]	;  ROUTINE & PUT INTO SCR3
  1642	031305	244 01 0 00 000001 		ASHC	AC1,1			;CALCULATED EXPECTED RESULT
  1643	031306	124 01 0 00 031331 		DMOVEM	AC1,TEMP		;SAVE RESULTS
  1644	031307	120 01 0 00 031327 		DMOVE	AC1,ADATA		;GET BACK ORIGINAL AUGEND
  1645
  1646	031310	114 01 0 00 000001 		DADD	AC1,AC1			;ADD FLOATING 1 + FLOATING 1
  1647
  1648	031311	400 13 0 00 000000 		SETZ	SCR1,			;POINTER TO WHICH WORD IN ERROR
  1649	031312	312 01 0 00 031331 		CAME	AC1,TEMP		;RESULT - AC1 SHOULD = TEMP
  1650	031313	254 00 0 00 031317 		JRST	AERR			;NOT CORRECT - DO ERROR HANDLING
  1651	031314	201 13 0 00 000001 		MOVEI	SCR1,1			;POINTER ADJUSTED TO NEXT WORD
  1652	031315	316 02 0 00 031332 		CAMN	AC1+1,TEMP+1		;RESULT - AC1+1 SHOULD = TEMP+1
  1653	031316	254 00 0 00 031322 		JRST 	AERRC+1			;NO ERRORS - DO ERLOOP ANYWAY
  1654
  1655	031317	200 14 0 13 031331 	AERR:	MOVE	SCR2,TEMP(SCR1)		;GET CORRECT DATA
  1656	031320	200 13 0 13 000001 		MOVE	SCR1,AC1(SCR1)		;GET ACTUAL DATA
  1657	031321				AERRC:	ERROR	(LOC,14,SCR2,SCR1,,TEST C - RESULT INCORRECT,APRINT)^SALL
  1658	031321	036 14 0 00 041214 
  1659	031322	255 00 0 00 000000
  1660					^
  1661
  1662	031323	350 00 0 00 000011 		AOS	CNT			;INCREMENT SHIFT COUNT
  1663	031324	302 11 0 00 000105 		CAIE	CNT,^D69		;ARE WE DONE WITH 69 ITERATIONS?
  1664	031325	254 00 0 00 031301 		JRST	ALOOP			;  NO - REPEAT THIS TEST
  1665	031326	254 00 0 00 031335 		JRST	ADADDI+1		;  YES - GO ON TO NEXT TEST
  1666
  1667	031327				ADATA:	BLOCK 2				;DADD OPERANDS
  1668	031331				TEMP:	BLOCK	2			;TEMPORARY STORAGE FOR RESULT
  1669	031333	43 10 0 00 031334 	ASHIFT:	POINT	8,ADADDI,0		;FOR CALCULATING OPERANDS
  1670	031334	244 01 0 00 000000 	ADADDI:	ASHC	AC1,0			;CALCULATE DOUBLEWORD FLOATING 1
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 5
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST D                                                                      SEQ 0064

  1671					SUBTTL	DADD - TEST D
  1672
  1673					; **********************************************************************
  1674					;*DADD - TEST D
  1675					;*
  1676					;*	0,-1 + 0,1 = 1,0		ADDITIONAL TEST TO SEE THAT A
  1677					;*	0,1 + 0,-1 = 1,0		CARRY IS PROPAGATED ACROSS WORD
  1678					;*					BOUNDARIES.
  1679					; **********************************************************************
  1680
  1681					; **********************************************************************
  1682					; ----------  DADD (0,-1) + (0,1) = (1,0)  ----------
  1683					; **********************************************************************
  1684
  1685	031335	200 15 0 00 041221 	ATSTD1:	MOVE	SCR3,[[EXP 0,-1],,[EXP 0,1]] ;ADDR FOR APRINT
  1686	031336	120 01 0 00 041217 		DMOVE	AC1,[EXP 0,-1]		;INIT AUGEND TO (0,-1)
  1687	031337	114 01 0 00 041126 		DADD	AC1,[EXP 0,1]		;ADD (0,-1) + (0,1)
  1688						CHECKA	(ATSTD1,D1,1,0)^
  1689
  1690	031340	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1691	031341	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  1692	031342	254 00 0 00 031346 		JRST	..0057		;NO - GO TO ERROR HANDLING
  1693	031343	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1694	031344	316 02 0 00 041020 		CAMN	AC1+1,[0]	;IS RIGHT HALF CORRECT?
  1695	031345	254 00 0 00 031351 		JRST	..0060+1  	;YES - DONT DO ERROR HANDLING
  1696									; EXCEPT FOR ERLOOP
  1697
  1698	031346	200 14 0 13 000001 	..0057:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1699	031347	200 13 0 13 041156 		MOVE	SCR1,[EXP 1,0](SCR1)	;GET CORRECT RESULT
  1700	031350				..0060:	ERROR	(ATSTD1,14,SCR1,SCR2,,TEST D1 - RESULT IS INCORRECT,APRINT)^SALL
  1701	031350	036 14 0 00 041227 
  1702	031351	255 00 0 00 000000
  1703					^
  1704					^
  1705
  1706					; **********************************************************************
  1707					; ----------  DADD (0,1) + (0,-1) = (1,0)  ----------
  1708					; **********************************************************************
  1709
  1710	031352	200 15 0 00 041232 	ATSTD2:	MOVE	SCR3,[[EXP 0,1],,[EXP 0,-1]] ;ADDR FOR APRINT
  1711	031353	120 01 0 00 041126 		DMOVE	AC1,[EXP 0,1]		;INIT AUGEND TO (0,1)
  1712	031354	114 01 0 00 041217 		DADD	AC1,[EXP 0,-1]		;ADD (0,1) + (0,-1)
  1713						CHECKA	(ATSTD2,D2,1,0)^
  1714
  1715	031355	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1716	031356	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  1717	031357	254 00 0 00 031363 		JRST	..0061		;NO - GO TO ERROR HANDLING
  1718	031360	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1719	031361	316 02 0 00 041020 		CAMN	AC1+1,[0]	;IS RIGHT HALF CORRECT?
  1720	031362	254 00 0 00 031366 		JRST	..0062+1  	;YES - DONT DO ERROR HANDLING
  1721									; EXCEPT FOR ERLOOP
  1722
  1723	031363	200 14 0 13 000001 	..0061:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1724	031364	200 13 0 13 041156 		MOVE	SCR1,[EXP 1,0](SCR1)	;GET CORRECT RESULT
  1725	031365				..0062:	ERROR	(ATSTD2,14,SCR1,SCR2,,TEST D2 - RESULT IS INCORRECT,APRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 5-1
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST D                                                                      SEQ 0065

  1726	031365	036 14 0 00 041240 
  1727	031366	255 00 0 00 000000
  1728					^
  1729					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST E                                                                      SEQ 0066

  1730					SUBTTL	DADD - TEST E
  1731
  1732					; **********************************************************************
  1733					;*DADD - TEST E
  1734					;*
  1735					;*	FLOATING 0 + 1 = 11111000..	
  1736					;*	1 + FLOATING 0 = 11111000..	
  1737					; **********************************************************************
  1738
  1739					; **********************************************************************
  1740					;*	THE NEXT 6 TESTS VERIFY THAT A CARRY IS PROPERLY PROPAGATED
  1741					;*	  DOWN A WORD.   A 1 IS ADDED TO A  FLOATING 0  CAUSING THE
  1742					;*	  CARRY TO RIPPLE DOWN THE WORD.  THE RESULT IS VERIFIED AS
  1743					;*	  1111..110000....  THE FLOATING 0 IS LOCATED IN BITS 34,36,
  1744					;*	  71 FOR NEGATIVE NUMBERS AND BITS 33,36,70 FOR POSITIVE
  1745					;*	  NUMBERS.  CARRY FLAGS ARE VERIFIED IN ADDITION.
  1746					; **********************************************************************
  1747
  1748			031576			CNUM=ACONE-4
  1749
  1750						REPEAT	6,<
  1751					;   ************************************************
  1752					
  1753						LOC=.
  1754						CNUM=CNUM+4
  1755						DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0
  1756						JFCL	17,.+1			;CLEAR PC FLAGS
  1757						HRLI	SCR3,CNUM		;SCR3 - ADDRESS OF OPERANDS FOR
  1758						HRRI	SCR3,[EXP 0,1]		; ADDL ERROR PRINT ROUTINE
  1759						DADD	AC1,[EXP 0,1]		;ADD - FLOATING 0 + 1
  1760						PCSAVE
  1761						CHECKB	(LOC,E,CNUM+2)
  1762						TFLAG	([0],E)
  1763					;   ************************************************
  1764					>
  1765
  1766					;   ************************************************
  1767
  1768			031367			LOC=.
  1769			031602			CNUM=CNUM+4
  1770	031367	120 01 0 00 031602 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0
  1771	031370	255 17 0 00 031371 		JFCL	17,.+1			;CLEAR PC FLAGS
  1772	031371	505 15 0 00 031602 		HRLI	SCR3,CNUM		;SCR3 - ADDRESS OF OPERANDS FOR
  1773	031372	541 15 0 00 041126 		HRRI	SCR3,[EXP 0,1]		; ADDL ERROR PRINT ROUTINE
  1774	031373	114 01 0 00 041126 		DADD	AC1,[EXP 0,1]		;ADD - FLOATING 0 + 1
  1775						PCSAVE^
  1776	031374	264 00 0 00 031375 		JSR	.+1		;STORE PC
  1777			031375		FLAGL=.				;LOCATION OF PC
  1778	031375	000000	000000			0			;PC
  1779					^
  1780						CHECKB	(LOC,E,CNUM+2)^
  1781
  1782	031376	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1783	031377	312 01 0 00 031604 		CAME	AC1,CNUM+2		;IS LEFT HALF OF RESULT CORRECT?
  1784	031400	254 00 0 00 031404 		JRST	..0063		;NO - GO TO ERROR HANDLING
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6-1
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST E                                                                      SEQ 0067

  1785	031401	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1786	031402	316 02 0 00 031605 		CAMN	AC1+1,CNUM+2+1	;IS RIGHT HALF CORRECT?
  1787	031403	254 00 0 00 031407 		JRST	..0064+1  	;YES - DONT DO ERROR HANDLING
  1788									;	EXCEPT FOR ERLOOP
  1789
  1790	031404	200 14 0 13 000001 	..0063:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1791	031405	200 13 0 13 031604 		MOVE	SCR1,CNUM+2(SCR1)	;GET CORRECT WORD OF RESULT
  1792	031406				..0064:	ERROR	(LOC,14,SCR1,SCR2,,TEST E - RESULT IS INCORRECT,APRINT)^SALL
  1793	031406	036 14 0 00 041250 
  1794	031407	255 00 0 00 000000
  1795					^
  1796					^
  1797						TFLAG	([0],E)^
  1798
  1799	031410	200 13 0 00 031375 		MOVE	SCR1,FLAGL	;GET FLAGS
  1800	031411	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  1801	031412	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  1802	031413	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  1803						ERROR	(LOC,13,SCR2,FLAGL,,TEST E - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  1804	031414	036 13 0 00 041262 
  1805	031415	255 00 0 00 000000
  1806					^
  1807					^
  1808					;   ************************************************
  1809
  1810
  1811					;   ************************************************
  1812
  1813			031416			LOC=.
  1814			031606			CNUM=CNUM+4
  1815	031416	120 01 0 00 031606 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0
  1816	031417	255 17 0 00 031420 		JFCL	17,.+1			;CLEAR PC FLAGS
  1817	031420	505 15 0 00 031606 		HRLI	SCR3,CNUM		;SCR3 - ADDRESS OF OPERANDS FOR
  1818	031421	541 15 0 00 041126 		HRRI	SCR3,[EXP 0,1]		; ADDL ERROR PRINT ROUTINE
  1819	031422	114 01 0 00 041126 		DADD	AC1,[EXP 0,1]		;ADD - FLOATING 0 + 1
  1820						PCSAVE^
  1821	031423	264 00 0 00 031424 		JSR	.+1		;STORE PC
  1822			031424		FLAGL=.				;LOCATION OF PC
  1823	031424	000000	000000			0			;PC
  1824					^
  1825						CHECKB	(LOC,E,CNUM+2)^
  1826
  1827	031425	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1828	031426	312 01 0 00 031610 		CAME	AC1,CNUM+2		;IS LEFT HALF OF RESULT CORRECT?
  1829	031427	254 00 0 00 031433 		JRST	..0065		;NO - GO TO ERROR HANDLING
  1830	031430	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1831	031431	316 02 0 00 031611 		CAMN	AC1+1,CNUM+2+1	;IS RIGHT HALF CORRECT?
  1832	031432	254 00 0 00 031436 		JRST	..0066+1  	;YES - DONT DO ERROR HANDLING
  1833									;	EXCEPT FOR ERLOOP
  1834
  1835	031433	200 14 0 13 000001 	..0065:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1836	031434	200 13 0 13 031610 		MOVE	SCR1,CNUM+2(SCR1)	;GET CORRECT WORD OF RESULT
  1837	031435				..0066:	ERROR	(LOC,14,SCR1,SCR2,,TEST E - RESULT IS INCORRECT,APRINT)^SALL
  1838	031435	036 14 0 00 041250 
  1839	031436	255 00 0 00 000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6-2
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST E                                                                      SEQ 0068

  1840					^
  1841					^
  1842						TFLAG	([0],E)^
  1843
  1844	031437	200 13 0 00 031424 		MOVE	SCR1,FLAGL	;GET FLAGS
  1845	031440	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  1846	031441	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  1847	031442	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  1848						ERROR	(LOC,13,SCR2,FLAGL,,TEST E - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  1849	031443	036 13 0 00 041265 
  1850	031444	255 00 0 00 000000
  1851					^
  1852					^
  1853					;   ************************************************
  1854
  1855
  1856					;   ************************************************
  1857
  1858			031445			LOC=.
  1859			031612			CNUM=CNUM+4
  1860	031445	120 01 0 00 031612 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0
  1861	031446	255 17 0 00 031447 		JFCL	17,.+1			;CLEAR PC FLAGS
  1862	031447	505 15 0 00 031612 		HRLI	SCR3,CNUM		;SCR3 - ADDRESS OF OPERANDS FOR
  1863	031450	541 15 0 00 041126 		HRRI	SCR3,[EXP 0,1]		; ADDL ERROR PRINT ROUTINE
  1864	031451	114 01 0 00 041126 		DADD	AC1,[EXP 0,1]		;ADD - FLOATING 0 + 1
  1865						PCSAVE^
  1866	031452	264 00 0 00 031453 		JSR	.+1		;STORE PC
  1867			031453		FLAGL=.				;LOCATION OF PC
  1868	031453	000000	000000			0			;PC
  1869					^
  1870						CHECKB	(LOC,E,CNUM+2)^
  1871
  1872	031454	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1873	031455	312 01 0 00 031614 		CAME	AC1,CNUM+2		;IS LEFT HALF OF RESULT CORRECT?
  1874	031456	254 00 0 00 031462 		JRST	..0067		;NO - GO TO ERROR HANDLING
  1875	031457	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1876	031460	316 02 0 00 031615 		CAMN	AC1+1,CNUM+2+1	;IS RIGHT HALF CORRECT?
  1877	031461	254 00 0 00 031465 		JRST	..0070+1  	;YES - DONT DO ERROR HANDLING
  1878									;	EXCEPT FOR ERLOOP
  1879
  1880	031462	200 14 0 13 000001 	..0067:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1881	031463	200 13 0 13 031614 		MOVE	SCR1,CNUM+2(SCR1)	;GET CORRECT WORD OF RESULT
  1882	031464				..0070:	ERROR	(LOC,14,SCR1,SCR2,,TEST E - RESULT IS INCORRECT,APRINT)^SALL
  1883	031464	036 14 0 00 041250 
  1884	031465	255 00 0 00 000000
  1885					^
  1886					^
  1887						TFLAG	([0],E)^
  1888
  1889	031466	200 13 0 00 031453 		MOVE	SCR1,FLAGL	;GET FLAGS
  1890	031467	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  1891	031470	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  1892	031471	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  1893						ERROR	(LOC,13,SCR2,FLAGL,,TEST E - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  1894	031472	036 13 0 00 041270 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6-3
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST E                                                                      SEQ 0069

  1895	031473	255 00 0 00 000000
  1896					^
  1897					^
  1898					;   ************************************************
  1899
  1900
  1901					;   ************************************************
  1902
  1903			031474			LOC=.
  1904			031616			CNUM=CNUM+4
  1905	031474	120 01 0 00 031616 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0
  1906	031475	255 17 0 00 031476 		JFCL	17,.+1			;CLEAR PC FLAGS
  1907	031476	505 15 0 00 031616 		HRLI	SCR3,CNUM		;SCR3 - ADDRESS OF OPERANDS FOR
  1908	031477	541 15 0 00 041126 		HRRI	SCR3,[EXP 0,1]		; ADDL ERROR PRINT ROUTINE
  1909	031500	114 01 0 00 041126 		DADD	AC1,[EXP 0,1]		;ADD - FLOATING 0 + 1
  1910						PCSAVE^
  1911	031501	264 00 0 00 031502 		JSR	.+1		;STORE PC
  1912			031502		FLAGL=.				;LOCATION OF PC
  1913	031502	000000	000000			0			;PC
  1914					^
  1915						CHECKB	(LOC,E,CNUM+2)^
  1916
  1917	031503	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1918	031504	312 01 0 00 031620 		CAME	AC1,CNUM+2		;IS LEFT HALF OF RESULT CORRECT?
  1919	031505	254 00 0 00 031511 		JRST	..0071		;NO - GO TO ERROR HANDLING
  1920	031506	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1921	031507	316 02 0 00 031621 		CAMN	AC1+1,CNUM+2+1	;IS RIGHT HALF CORRECT?
  1922	031510	254 00 0 00 031514 		JRST	..0072+1  	;YES - DONT DO ERROR HANDLING
  1923									;	EXCEPT FOR ERLOOP
  1924
  1925	031511	200 14 0 13 000001 	..0071:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1926	031512	200 13 0 13 031620 		MOVE	SCR1,CNUM+2(SCR1)	;GET CORRECT WORD OF RESULT
  1927	031513				..0072:	ERROR	(LOC,14,SCR1,SCR2,,TEST E - RESULT IS INCORRECT,APRINT)^SALL
  1928	031513	036 14 0 00 041250 
  1929	031514	255 00 0 00 000000
  1930					^
  1931					^
  1932						TFLAG	([0],E)^
  1933
  1934	031515	200 13 0 00 031502 		MOVE	SCR1,FLAGL	;GET FLAGS
  1935	031516	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  1936	031517	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  1937	031520	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  1938						ERROR	(LOC,13,SCR2,FLAGL,,TEST E - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  1939	031521	036 13 0 00 041273 
  1940	031522	255 00 0 00 000000
  1941					^
  1942					^
  1943					;   ************************************************
  1944
  1945
  1946					;   ************************************************
  1947
  1948			031523			LOC=.
  1949			031622			CNUM=CNUM+4
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6-4
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST E                                                                      SEQ 0070

  1950	031523	120 01 0 00 031622 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0
  1951	031524	255 17 0 00 031525 		JFCL	17,.+1			;CLEAR PC FLAGS
  1952	031525	505 15 0 00 031622 		HRLI	SCR3,CNUM		;SCR3 - ADDRESS OF OPERANDS FOR
  1953	031526	541 15 0 00 041126 		HRRI	SCR3,[EXP 0,1]		; ADDL ERROR PRINT ROUTINE
  1954	031527	114 01 0 00 041126 		DADD	AC1,[EXP 0,1]		;ADD - FLOATING 0 + 1
  1955						PCSAVE^
  1956	031530	264 00 0 00 031531 		JSR	.+1		;STORE PC
  1957			031531		FLAGL=.				;LOCATION OF PC
  1958	031531	000000	000000			0			;PC
  1959					^
  1960						CHECKB	(LOC,E,CNUM+2)^
  1961
  1962	031532	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  1963	031533	312 01 0 00 031624 		CAME	AC1,CNUM+2		;IS LEFT HALF OF RESULT CORRECT?
  1964	031534	254 00 0 00 031540 		JRST	..0073		;NO - GO TO ERROR HANDLING
  1965	031535	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  1966	031536	316 02 0 00 031625 		CAMN	AC1+1,CNUM+2+1	;IS RIGHT HALF CORRECT?
  1967	031537	254 00 0 00 031543 		JRST	..0074+1  	;YES - DONT DO ERROR HANDLING
  1968									;	EXCEPT FOR ERLOOP
  1969
  1970	031540	200 14 0 13 000001 	..0073:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  1971	031541	200 13 0 13 031624 		MOVE	SCR1,CNUM+2(SCR1)	;GET CORRECT WORD OF RESULT
  1972	031542				..0074:	ERROR	(LOC,14,SCR1,SCR2,,TEST E - RESULT IS INCORRECT,APRINT)^SALL
  1973	031542	036 14 0 00 041250 
  1974	031543	255 00 0 00 000000
  1975					^
  1976					^
  1977						TFLAG	([0],E)^
  1978
  1979	031544	200 13 0 00 031531 		MOVE	SCR1,FLAGL	;GET FLAGS
  1980	031545	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  1981	031546	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  1982	031547	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  1983						ERROR	(LOC,13,SCR2,FLAGL,,TEST E - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  1984	031550	036 13 0 00 041276 
  1985	031551	255 00 0 00 000000
  1986					^
  1987					^
  1988					;   ************************************************
  1989
  1990
  1991					;   ************************************************
  1992
  1993			031552			LOC=.
  1994			031626			CNUM=CNUM+4
  1995	031552	120 01 0 00 031626 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0
  1996	031553	255 17 0 00 031554 		JFCL	17,.+1			;CLEAR PC FLAGS
  1997	031554	505 15 0 00 031626 		HRLI	SCR3,CNUM		;SCR3 - ADDRESS OF OPERANDS FOR
  1998	031555	541 15 0 00 041126 		HRRI	SCR3,[EXP 0,1]		; ADDL ERROR PRINT ROUTINE
  1999	031556	114 01 0 00 041126 		DADD	AC1,[EXP 0,1]		;ADD - FLOATING 0 + 1
  2000						PCSAVE^
  2001	031557	264 00 0 00 031560 		JSR	.+1		;STORE PC
  2002			031560		FLAGL=.				;LOCATION OF PC
  2003	031560	000000	000000			0			;PC
  2004					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 6-5
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST E                                                                      SEQ 0071

  2005						CHECKB	(LOC,E,CNUM+2)^
  2006
  2007	031561	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2008	031562	312 01 0 00 031630 		CAME	AC1,CNUM+2		;IS LEFT HALF OF RESULT CORRECT?
  2009	031563	254 00 0 00 031567 		JRST	..0075		;NO - GO TO ERROR HANDLING
  2010	031564	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2011	031565	316 02 0 00 031631 		CAMN	AC1+1,CNUM+2+1	;IS RIGHT HALF CORRECT?
  2012	031566	254 00 0 00 031572 		JRST	..0076+1  	;YES - DONT DO ERROR HANDLING
  2013									;	EXCEPT FOR ERLOOP
  2014
  2015	031567	200 14 0 13 000001 	..0075:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2016	031570	200 13 0 13 031630 		MOVE	SCR1,CNUM+2(SCR1)	;GET CORRECT WORD OF RESULT
  2017	031571				..0076:	ERROR	(LOC,14,SCR1,SCR2,,TEST E - RESULT IS INCORRECT,APRINT)^SALL
  2018	031571	036 14 0 00 041250 
  2019	031572	255 00 0 00 000000
  2020					^
  2021					^
  2022						TFLAG	([0],E)^
  2023
  2024	031573	200 13 0 00 031560 		MOVE	SCR1,FLAGL	;GET FLAGS
  2025	031574	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2026	031575	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2027	031576	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2028						ERROR	(LOC,13,SCR2,FLAGL,,TEST E - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2029	031577	036 13 0 00 041301 
  2030	031600	255 00 0 00 000000
  2031					^
  2032					^
  2033					;   ************************************************
  2034
  2035	031601	254 00 0 00 031632 		JRST	AENDD			;SKIP OVER DATA
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 7
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST E                                                                      SEQ 0072

  2036
  2037	031602	777777	777777		ACONE:	EXP	-1,577777777777,-1,^B11B1
  2038	031603	577777	777777
  2039	031604	777777	777777
  2040	031605	600000	000000
  2041	031606	777777	777776			EXP	-2,-1,-1,1B0
  2042	031607	777777	777777
  2043	031610	777777	777777
  2044	031611	400000	000000
  2045	031612	577777	777777			EXP	577777777777,-1,^B11B1,1B0
  2046	031613	777777	777777
  2047	031614	600000	000000
  2048	031615	400000	000000
  2049	031616	377777	777777			EXP	377777777777,177777777777,377777777777,1B1
  2050	031617	177777	777777
  2051	031620	377777	777777
  2052	031621	200000	000000
  2053	031622	377777	777776			EXP	377777777776,377777777777,377777777777,0
  2054	031623	377777	777777
  2055	031624	377777	777777
  2056	031625	000000	000000
  2057	031626	177777	777777			EXP	177777777777,377777777777,1B1,0
  2058	031627	377777	777777
  2059	031630	200000	000000
  2060	031631	000000	000000
  2061	031632				AENDD:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0073

  2062					SUBTTL	DADD - TEST F
  2063
  2064					; **********************************************************************
  2065					;*DADD - TEST F
  2066					;*
  2067					;*	THE FOLLOWING TESTS VERIFY THAT THE DADD INSTRUCTION HANDLES
  2068					;*	  THE SIGN OF THE RESULT PROPERLY (COPYING THE SIGN INTO THE
  2069					;*	  HIGH ORDER BIT OF EACH WORD OF THE DOUBLEWORD RESULT.  THE
  2070					;*	  TESTS ADD VARIOUS COMBINATIONS OF INCONSISTENT SIGNS IN THE
  2071					;*	  ADDEND AND AUGEND AND VERIFY THAT THE SIGNS OF THE RESULT
  2072					;*	  ARE CORRECT.
  2073					;*
  2074					;*	THERE ARE 5 SETS OF TEST: (1) 0 + P/N = P/N
  2075					;*				  (2) N + N = N
  2076					;*				  (3) P + P = P
  2077					;*				  (4) N + P = N
  2078					;*				  (5) N + P = P
  2079					;*				WHERE N-NEGATIVE NUMBER
  2080					;*				      P-POSITIVE NUMBER
  2081					; **********************************************************************
  2082
  2083					; **********************************************************************
  2084					; ----------  DADD - TEST F-1:  0 + P/N = P/N  ----------
  2085					; **********************************************************************
  2086
  2087			033053			CNUM=ACONF1-4
  2088			000000			REP=0				;RESULT FOR FIRST 3 TESTS
  2089
  2090						REPEAT	6,<
  2091					;   ************************************************
  2092					
  2093						LOC=.				;ERROR RETURN ADDRESS
  2094						REP=REP+1			;REP - REPETITION COUNT
  2095						CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2096						MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR FOR ADDL ERROR PRINT
  2097						DMOVE	AC1,CNUM		;INIT AUGEND
  2098						JFCL	17,.+1			;CLEAR PC FLAGS
  2099						DADD	AC1,CNUM+2		;ADD N + P = 0,1
  2100						PCSAVE
  2101						RLEFT=0-IFG REP-3,<1>		;LEFT WORD OF RESULT
  2102						RRIGHT=1-IFG REP-3,<2>		;RIGHT WORD OF RESULT
  2103						CHECKA	(LOC,F1,RLEFT,RRIGHT)
  2104						TFLAG	([0],F1)
  2105					;   ************************************************
  2106					>
  2107
  2108					;   ************************************************
  2109
  2110			031632			LOC=.				;ERROR RETURN ADDRESS
  2111			000001			REP=REP+1			;REP - REPETITION COUNT
  2112			033057			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2113	031632	200 15 0 00 041304 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR FOR ADDL ERROR PRINT
  2114	031633	120 01 0 00 033057 		DMOVE	AC1,CNUM		;INIT AUGEND
  2115	031634	255 17 0 00 031635 		JFCL	17,.+1			;CLEAR PC FLAGS
  2116	031635	114 01 0 00 033061 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-1
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0074

  2117						PCSAVE^
  2118	031636	264 00 0 00 031637 		JSR	.+1		;STORE PC
  2119			031637		FLAGL=.				;LOCATION OF PC
  2120	031637	000000	000000			0			;PC
  2121					^
  2122			000000			RLEFT=0-IFG REP-3,<1>		;LEFT WORD OF RESULT
  2123			000001			RRIGHT=1-IFG REP-3,<2>		;RIGHT WORD OF RESULT
  2124						CHECKA	(LOC,F1,RLEFT,RRIGHT)^
  2125
  2126	031640	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2127	031641	312 01 0 00 041020 		CAME	AC1,[RLEFT]	;IS LEFT HALF OF RESULT CORRECT?
  2128	031642	254 00 0 00 031646 		JRST	..0077		;NO - GO TO ERROR HANDLING
  2129	031643	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2130	031644	316 02 0 00 041127 		CAMN	AC1+1,[RRIGHT]	;IS RIGHT HALF CORRECT?
  2131	031645	254 00 0 00 031651 		JRST	..0100+1  	;YES - DONT DO ERROR HANDLING
  2132									; EXCEPT FOR ERLOOP
  2133
  2134	031646	200 14 0 13 000001 	..0077:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2135	031647	200 13 0 13 041126 		MOVE	SCR1,[EXP RLEFT,RRIGHT](SCR1)	;GET CORRECT RESULT
  2136	031650				..0100:	ERROR	(LOC,14,SCR1,SCR2,,TEST F1 - RESULT IS INCORRECT,APRINT)^SALL
  2137	031650	036 14 0 00 041312 
  2138	031651	255 00 0 00 000000
  2139					^
  2140					^
  2141						TFLAG	([0],F1)^
  2142
  2143	031652	200 13 0 00 031637 		MOVE	SCR1,FLAGL	;GET FLAGS
  2144	031653	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2145	031654	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2146	031655	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2147						ERROR	(LOC,13,SCR2,FLAGL,,TEST F1 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2148
  2149	031656	036 13 0 00 041325 
  2150	031657	255 00 0 00 000000
  2151					^
  2152					^
  2153					;   ************************************************
  2154
  2155
  2156					;   ************************************************
  2157
  2158			031660			LOC=.				;ERROR RETURN ADDRESS
  2159			000002			REP=REP+1			;REP - REPETITION COUNT
  2160			033063			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2161	031660	200 15 0 00 041330 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR FOR ADDL ERROR PRINT
  2162	031661	120 01 0 00 033063 		DMOVE	AC1,CNUM		;INIT AUGEND
  2163	031662	255 17 0 00 031663 		JFCL	17,.+1			;CLEAR PC FLAGS
  2164	031663	114 01 0 00 033065 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  2165						PCSAVE^
  2166	031664	264 00 0 00 031665 		JSR	.+1		;STORE PC
  2167			031665		FLAGL=.				;LOCATION OF PC
  2168	031665	000000	000000			0			;PC
  2169					^
  2170			000000			RLEFT=0-IFG REP-3,<1>		;LEFT WORD OF RESULT
  2171			000001			RRIGHT=1-IFG REP-3,<2>		;RIGHT WORD OF RESULT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-2
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0075

  2172						CHECKA	(LOC,F1,RLEFT,RRIGHT)^
  2173
  2174	031666	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2175	031667	312 01 0 00 041020 		CAME	AC1,[RLEFT]	;IS LEFT HALF OF RESULT CORRECT?
  2176	031670	254 00 0 00 031674 		JRST	..0101		;NO - GO TO ERROR HANDLING
  2177	031671	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2178	031672	316 02 0 00 041127 		CAMN	AC1+1,[RRIGHT]	;IS RIGHT HALF CORRECT?
  2179	031673	254 00 0 00 031677 		JRST	..0102+1  	;YES - DONT DO ERROR HANDLING
  2180									; EXCEPT FOR ERLOOP
  2181
  2182	031674	200 14 0 13 000001 	..0101:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2183	031675	200 13 0 13 041126 		MOVE	SCR1,[EXP RLEFT,RRIGHT](SCR1)	;GET CORRECT RESULT
  2184	031676				..0102:	ERROR	(LOC,14,SCR1,SCR2,,TEST F1 - RESULT IS INCORRECT,APRINT)^SALL
  2185	031676	036 14 0 00 041312 
  2186	031677	255 00 0 00 000000
  2187					^
  2188					^
  2189						TFLAG	([0],F1)^
  2190
  2191	031700	200 13 0 00 031665 		MOVE	SCR1,FLAGL	;GET FLAGS
  2192	031701	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2193	031702	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2194	031703	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2195						ERROR	(LOC,13,SCR2,FLAGL,,TEST F1 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2196
  2197	031704	036 13 0 00 041331 
  2198	031705	255 00 0 00 000000
  2199					^
  2200					^
  2201					;   ************************************************
  2202
  2203
  2204					;   ************************************************
  2205
  2206			031706			LOC=.				;ERROR RETURN ADDRESS
  2207			000003			REP=REP+1			;REP - REPETITION COUNT
  2208			033067			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2209	031706	200 15 0 00 041334 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR FOR ADDL ERROR PRINT
  2210	031707	120 01 0 00 033067 		DMOVE	AC1,CNUM		;INIT AUGEND
  2211	031710	255 17 0 00 031711 		JFCL	17,.+1			;CLEAR PC FLAGS
  2212	031711	114 01 0 00 033071 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  2213						PCSAVE^
  2214	031712	264 00 0 00 031713 		JSR	.+1		;STORE PC
  2215			031713		FLAGL=.				;LOCATION OF PC
  2216	031713	000000	000000			0			;PC
  2217					^
  2218			000000			RLEFT=0-IFG REP-3,<1>		;LEFT WORD OF RESULT
  2219			000001			RRIGHT=1-IFG REP-3,<2>		;RIGHT WORD OF RESULT
  2220						CHECKA	(LOC,F1,RLEFT,RRIGHT)^
  2221
  2222	031714	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2223	031715	312 01 0 00 041020 		CAME	AC1,[RLEFT]	;IS LEFT HALF OF RESULT CORRECT?
  2224	031716	254 00 0 00 031722 		JRST	..0103		;NO - GO TO ERROR HANDLING
  2225	031717	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2226	031720	316 02 0 00 041127 		CAMN	AC1+1,[RRIGHT]	;IS RIGHT HALF CORRECT?
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-3
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0076

  2227	031721	254 00 0 00 031725 		JRST	..0104+1  	;YES - DONT DO ERROR HANDLING
  2228									; EXCEPT FOR ERLOOP
  2229
  2230	031722	200 14 0 13 000001 	..0103:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2231	031723	200 13 0 13 041126 		MOVE	SCR1,[EXP RLEFT,RRIGHT](SCR1)	;GET CORRECT RESULT
  2232	031724				..0104:	ERROR	(LOC,14,SCR1,SCR2,,TEST F1 - RESULT IS INCORRECT,APRINT)^SALL
  2233	031724	036 14 0 00 041312 
  2234	031725	255 00 0 00 000000
  2235					^
  2236					^
  2237						TFLAG	([0],F1)^
  2238
  2239	031726	200 13 0 00 031713 		MOVE	SCR1,FLAGL	;GET FLAGS
  2240	031727	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2241	031730	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2242	031731	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2243						ERROR	(LOC,13,SCR2,FLAGL,,TEST F1 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2244
  2245	031732	036 13 0 00 041335 
  2246	031733	255 00 0 00 000000
  2247					^
  2248					^
  2249					;   ************************************************
  2250
  2251
  2252					;   ************************************************
  2253
  2254			031734			LOC=.				;ERROR RETURN ADDRESS
  2255			000004			REP=REP+1			;REP - REPETITION COUNT
  2256			033073			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2257	031734	200 15 0 00 041340 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR FOR ADDL ERROR PRINT
  2258	031735	120 01 0 00 033073 		DMOVE	AC1,CNUM		;INIT AUGEND
  2259	031736	255 17 0 00 031737 		JFCL	17,.+1			;CLEAR PC FLAGS
  2260	031737	114 01 0 00 033075 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  2261						PCSAVE^
  2262	031740	264 00 0 00 031741 		JSR	.+1		;STORE PC
  2263			031741		FLAGL=.				;LOCATION OF PC
  2264	031741	000000	000000			0			;PC
  2265					^
  2266		777777	777777			RLEFT=0-IFG REP-3,<1>		;LEFT WORD OF RESULT
  2267		777777	777777			RRIGHT=1-IFG REP-3,<2>		;RIGHT WORD OF RESULT
  2268						CHECKA	(LOC,F1,RLEFT,RRIGHT)^
  2269
  2270	031742	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2271	031743	312 01 0 00 041166 		CAME	AC1,[RLEFT]	;IS LEFT HALF OF RESULT CORRECT?
  2272	031744	254 00 0 00 031750 		JRST	..0105		;NO - GO TO ERROR HANDLING
  2273	031745	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2274	031746	316 02 0 00 041166 		CAMN	AC1+1,[RRIGHT]	;IS RIGHT HALF CORRECT?
  2275	031747	254 00 0 00 031753 		JRST	..0106+1  	;YES - DONT DO ERROR HANDLING
  2276									; EXCEPT FOR ERLOOP
  2277
  2278	031750	200 14 0 13 000001 	..0105:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2279	031751	200 13 0 13 041341 		MOVE	SCR1,[EXP RLEFT,RRIGHT](SCR1)	;GET CORRECT RESULT
  2280	031752				..0106:	ERROR	(LOC,14,SCR1,SCR2,,TEST F1 - RESULT IS INCORRECT,APRINT)^SALL
  2281	031752	036 14 0 00 041312 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-4
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0077

  2282	031753	255 00 0 00 000000
  2283					^
  2284					^
  2285						TFLAG	([0],F1)^
  2286
  2287	031754	200 13 0 00 031741 		MOVE	SCR1,FLAGL	;GET FLAGS
  2288	031755	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2289	031756	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2290	031757	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2291						ERROR	(LOC,13,SCR2,FLAGL,,TEST F1 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2292
  2293	031760	036 13 0 00 041343 
  2294	031761	255 00 0 00 000000
  2295					^
  2296					^
  2297					;   ************************************************
  2298
  2299
  2300					;   ************************************************
  2301
  2302			031762			LOC=.				;ERROR RETURN ADDRESS
  2303			000005			REP=REP+1			;REP - REPETITION COUNT
  2304			033077			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2305	031762	200 15 0 00 041346 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR FOR ADDL ERROR PRINT
  2306	031763	120 01 0 00 033077 		DMOVE	AC1,CNUM		;INIT AUGEND
  2307	031764	255 17 0 00 031765 		JFCL	17,.+1			;CLEAR PC FLAGS
  2308	031765	114 01 0 00 033101 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  2309						PCSAVE^
  2310	031766	264 00 0 00 031767 		JSR	.+1		;STORE PC
  2311			031767		FLAGL=.				;LOCATION OF PC
  2312	031767	000000	000000			0			;PC
  2313					^
  2314		777777	777777			RLEFT=0-IFG REP-3,<1>		;LEFT WORD OF RESULT
  2315		777777	777777			RRIGHT=1-IFG REP-3,<2>		;RIGHT WORD OF RESULT
  2316						CHECKA	(LOC,F1,RLEFT,RRIGHT)^
  2317
  2318	031770	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2319	031771	312 01 0 00 041166 		CAME	AC1,[RLEFT]	;IS LEFT HALF OF RESULT CORRECT?
  2320	031772	254 00 0 00 031776 		JRST	..0107		;NO - GO TO ERROR HANDLING
  2321	031773	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2322	031774	316 02 0 00 041166 		CAMN	AC1+1,[RRIGHT]	;IS RIGHT HALF CORRECT?
  2323	031775	254 00 0 00 032001 		JRST	..0110+1  	;YES - DONT DO ERROR HANDLING
  2324									; EXCEPT FOR ERLOOP
  2325
  2326	031776	200 14 0 13 000001 	..0107:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2327	031777	200 13 0 13 041341 		MOVE	SCR1,[EXP RLEFT,RRIGHT](SCR1)	;GET CORRECT RESULT
  2328	032000				..0110:	ERROR	(LOC,14,SCR1,SCR2,,TEST F1 - RESULT IS INCORRECT,APRINT)^SALL
  2329	032000	036 14 0 00 041312 
  2330	032001	255 00 0 00 000000
  2331					^
  2332					^
  2333						TFLAG	([0],F1)^
  2334
  2335	032002	200 13 0 00 031767 		MOVE	SCR1,FLAGL	;GET FLAGS
  2336	032003	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-5
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0078

  2337	032004	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2338	032005	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2339						ERROR	(LOC,13,SCR2,FLAGL,,TEST F1 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2340
  2341	032006	036 13 0 00 041347 
  2342	032007	255 00 0 00 000000
  2343					^
  2344					^
  2345					;   ************************************************
  2346
  2347
  2348					;   ************************************************
  2349
  2350			032010			LOC=.				;ERROR RETURN ADDRESS
  2351			000006			REP=REP+1			;REP - REPETITION COUNT
  2352			033103			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2353	032010	200 15 0 00 041352 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR FOR ADDL ERROR PRINT
  2354	032011	120 01 0 00 033103 		DMOVE	AC1,CNUM		;INIT AUGEND
  2355	032012	255 17 0 00 032013 		JFCL	17,.+1			;CLEAR PC FLAGS
  2356	032013	114 01 0 00 033105 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  2357						PCSAVE^
  2358	032014	264 00 0 00 032015 		JSR	.+1		;STORE PC
  2359			032015		FLAGL=.				;LOCATION OF PC
  2360	032015	000000	000000			0			;PC
  2361					^
  2362		777777	777777			RLEFT=0-IFG REP-3,<1>		;LEFT WORD OF RESULT
  2363		777777	777777			RRIGHT=1-IFG REP-3,<2>		;RIGHT WORD OF RESULT
  2364						CHECKA	(LOC,F1,RLEFT,RRIGHT)^
  2365
  2366	032016	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2367	032017	312 01 0 00 041166 		CAME	AC1,[RLEFT]	;IS LEFT HALF OF RESULT CORRECT?
  2368	032020	254 00 0 00 032024 		JRST	..0111		;NO - GO TO ERROR HANDLING
  2369	032021	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2370	032022	316 02 0 00 041166 		CAMN	AC1+1,[RRIGHT]	;IS RIGHT HALF CORRECT?
  2371	032023	254 00 0 00 032027 		JRST	..0112+1  	;YES - DONT DO ERROR HANDLING
  2372									; EXCEPT FOR ERLOOP
  2373
  2374	032024	200 14 0 13 000001 	..0111:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2375	032025	200 13 0 13 041341 		MOVE	SCR1,[EXP RLEFT,RRIGHT](SCR1)	;GET CORRECT RESULT
  2376	032026				..0112:	ERROR	(LOC,14,SCR1,SCR2,,TEST F1 - RESULT IS INCORRECT,APRINT)^SALL
  2377	032026	036 14 0 00 041312 
  2378	032027	255 00 0 00 000000
  2379					^
  2380					^
  2381						TFLAG	([0],F1)^
  2382
  2383	032030	200 13 0 00 032015 		MOVE	SCR1,FLAGL	;GET FLAGS
  2384	032031	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2385	032032	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2386	032033	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2387						ERROR	(LOC,13,SCR2,FLAGL,,TEST F1 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2388
  2389	032034	036 13 0 00 041353 
  2390	032035	255 00 0 00 000000
  2391					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-6
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0079

  2392					^
  2393					;   ************************************************
  2394
  2395					; **********************************************************************
  2396					; ----------  DADD - TEST F-2:  N + N = N  ----------
  2397					; **********************************************************************
  2398
  2399			033103			CNUM=ACONF2-4
  2400
  2401						REPEAT	6,<
  2402					;   ************************************************
  2403					
  2404						LOC=.				;ERROR RETURN ADDRESS
  2405						CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2406						MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2407						DMOVE	AC1,CNUM		;INIT AUGEND
  2408						JFCL	17,.+1			;CLEAR PC FLAGS
  2409						DADD	AC1,CNUM+2		;ADD N + N = 77..76,77..76
  2410						PCSAVE
  2411						CHECKA	(LOC,F2,777777777776,777777777776)
  2412						TFLAG	([^B0110B3],F2)
  2413					;   ************************************************
  2414					>
  2415
  2416					;   ************************************************
  2417
  2418			032036			LOC=.				;ERROR RETURN ADDRESS
  2419			033107			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2420	032036	200 15 0 00 041356 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2421	032037	120 01 0 00 033107 		DMOVE	AC1,CNUM		;INIT AUGEND
  2422	032040	255 17 0 00 032041 		JFCL	17,.+1			;CLEAR PC FLAGS
  2423	032041	114 01 0 00 033111 		DADD	AC1,CNUM+2		;ADD N + N = 77..76,77..76
  2424						PCSAVE^
  2425	032042	264 00 0 00 032043 		JSR	.+1		;STORE PC
  2426			032043		FLAGL=.				;LOCATION OF PC
  2427	032043	000000	000000			0			;PC
  2428					^
  2429						CHECKA	(LOC,F2,777777777776,777777777776)^
  2430
  2431	032044	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2432	032045	312 01 0 00 041167 		CAME	AC1,[777777777776]	;IS LEFT HALF OF RESULT CORRECT?
  2433	032046	254 00 0 00 032052 		JRST	..0113		;NO - GO TO ERROR HANDLING
  2434	032047	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2435	032050	316 02 0 00 041167 		CAMN	AC1+1,[777777777776]	;IS RIGHT HALF CORRECT?
  2436	032051	254 00 0 00 032055 		JRST	..0114+1  	;YES - DONT DO ERROR HANDLING
  2437									; EXCEPT FOR ERLOOP
  2438
  2439	032052	200 14 0 13 000001 	..0113:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2440	032053	200 13 0 13 041357 		MOVE	SCR1,[EXP 777777777776,777777777776](SCR1)	;GET CORRECT RESULT
  2441	032054				..0114:	ERROR	(LOC,14,SCR1,SCR2,,TEST F2 - RESULT IS INCORRECT,APRINT)^SALL
  2442	032054	036 14 0 00 041366 
  2443	032055	255 00 0 00 000000
  2444					^
  2445					^
  2446						TFLAG	([^B0110B3],F2)^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-7
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0080

  2447
  2448	032056	200 13 0 00 032043 		MOVE	SCR1,FLAGL	;GET FLAGS
  2449	032057	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  2450	032060	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2451	032061	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2452						ERROR	(LOC,13,SCR2,FLAGL,,TEST F2 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2453
  2454	032062	036 13 0 00 041402 
  2455	032063	255 00 0 00 000000
  2456					^
  2457					^
  2458					;   ************************************************
  2459
  2460
  2461					;   ************************************************
  2462
  2463			032064			LOC=.				;ERROR RETURN ADDRESS
  2464			033113			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2465	032064	200 15 0 00 041405 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2466	032065	120 01 0 00 033113 		DMOVE	AC1,CNUM		;INIT AUGEND
  2467	032066	255 17 0 00 032067 		JFCL	17,.+1			;CLEAR PC FLAGS
  2468	032067	114 01 0 00 033115 		DADD	AC1,CNUM+2		;ADD N + N = 77..76,77..76
  2469						PCSAVE^
  2470	032070	264 00 0 00 032071 		JSR	.+1		;STORE PC
  2471			032071		FLAGL=.				;LOCATION OF PC
  2472	032071	000000	000000			0			;PC
  2473					^
  2474						CHECKA	(LOC,F2,777777777776,777777777776)^
  2475
  2476	032072	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2477	032073	312 01 0 00 041167 		CAME	AC1,[777777777776]	;IS LEFT HALF OF RESULT CORRECT?
  2478	032074	254 00 0 00 032100 		JRST	..0115		;NO - GO TO ERROR HANDLING
  2479	032075	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2480	032076	316 02 0 00 041167 		CAMN	AC1+1,[777777777776]	;IS RIGHT HALF CORRECT?
  2481	032077	254 00 0 00 032103 		JRST	..0116+1  	;YES - DONT DO ERROR HANDLING
  2482									; EXCEPT FOR ERLOOP
  2483
  2484	032100	200 14 0 13 000001 	..0115:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2485	032101	200 13 0 13 041357 		MOVE	SCR1,[EXP 777777777776,777777777776](SCR1)	;GET CORRECT RESULT
  2486	032102				..0116:	ERROR	(LOC,14,SCR1,SCR2,,TEST F2 - RESULT IS INCORRECT,APRINT)^SALL
  2487	032102	036 14 0 00 041366 
  2488	032103	255 00 0 00 000000
  2489					^
  2490					^
  2491						TFLAG	([^B0110B3],F2)^
  2492
  2493	032104	200 13 0 00 032071 		MOVE	SCR1,FLAGL	;GET FLAGS
  2494	032105	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  2495	032106	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2496	032107	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2497						ERROR	(LOC,13,SCR2,FLAGL,,TEST F2 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2498
  2499	032110	036 13 0 00 041406 
  2500	032111	255 00 0 00 000000
  2501					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-8
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0081

  2502					^
  2503					;   ************************************************
  2504
  2505
  2506					;   ************************************************
  2507
  2508			032112			LOC=.				;ERROR RETURN ADDRESS
  2509			033117			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2510	032112	200 15 0 00 041411 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2511	032113	120 01 0 00 033117 		DMOVE	AC1,CNUM		;INIT AUGEND
  2512	032114	255 17 0 00 032115 		JFCL	17,.+1			;CLEAR PC FLAGS
  2513	032115	114 01 0 00 033121 		DADD	AC1,CNUM+2		;ADD N + N = 77..76,77..76
  2514						PCSAVE^
  2515	032116	264 00 0 00 032117 		JSR	.+1		;STORE PC
  2516			032117		FLAGL=.				;LOCATION OF PC
  2517	032117	000000	000000			0			;PC
  2518					^
  2519						CHECKA	(LOC,F2,777777777776,777777777776)^
  2520
  2521	032120	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2522	032121	312 01 0 00 041167 		CAME	AC1,[777777777776]	;IS LEFT HALF OF RESULT CORRECT?
  2523	032122	254 00 0 00 032126 		JRST	..0117		;NO - GO TO ERROR HANDLING
  2524	032123	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2525	032124	316 02 0 00 041167 		CAMN	AC1+1,[777777777776]	;IS RIGHT HALF CORRECT?
  2526	032125	254 00 0 00 032131 		JRST	..0120+1  	;YES - DONT DO ERROR HANDLING
  2527									; EXCEPT FOR ERLOOP
  2528
  2529	032126	200 14 0 13 000001 	..0117:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2530	032127	200 13 0 13 041357 		MOVE	SCR1,[EXP 777777777776,777777777776](SCR1)	;GET CORRECT RESULT
  2531	032130				..0120:	ERROR	(LOC,14,SCR1,SCR2,,TEST F2 - RESULT IS INCORRECT,APRINT)^SALL
  2532	032130	036 14 0 00 041366 
  2533	032131	255 00 0 00 000000
  2534					^
  2535					^
  2536						TFLAG	([^B0110B3],F2)^
  2537
  2538	032132	200 13 0 00 032117 		MOVE	SCR1,FLAGL	;GET FLAGS
  2539	032133	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  2540	032134	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2541	032135	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2542						ERROR	(LOC,13,SCR2,FLAGL,,TEST F2 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2543
  2544	032136	036 13 0 00 041412 
  2545	032137	255 00 0 00 000000
  2546					^
  2547					^
  2548					;   ************************************************
  2549
  2550
  2551					;   ************************************************
  2552
  2553			032140			LOC=.				;ERROR RETURN ADDRESS
  2554			033123			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2555	032140	200 15 0 00 041415 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2556	032141	120 01 0 00 033123 		DMOVE	AC1,CNUM		;INIT AUGEND
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-9
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0082

  2557	032142	255 17 0 00 032143 		JFCL	17,.+1			;CLEAR PC FLAGS
  2558	032143	114 01 0 00 033125 		DADD	AC1,CNUM+2		;ADD N + N = 77..76,77..76
  2559						PCSAVE^
  2560	032144	264 00 0 00 032145 		JSR	.+1		;STORE PC
  2561			032145		FLAGL=.				;LOCATION OF PC
  2562	032145	000000	000000			0			;PC
  2563					^
  2564						CHECKA	(LOC,F2,777777777776,777777777776)^
  2565
  2566	032146	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2567	032147	312 01 0 00 041167 		CAME	AC1,[777777777776]	;IS LEFT HALF OF RESULT CORRECT?
  2568	032150	254 00 0 00 032154 		JRST	..0121		;NO - GO TO ERROR HANDLING
  2569	032151	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2570	032152	316 02 0 00 041167 		CAMN	AC1+1,[777777777776]	;IS RIGHT HALF CORRECT?
  2571	032153	254 00 0 00 032157 		JRST	..0122+1  	;YES - DONT DO ERROR HANDLING
  2572									; EXCEPT FOR ERLOOP
  2573
  2574	032154	200 14 0 13 000001 	..0121:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2575	032155	200 13 0 13 041357 		MOVE	SCR1,[EXP 777777777776,777777777776](SCR1)	;GET CORRECT RESULT
  2576	032156				..0122:	ERROR	(LOC,14,SCR1,SCR2,,TEST F2 - RESULT IS INCORRECT,APRINT)^SALL
  2577	032156	036 14 0 00 041366 
  2578	032157	255 00 0 00 000000
  2579					^
  2580					^
  2581						TFLAG	([^B0110B3],F2)^
  2582
  2583	032160	200 13 0 00 032145 		MOVE	SCR1,FLAGL	;GET FLAGS
  2584	032161	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  2585	032162	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2586	032163	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2587						ERROR	(LOC,13,SCR2,FLAGL,,TEST F2 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2588
  2589	032164	036 13 0 00 041416 
  2590	032165	255 00 0 00 000000
  2591					^
  2592					^
  2593					;   ************************************************
  2594
  2595
  2596					;   ************************************************
  2597
  2598			032166			LOC=.				;ERROR RETURN ADDRESS
  2599			033127			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2600	032166	200 15 0 00 041421 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2601	032167	120 01 0 00 033127 		DMOVE	AC1,CNUM		;INIT AUGEND
  2602	032170	255 17 0 00 032171 		JFCL	17,.+1			;CLEAR PC FLAGS
  2603	032171	114 01 0 00 033131 		DADD	AC1,CNUM+2		;ADD N + N = 77..76,77..76
  2604						PCSAVE^
  2605	032172	264 00 0 00 032173 		JSR	.+1		;STORE PC
  2606			032173		FLAGL=.				;LOCATION OF PC
  2607	032173	000000	000000			0			;PC
  2608					^
  2609						CHECKA	(LOC,F2,777777777776,777777777776)^
  2610
  2611	032174	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-10
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0083

  2612	032175	312 01 0 00 041167 		CAME	AC1,[777777777776]	;IS LEFT HALF OF RESULT CORRECT?
  2613	032176	254 00 0 00 032202 		JRST	..0123		;NO - GO TO ERROR HANDLING
  2614	032177	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2615	032200	316 02 0 00 041167 		CAMN	AC1+1,[777777777776]	;IS RIGHT HALF CORRECT?
  2616	032201	254 00 0 00 032205 		JRST	..0124+1  	;YES - DONT DO ERROR HANDLING
  2617									; EXCEPT FOR ERLOOP
  2618
  2619	032202	200 14 0 13 000001 	..0123:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2620	032203	200 13 0 13 041357 		MOVE	SCR1,[EXP 777777777776,777777777776](SCR1)	;GET CORRECT RESULT
  2621	032204				..0124:	ERROR	(LOC,14,SCR1,SCR2,,TEST F2 - RESULT IS INCORRECT,APRINT)^SALL
  2622	032204	036 14 0 00 041366 
  2623	032205	255 00 0 00 000000
  2624					^
  2625					^
  2626						TFLAG	([^B0110B3],F2)^
  2627
  2628	032206	200 13 0 00 032173 		MOVE	SCR1,FLAGL	;GET FLAGS
  2629	032207	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  2630	032210	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2631	032211	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2632						ERROR	(LOC,13,SCR2,FLAGL,,TEST F2 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2633
  2634	032212	036 13 0 00 041422 
  2635	032213	255 00 0 00 000000
  2636					^
  2637					^
  2638					;   ************************************************
  2639
  2640
  2641					;   ************************************************
  2642
  2643			032214			LOC=.				;ERROR RETURN ADDRESS
  2644			033133			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2645	032214	200 15 0 00 041425 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2646	032215	120 01 0 00 033133 		DMOVE	AC1,CNUM		;INIT AUGEND
  2647	032216	255 17 0 00 032217 		JFCL	17,.+1			;CLEAR PC FLAGS
  2648	032217	114 01 0 00 033135 		DADD	AC1,CNUM+2		;ADD N + N = 77..76,77..76
  2649						PCSAVE^
  2650	032220	264 00 0 00 032221 		JSR	.+1		;STORE PC
  2651			032221		FLAGL=.				;LOCATION OF PC
  2652	032221	000000	000000			0			;PC
  2653					^
  2654						CHECKA	(LOC,F2,777777777776,777777777776)^
  2655
  2656	032222	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2657	032223	312 01 0 00 041167 		CAME	AC1,[777777777776]	;IS LEFT HALF OF RESULT CORRECT?
  2658	032224	254 00 0 00 032230 		JRST	..0125		;NO - GO TO ERROR HANDLING
  2659	032225	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2660	032226	316 02 0 00 041167 		CAMN	AC1+1,[777777777776]	;IS RIGHT HALF CORRECT?
  2661	032227	254 00 0 00 032233 		JRST	..0126+1  	;YES - DONT DO ERROR HANDLING
  2662									; EXCEPT FOR ERLOOP
  2663
  2664	032230	200 14 0 13 000001 	..0125:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2665	032231	200 13 0 13 041357 		MOVE	SCR1,[EXP 777777777776,777777777776](SCR1)	;GET CORRECT RESULT
  2666	032232				..0126:	ERROR	(LOC,14,SCR1,SCR2,,TEST F2 - RESULT IS INCORRECT,APRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-11
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0084

  2667	032232	036 14 0 00 041366 
  2668	032233	255 00 0 00 000000
  2669					^
  2670					^
  2671						TFLAG	([^B0110B3],F2)^
  2672
  2673	032234	200 13 0 00 032221 		MOVE	SCR1,FLAGL	;GET FLAGS
  2674	032235	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  2675	032236	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2676	032237	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2677						ERROR	(LOC,13,SCR2,FLAGL,,TEST F2 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2678
  2679	032240	036 13 0 00 041426 
  2680	032241	255 00 0 00 000000
  2681					^
  2682					^
  2683					;   ************************************************
  2684
  2685					; **********************************************************************
  2686					; ----------  DADD - TEST F-3:  P + P = P  ----------
  2687					; **********************************************************************
  2688
  2689			033133			CNUM=ACONF3-4
  2690
  2691						REPEAT	6,<
  2692					;   ************************************************
  2693					
  2694						LOC=.				;ERROR RETURN ADDRESS
  2695						CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2696						MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2697						DMOVE	AC1,CNUM		;INIT AUGEND
  2698						JFCL	17,.+1			;CLEAR PC FLAGS
  2699						DADD	AC1,CNUM+2		;ADD N + P = 1,1
  2700						PCSAVE
  2701						CHECKA	(LOC,F3,1,1)
  2702						TFLAG	([0],F3)
  2703					;   ************************************************
  2704					>
  2705
  2706					;   ************************************************
  2707
  2708			032242			LOC=.				;ERROR RETURN ADDRESS
  2709			033137			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2710	032242	200 15 0 00 041431 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2711	032243	120 01 0 00 033137 		DMOVE	AC1,CNUM		;INIT AUGEND
  2712	032244	255 17 0 00 032245 		JFCL	17,.+1			;CLEAR PC FLAGS
  2713	032245	114 01 0 00 033141 		DADD	AC1,CNUM+2		;ADD N + P = 1,1
  2714						PCSAVE^
  2715	032246	264 00 0 00 032247 		JSR	.+1		;STORE PC
  2716			032247		FLAGL=.				;LOCATION OF PC
  2717	032247	000000	000000			0			;PC
  2718					^
  2719						CHECKA	(LOC,F3,1,1)^
  2720
  2721	032250	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-12
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0085

  2722	032251	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  2723	032252	254 00 0 00 032256 		JRST	..0127		;NO - GO TO ERROR HANDLING
  2724	032253	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2725	032254	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  2726	032255	254 00 0 00 032261 		JRST	..0130+1  	;YES - DONT DO ERROR HANDLING
  2727									; EXCEPT FOR ERLOOP
  2728
  2729	032256	200 14 0 13 000001 	..0127:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2730	032257	200 13 0 13 041432 		MOVE	SCR1,[EXP 1,1](SCR1)	;GET CORRECT RESULT
  2731	032260				..0130:	ERROR	(LOC,14,SCR1,SCR2,,TEST F3 - RESULT IS INCORRECT,APRINT)^SALL
  2732	032260	036 14 0 00 041441 
  2733	032261	255 00 0 00 000000
  2734					^
  2735					^
  2736						TFLAG	([0],F3)^
  2737
  2738	032262	200 13 0 00 032247 		MOVE	SCR1,FLAGL	;GET FLAGS
  2739	032263	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2740	032264	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2741	032265	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2742						ERROR	(LOC,13,SCR2,FLAGL,,TEST F3 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2743
  2744	032266	036 13 0 00 041454 
  2745	032267	255 00 0 00 000000
  2746					^
  2747					^
  2748					;   ************************************************
  2749
  2750
  2751					;   ************************************************
  2752
  2753			032270			LOC=.				;ERROR RETURN ADDRESS
  2754			033143			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2755	032270	200 15 0 00 041457 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2756	032271	120 01 0 00 033143 		DMOVE	AC1,CNUM		;INIT AUGEND
  2757	032272	255 17 0 00 032273 		JFCL	17,.+1			;CLEAR PC FLAGS
  2758	032273	114 01 0 00 033145 		DADD	AC1,CNUM+2		;ADD N + P = 1,1
  2759						PCSAVE^
  2760	032274	264 00 0 00 032275 		JSR	.+1		;STORE PC
  2761			032275		FLAGL=.				;LOCATION OF PC
  2762	032275	000000	000000			0			;PC
  2763					^
  2764						CHECKA	(LOC,F3,1,1)^
  2765
  2766	032276	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2767	032277	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  2768	032300	254 00 0 00 032304 		JRST	..0131		;NO - GO TO ERROR HANDLING
  2769	032301	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2770	032302	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  2771	032303	254 00 0 00 032307 		JRST	..0132+1  	;YES - DONT DO ERROR HANDLING
  2772									; EXCEPT FOR ERLOOP
  2773
  2774	032304	200 14 0 13 000001 	..0131:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2775	032305	200 13 0 13 041432 		MOVE	SCR1,[EXP 1,1](SCR1)	;GET CORRECT RESULT
  2776	032306				..0132:	ERROR	(LOC,14,SCR1,SCR2,,TEST F3 - RESULT IS INCORRECT,APRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-13
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0086

  2777	032306	036 14 0 00 041441 
  2778	032307	255 00 0 00 000000
  2779					^
  2780					^
  2781						TFLAG	([0],F3)^
  2782
  2783	032310	200 13 0 00 032275 		MOVE	SCR1,FLAGL	;GET FLAGS
  2784	032311	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2785	032312	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2786	032313	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2787						ERROR	(LOC,13,SCR2,FLAGL,,TEST F3 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2788
  2789	032314	036 13 0 00 041460 
  2790	032315	255 00 0 00 000000
  2791					^
  2792					^
  2793					;   ************************************************
  2794
  2795
  2796					;   ************************************************
  2797
  2798			032316			LOC=.				;ERROR RETURN ADDRESS
  2799			033147			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2800	032316	200 15 0 00 041463 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2801	032317	120 01 0 00 033147 		DMOVE	AC1,CNUM		;INIT AUGEND
  2802	032320	255 17 0 00 032321 		JFCL	17,.+1			;CLEAR PC FLAGS
  2803	032321	114 01 0 00 033151 		DADD	AC1,CNUM+2		;ADD N + P = 1,1
  2804						PCSAVE^
  2805	032322	264 00 0 00 032323 		JSR	.+1		;STORE PC
  2806			032323		FLAGL=.				;LOCATION OF PC
  2807	032323	000000	000000			0			;PC
  2808					^
  2809						CHECKA	(LOC,F3,1,1)^
  2810
  2811	032324	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2812	032325	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  2813	032326	254 00 0 00 032332 		JRST	..0133		;NO - GO TO ERROR HANDLING
  2814	032327	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2815	032330	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  2816	032331	254 00 0 00 032335 		JRST	..0134+1  	;YES - DONT DO ERROR HANDLING
  2817									; EXCEPT FOR ERLOOP
  2818
  2819	032332	200 14 0 13 000001 	..0133:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2820	032333	200 13 0 13 041432 		MOVE	SCR1,[EXP 1,1](SCR1)	;GET CORRECT RESULT
  2821	032334				..0134:	ERROR	(LOC,14,SCR1,SCR2,,TEST F3 - RESULT IS INCORRECT,APRINT)^SALL
  2822	032334	036 14 0 00 041441 
  2823	032335	255 00 0 00 000000
  2824					^
  2825					^
  2826						TFLAG	([0],F3)^
  2827
  2828	032336	200 13 0 00 032323 		MOVE	SCR1,FLAGL	;GET FLAGS
  2829	032337	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2830	032340	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2831	032341	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-14
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0087

  2832						ERROR	(LOC,13,SCR2,FLAGL,,TEST F3 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2833
  2834	032342	036 13 0 00 041464 
  2835	032343	255 00 0 00 000000
  2836					^
  2837					^
  2838					;   ************************************************
  2839
  2840
  2841					;   ************************************************
  2842
  2843			032344			LOC=.				;ERROR RETURN ADDRESS
  2844			033153			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2845	032344	200 15 0 00 041467 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2846	032345	120 01 0 00 033153 		DMOVE	AC1,CNUM		;INIT AUGEND
  2847	032346	255 17 0 00 032347 		JFCL	17,.+1			;CLEAR PC FLAGS
  2848	032347	114 01 0 00 033155 		DADD	AC1,CNUM+2		;ADD N + P = 1,1
  2849						PCSAVE^
  2850	032350	264 00 0 00 032351 		JSR	.+1		;STORE PC
  2851			032351		FLAGL=.				;LOCATION OF PC
  2852	032351	000000	000000			0			;PC
  2853					^
  2854						CHECKA	(LOC,F3,1,1)^
  2855
  2856	032352	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2857	032353	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  2858	032354	254 00 0 00 032360 		JRST	..0135		;NO - GO TO ERROR HANDLING
  2859	032355	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2860	032356	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  2861	032357	254 00 0 00 032363 		JRST	..0136+1  	;YES - DONT DO ERROR HANDLING
  2862									; EXCEPT FOR ERLOOP
  2863
  2864	032360	200 14 0 13 000001 	..0135:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2865	032361	200 13 0 13 041432 		MOVE	SCR1,[EXP 1,1](SCR1)	;GET CORRECT RESULT
  2866	032362				..0136:	ERROR	(LOC,14,SCR1,SCR2,,TEST F3 - RESULT IS INCORRECT,APRINT)^SALL
  2867	032362	036 14 0 00 041441 
  2868	032363	255 00 0 00 000000
  2869					^
  2870					^
  2871						TFLAG	([0],F3)^
  2872
  2873	032364	200 13 0 00 032351 		MOVE	SCR1,FLAGL	;GET FLAGS
  2874	032365	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2875	032366	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2876	032367	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2877						ERROR	(LOC,13,SCR2,FLAGL,,TEST F3 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2878
  2879	032370	036 13 0 00 041470 
  2880	032371	255 00 0 00 000000
  2881					^
  2882					^
  2883					;   ************************************************
  2884
  2885
  2886					;   ************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-15
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0088

  2887
  2888			032372			LOC=.				;ERROR RETURN ADDRESS
  2889			033157			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2890	032372	200 15 0 00 041473 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2891	032373	120 01 0 00 033157 		DMOVE	AC1,CNUM		;INIT AUGEND
  2892	032374	255 17 0 00 032375 		JFCL	17,.+1			;CLEAR PC FLAGS
  2893	032375	114 01 0 00 033161 		DADD	AC1,CNUM+2		;ADD N + P = 1,1
  2894						PCSAVE^
  2895	032376	264 00 0 00 032377 		JSR	.+1		;STORE PC
  2896			032377		FLAGL=.				;LOCATION OF PC
  2897	032377	000000	000000			0			;PC
  2898					^
  2899						CHECKA	(LOC,F3,1,1)^
  2900
  2901	032400	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2902	032401	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  2903	032402	254 00 0 00 032406 		JRST	..0137		;NO - GO TO ERROR HANDLING
  2904	032403	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2905	032404	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  2906	032405	254 00 0 00 032411 		JRST	..0140+1  	;YES - DONT DO ERROR HANDLING
  2907									; EXCEPT FOR ERLOOP
  2908
  2909	032406	200 14 0 13 000001 	..0137:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2910	032407	200 13 0 13 041432 		MOVE	SCR1,[EXP 1,1](SCR1)	;GET CORRECT RESULT
  2911	032410				..0140:	ERROR	(LOC,14,SCR1,SCR2,,TEST F3 - RESULT IS INCORRECT,APRINT)^SALL
  2912	032410	036 14 0 00 041441 
  2913	032411	255 00 0 00 000000
  2914					^
  2915					^
  2916						TFLAG	([0],F3)^
  2917
  2918	032412	200 13 0 00 032377 		MOVE	SCR1,FLAGL	;GET FLAGS
  2919	032413	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2920	032414	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2921	032415	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2922						ERROR	(LOC,13,SCR2,FLAGL,,TEST F3 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2923
  2924	032416	036 13 0 00 041474 
  2925	032417	255 00 0 00 000000
  2926					^
  2927					^
  2928					;   ************************************************
  2929
  2930
  2931					;   ************************************************
  2932
  2933			032420			LOC=.				;ERROR RETURN ADDRESS
  2934			033163			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2935	032420	200 15 0 00 041477 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2936	032421	120 01 0 00 033163 		DMOVE	AC1,CNUM		;INIT AUGEND
  2937	032422	255 17 0 00 032423 		JFCL	17,.+1			;CLEAR PC FLAGS
  2938	032423	114 01 0 00 033165 		DADD	AC1,CNUM+2		;ADD N + P = 1,1
  2939						PCSAVE^
  2940	032424	264 00 0 00 032425 		JSR	.+1		;STORE PC
  2941			032425		FLAGL=.				;LOCATION OF PC
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-16
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0089

  2942	032425	000000	000000			0			;PC
  2943					^
  2944						CHECKA	(LOC,F3,1,1)^
  2945
  2946	032426	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  2947	032427	312 01 0 00 041127 		CAME	AC1,[1]	;IS LEFT HALF OF RESULT CORRECT?
  2948	032430	254 00 0 00 032434 		JRST	..0141		;NO - GO TO ERROR HANDLING
  2949	032431	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  2950	032432	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  2951	032433	254 00 0 00 032437 		JRST	..0142+1  	;YES - DONT DO ERROR HANDLING
  2952									; EXCEPT FOR ERLOOP
  2953
  2954	032434	200 14 0 13 000001 	..0141:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  2955	032435	200 13 0 13 041432 		MOVE	SCR1,[EXP 1,1](SCR1)	;GET CORRECT RESULT
  2956	032436				..0142:	ERROR	(LOC,14,SCR1,SCR2,,TEST F3 - RESULT IS INCORRECT,APRINT)^SALL
  2957	032436	036 14 0 00 041441 
  2958	032437	255 00 0 00 000000
  2959					^
  2960					^
  2961						TFLAG	([0],F3)^
  2962
  2963	032440	200 13 0 00 032425 		MOVE	SCR1,FLAGL	;GET FLAGS
  2964	032441	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  2965	032442	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  2966	032443	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  2967						ERROR	(LOC,13,SCR2,FLAGL,,TEST F3 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  2968
  2969	032444	036 13 0 00 041500 
  2970	032445	255 00 0 00 000000
  2971					^
  2972					^
  2973					;   ************************************************
  2974
  2975					; **********************************************************************
  2976					; ----------  DADD - TEST F-4:  N + P = -1,-1  ----------
  2977					; **********************************************************************
  2978
  2979			033163			CNUM=ACONF4-4
  2980
  2981						REPEAT	6,<
  2982					;   ************************************************
  2983					
  2984						LOC=.				;ERROR RETURN ADDRESS
  2985						CNUM=CNUM+4			;ADDRESS OF TEST DATA
  2986						MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  2987						DMOVE	AC1,CNUM		;INIT AUGEND
  2988						JFCL	17,.+1			;CLEAR PC FLAGS
  2989						DADD	AC1,CNUM+2		;ADD N + P = -1,-1
  2990						PCSAVE
  2991						CHECKA	(LOC,F4,-1,-1)
  2992						TFLAG	([0],F4)
  2993					;   ************************************************
  2994					>
  2995
  2996					;   ************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-17
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0090

  2997
  2998			032446			LOC=.				;ERROR RETURN ADDRESS
  2999			033167			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3000	032446	200 15 0 00 041503 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3001	032447	120 01 0 00 033167 		DMOVE	AC1,CNUM		;INIT AUGEND
  3002	032450	255 17 0 00 032451 		JFCL	17,.+1			;CLEAR PC FLAGS
  3003	032451	114 01 0 00 033171 		DADD	AC1,CNUM+2		;ADD N + P = -1,-1
  3004						PCSAVE^
  3005	032452	264 00 0 00 032453 		JSR	.+1		;STORE PC
  3006			032453		FLAGL=.				;LOCATION OF PC
  3007	032453	000000	000000			0			;PC
  3008					^
  3009						CHECKA	(LOC,F4,-1,-1)^
  3010
  3011	032454	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3012	032455	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  3013	032456	254 00 0 00 032462 		JRST	..0143		;NO - GO TO ERROR HANDLING
  3014	032457	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3015	032460	316 02 0 00 041166 		CAMN	AC1+1,[-1]	;IS RIGHT HALF CORRECT?
  3016	032461	254 00 0 00 032465 		JRST	..0144+1  	;YES - DONT DO ERROR HANDLING
  3017									; EXCEPT FOR ERLOOP
  3018
  3019	032462	200 14 0 13 000001 	..0143:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3020	032463	200 13 0 13 041341 		MOVE	SCR1,[EXP -1,-1](SCR1)	;GET CORRECT RESULT
  3021	032464				..0144:	ERROR	(LOC,14,SCR1,SCR2,,TEST F4 - RESULT IS INCORRECT,APRINT)^SALL
  3022	032464	036 14 0 00 041511 
  3023	032465	255 00 0 00 000000
  3024					^
  3025					^
  3026						TFLAG	([0],F4)^
  3027
  3028	032466	200 13 0 00 032453 		MOVE	SCR1,FLAGL	;GET FLAGS
  3029	032467	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  3030	032470	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3031	032471	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3032						ERROR	(LOC,13,SCR2,FLAGL,,TEST F4 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3033
  3034	032472	036 13 0 00 041524 
  3035	032473	255 00 0 00 000000
  3036					^
  3037					^
  3038					;   ************************************************
  3039
  3040
  3041					;   ************************************************
  3042
  3043			032474			LOC=.				;ERROR RETURN ADDRESS
  3044			033173			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3045	032474	200 15 0 00 041527 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3046	032475	120 01 0 00 033173 		DMOVE	AC1,CNUM		;INIT AUGEND
  3047	032476	255 17 0 00 032477 		JFCL	17,.+1			;CLEAR PC FLAGS
  3048	032477	114 01 0 00 033175 		DADD	AC1,CNUM+2		;ADD N + P = -1,-1
  3049						PCSAVE^
  3050	032500	264 00 0 00 032501 		JSR	.+1		;STORE PC
  3051			032501		FLAGL=.				;LOCATION OF PC
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-18
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0091

  3052	032501	000000	000000			0			;PC
  3053					^
  3054						CHECKA	(LOC,F4,-1,-1)^
  3055
  3056	032502	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3057	032503	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  3058	032504	254 00 0 00 032510 		JRST	..0145		;NO - GO TO ERROR HANDLING
  3059	032505	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3060	032506	316 02 0 00 041166 		CAMN	AC1+1,[-1]	;IS RIGHT HALF CORRECT?
  3061	032507	254 00 0 00 032513 		JRST	..0146+1  	;YES - DONT DO ERROR HANDLING
  3062									; EXCEPT FOR ERLOOP
  3063
  3064	032510	200 14 0 13 000001 	..0145:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3065	032511	200 13 0 13 041341 		MOVE	SCR1,[EXP -1,-1](SCR1)	;GET CORRECT RESULT
  3066	032512				..0146:	ERROR	(LOC,14,SCR1,SCR2,,TEST F4 - RESULT IS INCORRECT,APRINT)^SALL
  3067	032512	036 14 0 00 041511 
  3068	032513	255 00 0 00 000000
  3069					^
  3070					^
  3071						TFLAG	([0],F4)^
  3072
  3073	032514	200 13 0 00 032501 		MOVE	SCR1,FLAGL	;GET FLAGS
  3074	032515	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  3075	032516	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3076	032517	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3077						ERROR	(LOC,13,SCR2,FLAGL,,TEST F4 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3078
  3079	032520	036 13 0 00 041530 
  3080	032521	255 00 0 00 000000
  3081					^
  3082					^
  3083					;   ************************************************
  3084
  3085
  3086					;   ************************************************
  3087
  3088			032522			LOC=.				;ERROR RETURN ADDRESS
  3089			033177			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3090	032522	200 15 0 00 041533 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3091	032523	120 01 0 00 033177 		DMOVE	AC1,CNUM		;INIT AUGEND
  3092	032524	255 17 0 00 032525 		JFCL	17,.+1			;CLEAR PC FLAGS
  3093	032525	114 01 0 00 033201 		DADD	AC1,CNUM+2		;ADD N + P = -1,-1
  3094						PCSAVE^
  3095	032526	264 00 0 00 032527 		JSR	.+1		;STORE PC
  3096			032527		FLAGL=.				;LOCATION OF PC
  3097	032527	000000	000000			0			;PC
  3098					^
  3099						CHECKA	(LOC,F4,-1,-1)^
  3100
  3101	032530	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3102	032531	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  3103	032532	254 00 0 00 032536 		JRST	..0147		;NO - GO TO ERROR HANDLING
  3104	032533	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3105	032534	316 02 0 00 041166 		CAMN	AC1+1,[-1]	;IS RIGHT HALF CORRECT?
  3106	032535	254 00 0 00 032541 		JRST	..0150+1  	;YES - DONT DO ERROR HANDLING
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-19
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0092

  3107									; EXCEPT FOR ERLOOP
  3108
  3109	032536	200 14 0 13 000001 	..0147:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3110	032537	200 13 0 13 041341 		MOVE	SCR1,[EXP -1,-1](SCR1)	;GET CORRECT RESULT
  3111	032540				..0150:	ERROR	(LOC,14,SCR1,SCR2,,TEST F4 - RESULT IS INCORRECT,APRINT)^SALL
  3112	032540	036 14 0 00 041511 
  3113	032541	255 00 0 00 000000
  3114					^
  3115					^
  3116						TFLAG	([0],F4)^
  3117
  3118	032542	200 13 0 00 032527 		MOVE	SCR1,FLAGL	;GET FLAGS
  3119	032543	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  3120	032544	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3121	032545	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3122						ERROR	(LOC,13,SCR2,FLAGL,,TEST F4 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3123
  3124	032546	036 13 0 00 041534 
  3125	032547	255 00 0 00 000000
  3126					^
  3127					^
  3128					;   ************************************************
  3129
  3130
  3131					;   ************************************************
  3132
  3133			032550			LOC=.				;ERROR RETURN ADDRESS
  3134			033203			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3135	032550	200 15 0 00 041537 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3136	032551	120 01 0 00 033203 		DMOVE	AC1,CNUM		;INIT AUGEND
  3137	032552	255 17 0 00 032553 		JFCL	17,.+1			;CLEAR PC FLAGS
  3138	032553	114 01 0 00 033205 		DADD	AC1,CNUM+2		;ADD N + P = -1,-1
  3139						PCSAVE^
  3140	032554	264 00 0 00 032555 		JSR	.+1		;STORE PC
  3141			032555		FLAGL=.				;LOCATION OF PC
  3142	032555	000000	000000			0			;PC
  3143					^
  3144						CHECKA	(LOC,F4,-1,-1)^
  3145
  3146	032556	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3147	032557	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  3148	032560	254 00 0 00 032564 		JRST	..0151		;NO - GO TO ERROR HANDLING
  3149	032561	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3150	032562	316 02 0 00 041166 		CAMN	AC1+1,[-1]	;IS RIGHT HALF CORRECT?
  3151	032563	254 00 0 00 032567 		JRST	..0152+1  	;YES - DONT DO ERROR HANDLING
  3152									; EXCEPT FOR ERLOOP
  3153
  3154	032564	200 14 0 13 000001 	..0151:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3155	032565	200 13 0 13 041341 		MOVE	SCR1,[EXP -1,-1](SCR1)	;GET CORRECT RESULT
  3156	032566				..0152:	ERROR	(LOC,14,SCR1,SCR2,,TEST F4 - RESULT IS INCORRECT,APRINT)^SALL
  3157	032566	036 14 0 00 041511 
  3158	032567	255 00 0 00 000000
  3159					^
  3160					^
  3161						TFLAG	([0],F4)^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-20
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0093

  3162
  3163	032570	200 13 0 00 032555 		MOVE	SCR1,FLAGL	;GET FLAGS
  3164	032571	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  3165	032572	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3166	032573	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3167						ERROR	(LOC,13,SCR2,FLAGL,,TEST F4 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3168
  3169	032574	036 13 0 00 041540 
  3170	032575	255 00 0 00 000000
  3171					^
  3172					^
  3173					;   ************************************************
  3174
  3175
  3176					;   ************************************************
  3177
  3178			032576			LOC=.				;ERROR RETURN ADDRESS
  3179			033207			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3180	032576	200 15 0 00 041543 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3181	032577	120 01 0 00 033207 		DMOVE	AC1,CNUM		;INIT AUGEND
  3182	032600	255 17 0 00 032601 		JFCL	17,.+1			;CLEAR PC FLAGS
  3183	032601	114 01 0 00 033211 		DADD	AC1,CNUM+2		;ADD N + P = -1,-1
  3184						PCSAVE^
  3185	032602	264 00 0 00 032603 		JSR	.+1		;STORE PC
  3186			032603		FLAGL=.				;LOCATION OF PC
  3187	032603	000000	000000			0			;PC
  3188					^
  3189						CHECKA	(LOC,F4,-1,-1)^
  3190
  3191	032604	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3192	032605	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  3193	032606	254 00 0 00 032612 		JRST	..0153		;NO - GO TO ERROR HANDLING
  3194	032607	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3195	032610	316 02 0 00 041166 		CAMN	AC1+1,[-1]	;IS RIGHT HALF CORRECT?
  3196	032611	254 00 0 00 032615 		JRST	..0154+1  	;YES - DONT DO ERROR HANDLING
  3197									; EXCEPT FOR ERLOOP
  3198
  3199	032612	200 14 0 13 000001 	..0153:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3200	032613	200 13 0 13 041341 		MOVE	SCR1,[EXP -1,-1](SCR1)	;GET CORRECT RESULT
  3201	032614				..0154:	ERROR	(LOC,14,SCR1,SCR2,,TEST F4 - RESULT IS INCORRECT,APRINT)^SALL
  3202	032614	036 14 0 00 041511 
  3203	032615	255 00 0 00 000000
  3204					^
  3205					^
  3206						TFLAG	([0],F4)^
  3207
  3208	032616	200 13 0 00 032603 		MOVE	SCR1,FLAGL	;GET FLAGS
  3209	032617	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  3210	032620	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3211	032621	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3212						ERROR	(LOC,13,SCR2,FLAGL,,TEST F4 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3213
  3214	032622	036 13 0 00 041544 
  3215	032623	255 00 0 00 000000
  3216					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-21
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0094

  3217					^
  3218					;   ************************************************
  3219
  3220
  3221					;   ************************************************
  3222
  3223			032624			LOC=.				;ERROR RETURN ADDRESS
  3224			033213			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3225	032624	200 15 0 00 041547 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3226	032625	120 01 0 00 033213 		DMOVE	AC1,CNUM		;INIT AUGEND
  3227	032626	255 17 0 00 032627 		JFCL	17,.+1			;CLEAR PC FLAGS
  3228	032627	114 01 0 00 033215 		DADD	AC1,CNUM+2		;ADD N + P = -1,-1
  3229						PCSAVE^
  3230	032630	264 00 0 00 032631 		JSR	.+1		;STORE PC
  3231			032631		FLAGL=.				;LOCATION OF PC
  3232	032631	000000	000000			0			;PC
  3233					^
  3234						CHECKA	(LOC,F4,-1,-1)^
  3235
  3236	032632	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3237	032633	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  3238	032634	254 00 0 00 032640 		JRST	..0155		;NO - GO TO ERROR HANDLING
  3239	032635	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3240	032636	316 02 0 00 041166 		CAMN	AC1+1,[-1]	;IS RIGHT HALF CORRECT?
  3241	032637	254 00 0 00 032643 		JRST	..0156+1  	;YES - DONT DO ERROR HANDLING
  3242									; EXCEPT FOR ERLOOP
  3243
  3244	032640	200 14 0 13 000001 	..0155:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3245	032641	200 13 0 13 041341 		MOVE	SCR1,[EXP -1,-1](SCR1)	;GET CORRECT RESULT
  3246	032642				..0156:	ERROR	(LOC,14,SCR1,SCR2,,TEST F4 - RESULT IS INCORRECT,APRINT)^SALL
  3247	032642	036 14 0 00 041511 
  3248	032643	255 00 0 00 000000
  3249					^
  3250					^
  3251						TFLAG	([0],F4)^
  3252
  3253	032644	200 13 0 00 032631 		MOVE	SCR1,FLAGL	;GET FLAGS
  3254	032645	200 14 0 00 041020 		MOVE	SCR2,[0] 	;SCR2 - CORRECT FLAGS
  3255	032646	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3256	032647	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3257						ERROR	(LOC,13,SCR2,FLAGL,,TEST F4 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3258
  3259	032650	036 13 0 00 041550 
  3260	032651	255 00 0 00 000000
  3261					^
  3262					^
  3263					;   ************************************************
  3264
  3265					; **********************************************************************
  3266					; ----------  DADD - TEST F-5:  N + P = 0,1  ----------
  3267					; **********************************************************************
  3268
  3269			033213			CNUM=ACONF5-4
  3270
  3271						REPEAT	6,<
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-22
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0095

  3272					;   ************************************************
  3273					
  3274						LOC=.				;ERROR RETURN ADDRESS
  3275						CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3276						MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3277						DMOVE	AC1,CNUM		;INIT AUGEND
  3278						JFCL	17,.+1			;CLEAR PC FLAGS
  3279						DADD	AC1,CNUM+2		;ADD N + P = 0,1
  3280						PCSAVE
  3281						CHECKA	(LOC,F5,0,1)
  3282						TFLAG	([^B0110B3],F5)
  3283					;   ************************************************
  3284					>
  3285
  3286					;   ************************************************
  3287
  3288			032652			LOC=.				;ERROR RETURN ADDRESS
  3289			033217			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3290	032652	200 15 0 00 041553 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3291	032653	120 01 0 00 033217 		DMOVE	AC1,CNUM		;INIT AUGEND
  3292	032654	255 17 0 00 032655 		JFCL	17,.+1			;CLEAR PC FLAGS
  3293	032655	114 01 0 00 033221 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  3294						PCSAVE^
  3295	032656	264 00 0 00 032657 		JSR	.+1		;STORE PC
  3296			032657		FLAGL=.				;LOCATION OF PC
  3297	032657	000000	000000			0			;PC
  3298					^
  3299						CHECKA	(LOC,F5,0,1)^
  3300
  3301	032660	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3302	032661	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  3303	032662	254 00 0 00 032666 		JRST	..0157		;NO - GO TO ERROR HANDLING
  3304	032663	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3305	032664	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  3306	032665	254 00 0 00 032671 		JRST	..0160+1  	;YES - DONT DO ERROR HANDLING
  3307									; EXCEPT FOR ERLOOP
  3308
  3309	032666	200 14 0 13 000001 	..0157:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3310	032667	200 13 0 13 041126 		MOVE	SCR1,[EXP 0,1](SCR1)	;GET CORRECT RESULT
  3311	032670				..0160:	ERROR	(LOC,14,SCR1,SCR2,,TEST F5 - RESULT IS INCORRECT,APRINT)^SALL
  3312	032670	036 14 0 00 041561 
  3313	032671	255 00 0 00 000000
  3314					^
  3315					^
  3316						TFLAG	([^B0110B3],F5)^
  3317
  3318	032672	200 13 0 00 032657 		MOVE	SCR1,FLAGL	;GET FLAGS
  3319	032673	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  3320	032674	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3321	032675	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3322						ERROR	(LOC,13,SCR2,FLAGL,,TEST F5 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3323
  3324	032676	036 13 0 00 041574 
  3325	032677	255 00 0 00 000000
  3326					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-23
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0096

  3327					^
  3328					;   ************************************************
  3329
  3330
  3331					;   ************************************************
  3332
  3333			032700			LOC=.				;ERROR RETURN ADDRESS
  3334			033223			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3335	032700	200 15 0 00 041577 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3336	032701	120 01 0 00 033223 		DMOVE	AC1,CNUM		;INIT AUGEND
  3337	032702	255 17 0 00 032703 		JFCL	17,.+1			;CLEAR PC FLAGS
  3338	032703	114 01 0 00 033225 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  3339						PCSAVE^
  3340	032704	264 00 0 00 032705 		JSR	.+1		;STORE PC
  3341			032705		FLAGL=.				;LOCATION OF PC
  3342	032705	000000	000000			0			;PC
  3343					^
  3344						CHECKA	(LOC,F5,0,1)^
  3345
  3346	032706	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3347	032707	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  3348	032710	254 00 0 00 032714 		JRST	..0161		;NO - GO TO ERROR HANDLING
  3349	032711	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3350	032712	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  3351	032713	254 00 0 00 032717 		JRST	..0162+1  	;YES - DONT DO ERROR HANDLING
  3352									; EXCEPT FOR ERLOOP
  3353
  3354	032714	200 14 0 13 000001 	..0161:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3355	032715	200 13 0 13 041126 		MOVE	SCR1,[EXP 0,1](SCR1)	;GET CORRECT RESULT
  3356	032716				..0162:	ERROR	(LOC,14,SCR1,SCR2,,TEST F5 - RESULT IS INCORRECT,APRINT)^SALL
  3357	032716	036 14 0 00 041561 
  3358	032717	255 00 0 00 000000
  3359					^
  3360					^
  3361						TFLAG	([^B0110B3],F5)^
  3362
  3363	032720	200 13 0 00 032705 		MOVE	SCR1,FLAGL	;GET FLAGS
  3364	032721	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  3365	032722	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3366	032723	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3367						ERROR	(LOC,13,SCR2,FLAGL,,TEST F5 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3368
  3369	032724	036 13 0 00 041600 
  3370	032725	255 00 0 00 000000
  3371					^
  3372					^
  3373					;   ************************************************
  3374
  3375
  3376					;   ************************************************
  3377
  3378			032726			LOC=.				;ERROR RETURN ADDRESS
  3379			033227			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3380	032726	200 15 0 00 041603 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3381	032727	120 01 0 00 033227 		DMOVE	AC1,CNUM		;INIT AUGEND
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-24
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0097

  3382	032730	255 17 0 00 032731 		JFCL	17,.+1			;CLEAR PC FLAGS
  3383	032731	114 01 0 00 033231 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  3384						PCSAVE^
  3385	032732	264 00 0 00 032733 		JSR	.+1		;STORE PC
  3386			032733		FLAGL=.				;LOCATION OF PC
  3387	032733	000000	000000			0			;PC
  3388					^
  3389						CHECKA	(LOC,F5,0,1)^
  3390
  3391	032734	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3392	032735	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  3393	032736	254 00 0 00 032742 		JRST	..0163		;NO - GO TO ERROR HANDLING
  3394	032737	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3395	032740	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  3396	032741	254 00 0 00 032745 		JRST	..0164+1  	;YES - DONT DO ERROR HANDLING
  3397									; EXCEPT FOR ERLOOP
  3398
  3399	032742	200 14 0 13 000001 	..0163:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3400	032743	200 13 0 13 041126 		MOVE	SCR1,[EXP 0,1](SCR1)	;GET CORRECT RESULT
  3401	032744				..0164:	ERROR	(LOC,14,SCR1,SCR2,,TEST F5 - RESULT IS INCORRECT,APRINT)^SALL
  3402	032744	036 14 0 00 041561 
  3403	032745	255 00 0 00 000000
  3404					^
  3405					^
  3406						TFLAG	([^B0110B3],F5)^
  3407
  3408	032746	200 13 0 00 032733 		MOVE	SCR1,FLAGL	;GET FLAGS
  3409	032747	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  3410	032750	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3411	032751	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3412						ERROR	(LOC,13,SCR2,FLAGL,,TEST F5 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3413
  3414	032752	036 13 0 00 041604 
  3415	032753	255 00 0 00 000000
  3416					^
  3417					^
  3418					;   ************************************************
  3419
  3420
  3421					;   ************************************************
  3422
  3423			032754			LOC=.				;ERROR RETURN ADDRESS
  3424			033233			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3425	032754	200 15 0 00 041607 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3426	032755	120 01 0 00 033233 		DMOVE	AC1,CNUM		;INIT AUGEND
  3427	032756	255 17 0 00 032757 		JFCL	17,.+1			;CLEAR PC FLAGS
  3428	032757	114 01 0 00 033235 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  3429						PCSAVE^
  3430	032760	264 00 0 00 032761 		JSR	.+1		;STORE PC
  3431			032761		FLAGL=.				;LOCATION OF PC
  3432	032761	000000	000000			0			;PC
  3433					^
  3434						CHECKA	(LOC,F5,0,1)^
  3435
  3436	032762	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-25
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0098

  3437	032763	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  3438	032764	254 00 0 00 032770 		JRST	..0165		;NO - GO TO ERROR HANDLING
  3439	032765	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3440	032766	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  3441	032767	254 00 0 00 032773 		JRST	..0166+1  	;YES - DONT DO ERROR HANDLING
  3442									; EXCEPT FOR ERLOOP
  3443
  3444	032770	200 14 0 13 000001 	..0165:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3445	032771	200 13 0 13 041126 		MOVE	SCR1,[EXP 0,1](SCR1)	;GET CORRECT RESULT
  3446	032772				..0166:	ERROR	(LOC,14,SCR1,SCR2,,TEST F5 - RESULT IS INCORRECT,APRINT)^SALL
  3447	032772	036 14 0 00 041561 
  3448	032773	255 00 0 00 000000
  3449					^
  3450					^
  3451						TFLAG	([^B0110B3],F5)^
  3452
  3453	032774	200 13 0 00 032761 		MOVE	SCR1,FLAGL	;GET FLAGS
  3454	032775	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  3455	032776	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3456	032777	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3457						ERROR	(LOC,13,SCR2,FLAGL,,TEST F5 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3458
  3459	033000	036 13 0 00 041610 
  3460	033001	255 00 0 00 000000
  3461					^
  3462					^
  3463					;   ************************************************
  3464
  3465
  3466					;   ************************************************
  3467
  3468			033002			LOC=.				;ERROR RETURN ADDRESS
  3469			033237			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3470	033002	200 15 0 00 041613 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3471	033003	120 01 0 00 033237 		DMOVE	AC1,CNUM		;INIT AUGEND
  3472	033004	255 17 0 00 033005 		JFCL	17,.+1			;CLEAR PC FLAGS
  3473	033005	114 01 0 00 033241 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  3474						PCSAVE^
  3475	033006	264 00 0 00 033007 		JSR	.+1		;STORE PC
  3476			033007		FLAGL=.				;LOCATION OF PC
  3477	033007	000000	000000			0			;PC
  3478					^
  3479						CHECKA	(LOC,F5,0,1)^
  3480
  3481	033010	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3482	033011	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  3483	033012	254 00 0 00 033016 		JRST	..0167		;NO - GO TO ERROR HANDLING
  3484	033013	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3485	033014	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  3486	033015	254 00 0 00 033021 		JRST	..0170+1  	;YES - DONT DO ERROR HANDLING
  3487									; EXCEPT FOR ERLOOP
  3488
  3489	033016	200 14 0 13 000001 	..0167:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3490	033017	200 13 0 13 041126 		MOVE	SCR1,[EXP 0,1](SCR1)	;GET CORRECT RESULT
  3491	033020				..0170:	ERROR	(LOC,14,SCR1,SCR2,,TEST F5 - RESULT IS INCORRECT,APRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-26
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0099

  3492	033020	036 14 0 00 041561 
  3493	033021	255 00 0 00 000000
  3494					^
  3495					^
  3496						TFLAG	([^B0110B3],F5)^
  3497
  3498	033022	200 13 0 00 033007 		MOVE	SCR1,FLAGL	;GET FLAGS
  3499	033023	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  3500	033024	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3501	033025	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3502						ERROR	(LOC,13,SCR2,FLAGL,,TEST F5 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3503
  3504	033026	036 13 0 00 041614 
  3505	033027	255 00 0 00 000000
  3506					^
  3507					^
  3508					;   ************************************************
  3509
  3510
  3511					;   ************************************************
  3512
  3513			033030			LOC=.				;ERROR RETURN ADDRESS
  3514			033243			CNUM=CNUM+4			;ADDRESS OF TEST DATA
  3515	033030	200 15 0 00 041617 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3516	033031	120 01 0 00 033243 		DMOVE	AC1,CNUM		;INIT AUGEND
  3517	033032	255 17 0 00 033033 		JFCL	17,.+1			;CLEAR PC FLAGS
  3518	033033	114 01 0 00 033245 		DADD	AC1,CNUM+2		;ADD N + P = 0,1
  3519						PCSAVE^
  3520	033034	264 00 0 00 033035 		JSR	.+1		;STORE PC
  3521			033035		FLAGL=.				;LOCATION OF PC
  3522	033035	000000	000000			0			;PC
  3523					^
  3524						CHECKA	(LOC,F5,0,1)^
  3525
  3526	033036	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3527	033037	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  3528	033040	254 00 0 00 033044 		JRST	..0171		;NO - GO TO ERROR HANDLING
  3529	033041	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3530	033042	316 02 0 00 041127 		CAMN	AC1+1,[1]	;IS RIGHT HALF CORRECT?
  3531	033043	254 00 0 00 033047 		JRST	..0172+1  	;YES - DONT DO ERROR HANDLING
  3532									; EXCEPT FOR ERLOOP
  3533
  3534	033044	200 14 0 13 000001 	..0171:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3535	033045	200 13 0 13 041126 		MOVE	SCR1,[EXP 0,1](SCR1)	;GET CORRECT RESULT
  3536	033046				..0172:	ERROR	(LOC,14,SCR1,SCR2,,TEST F5 - RESULT IS INCORRECT,APRINT)^SALL
  3537	033046	036 14 0 00 041561 
  3538	033047	255 00 0 00 000000
  3539					^
  3540					^
  3541						TFLAG	([^B0110B3],F5)^
  3542
  3543	033050	200 13 0 00 033035 		MOVE	SCR1,FLAGL	;GET FLAGS
  3544	033051	200 14 0 00 041371 		MOVE	SCR2,[^B0110B3] 	;SCR2 - CORRECT FLAGS
  3545	033052	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3546	033053	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 8-27
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0100

  3547						ERROR	(LOC,13,SCR2,FLAGL,,TEST F5 - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3548
  3549	033054	036 13 0 00 041620 
  3550	033055	255 00 0 00 000000
  3551					^
  3552					^
  3553					;   ************************************************
  3554
  3555	033056	254 00 0 00 033247 		JRST	AENDF			;SKIP OVER DATA
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 9
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0101

  3556
  3557	033057	000000	000000		ACONF1:	EXP	0,0,0,1B0+1
  3558	033060	000000	000000
  3559	033061	000000	000000
  3560	033062	400000	000001
  3561	033063	000000	000000			EXP	0,1B0,0,1
  3562	033064	400000	000000
  3563	033065	000000	000000
  3564	033066	000000	000001
  3565	033067	000000	000000			EXP	0,1B0,0,1B0+1
  3566	033070	400000	000000
  3567	033071	000000	000000
  3568	033072	400000	000001
  3569	033073	000000	000000			EXP	0,0,-1,377777777777
  3570	033074	000000	000000
  3571	033075	777777	777777
  3572	033076	377777	777777
  3573	033077	000000	000000			EXP	0,1B0,-1,377777777777
  3574	033100	400000	000000
  3575	033101	777777	777777
  3576	033102	377777	777777
  3577	033103	000000	000000			EXP	0,1B0,-1,-1
  3578	033104	400000	000000
  3579	033105	777777	777777
  3580	033106	777777	777777
  3581	033107	777777	777777		ACONF2:	EXP	-1,377777777777,-2,-1
  3582	033110	377777	777777
  3583	033111	777777	777776
  3584	033112	777777	777777
  3585	033113	777777	777777			EXP	-1,377777777777,-2,377777777777
  3586	033114	377777	777777
  3587	033115	777777	777776
  3588	033116	377777	777777
  3589	033117	777777	777777			EXP	-1,-1,-2,377777777777
  3590	033120	777777	777777
  3591	033121	777777	777776
  3592	033122	377777	777777
  3593	033123	777777	777776			EXP	-2,-1,-1,377777777777
  3594	033124	777777	777777
  3595	033125	777777	777777
  3596	033126	377777	777777
  3597	033127	777777	777776			EXP	-2,377777777777,-1,377777777777
  3598	033130	377777	777777
  3599	033131	777777	777777
  3600	033132	377777	777777
  3601	033133	777777	777776			EXP	-2,377777777777,-1,-1
  3602	033134	377777	777777
  3603	033135	777777	777777
  3604	033136	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 10
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0102

  3605
  3606	033137	000000	000000		ACONF3:	EXP	0,1B0+1,1,0
  3607	033140	400000	000001
  3608	033141	000000	000001
  3609	033142	000000	000000
  3610	033143	000000	000000			EXP	0,1B0+1,1,1B0
  3611	033144	400000	000001
  3612	033145	000000	000001
  3613	033146	400000	000000
  3614	033147	000000	000000			EXP	0,1,1,1B0
  3615	033150	000000	000001
  3616	033151	000000	000001
  3617	033152	400000	000000
  3618	033153	000000	000001			EXP	1,0,0,1B0+1
  3619	033154	000000	000000
  3620	033155	000000	000000
  3621	033156	400000	000001
  3622	033157	000000	000001			EXP	1,1B0,0,1B0+1
  3623	033160	400000	000000
  3624	033161	000000	000000
  3625	033162	400000	000001
  3626	033163	000000	000001			EXP	1,1B0,0,1
  3627	033164	400000	000000
  3628	033165	000000	000000
  3629	033166	000000	000001
  3630	033167	777777	777777		ACONF4:	EXP	-1,377777777776,0,1
  3631	033170	377777	777776
  3632	033171	000000	000000
  3633	033172	000000	000001
  3634	033173	777777	777777			EXP	-1,377777777776,0,1B0+1
  3635	033174	377777	777776
  3636	033175	000000	000000
  3637	033176	400000	000001
  3638	033177	777777	777777			EXP	-1,-2,0,1B0+1
  3639	033200	777777	777776
  3640	033201	000000	000000
  3641	033202	400000	000001
  3642	033203	000000	000000			EXP	0,1,-1,377777777776
  3643	033204	000000	000001
  3644	033205	777777	777777
  3645	033206	377777	777776
  3646	033207	000000	000000			EXP	0,1B0+1,-1,377777777776
  3647	033210	400000	000001
  3648	033211	777777	777777
  3649	033212	377777	777776
  3650	033213	000000	000000			EXP	0,1B0+1,-1,-2
  3651	033214	400000	000001
  3652	033215	777777	777777
  3653	033216	777777	777776
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 11
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST F                                                                      SEQ 0103

  3654
  3655	033217	777777	777777		ACONF5:	EXP	-1,377777777777,0,2
  3656	033220	377777	777777
  3657	033221	000000	000000
  3658	033222	000000	000002
  3659	033223	777777	777777			EXP	-1,377777777777,0,1B0+2
  3660	033224	377777	777777
  3661	033225	000000	000000
  3662	033226	400000	000002
  3663	033227	777777	777777			EXP	-1,-1,0,1B0+2
  3664	033230	777777	777777
  3665	033231	000000	000000
  3666	033232	400000	000002
  3667	033233	000000	000000			EXP	0,2,-1,377777777777
  3668	033234	000000	000002
  3669	033235	777777	777777
  3670	033236	377777	777777
  3671	033237	000000	000000			EXP	0,1B0+2,-1,377777777777
  3672	033240	400000	000002
  3673	033241	777777	777777
  3674	033242	377777	777777
  3675	033243	000000	000000			EXP	0,1B0+2,-1,-1
  3676	033244	400000	000002
  3677	033245	777777	777777
  3678	033246	777777	777777
  3679	033247				AENDF:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0104

  3680					SUBTTL	DADD - TEST G
  3681
  3682					; **********************************************************************
  3683					;*DADD - TEST G
  3684					;*
  3685					;*	2**N + (2**70 - 2**N) = 1000... (AROV & CARRY 1 SET)
  3686					;*	(2**70 - 2**N) + 2**N = 1000... (AROV & CARRY 1 SET)
  3687					;*	-2**N + (-2**70 + 2**N - 1) = 0111... (AROV & CARRY 0 SET)
  3688					;*	(-2**70 + 2**N - 1) + -2**N = 0111... (AROV & CARRY 0 SET)
  3689					;*
  3690					;*	THEST TESTS CHECK THE SETTING OF AROV & CARRY 1 AND AROV &
  3691					;*	CARRY 0 FLAGS.  CHECKED FOR BITS 0,34,36,70.
  3692					; **********************************************************************
  3693
  3694					; **********************************************************************
  3695					;*	THE FOLLOWING SECTION OF CODE IS REPEATED 8 TIMES.  THE FIRST
  3696					;*	  4 TESTS FLOAT A 1 ACROSS A  DOUBLEWORD  IN BITS 0,35,36,71.
  3697					;*	  THIS NUMBER IS THEN ADDED TO THE SMALLEST  POSITIVE INTEGER
  3698					;*	  WHICH WILL PRODUCE AN OVERFLOW - THE RESULT IS A DOUBLEWORD
  3699					;*	  OF 0S WITH 1 IN THE SIGN BIT - WITH OVERFLOW & CARRY 1 SET.
  3700					;*	  THE NEXT 4 TESTS FLOAT A 0 ACROSS A  DOUBLEWORD  IN BITS 1,
  3701					;*	  35,36,71 (A NEGATIVE NUMBER).   THIS NUMBER IS ADDED TO THE
  3702					;*	  SMALLEST  NEGATIVE INTEGER WHICH WILL PRODUCE AN OVERFLOW -
  3703					;*	  THE RESULT IS A DOUBLEWORD OF 1S WITH A 0 IN THE SIGN BIT -
  3704					;*	  WITH OVERFLOW AND CARRY 0 SET.
  3705					;*	  THE DOUBLEWORDS  USED IN THIS  TEST ARE LOCATED IN THE LIST
  3706					;*	  'CONST2'.
  3707					; **********************************************************************
  3708
  3709			033522			CNUM=ACONG-6			;POINTER TO THE DOUBLEWORDS IN
  3710										;  THE RESULT
  3711		500000	000000			FLAGS=^B1010B3			;AROV,CRY0,CRY1,FOV
  3712
  3713						REPEAT	^D8,<
  3714					;   ************************************************
  3715					
  3716						CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  3717						LOC=.				;ERROR LOOP RETURN ADDRESS
  3718						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  3719						MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3720						DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  3721						JFCL	17,.+1			;CLEAR PC FLAGS
  3722						DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  3723						PCSAVE
  3724						CHECKB	(LOC,G,CNUM+4)
  3725						TFLAG	([FLAGS],G)
  3726					;   ************************************************
  3727					>
  3728
  3729					;   ************************************************
  3730
  3731			033530			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  3732			033247			LOC=.				;ERROR LOOP RETURN ADDRESS
  3733						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  3734	033247	200 15 0 00 041623 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12-1
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0105

  3735	033250	120 01 0 00 033530 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  3736	033251	255 17 0 00 033252 		JFCL	17,.+1			;CLEAR PC FLAGS
  3737	033252	114 01 0 00 033532 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  3738						PCSAVE^
  3739	033253	264 00 0 00 033254 		JSR	.+1		;STORE PC
  3740			033254		FLAGL=.				;LOCATION OF PC
  3741	033254	000000	000000			0			;PC
  3742					^
  3743						CHECKB	(LOC,G,CNUM+4)^
  3744
  3745	033255	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3746	033256	312 01 0 00 033534 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  3747	033257	254 00 0 00 033263 		JRST	..0173		;NO - GO TO ERROR HANDLING
  3748	033260	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3749	033261	316 02 0 00 033535 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
  3750	033262	254 00 0 00 033266 		JRST	..0174+1  	;YES - DONT DO ERROR HANDLING
  3751									;	EXCEPT FOR ERLOOP
  3752
  3753	033263	200 14 0 13 000001 	..0173:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3754	033264	200 13 0 13 033534 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  3755	033265				..0174:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  3756	033265	036 14 0 00 041631 
  3757	033266	255 00 0 00 000000
  3758					^
  3759					^
  3760						TFLAG	([FLAGS],G)^
  3761
  3762	033267	200 13 0 00 033254 		MOVE	SCR1,FLAGL	;GET FLAGS
  3763	033270	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  3764	033271	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3765	033272	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3766						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3767	033273	036 13 0 00 041644 
  3768	033274	255 00 0 00 000000
  3769					^
  3770					^
  3771					;   ************************************************
  3772
  3773
  3774					;   ************************************************
  3775
  3776			033536			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  3777			033275			LOC=.				;ERROR LOOP RETURN ADDRESS
  3778						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  3779	033275	200 15 0 00 041647 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3780	033276	120 01 0 00 033536 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  3781	033277	255 17 0 00 033300 		JFCL	17,.+1			;CLEAR PC FLAGS
  3782	033300	114 01 0 00 033540 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  3783						PCSAVE^
  3784	033301	264 00 0 00 033302 		JSR	.+1		;STORE PC
  3785			033302		FLAGL=.				;LOCATION OF PC
  3786	033302	000000	000000			0			;PC
  3787					^
  3788						CHECKB	(LOC,G,CNUM+4)^
  3789
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12-2
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0106

  3790	033303	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3791	033304	312 01 0 00 033542 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  3792	033305	254 00 0 00 033311 		JRST	..0175		;NO - GO TO ERROR HANDLING
  3793	033306	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3794	033307	316 02 0 00 033543 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
  3795	033310	254 00 0 00 033314 		JRST	..0176+1  	;YES - DONT DO ERROR HANDLING
  3796									;	EXCEPT FOR ERLOOP
  3797
  3798	033311	200 14 0 13 000001 	..0175:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3799	033312	200 13 0 13 033542 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  3800	033313				..0176:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  3801	033313	036 14 0 00 041631 
  3802	033314	255 00 0 00 000000
  3803					^
  3804					^
  3805						TFLAG	([FLAGS],G)^
  3806
  3807	033315	200 13 0 00 033302 		MOVE	SCR1,FLAGL	;GET FLAGS
  3808	033316	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  3809	033317	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3810	033320	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3811						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3812	033321	036 13 0 00 041650 
  3813	033322	255 00 0 00 000000
  3814					^
  3815					^
  3816					;   ************************************************
  3817
  3818
  3819					;   ************************************************
  3820
  3821			033544			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  3822			033323			LOC=.				;ERROR LOOP RETURN ADDRESS
  3823						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  3824	033323	200 15 0 00 041653 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3825	033324	120 01 0 00 033544 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  3826	033325	255 17 0 00 033326 		JFCL	17,.+1			;CLEAR PC FLAGS
  3827	033326	114 01 0 00 033546 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  3828						PCSAVE^
  3829	033327	264 00 0 00 033330 		JSR	.+1		;STORE PC
  3830			033330		FLAGL=.				;LOCATION OF PC
  3831	033330	000000	000000			0			;PC
  3832					^
  3833						CHECKB	(LOC,G,CNUM+4)^
  3834
  3835	033331	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3836	033332	312 01 0 00 033550 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  3837	033333	254 00 0 00 033337 		JRST	..0177		;NO - GO TO ERROR HANDLING
  3838	033334	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3839	033335	316 02 0 00 033551 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
  3840	033336	254 00 0 00 033342 		JRST	..0200+1  	;YES - DONT DO ERROR HANDLING
  3841									;	EXCEPT FOR ERLOOP
  3842
  3843	033337	200 14 0 13 000001 	..0177:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3844	033340	200 13 0 13 033550 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12-3
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0107

  3845	033341				..0200:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  3846	033341	036 14 0 00 041631 
  3847	033342	255 00 0 00 000000
  3848					^
  3849					^
  3850						TFLAG	([FLAGS],G)^
  3851
  3852	033343	200 13 0 00 033330 		MOVE	SCR1,FLAGL	;GET FLAGS
  3853	033344	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  3854	033345	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3855	033346	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3856						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3857	033347	036 13 0 00 041654 
  3858	033350	255 00 0 00 000000
  3859					^
  3860					^
  3861					;   ************************************************
  3862
  3863
  3864					;   ************************************************
  3865
  3866			033552			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  3867			033351			LOC=.				;ERROR LOOP RETURN ADDRESS
  3868						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  3869	033351	200 15 0 00 041657 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3870	033352	120 01 0 00 033552 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  3871	033353	255 17 0 00 033354 		JFCL	17,.+1			;CLEAR PC FLAGS
  3872	033354	114 01 0 00 033554 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  3873						PCSAVE^
  3874	033355	264 00 0 00 033356 		JSR	.+1		;STORE PC
  3875			033356		FLAGL=.				;LOCATION OF PC
  3876	033356	000000	000000			0			;PC
  3877					^
  3878						CHECKB	(LOC,G,CNUM+4)^
  3879
  3880	033357	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3881	033360	312 01 0 00 033556 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  3882	033361	254 00 0 00 033365 		JRST	..0201		;NO - GO TO ERROR HANDLING
  3883	033362	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3884	033363	316 02 0 00 033557 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
  3885	033364	254 00 0 00 033370 		JRST	..0202+1  	;YES - DONT DO ERROR HANDLING
  3886									;	EXCEPT FOR ERLOOP
  3887
  3888	033365	200 14 0 13 000001 	..0201:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3889	033366	200 13 0 13 033556 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  3890	033367				..0202:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  3891	033367	036 14 0 00 041631 
  3892	033370	255 00 0 00 000000
  3893					^
  3894					^
  3895						TFLAG	([FLAGS],G)^
  3896
  3897	033371	200 13 0 00 033356 		MOVE	SCR1,FLAGL	;GET FLAGS
  3898	033372	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  3899	033373	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12-4
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0108

  3900	033374	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3901						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3902	033375	036 13 0 00 041660 
  3903	033376	255 00 0 00 000000
  3904					^
  3905					^
  3906					;   ************************************************
  3907
  3908
  3909					;   ************************************************
  3910
  3911			033560			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  3912			033377			LOC=.				;ERROR LOOP RETURN ADDRESS
  3913		600000	000000			IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  3914	033377	200 15 0 00 041663 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3915	033400	120 01 0 00 033560 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  3916	033401	255 17 0 00 033402 		JFCL	17,.+1			;CLEAR PC FLAGS
  3917	033402	114 01 0 00 033562 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  3918						PCSAVE^
  3919	033403	264 00 0 00 033404 		JSR	.+1		;STORE PC
  3920			033404		FLAGL=.				;LOCATION OF PC
  3921	033404	000000	000000			0			;PC
  3922					^
  3923						CHECKB	(LOC,G,CNUM+4)^
  3924
  3925	033405	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3926	033406	312 01 0 00 033564 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  3927	033407	254 00 0 00 033413 		JRST	..0203		;NO - GO TO ERROR HANDLING
  3928	033410	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3929	033411	316 02 0 00 033565 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
  3930	033412	254 00 0 00 033416 		JRST	..0204+1  	;YES - DONT DO ERROR HANDLING
  3931									;	EXCEPT FOR ERLOOP
  3932
  3933	033413	200 14 0 13 000001 	..0203:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3934	033414	200 13 0 13 033564 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  3935	033415				..0204:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  3936	033415	036 14 0 00 041631 
  3937	033416	255 00 0 00 000000
  3938					^
  3939					^
  3940						TFLAG	([FLAGS],G)^
  3941
  3942	033417	200 13 0 00 033404 		MOVE	SCR1,FLAGL	;GET FLAGS
  3943	033420	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  3944	033421	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3945	033422	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3946						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3947	033423	036 13 0 00 041665 
  3948	033424	255 00 0 00 000000
  3949					^
  3950					^
  3951					;   ************************************************
  3952
  3953
  3954					;   ************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12-5
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0109

  3955
  3956			033566			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  3957			033425			LOC=.				;ERROR LOOP RETURN ADDRESS
  3958						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  3959	033425	200 15 0 00 041670 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  3960	033426	120 01 0 00 033566 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  3961	033427	255 17 0 00 033430 		JFCL	17,.+1			;CLEAR PC FLAGS
  3962	033430	114 01 0 00 033570 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  3963						PCSAVE^
  3964	033431	264 00 0 00 033432 		JSR	.+1		;STORE PC
  3965			033432		FLAGL=.				;LOCATION OF PC
  3966	033432	000000	000000			0			;PC
  3967					^
  3968						CHECKB	(LOC,G,CNUM+4)^
  3969
  3970	033433	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  3971	033434	312 01 0 00 033572 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  3972	033435	254 00 0 00 033441 		JRST	..0205		;NO - GO TO ERROR HANDLING
  3973	033436	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  3974	033437	316 02 0 00 033573 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
  3975	033440	254 00 0 00 033444 		JRST	..0206+1  	;YES - DONT DO ERROR HANDLING
  3976									;	EXCEPT FOR ERLOOP
  3977
  3978	033441	200 14 0 13 000001 	..0205:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  3979	033442	200 13 0 13 033572 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  3980	033443				..0206:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  3981	033443	036 14 0 00 041631 
  3982	033444	255 00 0 00 000000
  3983					^
  3984					^
  3985						TFLAG	([FLAGS],G)^
  3986
  3987	033445	200 13 0 00 033432 		MOVE	SCR1,FLAGL	;GET FLAGS
  3988	033446	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  3989	033447	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  3990	033450	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  3991						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  3992	033451	036 13 0 00 041671 
  3993	033452	255 00 0 00 000000
  3994					^
  3995					^
  3996					;   ************************************************
  3997
  3998
  3999					;   ************************************************
  4000
  4001			033574			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  4002			033453			LOC=.				;ERROR LOOP RETURN ADDRESS
  4003						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  4004	033453	200 15 0 00 041674 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  4005	033454	120 01 0 00 033574 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  4006	033455	255 17 0 00 033456 		JFCL	17,.+1			;CLEAR PC FLAGS
  4007	033456	114 01 0 00 033576 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  4008						PCSAVE^
  4009	033457	264 00 0 00 033460 		JSR	.+1		;STORE PC
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12-6
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0110

  4010			033460		FLAGL=.				;LOCATION OF PC
  4011	033460	000000	000000			0			;PC
  4012					^
  4013						CHECKB	(LOC,G,CNUM+4)^
  4014
  4015	033461	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4016	033462	312 01 0 00 033600 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  4017	033463	254 00 0 00 033467 		JRST	..0207		;NO - GO TO ERROR HANDLING
  4018	033464	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4019	033465	316 02 0 00 033601 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
  4020	033466	254 00 0 00 033472 		JRST	..0210+1  	;YES - DONT DO ERROR HANDLING
  4021									;	EXCEPT FOR ERLOOP
  4022
  4023	033467	200 14 0 13 000001 	..0207:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4024	033470	200 13 0 13 033600 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4025	033471				..0210:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  4026	033471	036 14 0 00 041631 
  4027	033472	255 00 0 00 000000
  4028					^
  4029					^
  4030						TFLAG	([FLAGS],G)^
  4031
  4032	033473	200 13 0 00 033460 		MOVE	SCR1,FLAGL	;GET FLAGS
  4033	033474	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  4034	033475	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  4035	033476	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  4036						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  4037	033477	036 13 0 00 041675 
  4038	033500	255 00 0 00 000000
  4039					^
  4040					^
  4041					;   ************************************************
  4042
  4043
  4044					;   ************************************************
  4045
  4046			033602			CNUM=CNUM+6			;CNUM POINTS TO THE TEST DATA
  4047			033501			LOC=.				;ERROR LOOP RETURN ADDRESS
  4048						IFE	ACONG-CNUM+^D24,<FLAGS=^B1100B3>  ;FLAGS FOR SECOND 4 CASES
  4049	033501	200 15 0 00 041700 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  4050	033502	120 01 0 00 033602 		DMOVE	AC1,CNUM		;INIT AUGEND TO FLOATING 0/1
  4051	033503	255 17 0 00 033504 		JFCL	17,.+1			;CLEAR PC FLAGS
  4052	033504	114 01 0 00 033604 		DADD	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  4053						PCSAVE^
  4054	033505	264 00 0 00 033506 		JSR	.+1		;STORE PC
  4055			033506		FLAGL=.				;LOCATION OF PC
  4056	033506	000000	000000			0			;PC
  4057					^
  4058						CHECKB	(LOC,G,CNUM+4)^
  4059
  4060	033507	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4061	033510	312 01 0 00 033606 		CAME	AC1,CNUM+4		;IS LEFT HALF OF RESULT CORRECT?
  4062	033511	254 00 0 00 033515 		JRST	..0211		;NO - GO TO ERROR HANDLING
  4063	033512	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4064	033513	316 02 0 00 033607 		CAMN	AC1+1,CNUM+4+1	;IS RIGHT HALF CORRECT?
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 12-7
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0111

  4065	033514	254 00 0 00 033520 		JRST	..0212+1  	;YES - DONT DO ERROR HANDLING
  4066									;	EXCEPT FOR ERLOOP
  4067
  4068	033515	200 14 0 13 000001 	..0211:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4069	033516	200 13 0 13 033606 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4070	033517				..0212:	ERROR	(LOC,14,SCR1,SCR2,,TEST G - RESULT IS INCORRECT,APRINT)^SALL
  4071	033517	036 14 0 00 041631 
  4072	033520	255 00 0 00 000000
  4073					^
  4074					^
  4075						TFLAG	([FLAGS],G)^
  4076
  4077	033521	200 13 0 00 033506 		MOVE	SCR1,FLAGL	;GET FLAGS
  4078	033522	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  4079	033523	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  4080	033524	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  4081						ERROR	(LOC,13,SCR2,FLAGL,,TEST G - PC FLAGS INCORRECT (LEFT 4 BITS),APRINT)^SALL
  4082	033525	036 13 0 00 041701 
  4083	033526	255 00 0 00 000000
  4084					^
  4085					^
  4086					;   ************************************************
  4087
  4088	033527	254 00 0 00 033610 		JRST	AENDG			;SKIP OVER DATA
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 13
DSKCFM	MAC	26-Sep-79 15:49		DADD - TEST G                                                                      SEQ 0112

  4089
  4090					; **********************************************************************
  4091					;	8 SETS OF 3 DOUBLEWORDS (AUDEND,ADDEND,RESULT)
  4092					; **********************************************************************
  4093
  4094	033530	200000	000000		ACONG:	EXP	1B1,0,1B1,0,1B0,1B0
  4095	033531	000000	000000
  4096	033532	200000	000000
  4097	033533	000000	000000
  4098	033534	400000	000000
  4099	033535	400000	000000
  4100	033536	000000	000001			EXP	1,0,377777777777,0,1B0,1B0
  4101	033537	000000	000000
  4102	033540	377777	777777
  4103	033541	000000	000000
  4104	033542	400000	000000
  4105	033543	400000	000000
  4106	033544	000000	000000			EXP	0,1B1,377777777777,1B1,1B0,1B0
  4107	033545	200000	000000
  4108	033546	377777	777777
  4109	033547	200000	000000
  4110	033550	400000	000000
  4111	033551	400000	000000
  4112	033552	000000	000000			EXP	0,1,377777777777,377777777777,1B0,1B0
  4113	033553	000000	000001
  4114	033554	377777	777777
  4115	033555	377777	777777
  4116	033556	400000	000000
  4117	033557	400000	000000
  4118	033560	400000	000000			EXP	1B0,1B0,-1,-1,377777777777,377777777777
  4119	033561	400000	000000
  4120	033562	777777	777777
  4121	033563	777777	777777
  4122	033564	377777	777777
  4123	033565	377777	777777
  4124	033566	400000	000000			EXP	1B0,-1,-1,1B0,377777777777,377777777777
  4125	033567	777777	777777
  4126	033570	777777	777777
  4127	033571	400000	000000
  4128	033572	377777	777777
  4129	033573	377777	777777
  4130	033574	400000	000001			EXP	1B0+1,1B0,-2,1B0,377777777777,0
  4131	033575	400000	000000
  4132	033576	777777	777776
  4133	033577	400000	000000
  4134	033600	377777	777777
  4135	033601	000000	000000
  4136	033602	777777	777777			EXP	-1,-1,1B0,1B0,377777777777,377777777777
  4137	033603	777777	777777
  4138	033604	400000	000000
  4139	033605	400000	000000
  4140	033606	377777	777777
  4141	033607	377777	777777
  4142	033610				AENDG:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 14
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST A                                                                      SEQ 0113

  4143					SUBTTL	DSUB - TEST A
  4144														SALL
  4145			041704			T=SIXBTZ<DSUB TEST>
  4146														LALL
  4147					; **********************************************************************
  4148					;*DSUB - TEST A
  4149					;*
  4150					;*	0,# - 0,0 = 0,#			GENERAL TESTING TO SEE THAT
  4151					;*	#,0 - 0,0 = #,0			DSUB CAN HANDLE DOUBLEWORDS
  4152					;*	#,# - 0,0 = #,#
  4153					;*	0,0 - 0,# = -(0,#)
  4154					;*	0,0 - #,0 = -(#,0)
  4155					;*	0,0 - #,# = -(#,#)
  4156					; **********************************************************************
  4157
  4158					; **********************************************************************
  4159					; ----------  DSUB (0,#) - (0,0) = (0,#)  ----------
  4160					; **********************************************************************
  4161
  4162	033610	200 15 0 00 041024 	STEST1:	MOVE	SCR3,[[EXP 0,NUM],,[EXP 0,0]] ;ADDR FOR SPRINT
  4163	033611	120 01 0 00 041020 		DMOVE	AC1,[EXP 0,NUM]		;INIT MINUEND TO (0,#)
  4164	033612	115 01 0 00 041022 		DSUB	AC1,[EXP 0,0]		;SUB (0,#)-(0,0)
  4165						CHECKS	(STEST1,A1,0,NUM)^
  4166
  4167	033613	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4168	033614	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  4169	033615	254 00 0 00 033621 		JRST	..0213		;NO - GO TO ERROR HANDLING
  4170	033616	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4171	033617	316 02 0 00 041021 		CAMN	AC1+1,[NUM]	;IS RIGHT HALF CORRECT?
  4172	033620	254 00 0 00 033624 		JRST	..0214+1  	;YES - DONT DO ERROR HANDLING
  4173									;	EXCEPT FOR ERLOOP
  4174
  4175	033621	200 14 0 13 000001 	..0213:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4176	033622	200 13 0 13 041020 		MOVE	SCR1,[EXP 0,NUM](SCR1)	;GET CORRECT RESULT
  4177	033623				..0214:	ERROR	(STEST1,14,SCR1,SCR2,,TEST A1 - RESULT IS INCORRECT,SPRINT)^SALL
  4178	033623	036 14 0 00 041706 
  4179	033624	255 00 0 00 000000
  4180					^
  4181					^
  4182
  4183					; **********************************************************************
  4184					; ----------  DSUB (#,0) - (0,0) = (#,0)  ----------
  4185					; **********************************************************************
  4186
  4187	033625	200 15 0 00 041036 	STEST2:	MOVE	SCR3,[[EXP NUM,0],,[EXP 0,0]] ;ADDR FOR SPRINT
  4188	033626	120 01 0 00 041021 		DMOVE	AC1,[EXP NUM,0]		;INIT MINUEND TO (#,0)
  4189	033627	115 01 0 00 041022 		DSUB	AC1,[EXP 0,0]		;SUB (#,0)-(0,0)
  4190						CHECKS	(STEST2,A2,NUM,0)^
  4191
  4192	033630	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4193	033631	312 01 0 00 041021 		CAME	AC1,[NUM]	;IS LEFT HALF OF RESULT CORRECT?
  4194	033632	254 00 0 00 033636 		JRST	..0215		;NO - GO TO ERROR HANDLING
  4195	033633	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4196	033634	316 02 0 00 041020 		CAMN	AC1+1,[0]	;IS RIGHT HALF CORRECT?
  4197	033635	254 00 0 00 033641 		JRST	..0216+1  	;YES - DONT DO ERROR HANDLING
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 14-1
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST A                                                                      SEQ 0114

  4198									;	EXCEPT FOR ERLOOP
  4199
  4200	033636	200 14 0 13 000001 	..0215:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4201	033637	200 13 0 13 041021 		MOVE	SCR1,[EXP NUM,0](SCR1)	;GET CORRECT RESULT
  4202	033640				..0216:	ERROR	(STEST2,14,SCR1,SCR2,,TEST A2 - RESULT IS INCORRECT,SPRINT)^SALL
  4203	033640	036 14 0 00 041711 
  4204	033641	255 00 0 00 000000
  4205					^
  4206					^
  4207
  4208					; **********************************************************************
  4209					; ----------  DSUB (#,#) - (0,0) = (#,#)  ----------
  4210					; **********************************************************************
  4211
  4212	033642	200 15 0 00 041051 	STEST3:	MOVE	SCR3,[[EXP NUM,NUM],,[EXP 0,0]] ;ADDR FOR SPRINT
  4213	033643	120 01 0 00 041047 		DMOVE	AC1,[EXP NUM,NUM]	;INIT MINUEND TO (#,#)
  4214	033644	115 01 0 00 041022 		DSUB	AC1,[EXP 0,0]		;SUB (#,#)-(0,0)
  4215						CHECKS	(STEST3,A3,NUM,NUM)^
  4216
  4217	033645	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4218	033646	312 01 0 00 041021 		CAME	AC1,[NUM]	;IS LEFT HALF OF RESULT CORRECT?
  4219	033647	254 00 0 00 033653 		JRST	..0217		;NO - GO TO ERROR HANDLING
  4220	033650	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4221	033651	316 02 0 00 041021 		CAMN	AC1+1,[NUM]	;IS RIGHT HALF CORRECT?
  4222	033652	254 00 0 00 033656 		JRST	..0220+1  	;YES - DONT DO ERROR HANDLING
  4223									;	EXCEPT FOR ERLOOP
  4224
  4225	033653	200 14 0 13 000001 	..0217:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4226	033654	200 13 0 13 041047 		MOVE	SCR1,[EXP NUM,NUM](SCR1)	;GET CORRECT RESULT
  4227	033655				..0220:	ERROR	(STEST3,14,SCR1,SCR2,,TEST A3 - RESULT IS INCORRECT,SPRINT)^SALL
  4228	033655	036 14 0 00 041714 
  4229	033656	255 00 0 00 000000
  4230					^
  4231					^
  4232
  4233					; **********************************************************************
  4234					; ----------  DSUB (0,0) - (0,#) = (-1,-#)  ----------
  4235					; **********************************************************************
  4236
  4237	033657	200 15 0 00 041062 	STEST4:	MOVE	SCR3,[[EXP 0,0],,[EXP 0,NUM]] ;ADDR FOR SPRINT
  4238	033660	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT MINUEND TO (0,0)
  4239	033661	115 01 0 00 041020 		DSUB	AC1,[EXP 0,NUM]		;SUB (0,0) - (0,#)
  4240						CHECKS	(STEST4,A4,-1,-NUM)^
  4241
  4242	033662	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4243	033663	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  4244	033664	254 00 0 00 033670 		JRST	..0221		;NO - GO TO ERROR HANDLING
  4245	033665	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4246	033666	316 02 0 00 041717 		CAMN	AC1+1,[-NUM]	;IS RIGHT HALF CORRECT?
  4247	033667	254 00 0 00 033673 		JRST	..0222+1  	;YES - DONT DO ERROR HANDLING
  4248									;	EXCEPT FOR ERLOOP
  4249
  4250	033670	200 14 0 13 000001 	..0221:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4251	033671	200 13 0 13 041720 		MOVE	SCR1,[EXP -1,-NUM](SCR1)	;GET CORRECT RESULT
  4252	033672				..0222:	ERROR	(STEST4,14,SCR1,SCR2,,TEST A4 - RESULT IS INCORRECT,SPRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 14-2
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST A                                                                      SEQ 0115

  4253	033672	036 14 0 00 041722 
  4254	033673	255 00 0 00 000000
  4255					^
  4256					^
  4257
  4258					; **********************************************************************
  4259					; ----------  DSUB (0,0) - (#,0) = (-#,0)  ----------
  4260					; **********************************************************************
  4261
  4262	033674	200 15 0 00 041073 	STEST5:	MOVE	SCR3,[[EXP 0,0],,[EXP NUM,0]] ;ADDR FOR SPRINT
  4263	033675	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT MINUEND TO (0,0)
  4264	033676	115 01 0 00 041021 		DSUB	AC1,[EXP NUM,0]		;SUB (0,0) - (#,0)
  4265						CHECKS	(STEST5,A5,-NUM,400000000000)^
  4266
  4267	033677	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4268	033700	312 01 0 00 041717 		CAME	AC1,[-NUM]	;IS LEFT HALF OF RESULT CORRECT?
  4269	033701	254 00 0 00 033705 		JRST	..0223		;NO - GO TO ERROR HANDLING
  4270	033702	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4271	033703	316 02 0 00 041725 		CAMN	AC1+1,[400000000000]	;IS RIGHT HALF CORRECT?
  4272	033704	254 00 0 00 033710 		JRST	..0224+1  	;YES - DONT DO ERROR HANDLING
  4273									;	EXCEPT FOR ERLOOP
  4274
  4275	033705	200 14 0 13 000001 	..0223:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4276	033706	200 13 0 13 041726 		MOVE	SCR1,[EXP -NUM,400000000000](SCR1)	;GET CORRECT RESULT
  4277	033707				..0224:	ERROR	(STEST5,14,SCR1,SCR2,,TEST A5 - RESULT IS INCORRECT,SPRINT)^SALL
  4278	033707	036 14 0 00 041730 
  4279	033710	255 00 0 00 000000
  4280					^
  4281					^
  4282
  4283					; **********************************************************************
  4284					; ----------  DSUB (0,0) - (#,#) = -(#,#)  ----------
  4285					; **********************************************************************
  4286
  4287	033711	200 15 0 00 041104 	STEST6:	MOVE	SCR3,[[EXP 0,0],,[EXP NUM,NUM]] ;ADDR FOR SPRINT
  4288	033712	403 01 0 00 000002 		SETZB	AC1,AC1+1		;INIT MINUEND TO (0,0)
  4289	033713	115 01 0 00 041047 		DSUB	AC1,[EXP NUM,NUM]	;SUB (0,0)-(#,#)
  4290						CHECKS	(STEST6,A6,-NUM-1,-NUM)^
  4291
  4292	033714	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4293	033715	312 01 0 00 041733 		CAME	AC1,[-NUM-1]	;IS LEFT HALF OF RESULT CORRECT?
  4294	033716	254 00 0 00 033722 		JRST	..0225		;NO - GO TO ERROR HANDLING
  4295	033717	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4296	033720	316 02 0 00 041717 		CAMN	AC1+1,[-NUM]	;IS RIGHT HALF CORRECT?
  4297	033721	254 00 0 00 033725 		JRST	..0226+1  	;YES - DONT DO ERROR HANDLING
  4298									;	EXCEPT FOR ERLOOP
  4299
  4300	033722	200 14 0 13 000001 	..0225:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4301	033723	200 13 0 13 041733 		MOVE	SCR1,[EXP -NUM-1,-NUM](SCR1)	;GET CORRECT RESULT
  4302	033724				..0226:	ERROR	(STEST6,14,SCR1,SCR2,,TEST A6 - RESULT IS INCORRECT,SPRINT)^SALL
  4303	033724	036 14 0 00 041735 
  4304	033725	255 00 0 00 000000
  4305					^
  4306					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 15
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST B                                                                      SEQ 0116

  4307					SUBTTL	DSUB - TEST B
  4308
  4309					; **********************************************************************
  4310					;*DSUB - TEST B
  4311					;*
  4312					;*	TEST ALL PERMUTATIONS OF 0,1,-1 IN THE MINUEND AND
  4313					;*	SUBTRAHEND -- TEST:
  4314					;*	0,0 - 0,0	0,1 - 0,0	0,-1 - 0,0	....
  4315					;*	0,0 - 0,1	0,1 - 0,1	0,-1 - 0,1	....
  4316					;*	0,0 - 0,-1	0,1 - 0,-1	0,-1 - 0,-1	....
  4317					;*	0,0 - 1,0	  ....		   ....		....
  4318					;*	0,0 - 1,1	  ....		   ....		....
  4319					;*	0,0 - 1,-1	  ....		   ....		....
  4320					;*	0,0 - -1,0	  ....		   ....		....
  4321					;*	0,0 - -1,1	  ....		   ....		....
  4322					;*	0,0 - -1,-1	  ....		   ....		....
  4323					; **********************************************************************
  4324
  4325					; **********************************************************************
  4326					;*     THESE  COMBINATIONS TEST THE ABILITY OF THE  DSUB  TO HANDLE
  4327					;*	BORROWS FROM THE NEXT WORD AND SIGNS CHANGING.  THE RESULT
  4328					;*	IS VERIFIED AND THE PC FLAGS ARE CHECKED TO SEE THAT THEY
  4329					;*	ARE SET PROPERLY.
  4330					; **********************************************************************
  4331
  4332					; **********************************************************************
  4333					;*PROCEDURE - (1) SET UP A POINTER 'MINU' TO SEQUENCE THE MINUEND
  4334					;*	     (2) LOOP ON MINUEND
  4335					;*	     (3) SET UP A POINTER 'SUBTR' TO SEQUENCE THE SUBTRAHEND
  4336					;*	     (4) LOOP ON SUBTRAHEND
  4337					;*	     (5) CALCULATE THE EXPECTED RESULT OF THE DSUB
  4338					;*	     (6) DO DSUB
  4339					;*	     (7) COMPARE RESULTS - ACTUAL VS. EXPECTED
  4340					;*	     (8) TEST FLAGS
  4341					;*	     (9) CONTINUE AT (4)
  4342					; **********************************************************************
  4343
  4344			000003			MINU=AC1+2			;MINU - POINTS TO MINUEND
  4345			000004			SUBTR=MINU+1			;SUBTR - POINTS TO SUBTRAHEND
  4346			000012			SCR0=SCR0			;SCR0 - SCRATCH ACS
  4347
  4348					; **********************************************************************
  4349					;INITIALIZE LOOPS - OUTERMOST ON MINUEND
  4350					;		    INNERMOST ON SUBTRAHEND
  4351					; **********************************************************************
  4352
  4353	033726	200 03 0 00 041740 		MOVE	MINU,[-^D10,,SUBT-2]	;LEFT HALF - # WORDS IN LIST + 1
  4354										;RIGHT HALF - ADDRESS OF LIST
  4355	033727	350 00 0 00 000003 	OLOOP:	AOS	MINU			;ADD 2 TO ADDRESS (DOUBLEWORD)
  4356	033730	252 03 0 00 034040 		AOBJP	MINU,BDONE		;ALL DONE WHEN COUNT = 0
  4357	033731	552 03 0 00 034036 		HRRZM	MINU,IMINU		;SET UP MINU INDIRECT ADDR
  4358	033732	200 04 0 00 041740 		MOVE	SUBTR,[-^D10,,SUBT-2]	;LEFT HALF - # WORDS IN LIST + 1
  4359										;RIGHT HALF - ADDRESS OF LIST
  4360	033733	350 00 0 00 000004 	ILOOP:	AOS	SUBTR			;ADD 2 TO ADDRESS (DOUBLEWORD)
  4361	033734	252 04 0 00 033727 		AOBJP	SUBTR,OLOOP		;DONE WITH INNER LOOP WHEN COUNT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 15-1
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST B                                                                      SEQ 0117

  4362										; REACHES 0 - BACK TO OUTER LOOP
  4363	033735	552 04 0 00 034037 		HRRZM	SUBTR,ISUBTR		;SET UP SUBTR INDIRECT ADDR
  4364	033736	514 15 0 00 000003 		HRLZ	SCR3,MINU		;SCR3 - ADDR FOR ADDL ERROR PRINT
  4365	033737	540 15 0 00 000004 		HRR	SCR3,SUBTR		;  (MINU,,SUBTR)
  4366
  4367					; **********************************************************************
  4368					;ACTUAL TEST SECTION (STEPS 1-7 OF ABOVE DESCRIPTION)
  4369					; **********************************************************************
  4370
  4371	033740	120 01 1 00 034036 	BTESTB:	DMOVE	AC1,@IMINU		;GET MINUEND
  4372	033741	120 12 1 00 034037 		DMOVE	SCR0,@ISUBTR		;GET SUBTRAHEND TO CALC EXPECTED
  4373	033742	450 12 0 00 000000 		SETCA	SCR0,			;1-S COMPLEMENT OF LEFT WORD
  4374	033743	450 13 0 00 000000 		SETCA	SCR1,			;1-S COMPLEMENT OF RIGHT WORD
  4375	033744	114 12 0 00 000001 		DADD	SCR0,AC1		;RESULT-1 (USED 1'S COMPLEMENT)
  4376	033745	114 12 0 00 041126 		DADD	SCR0,[EXP 0,1]		;GET RESULT
  4377	033746	255 17 0 00 033747 		JFCL	17,.+1			;CLEAR PC FLAGS
  4378	033747	400 14 0 00 000000 		SETZ	SCR2,			;POINTER TO INCORRECT WORD IN RESULT
  4379
  4380	033750	115 01 1 00 034037 		DSUB	AC1,@ISUBTR		;DO THE SUBTRACTION
  4381
  4382						PCSAVE^
  4383	033751	264 00 0 00 033752 		JSR	.+1		;STORE PC
  4384			033752		FLAGL=.				;LOCATION OF PC
  4385	033752	000000	000000			0			;PC
  4386					^
  4387	033753	312 01 0 00 000012 		CAME	AC1,SCR0		;LEFT WORD CORRECT?
  4388	033754	254 00 0 00 033760 		JRST	BERROR
  4389	033755	201 14 0 00 000001 		MOVEI	SCR2,1			;POINTER TO INCORRECT WORD IN RESULT
  4390	033756	316 02 0 00 000013 		CAMN	AC1+1,SCR1		;RIGHT WORD CORRECT?
  4391	033757	254 00 0 00 033764 		JRST	BFLAG			;YES - NOW TEST PC FLAGS
  4392
  4393	033760	200 12 0 14 000012 	BERROR:	MOVE	SCR0,SCR0(SCR2)		;GET CORRECT RESULT FOR ADDL PRINT
  4394	033761	200 13 0 14 000001 		MOVE	SCR1,AC1(SCR2)		;GET ACTUAL (INCORRECT) RESULT
  4395						ERROR	(BTESTB	,14,SCR0,SCR1,,TEST B - RESULT INCORRECT,SPRINT)^SALL
  4396	033762	036 14 0 00 041746 
  4397	033763	255 00 0 00 000000
  4398					^
  4399
  4400	033764	550 14 0 00 033752 	BFLAG:	HRRZ	SCR2,FLAGL		;SCR2 - PC WITH 0000 FLAGS
  4401	033765	120 12 1 00 034037 		DMOVE	SCR0,@ISUBTR		;GET SUBTRAHEND
  4402	033766	444 12 1 00 034036 		EQV	SCR0,@IMINU		;LEFT BIT IS 1 IF SIGNS SAME
  4403	033767	603 12 0 00 400000 		TLNE	SCR0,400000		;IS LEFT BIT A 1? (SIGNS SAME)
  4404	033770	254 00 0 00 033775 		JRST	BSAME			;YES - GO COMPARE MINU VS. SUBTR
  4405	033771	331 00 1 00 034036 		SKIPL	@IMINU			;NO - IS MINUEND < 0
  4406	033772	254 00 0 00 034005 		JRST	BDONEI			;NO - CORRECT FLAGS ARE 0000
  4407
  4408	033773	505 14 0 00 300000 	BFSET:	HRLI	SCR2,300000		;YES - CORRECT FLAGS ARE 0110
  4409	033774	254 00 0 00 034005 		JRST	BDONEI			;CORRECT FLAGS CALC IS DONE
  4410
  4411	033775	120 12 1 00 034036 	BSAME:	DMOVE	SCR0,@IMINU		;SIGNS ARE SAME - GET MINUEND
  4412	033776	315 12 1 00 034037 		CAMGE	SCR0,@ISUBTR		;MINUEND >= SUBTRA? (LEFT WORD)
  4413	033777	254 00 0 00 034005 		JRST	BDONEI			;NO - FLAGS ARE 0000
  4414	034000	312 12 1 00 034037 		CAME	SCR0,@ISUBTR		;MINUEND = SUBTRA? (LEFT WORD)
  4415	034001	254 00 0 00 033773 		JRST	BFSET			;NO - MIN > SUBTR - FLAGS 0110
  4416	034002	350 00 0 00 034037 		AOS	ISUBTR			;1ST WORDS ARE = SO LOOK AT 2ND
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 15-2
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST B                                                                      SEQ 0118

  4417	034003	311 13 1 00 034037 		CAML	SCR1,@ISUBTR		;MINUEND < SUBTRAHEND?
  4418	034004	254 00 0 00 033773 		JRST	BFSET			;NO - FLAGS ARE 0110
  4419
  4420	034005				BDONEI:	TFLAG	(SCR2,B,SPRINT,BTESTB)^
  4421
  4422	034005	200 13 0 00 033752 		MOVE	SCR1,FLAGL	;GET FLAGS
  4423	034006	200 14 0 00 000014 		MOVE	SCR2,SCR2 	;SCR2 - CORRECT FLAGS
  4424	034007	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  4425	034010	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  4426						ERROR	(BTESTB,13,SCR2,FLAGL,,TEST B - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SA
  4427					LL
  4428	034011	036 13 0 00 041760 
  4429	034012	255 00 0 00 000000
  4430					^
  4431					^
  4432	034013	254 00 0 00 033733 		JRST	ILOOP			;END OF TEST - GOTO NEXT ONE
  4433
  4434	034014	000000	000000		SUBT:	EXP	0,0,0,1,0,377777777777
  4435	034015	000000	000000
  4436	034016	000000	000000
  4437	034017	000000	000001
  4438	034020	000000	000000
  4439	034021	377777	777777
  4440	034022	000000	000001			EXP	1,0,1,1,1,377777777777
  4441	034023	000000	000000
  4442	034024	000000	000001
  4443	034025	000000	000001
  4444	034026	000000	000001
  4445	034027	377777	777777
  4446	034030	777777	777777			EXP	-1,1B0,-1,1B0+1,-1,-1
  4447	034031	400000	000000
  4448	034032	777777	777777
  4449	034033	400000	000001
  4450	034034	777777	777777
  4451	034035	777777	777777
  4452	034036	000000	000000		IMINU:	0
  4453	034037	000000	000000		ISUBTR:	0
  4454	034040				BDONE:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0119

  4455					SUBTTL	DSUB - TEST C
  4456
  4457					; **********************************************************************
  4458					;*DSUB - TEST C
  4459					;*
  4460					;*	THE FOLLOWING TESTS VERIFY THAT THE DSUB INSTRUCTION HANDLES
  4461					;*	  THE SIGN OF THE RESULT PROPERLY (COPYING THE SIGN INTO THE
  4462					;*	  HIGH ORDER BIT OF EACH WORD OF THE DOUBLEWORD RESULT.  THE
  4463					;*	  TESTS SUBTRACT VARIOUS COMBINATIONS OF INCONSISTENT  SIGNS
  4464					;*	  IN THE SUBTRAHEND AND MINUEND AND VERIFY THAT THE SIGNS OF
  4465					;*	  THE RESULT ARE CORRECT.
  4466					;*
  4467					;*	THERE ARE 5 SETS OF TEST: (1) 0 - P/N = N/P
  4468					;*				  (2) N - N = P/N
  4469					;*				  (3) P - P = N/P
  4470					;*				  (4) N - P = N/P
  4471					;*				  (5) N - P = N/P
  4472					;*				WHERE N-NEGATIVE NUMBER
  4473					;*				      P-POSITIVE NUMBER
  4474					; **********************************************************************
  4475
  4476					; **********************************************************************
  4477					; ----------  DSUB - TEST C-1:  0 - P/N = N/P  ----------
  4478					; **********************************************************************
  4479
  4480			034641			CNUM=SCONC1-6
  4481
  4482						REPEAT	6,<
  4483					;   ************************************************
  4484					
  4485						LOC=.				;ERROR RETURN ADDRESS
  4486						CNUM=CNUM+6			;ADDRESS OF TEST DATA
  4487						MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4488						DMOVE	AC1,CNUM		;INIT MINUEND
  4489						DSUB	AC1,CNUM+2		;SUB N - P
  4490						CHECKT	(LOC,C1,CNUM+4)
  4491					;   ************************************************
  4492					>
  4493
  4494					;   ************************************************
  4495
  4496			034040			LOC=.				;ERROR RETURN ADDRESS
  4497			034647			CNUM=CNUM+6			;ADDRESS OF TEST DATA
  4498	034040	200 15 0 00 041763 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4499	034041	120 01 0 00 034647 		DMOVE	AC1,CNUM		;INIT MINUEND
  4500	034042	115 01 0 00 034651 		DSUB	AC1,CNUM+2		;SUB N - P
  4501						CHECKT	(LOC,C1,CNUM+4)^
  4502
  4503	034043	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4504	034044	312 01 0 00 034653 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4505	034045	254 00 0 00 034051 		JRST	..0227		;NO - GO TO ERROR HANDLING
  4506	034046	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4507	034047	316 02 0 00 034654 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4508	034050	254 00 0 00 034054 		JRST	..0230+1  	;YES - DONT DO ERROR HANDLING
  4509									;	EXCEPT FOR ERLOOP
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-1
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0120

  4510
  4511	034051	200 14 0 13 000001 	..0227:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4512	034052	200 13 0 13 034653 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4513	034053				..0230:	ERROR	(LOC,14,SCR1,SCR2,,TEST C1 - RESULT IS INCORRECT,SPRINT)^SALL
  4514	034053	036 14 0 00 041771 
  4515	034054	255 00 0 00 000000
  4516					^
  4517					^
  4518					;   ************************************************
  4519
  4520
  4521					;   ************************************************
  4522
  4523			034055			LOC=.				;ERROR RETURN ADDRESS
  4524			034655			CNUM=CNUM+6			;ADDRESS OF TEST DATA
  4525	034055	200 15 0 00 041774 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4526	034056	120 01 0 00 034655 		DMOVE	AC1,CNUM		;INIT MINUEND
  4527	034057	115 01 0 00 034657 		DSUB	AC1,CNUM+2		;SUB N - P
  4528						CHECKT	(LOC,C1,CNUM+4)^
  4529
  4530	034060	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4531	034061	312 01 0 00 034661 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4532	034062	254 00 0 00 034066 		JRST	..0231		;NO - GO TO ERROR HANDLING
  4533	034063	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4534	034064	316 02 0 00 034662 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4535	034065	254 00 0 00 034071 		JRST	..0232+1  	;YES - DONT DO ERROR HANDLING
  4536									;	EXCEPT FOR ERLOOP
  4537
  4538	034066	200 14 0 13 000001 	..0231:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4539	034067	200 13 0 13 034661 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4540	034070				..0232:	ERROR	(LOC,14,SCR1,SCR2,,TEST C1 - RESULT IS INCORRECT,SPRINT)^SALL
  4541	034070	036 14 0 00 041771 
  4542	034071	255 00 0 00 000000
  4543					^
  4544					^
  4545					;   ************************************************
  4546
  4547
  4548					;   ************************************************
  4549
  4550			034072			LOC=.				;ERROR RETURN ADDRESS
  4551			034663			CNUM=CNUM+6			;ADDRESS OF TEST DATA
  4552	034072	200 15 0 00 041775 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4553	034073	120 01 0 00 034663 		DMOVE	AC1,CNUM		;INIT MINUEND
  4554	034074	115 01 0 00 034665 		DSUB	AC1,CNUM+2		;SUB N - P
  4555						CHECKT	(LOC,C1,CNUM+4)^
  4556
  4557	034075	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4558	034076	312 01 0 00 034667 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4559	034077	254 00 0 00 034103 		JRST	..0233		;NO - GO TO ERROR HANDLING
  4560	034100	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4561	034101	316 02 0 00 034670 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4562	034102	254 00 0 00 034106 		JRST	..0234+1  	;YES - DONT DO ERROR HANDLING
  4563									;	EXCEPT FOR ERLOOP
  4564
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-2
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0121

  4565	034103	200 14 0 13 000001 	..0233:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4566	034104	200 13 0 13 034667 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4567	034105				..0234:	ERROR	(LOC,14,SCR1,SCR2,,TEST C1 - RESULT IS INCORRECT,SPRINT)^SALL
  4568	034105	036 14 0 00 041771 
  4569	034106	255 00 0 00 000000
  4570					^
  4571					^
  4572					;   ************************************************
  4573
  4574
  4575					;   ************************************************
  4576
  4577			034107			LOC=.				;ERROR RETURN ADDRESS
  4578			034671			CNUM=CNUM+6			;ADDRESS OF TEST DATA
  4579	034107	200 15 0 00 041776 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4580	034110	120 01 0 00 034671 		DMOVE	AC1,CNUM		;INIT MINUEND
  4581	034111	115 01 0 00 034673 		DSUB	AC1,CNUM+2		;SUB N - P
  4582						CHECKT	(LOC,C1,CNUM+4)^
  4583
  4584	034112	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4585	034113	312 01 0 00 034675 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4586	034114	254 00 0 00 034120 		JRST	..0235		;NO - GO TO ERROR HANDLING
  4587	034115	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4588	034116	316 02 0 00 034676 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4589	034117	254 00 0 00 034123 		JRST	..0236+1  	;YES - DONT DO ERROR HANDLING
  4590									;	EXCEPT FOR ERLOOP
  4591
  4592	034120	200 14 0 13 000001 	..0235:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4593	034121	200 13 0 13 034675 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4594	034122				..0236:	ERROR	(LOC,14,SCR1,SCR2,,TEST C1 - RESULT IS INCORRECT,SPRINT)^SALL
  4595	034122	036 14 0 00 041771 
  4596	034123	255 00 0 00 000000
  4597					^
  4598					^
  4599					;   ************************************************
  4600
  4601
  4602					;   ************************************************
  4603
  4604			034124			LOC=.				;ERROR RETURN ADDRESS
  4605			034677			CNUM=CNUM+6			;ADDRESS OF TEST DATA
  4606	034124	200 15 0 00 041777 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4607	034125	120 01 0 00 034677 		DMOVE	AC1,CNUM		;INIT MINUEND
  4608	034126	115 01 0 00 034701 		DSUB	AC1,CNUM+2		;SUB N - P
  4609						CHECKT	(LOC,C1,CNUM+4)^
  4610
  4611	034127	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4612	034130	312 01 0 00 034703 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4613	034131	254 00 0 00 034135 		JRST	..0237		;NO - GO TO ERROR HANDLING
  4614	034132	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4615	034133	316 02 0 00 034704 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4616	034134	254 00 0 00 034140 		JRST	..0240+1  	;YES - DONT DO ERROR HANDLING
  4617									;	EXCEPT FOR ERLOOP
  4618
  4619	034135	200 14 0 13 000001 	..0237:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-3
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0122

  4620	034136	200 13 0 13 034703 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4621	034137				..0240:	ERROR	(LOC,14,SCR1,SCR2,,TEST C1 - RESULT IS INCORRECT,SPRINT)^SALL
  4622	034137	036 14 0 00 041771 
  4623	034140	255 00 0 00 000000
  4624					^
  4625					^
  4626					;   ************************************************
  4627
  4628
  4629					;   ************************************************
  4630
  4631			034141			LOC=.				;ERROR RETURN ADDRESS
  4632			034705			CNUM=CNUM+6			;ADDRESS OF TEST DATA
  4633	034141	200 15 0 00 042000 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4634	034142	120 01 0 00 034705 		DMOVE	AC1,CNUM		;INIT MINUEND
  4635	034143	115 01 0 00 034707 		DSUB	AC1,CNUM+2		;SUB N - P
  4636						CHECKT	(LOC,C1,CNUM+4)^
  4637
  4638	034144	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4639	034145	312 01 0 00 034711 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4640	034146	254 00 0 00 034152 		JRST	..0241		;NO - GO TO ERROR HANDLING
  4641	034147	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4642	034150	316 02 0 00 034712 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4643	034151	254 00 0 00 034155 		JRST	..0242+1  	;YES - DONT DO ERROR HANDLING
  4644									;	EXCEPT FOR ERLOOP
  4645
  4646	034152	200 14 0 13 000001 	..0241:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4647	034153	200 13 0 13 034711 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4648	034154				..0242:	ERROR	(LOC,14,SCR1,SCR2,,TEST C1 - RESULT IS INCORRECT,SPRINT)^SALL
  4649	034154	036 14 0 00 041771 
  4650	034155	255 00 0 00 000000
  4651					^
  4652					^
  4653					;   ************************************************
  4654
  4655					; **********************************************************************
  4656					; ----------  DSUB - TEST C-2:  N - N = P/N  ----------
  4657					; **********************************************************************
  4658
  4659			034705			CNUM=SCONC2-6
  4660
  4661						REPEAT	6,<
  4662					;   ************************************************
  4663					
  4664						LOC=.				;ERROR RETURN ADDRESS
  4665						CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4666						MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4667						DMOVE	AC1,CNUM		;INIT MINUEND
  4668						DSUB	AC1,CNUM+2		;SUB N - N
  4669						CHECKT	(LOC,C2,CNUM+4)
  4670					;   ************************************************
  4671					>
  4672
  4673					;   ************************************************
  4674
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-4
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0123

  4675			034156			LOC=.				;ERROR RETURN ADDRESS
  4676			034713			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4677	034156	200 15 0 00 042001 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4678	034157	120 01 0 00 034713 		DMOVE	AC1,CNUM		;INIT MINUEND
  4679	034160	115 01 0 00 034715 		DSUB	AC1,CNUM+2		;SUB N - N
  4680						CHECKT	(LOC,C2,CNUM+4)^
  4681
  4682	034161	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4683	034162	312 01 0 00 034717 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4684	034163	254 00 0 00 034167 		JRST	..0243		;NO - GO TO ERROR HANDLING
  4685	034164	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4686	034165	316 02 0 00 034720 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4687	034166	254 00 0 00 034172 		JRST	..0244+1  	;YES - DONT DO ERROR HANDLING
  4688									;	EXCEPT FOR ERLOOP
  4689
  4690	034167	200 14 0 13 000001 	..0243:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4691	034170	200 13 0 13 034717 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4692	034171				..0244:	ERROR	(LOC,14,SCR1,SCR2,,TEST C2 - RESULT IS INCORRECT,SPRINT)^SALL
  4693	034171	036 14 0 00 042007 
  4694	034172	255 00 0 00 000000
  4695					^
  4696					^
  4697					;   ************************************************
  4698
  4699
  4700					;   ************************************************
  4701
  4702			034173			LOC=.				;ERROR RETURN ADDRESS
  4703			034721			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4704	034173	200 15 0 00 042012 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4705	034174	120 01 0 00 034721 		DMOVE	AC1,CNUM		;INIT MINUEND
  4706	034175	115 01 0 00 034723 		DSUB	AC1,CNUM+2		;SUB N - N
  4707						CHECKT	(LOC,C2,CNUM+4)^
  4708
  4709	034176	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4710	034177	312 01 0 00 034725 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4711	034200	254 00 0 00 034204 		JRST	..0245		;NO - GO TO ERROR HANDLING
  4712	034201	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4713	034202	316 02 0 00 034726 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4714	034203	254 00 0 00 034207 		JRST	..0246+1  	;YES - DONT DO ERROR HANDLING
  4715									;	EXCEPT FOR ERLOOP
  4716
  4717	034204	200 14 0 13 000001 	..0245:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4718	034205	200 13 0 13 034725 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4719	034206				..0246:	ERROR	(LOC,14,SCR1,SCR2,,TEST C2 - RESULT IS INCORRECT,SPRINT)^SALL
  4720	034206	036 14 0 00 042007 
  4721	034207	255 00 0 00 000000
  4722					^
  4723					^
  4724					;   ************************************************
  4725
  4726
  4727					;   ************************************************
  4728
  4729			034210			LOC=.				;ERROR RETURN ADDRESS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-5
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0124

  4730			034727			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4731	034210	200 15 0 00 042013 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4732	034211	120 01 0 00 034727 		DMOVE	AC1,CNUM		;INIT MINUEND
  4733	034212	115 01 0 00 034731 		DSUB	AC1,CNUM+2		;SUB N - N
  4734						CHECKT	(LOC,C2,CNUM+4)^
  4735
  4736	034213	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4737	034214	312 01 0 00 034733 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4738	034215	254 00 0 00 034221 		JRST	..0247		;NO - GO TO ERROR HANDLING
  4739	034216	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4740	034217	316 02 0 00 034734 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4741	034220	254 00 0 00 034224 		JRST	..0250+1  	;YES - DONT DO ERROR HANDLING
  4742									;	EXCEPT FOR ERLOOP
  4743
  4744	034221	200 14 0 13 000001 	..0247:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4745	034222	200 13 0 13 034733 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4746	034223				..0250:	ERROR	(LOC,14,SCR1,SCR2,,TEST C2 - RESULT IS INCORRECT,SPRINT)^SALL
  4747	034223	036 14 0 00 042007 
  4748	034224	255 00 0 00 000000
  4749					^
  4750					^
  4751					;   ************************************************
  4752
  4753
  4754					;   ************************************************
  4755
  4756			034225			LOC=.				;ERROR RETURN ADDRESS
  4757			034735			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4758	034225	200 15 0 00 042014 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4759	034226	120 01 0 00 034735 		DMOVE	AC1,CNUM		;INIT MINUEND
  4760	034227	115 01 0 00 034737 		DSUB	AC1,CNUM+2		;SUB N - N
  4761						CHECKT	(LOC,C2,CNUM+4)^
  4762
  4763	034230	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4764	034231	312 01 0 00 034741 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4765	034232	254 00 0 00 034236 		JRST	..0251		;NO - GO TO ERROR HANDLING
  4766	034233	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4767	034234	316 02 0 00 034742 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4768	034235	254 00 0 00 034241 		JRST	..0252+1  	;YES - DONT DO ERROR HANDLING
  4769									;	EXCEPT FOR ERLOOP
  4770
  4771	034236	200 14 0 13 000001 	..0251:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4772	034237	200 13 0 13 034741 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4773	034240				..0252:	ERROR	(LOC,14,SCR1,SCR2,,TEST C2 - RESULT IS INCORRECT,SPRINT)^SALL
  4774	034240	036 14 0 00 042007 
  4775	034241	255 00 0 00 000000
  4776					^
  4777					^
  4778					;   ************************************************
  4779
  4780
  4781					;   ************************************************
  4782
  4783			034242			LOC=.				;ERROR RETURN ADDRESS
  4784			034743			CNUM=CNUM+6			;SUBRESS OF TEST DATA
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-6
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0125

  4785	034242	200 15 0 00 042015 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4786	034243	120 01 0 00 034743 		DMOVE	AC1,CNUM		;INIT MINUEND
  4787	034244	115 01 0 00 034745 		DSUB	AC1,CNUM+2		;SUB N - N
  4788						CHECKT	(LOC,C2,CNUM+4)^
  4789
  4790	034245	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4791	034246	312 01 0 00 034747 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4792	034247	254 00 0 00 034253 		JRST	..0253		;NO - GO TO ERROR HANDLING
  4793	034250	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4794	034251	316 02 0 00 034750 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4795	034252	254 00 0 00 034256 		JRST	..0254+1  	;YES - DONT DO ERROR HANDLING
  4796									;	EXCEPT FOR ERLOOP
  4797
  4798	034253	200 14 0 13 000001 	..0253:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4799	034254	200 13 0 13 034747 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4800	034255				..0254:	ERROR	(LOC,14,SCR1,SCR2,,TEST C2 - RESULT IS INCORRECT,SPRINT)^SALL
  4801	034255	036 14 0 00 042007 
  4802	034256	255 00 0 00 000000
  4803					^
  4804					^
  4805					;   ************************************************
  4806
  4807
  4808					;   ************************************************
  4809
  4810			034257			LOC=.				;ERROR RETURN ADDRESS
  4811			034751			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4812	034257	200 15 0 00 042016 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4813	034260	120 01 0 00 034751 		DMOVE	AC1,CNUM		;INIT MINUEND
  4814	034261	115 01 0 00 034753 		DSUB	AC1,CNUM+2		;SUB N - N
  4815						CHECKT	(LOC,C2,CNUM+4)^
  4816
  4817	034262	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4818	034263	312 01 0 00 034755 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4819	034264	254 00 0 00 034270 		JRST	..0255		;NO - GO TO ERROR HANDLING
  4820	034265	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4821	034266	316 02 0 00 034756 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4822	034267	254 00 0 00 034273 		JRST	..0256+1  	;YES - DONT DO ERROR HANDLING
  4823									;	EXCEPT FOR ERLOOP
  4824
  4825	034270	200 14 0 13 000001 	..0255:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4826	034271	200 13 0 13 034755 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4827	034272				..0256:	ERROR	(LOC,14,SCR1,SCR2,,TEST C2 - RESULT IS INCORRECT,SPRINT)^SALL
  4828	034272	036 14 0 00 042007 
  4829	034273	255 00 0 00 000000
  4830					^
  4831					^
  4832					;   ************************************************
  4833
  4834					; **********************************************************************
  4835					; ----------  DSUB - TEST C-3:  P - P = N/P  ----------
  4836					; **********************************************************************
  4837
  4838			034751			CNUM=SCONC3-6
  4839
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-7
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0126

  4840						REPEAT	6,<
  4841					;   ************************************************
  4842					
  4843						LOC=.				;ERROR RETURN ADDRESS
  4844						CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4845						MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4846						DMOVE	AC1,CNUM		;INIT MINUEND
  4847						DSUB	AC1,CNUM+2		;SUB N - P
  4848						CHECKT	(LOC,C3,CNUM+4)
  4849					;   ************************************************
  4850					>
  4851
  4852					;   ************************************************
  4853
  4854			034274			LOC=.				;ERROR RETURN ADDRESS
  4855			034757			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4856	034274	200 15 0 00 042017 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4857	034275	120 01 0 00 034757 		DMOVE	AC1,CNUM		;INIT MINUEND
  4858	034276	115 01 0 00 034761 		DSUB	AC1,CNUM+2		;SUB N - P
  4859						CHECKT	(LOC,C3,CNUM+4)^
  4860
  4861	034277	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4862	034300	312 01 0 00 034763 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4863	034301	254 00 0 00 034305 		JRST	..0257		;NO - GO TO ERROR HANDLING
  4864	034302	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4865	034303	316 02 0 00 034764 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4866	034304	254 00 0 00 034310 		JRST	..0260+1  	;YES - DONT DO ERROR HANDLING
  4867									;	EXCEPT FOR ERLOOP
  4868
  4869	034305	200 14 0 13 000001 	..0257:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4870	034306	200 13 0 13 034763 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4871	034307				..0260:	ERROR	(LOC,14,SCR1,SCR2,,TEST C3 - RESULT IS INCORRECT,SPRINT)^SALL
  4872	034307	036 14 0 00 042025 
  4873	034310	255 00 0 00 000000
  4874					^
  4875					^
  4876					;   ************************************************
  4877
  4878
  4879					;   ************************************************
  4880
  4881			034311			LOC=.				;ERROR RETURN ADDRESS
  4882			034765			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4883	034311	200 15 0 00 042030 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4884	034312	120 01 0 00 034765 		DMOVE	AC1,CNUM		;INIT MINUEND
  4885	034313	115 01 0 00 034767 		DSUB	AC1,CNUM+2		;SUB N - P
  4886						CHECKT	(LOC,C3,CNUM+4)^
  4887
  4888	034314	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4889	034315	312 01 0 00 034771 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4890	034316	254 00 0 00 034322 		JRST	..0261		;NO - GO TO ERROR HANDLING
  4891	034317	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4892	034320	316 02 0 00 034772 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4893	034321	254 00 0 00 034325 		JRST	..0262+1  	;YES - DONT DO ERROR HANDLING
  4894									;	EXCEPT FOR ERLOOP
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-8
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0127

  4895
  4896	034322	200 14 0 13 000001 	..0261:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4897	034323	200 13 0 13 034771 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4898	034324				..0262:	ERROR	(LOC,14,SCR1,SCR2,,TEST C3 - RESULT IS INCORRECT,SPRINT)^SALL
  4899	034324	036 14 0 00 042025 
  4900	034325	255 00 0 00 000000
  4901					^
  4902					^
  4903					;   ************************************************
  4904
  4905
  4906					;   ************************************************
  4907
  4908			034326			LOC=.				;ERROR RETURN ADDRESS
  4909			034773			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4910	034326	200 15 0 00 042031 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4911	034327	120 01 0 00 034773 		DMOVE	AC1,CNUM		;INIT MINUEND
  4912	034330	115 01 0 00 034775 		DSUB	AC1,CNUM+2		;SUB N - P
  4913						CHECKT	(LOC,C3,CNUM+4)^
  4914
  4915	034331	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4916	034332	312 01 0 00 034777 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4917	034333	254 00 0 00 034337 		JRST	..0263		;NO - GO TO ERROR HANDLING
  4918	034334	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4919	034335	316 02 0 00 035000 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4920	034336	254 00 0 00 034342 		JRST	..0264+1  	;YES - DONT DO ERROR HANDLING
  4921									;	EXCEPT FOR ERLOOP
  4922
  4923	034337	200 14 0 13 000001 	..0263:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4924	034340	200 13 0 13 034777 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4925	034341				..0264:	ERROR	(LOC,14,SCR1,SCR2,,TEST C3 - RESULT IS INCORRECT,SPRINT)^SALL
  4926	034341	036 14 0 00 042025 
  4927	034342	255 00 0 00 000000
  4928					^
  4929					^
  4930					;   ************************************************
  4931
  4932
  4933					;   ************************************************
  4934
  4935			034343			LOC=.				;ERROR RETURN ADDRESS
  4936			035001			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4937	034343	200 15 0 00 042032 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4938	034344	120 01 0 00 035001 		DMOVE	AC1,CNUM		;INIT MINUEND
  4939	034345	115 01 0 00 035003 		DSUB	AC1,CNUM+2		;SUB N - P
  4940						CHECKT	(LOC,C3,CNUM+4)^
  4941
  4942	034346	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4943	034347	312 01 0 00 035005 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4944	034350	254 00 0 00 034354 		JRST	..0265		;NO - GO TO ERROR HANDLING
  4945	034351	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4946	034352	316 02 0 00 035006 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4947	034353	254 00 0 00 034357 		JRST	..0266+1  	;YES - DONT DO ERROR HANDLING
  4948									;	EXCEPT FOR ERLOOP
  4949
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-9
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0128

  4950	034354	200 14 0 13 000001 	..0265:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4951	034355	200 13 0 13 035005 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4952	034356				..0266:	ERROR	(LOC,14,SCR1,SCR2,,TEST C3 - RESULT IS INCORRECT,SPRINT)^SALL
  4953	034356	036 14 0 00 042025 
  4954	034357	255 00 0 00 000000
  4955					^
  4956					^
  4957					;   ************************************************
  4958
  4959
  4960					;   ************************************************
  4961
  4962			034360			LOC=.				;ERROR RETURN ADDRESS
  4963			035007			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4964	034360	200 15 0 00 042033 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4965	034361	120 01 0 00 035007 		DMOVE	AC1,CNUM		;INIT MINUEND
  4966	034362	115 01 0 00 035011 		DSUB	AC1,CNUM+2		;SUB N - P
  4967						CHECKT	(LOC,C3,CNUM+4)^
  4968
  4969	034363	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4970	034364	312 01 0 00 035013 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4971	034365	254 00 0 00 034371 		JRST	..0267		;NO - GO TO ERROR HANDLING
  4972	034366	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  4973	034367	316 02 0 00 035014 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  4974	034370	254 00 0 00 034374 		JRST	..0270+1  	;YES - DONT DO ERROR HANDLING
  4975									;	EXCEPT FOR ERLOOP
  4976
  4977	034371	200 14 0 13 000001 	..0267:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  4978	034372	200 13 0 13 035013 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  4979	034373				..0270:	ERROR	(LOC,14,SCR1,SCR2,,TEST C3 - RESULT IS INCORRECT,SPRINT)^SALL
  4980	034373	036 14 0 00 042025 
  4981	034374	255 00 0 00 000000
  4982					^
  4983					^
  4984					;   ************************************************
  4985
  4986
  4987					;   ************************************************
  4988
  4989			034375			LOC=.				;ERROR RETURN ADDRESS
  4990			035015			CNUM=CNUM+6			;SUBRESS OF TEST DATA
  4991	034375	200 15 0 00 042034 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  4992	034376	120 01 0 00 035015 		DMOVE	AC1,CNUM		;INIT MINUEND
  4993	034377	115 01 0 00 035017 		DSUB	AC1,CNUM+2		;SUB N - P
  4994						CHECKT	(LOC,C3,CNUM+4)^
  4995
  4996	034400	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  4997	034401	312 01 0 00 035021 		CAME	AC1,CNUM+4  	;IS LEFT HALF OF RESULT CORRECT?
  4998	034402	254 00 0 00 034406 		JRST	..0271		;NO - GO TO ERROR HANDLING
  4999	034403	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5000	034404	316 02 0 00 035022 		CAMN	AC1+1,CNUM+4+1      	;IS RIGHT HALF CORRECT?
  5001	034405	254 00 0 00 034411 		JRST	..0272+1  	;YES - DONT DO ERROR HANDLING
  5002									;	EXCEPT FOR ERLOOP
  5003
  5004	034406	200 14 0 13 000001 	..0271:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-10
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0129

  5005	034407	200 13 0 13 035021 		MOVE	SCR1,CNUM+4(SCR1)	;GET CORRECT WORD OF RESULT
  5006	034410				..0272:	ERROR	(LOC,14,SCR1,SCR2,,TEST C3 - RESULT IS INCORRECT,SPRINT)^SALL
  5007	034410	036 14 0 00 042025 
  5008	034411	255 00 0 00 000000
  5009					^
  5010					^
  5011					;   ************************************************
  5012
  5013					; **********************************************************************
  5014					; ----------  DSUB - TEST C-4:  N - P = -3  ----------
  5015					; **********************************************************************
  5016
  5017			035017			CNUM=SCONC4-4
  5018
  5019						REPEAT	6,<
  5020					;   ************************************************
  5021					
  5022						LOC=.				;ERROR RETURN ADDRESS
  5023						CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5024						MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5025						DMOVE	AC1,CNUM		;INIT MINUEND
  5026						DSUB	AC1,CNUM+2		;SUB N - P = -3
  5027						CHECKS	(LOC,C4,-1,-3)
  5028					;   ************************************************
  5029					>
  5030
  5031					;   ************************************************
  5032
  5033			034412			LOC=.				;ERROR RETURN ADDRESS
  5034			035023			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5035	034412	200 15 0 00 042035 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5036	034413	120 01 0 00 035023 		DMOVE	AC1,CNUM		;INIT MINUEND
  5037	034414	115 01 0 00 035025 		DSUB	AC1,CNUM+2		;SUB N - P = -3
  5038						CHECKS	(LOC,C4,-1,-3)^
  5039
  5040	034415	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5041	034416	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  5042	034417	254 00 0 00 034423 		JRST	..0273		;NO - GO TO ERROR HANDLING
  5043	034420	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5044	034421	316 02 0 00 042036 		CAMN	AC1+1,[-3]	;IS RIGHT HALF CORRECT?
  5045	034422	254 00 0 00 034426 		JRST	..0274+1  	;YES - DONT DO ERROR HANDLING
  5046									;	EXCEPT FOR ERLOOP
  5047
  5048	034423	200 14 0 13 000001 	..0273:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5049	034424	200 13 0 13 042037 		MOVE	SCR1,[EXP -1,-3](SCR1)	;GET CORRECT RESULT
  5050	034425				..0274:	ERROR	(LOC,14,SCR1,SCR2,,TEST C4 - RESULT IS INCORRECT,SPRINT)^SALL
  5051	034425	036 14 0 00 042046 
  5052	034426	255 00 0 00 000000
  5053					^
  5054					^
  5055					;   ************************************************
  5056
  5057
  5058					;   ************************************************
  5059
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-11
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0130

  5060			034427			LOC=.				;ERROR RETURN ADDRESS
  5061			035027			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5062	034427	200 15 0 00 042051 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5063	034430	120 01 0 00 035027 		DMOVE	AC1,CNUM		;INIT MINUEND
  5064	034431	115 01 0 00 035031 		DSUB	AC1,CNUM+2		;SUB N - P = -3
  5065						CHECKS	(LOC,C4,-1,-3)^
  5066
  5067	034432	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5068	034433	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  5069	034434	254 00 0 00 034440 		JRST	..0275		;NO - GO TO ERROR HANDLING
  5070	034435	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5071	034436	316 02 0 00 042036 		CAMN	AC1+1,[-3]	;IS RIGHT HALF CORRECT?
  5072	034437	254 00 0 00 034443 		JRST	..0276+1  	;YES - DONT DO ERROR HANDLING
  5073									;	EXCEPT FOR ERLOOP
  5074
  5075	034440	200 14 0 13 000001 	..0275:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5076	034441	200 13 0 13 042037 		MOVE	SCR1,[EXP -1,-3](SCR1)	;GET CORRECT RESULT
  5077	034442				..0276:	ERROR	(LOC,14,SCR1,SCR2,,TEST C4 - RESULT IS INCORRECT,SPRINT)^SALL
  5078	034442	036 14 0 00 042046 
  5079	034443	255 00 0 00 000000
  5080					^
  5081					^
  5082					;   ************************************************
  5083
  5084
  5085					;   ************************************************
  5086
  5087			034444			LOC=.				;ERROR RETURN ADDRESS
  5088			035033			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5089	034444	200 15 0 00 042052 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5090	034445	120 01 0 00 035033 		DMOVE	AC1,CNUM		;INIT MINUEND
  5091	034446	115 01 0 00 035035 		DSUB	AC1,CNUM+2		;SUB N - P = -3
  5092						CHECKS	(LOC,C4,-1,-3)^
  5093
  5094	034447	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5095	034450	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  5096	034451	254 00 0 00 034455 		JRST	..0277		;NO - GO TO ERROR HANDLING
  5097	034452	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5098	034453	316 02 0 00 042036 		CAMN	AC1+1,[-3]	;IS RIGHT HALF CORRECT?
  5099	034454	254 00 0 00 034460 		JRST	..0300+1  	;YES - DONT DO ERROR HANDLING
  5100									;	EXCEPT FOR ERLOOP
  5101
  5102	034455	200 14 0 13 000001 	..0277:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5103	034456	200 13 0 13 042037 		MOVE	SCR1,[EXP -1,-3](SCR1)	;GET CORRECT RESULT
  5104	034457				..0300:	ERROR	(LOC,14,SCR1,SCR2,,TEST C4 - RESULT IS INCORRECT,SPRINT)^SALL
  5105	034457	036 14 0 00 042046 
  5106	034460	255 00 0 00 000000
  5107					^
  5108					^
  5109					;   ************************************************
  5110
  5111
  5112					;   ************************************************
  5113
  5114			034461			LOC=.				;ERROR RETURN ADDRESS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-12
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0131

  5115			035037			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5116	034461	200 15 0 00 042053 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5117	034462	120 01 0 00 035037 		DMOVE	AC1,CNUM		;INIT MINUEND
  5118	034463	115 01 0 00 035041 		DSUB	AC1,CNUM+2		;SUB N - P = -3
  5119						CHECKS	(LOC,C4,-1,-3)^
  5120
  5121	034464	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5122	034465	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  5123	034466	254 00 0 00 034472 		JRST	..0301		;NO - GO TO ERROR HANDLING
  5124	034467	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5125	034470	316 02 0 00 042036 		CAMN	AC1+1,[-3]	;IS RIGHT HALF CORRECT?
  5126	034471	254 00 0 00 034475 		JRST	..0302+1  	;YES - DONT DO ERROR HANDLING
  5127									;	EXCEPT FOR ERLOOP
  5128
  5129	034472	200 14 0 13 000001 	..0301:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5130	034473	200 13 0 13 042037 		MOVE	SCR1,[EXP -1,-3](SCR1)	;GET CORRECT RESULT
  5131	034474				..0302:	ERROR	(LOC,14,SCR1,SCR2,,TEST C4 - RESULT IS INCORRECT,SPRINT)^SALL
  5132	034474	036 14 0 00 042046 
  5133	034475	255 00 0 00 000000
  5134					^
  5135					^
  5136					;   ************************************************
  5137
  5138
  5139					;   ************************************************
  5140
  5141			034476			LOC=.				;ERROR RETURN ADDRESS
  5142			035043			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5143	034476	200 15 0 00 042054 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5144	034477	120 01 0 00 035043 		DMOVE	AC1,CNUM		;INIT MINUEND
  5145	034500	115 01 0 00 035045 		DSUB	AC1,CNUM+2		;SUB N - P = -3
  5146						CHECKS	(LOC,C4,-1,-3)^
  5147
  5148	034501	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5149	034502	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  5150	034503	254 00 0 00 034507 		JRST	..0303		;NO - GO TO ERROR HANDLING
  5151	034504	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5152	034505	316 02 0 00 042036 		CAMN	AC1+1,[-3]	;IS RIGHT HALF CORRECT?
  5153	034506	254 00 0 00 034512 		JRST	..0304+1  	;YES - DONT DO ERROR HANDLING
  5154									;	EXCEPT FOR ERLOOP
  5155
  5156	034507	200 14 0 13 000001 	..0303:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5157	034510	200 13 0 13 042037 		MOVE	SCR1,[EXP -1,-3](SCR1)	;GET CORRECT RESULT
  5158	034511				..0304:	ERROR	(LOC,14,SCR1,SCR2,,TEST C4 - RESULT IS INCORRECT,SPRINT)^SALL
  5159	034511	036 14 0 00 042046 
  5160	034512	255 00 0 00 000000
  5161					^
  5162					^
  5163					;   ************************************************
  5164
  5165
  5166					;   ************************************************
  5167
  5168			034513			LOC=.				;ERROR RETURN ADDRESS
  5169			035047			CNUM=CNUM+4			;SUBRESS OF TEST DATA
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-13
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0132

  5170	034513	200 15 0 00 042055 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5171	034514	120 01 0 00 035047 		DMOVE	AC1,CNUM		;INIT MINUEND
  5172	034515	115 01 0 00 035051 		DSUB	AC1,CNUM+2		;SUB N - P = -3
  5173						CHECKS	(LOC,C4,-1,-3)^
  5174
  5175	034516	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5176	034517	312 01 0 00 041166 		CAME	AC1,[-1]	;IS LEFT HALF OF RESULT CORRECT?
  5177	034520	254 00 0 00 034524 		JRST	..0305		;NO - GO TO ERROR HANDLING
  5178	034521	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5179	034522	316 02 0 00 042036 		CAMN	AC1+1,[-3]	;IS RIGHT HALF CORRECT?
  5180	034523	254 00 0 00 034527 		JRST	..0306+1  	;YES - DONT DO ERROR HANDLING
  5181									;	EXCEPT FOR ERLOOP
  5182
  5183	034524	200 14 0 13 000001 	..0305:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5184	034525	200 13 0 13 042037 		MOVE	SCR1,[EXP -1,-3](SCR1)	;GET CORRECT RESULT
  5185	034526				..0306:	ERROR	(LOC,14,SCR1,SCR2,,TEST C4 - RESULT IS INCORRECT,SPRINT)^SALL
  5186	034526	036 14 0 00 042046 
  5187	034527	255 00 0 00 000000
  5188					^
  5189					^
  5190					;   ************************************************
  5191
  5192					; **********************************************************************
  5193					; ----------  DSUB - TEST C-5:  P - N = 3  ----------
  5194					; **********************************************************************
  5195
  5196			035047			CNUM=SCONC5-4
  5197
  5198						REPEAT	6,<
  5199					;   ************************************************
  5200					
  5201						LOC=.				;ERROR RETURN ADDRESS
  5202						CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5203						MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5204						DMOVE	AC1,CNUM		;INIT MINUEND
  5205						DSUB	AC1,CNUM+2		;SUB N - P = 3
  5206						CHECKS	(LOC,C5,0,3)
  5207					;   ************************************************
  5208					>
  5209
  5210					;   ************************************************
  5211
  5212			034530			LOC=.				;ERROR RETURN ADDRESS
  5213			035053			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5214	034530	200 15 0 00 042056 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5215	034531	120 01 0 00 035053 		DMOVE	AC1,CNUM		;INIT MINUEND
  5216	034532	115 01 0 00 035055 		DSUB	AC1,CNUM+2		;SUB N - P = 3
  5217						CHECKS	(LOC,C5,0,3)^
  5218
  5219	034533	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5220	034534	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  5221	034535	254 00 0 00 034541 		JRST	..0307		;NO - GO TO ERROR HANDLING
  5222	034536	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5223	034537	316 02 0 00 042057 		CAMN	AC1+1,[3]	;IS RIGHT HALF CORRECT?
  5224	034540	254 00 0 00 034544 		JRST	..0310+1  	;YES - DONT DO ERROR HANDLING
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-14
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0133

  5225									;	EXCEPT FOR ERLOOP
  5226
  5227	034541	200 14 0 13 000001 	..0307:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5228	034542	200 13 0 13 042060 		MOVE	SCR1,[EXP 0,3](SCR1)	;GET CORRECT RESULT
  5229	034543				..0310:	ERROR	(LOC,14,SCR1,SCR2,,TEST C5 - RESULT IS INCORRECT,SPRINT)^SALL
  5230	034543	036 14 0 00 042067 
  5231	034544	255 00 0 00 000000
  5232					^
  5233					^
  5234					;   ************************************************
  5235
  5236
  5237					;   ************************************************
  5238
  5239			034545			LOC=.				;ERROR RETURN ADDRESS
  5240			035057			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5241	034545	200 15 0 00 042072 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5242	034546	120 01 0 00 035057 		DMOVE	AC1,CNUM		;INIT MINUEND
  5243	034547	115 01 0 00 035061 		DSUB	AC1,CNUM+2		;SUB N - P = 3
  5244						CHECKS	(LOC,C5,0,3)^
  5245
  5246	034550	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5247	034551	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  5248	034552	254 00 0 00 034556 		JRST	..0311		;NO - GO TO ERROR HANDLING
  5249	034553	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5250	034554	316 02 0 00 042057 		CAMN	AC1+1,[3]	;IS RIGHT HALF CORRECT?
  5251	034555	254 00 0 00 034561 		JRST	..0312+1  	;YES - DONT DO ERROR HANDLING
  5252									;	EXCEPT FOR ERLOOP
  5253
  5254	034556	200 14 0 13 000001 	..0311:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5255	034557	200 13 0 13 042060 		MOVE	SCR1,[EXP 0,3](SCR1)	;GET CORRECT RESULT
  5256	034560				..0312:	ERROR	(LOC,14,SCR1,SCR2,,TEST C5 - RESULT IS INCORRECT,SPRINT)^SALL
  5257	034560	036 14 0 00 042067 
  5258	034561	255 00 0 00 000000
  5259					^
  5260					^
  5261					;   ************************************************
  5262
  5263
  5264					;   ************************************************
  5265
  5266			034562			LOC=.				;ERROR RETURN ADDRESS
  5267			035063			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5268	034562	200 15 0 00 042073 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5269	034563	120 01 0 00 035063 		DMOVE	AC1,CNUM		;INIT MINUEND
  5270	034564	115 01 0 00 035065 		DSUB	AC1,CNUM+2		;SUB N - P = 3
  5271						CHECKS	(LOC,C5,0,3)^
  5272
  5273	034565	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5274	034566	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  5275	034567	254 00 0 00 034573 		JRST	..0313		;NO - GO TO ERROR HANDLING
  5276	034570	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5277	034571	316 02 0 00 042057 		CAMN	AC1+1,[3]	;IS RIGHT HALF CORRECT?
  5278	034572	254 00 0 00 034576 		JRST	..0314+1  	;YES - DONT DO ERROR HANDLING
  5279									;	EXCEPT FOR ERLOOP
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-15
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0134

  5280
  5281	034573	200 14 0 13 000001 	..0313:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5282	034574	200 13 0 13 042060 		MOVE	SCR1,[EXP 0,3](SCR1)	;GET CORRECT RESULT
  5283	034575				..0314:	ERROR	(LOC,14,SCR1,SCR2,,TEST C5 - RESULT IS INCORRECT,SPRINT)^SALL
  5284	034575	036 14 0 00 042067 
  5285	034576	255 00 0 00 000000
  5286					^
  5287					^
  5288					;   ************************************************
  5289
  5290
  5291					;   ************************************************
  5292
  5293			034577			LOC=.				;ERROR RETURN ADDRESS
  5294			035067			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5295	034577	200 15 0 00 042074 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5296	034600	120 01 0 00 035067 		DMOVE	AC1,CNUM		;INIT MINUEND
  5297	034601	115 01 0 00 035071 		DSUB	AC1,CNUM+2		;SUB N - P = 3
  5298						CHECKS	(LOC,C5,0,3)^
  5299
  5300	034602	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5301	034603	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  5302	034604	254 00 0 00 034610 		JRST	..0315		;NO - GO TO ERROR HANDLING
  5303	034605	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5304	034606	316 02 0 00 042057 		CAMN	AC1+1,[3]	;IS RIGHT HALF CORRECT?
  5305	034607	254 00 0 00 034613 		JRST	..0316+1  	;YES - DONT DO ERROR HANDLING
  5306									;	EXCEPT FOR ERLOOP
  5307
  5308	034610	200 14 0 13 000001 	..0315:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5309	034611	200 13 0 13 042060 		MOVE	SCR1,[EXP 0,3](SCR1)	;GET CORRECT RESULT
  5310	034612				..0316:	ERROR	(LOC,14,SCR1,SCR2,,TEST C5 - RESULT IS INCORRECT,SPRINT)^SALL
  5311	034612	036 14 0 00 042067 
  5312	034613	255 00 0 00 000000
  5313					^
  5314					^
  5315					;   ************************************************
  5316
  5317
  5318					;   ************************************************
  5319
  5320			034614			LOC=.				;ERROR RETURN ADDRESS
  5321			035073			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5322	034614	200 15 0 00 042075 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5323	034615	120 01 0 00 035073 		DMOVE	AC1,CNUM		;INIT MINUEND
  5324	034616	115 01 0 00 035075 		DSUB	AC1,CNUM+2		;SUB N - P = 3
  5325						CHECKS	(LOC,C5,0,3)^
  5326
  5327	034617	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5328	034620	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  5329	034621	254 00 0 00 034625 		JRST	..0317		;NO - GO TO ERROR HANDLING
  5330	034622	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5331	034623	316 02 0 00 042057 		CAMN	AC1+1,[3]	;IS RIGHT HALF CORRECT?
  5332	034624	254 00 0 00 034630 		JRST	..0320+1  	;YES - DONT DO ERROR HANDLING
  5333									;	EXCEPT FOR ERLOOP
  5334
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-16
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0135

  5335	034625	200 14 0 13 000001 	..0317:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5336	034626	200 13 0 13 042060 		MOVE	SCR1,[EXP 0,3](SCR1)	;GET CORRECT RESULT
  5337	034627				..0320:	ERROR	(LOC,14,SCR1,SCR2,,TEST C5 - RESULT IS INCORRECT,SPRINT)^SALL
  5338	034627	036 14 0 00 042067 
  5339	034630	255 00 0 00 000000
  5340					^
  5341					^
  5342					;   ************************************************
  5343
  5344
  5345					;   ************************************************
  5346
  5347			034631			LOC=.				;ERROR RETURN ADDRESS
  5348			035077			CNUM=CNUM+4			;SUBRESS OF TEST DATA
  5349	034631	200 15 0 00 042076 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5350	034632	120 01 0 00 035077 		DMOVE	AC1,CNUM		;INIT MINUEND
  5351	034633	115 01 0 00 035101 		DSUB	AC1,CNUM+2		;SUB N - P = 3
  5352						CHECKS	(LOC,C5,0,3)^
  5353
  5354	034634	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5355	034635	312 01 0 00 041020 		CAME	AC1,[0]	;IS LEFT HALF OF RESULT CORRECT?
  5356	034636	254 00 0 00 034642 		JRST	..0321		;NO - GO TO ERROR HANDLING
  5357	034637	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5358	034640	316 02 0 00 042057 		CAMN	AC1+1,[3]	;IS RIGHT HALF CORRECT?
  5359	034641	254 00 0 00 034645 		JRST	..0322+1  	;YES - DONT DO ERROR HANDLING
  5360									;	EXCEPT FOR ERLOOP
  5361
  5362	034642	200 14 0 13 000001 	..0321:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5363	034643	200 13 0 13 042060 		MOVE	SCR1,[EXP 0,3](SCR1)	;GET CORRECT RESULT
  5364	034644				..0322:	ERROR	(LOC,14,SCR1,SCR2,,TEST C5 - RESULT IS INCORRECT,SPRINT)^SALL
  5365	034644	036 14 0 00 042067 
  5366	034645	255 00 0 00 000000
  5367					^
  5368					^
  5369					;   ************************************************
  5370
  5371	034646	254 00 0 00 035103 		JRST	SENDC			;SKIP OVER DATA
  5372
  5373	034647	000000	000000		SCONC1:	EXP	0,0,0,1B0,0,0
  5374	034650	000000	000000
  5375	034651	000000	000000
  5376	034652	400000	000000
  5377	034653	000000	000000
  5378	034654	000000	000000
  5379	034655	000000	000000			EXP	0,1B0,0,1,-1,-1
  5380	034656	400000	000000
  5381	034657	000000	000000
  5382	034660	000000	000001
  5383	034661	777777	777777
  5384	034662	777777	777777
  5385	034663	000000	000000			EXP	0,1B0,0,1B0+1,-1,-1
  5386	034664	400000	000000
  5387	034665	000000	000000
  5388	034666	400000	000001
  5389	034667	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-17
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0136

  5390	034670	777777	777777
  5391	034671	000000	000000			EXP	0,0,-1,377777777777,0,1
  5392	034672	000000	000000
  5393	034673	777777	777777
  5394	034674	377777	777777
  5395	034675	000000	000000
  5396	034676	000000	000001
  5397	034677	000000	000000			EXP	0,1B0,-1,377777777777,0,1
  5398	034700	400000	000000
  5399	034701	777777	777777
  5400	034702	377777	777777
  5401	034703	000000	000000
  5402	034704	000000	000001
  5403	034705	000000	000000			EXP	0,1B0,-1,-1,0,1
  5404	034706	400000	000000
  5405	034707	777777	777777
  5406	034710	777777	777777
  5407	034711	000000	000000
  5408	034712	000000	000001
  5409
  5410	034713	777777	777777		SCONC2:	EXP	-1,377777777777,-2,-1,1,0
  5411	034714	377777	777777
  5412	034715	777777	777776
  5413	034716	777777	777777
  5414	034717	000000	000001
  5415	034720	000000	000000
  5416	034721	777777	777777			EXP	-1,377777777777,-2,377777777777,1,0
  5417	034722	377777	777777
  5418	034723	777777	777776
  5419	034724	377777	777777
  5420	034725	000000	000001
  5421	034726	000000	000000
  5422	034727	777777	777777			EXP	-1,-1,-2,377777777777,1,0
  5423	034730	777777	777777
  5424	034731	777777	777776
  5425	034732	377777	777777
  5426	034733	000000	000001
  5427	034734	000000	000000
  5428	034735	777777	777776			EXP	-2,-1,-1,377777777777,-1,1B0
  5429	034736	777777	777777
  5430	034737	777777	777777
  5431	034740	377777	777777
  5432	034741	777777	777777
  5433	034742	400000	000000
  5434	034743	777777	777776			EXP	-2,377777777777,-1,377777777777,-1,1B0
  5435	034744	377777	777777
  5436	034745	777777	777777
  5437	034746	377777	777777
  5438	034747	777777	777777
  5439	034750	400000	000000
  5440	034751	777777	777776			EXP	-2,377777777777,-1,-1,-1,1B0
  5441	034752	377777	777777
  5442	034753	777777	777777
  5443	034754	777777	777777
  5444	034755	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-18
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0137

  5445	034756	400000	000000
  5446
  5447	034757	000000	000000		SCONC3:	EXP	0,1B0+1,1,0,-1,1B0+1
  5448	034760	400000	000001
  5449	034761	000000	000001
  5450	034762	000000	000000
  5451	034763	777777	777777
  5452	034764	400000	000001
  5453	034765	000000	000000			EXP	0,1B0+1,1,1B0,-1,1B0+1
  5454	034766	400000	000001
  5455	034767	000000	000001
  5456	034770	400000	000000
  5457	034771	777777	777777
  5458	034772	400000	000001
  5459	034773	000000	000000			EXP	0,1,1,1B0,-1,1B0+1
  5460	034774	000000	000001
  5461	034775	000000	000001
  5462	034776	400000	000000
  5463	034777	777777	777777
  5464	035000	400000	000001
  5465	035001	000000	000001			EXP	1,0,0,1B0+1,0,377777777777
  5466	035002	000000	000000
  5467	035003	000000	000000
  5468	035004	400000	000001
  5469	035005	000000	000000
  5470	035006	377777	777777
  5471	035007	000000	000001			EXP	1,1B0,0,1B0+1,0,377777777777
  5472	035010	400000	000000
  5473	035011	000000	000000
  5474	035012	400000	000001
  5475	035013	000000	000000
  5476	035014	377777	777777
  5477	035015	000000	000001			EXP	1,1B0,0,1,0,377777777777
  5478	035016	400000	000000
  5479	035017	000000	000000
  5480	035020	000000	000001
  5481	035021	000000	000000
  5482	035022	377777	777777
  5483
  5484	035023	777777	777777		SCONC4:	EXP	-1,377777777776,0,1
  5485	035024	377777	777776
  5486	035025	000000	000000
  5487	035026	000000	000001
  5488	035027	777777	777777			EXP	-1,377777777776,0,1B0+1
  5489	035030	377777	777776
  5490	035031	000000	000000
  5491	035032	400000	000001
  5492	035033	777777	777777			EXP	-1,-2,0,1B0+1
  5493	035034	777777	777776
  5494	035035	000000	000000
  5495	035036	400000	000001
  5496	035037	777777	777777			EXP	-1,377777777777,0,2
  5497	035040	377777	777777
  5498	035041	000000	000000
  5499	035042	000000	000002
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 16-19
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST C                                                                      SEQ 0138

  5500	035043	777777	777777			EXP	-1,377777777777,0,1B0+2
  5501	035044	377777	777777
  5502	035045	000000	000000
  5503	035046	400000	000002
  5504	035047	777777	777777			EXP	-1,-1,0,1B0+2
  5505	035050	777777	777777
  5506	035051	000000	000000
  5507	035052	400000	000002
  5508	035053	000000	000000		SCONC5:	EXP	0,1,-1,377777777776
  5509	035054	000000	000001
  5510	035055	777777	777777
  5511	035056	377777	777776
  5512	035057	000000	000000			EXP	0,1B0+1,-1,377777777776
  5513	035060	400000	000001
  5514	035061	777777	777777
  5515	035062	377777	777776
  5516	035063	000000	000000			EXP	0,1B0+1,-1,-2
  5517	035064	400000	000001
  5518	035065	777777	777777
  5519	035066	777777	777776
  5520	035067	000000	000000			EXP	0,2,-1,377777777777
  5521	035070	000000	000002
  5522	035071	777777	777777
  5523	035072	377777	777777
  5524	035073	000000	000000			EXP	0,1B0+2,-1,377777777777
  5525	035074	400000	000002
  5526	035075	777777	777777
  5527	035076	377777	777777
  5528	035077	000000	000000			EXP	0,1B0+2,-1,-1
  5529	035100	400000	000002
  5530	035101	777777	777777
  5531	035102	777777	777777
  5532	035103				SENDC:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0139

  5533					SUBTTL	DSUB - TEST D
  5534
  5535					; **********************************************************************
  5536					;*DSUB - TEST D
  5537					;*
  5538					;*	2**N - (-2**70 + 2**N) = 1000... (AROV & CARRY 1 SET)
  5539					;*	(-2**70 + 2**N) - 2**N = 1000... (AROV & CARRY 1 SET)
  5540					;*	-2**N - (2**70 - 2**N + 1) = 0111... (AROV & CARRY 0 SET)
  5541					;*	(2**70 - 2**N + 1) - -2**N = 0111... (AROV & CARRY 0 SET)
  5542					; **********************************************************************
  5543
  5544					; **********************************************************************
  5545					;*	THE FOLLOWING SECTION OF CODE IS REPEATED 8 TIMES.  THE FIRST
  5546					;*	  4 TESTS FLOAT A 1 ACROSS A  DOUBLEWORD  IN BITS 1,35,37,71.
  5547					;*	  FROM THIS NUMBER IS SUBTRACTED THE SMALLEST (MAGNITUDE)
  5548					;*	  NEGATIVE INTEGER WHICH WILL PRODUCE AN OVERFLOW - THE RESULT
  5549					;*	  IS A DOUBLEWORD OF 0'S WITH 1 IN THE SIGN BIT - WITH OVERFLOW
  5550					;*	  & CARRY 1 SET.  THE NEXT 4 TESTS FLOAT A 0 ACROSS A DOUBLE-
  5551					;*	  WORD IN BITS 1,35,37,71 (A NEG NUMBER). FROM THIS NUMBER IS
  5552					;*	  SUBTRACTED THE SMALLEST POSITIVE INTEGER WHICH WILL PRODUCE
  5553					;*	  AN OVERFLOW - THE RESULT IS A DOUBLEWORD OF 1S WITH A 0 IN
  5554					;*	  THE SIGN BIT - WITH OVERFLOW AND CARRY 0 SET.
  5555					;*	  THE DOUBLEWORDS  USED IN THIS  TEST ARE LOCATED IN THE LIST
  5556					;*	  'SCOND'.
  5557					; **********************************************************************
  5558
  5559			035370			CNUM=SCOND-4			;POINTER TO THE DOUBLEWORDS TO
  5560										;  BE SUBTRACTED
  5561			000000			REP=0				;REPETITION COUNT
  5562		400000	000000			RESULT=1B0			;1B0 FOR 1ST 4 / 377.. FOR 2ND 4
  5563		500000	000000			FLAGS=^B1010B3			;AROV,CRY0,CRY1,FOV
  5564
  5565						REPEAT	^D8,<
  5566					;   ************************************************
  5567					
  5568						LOC=.				;ERROR LOOP RETURN ADDRESS
  5569						CNUM=CNUM+4			;POINT TO THE TEST CASE
  5570						REP=REP+1			;REPETITION COUNT
  5571						IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5572							RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5573						MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5574						DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5575						JFCL	17,.+1			;CLEAR PC FLAGS
  5576						DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5577						PCSAVE
  5578						CHECKS	(LOC,D,RESULT,RESULT)
  5579						MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5580						TFLAG	([FLAGS],D,SPRINT)
  5581					;   ************************************************
  5582					>
  5583
  5584					;   ************************************************
  5585
  5586			035103			LOC=.				;ERROR LOOP RETURN ADDRESS
  5587			035374			CNUM=CNUM+4			;POINT TO THE TEST CASE
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-1
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0140

  5588			000001			REP=REP+1			;REPETITION COUNT
  5589						IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5590							RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5591	035103	200 15 0 00 042077 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5592	035104	120 01 0 00 035374 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5593	035105	255 17 0 00 035106 		JFCL	17,.+1			;CLEAR PC FLAGS
  5594	035106	115 01 0 00 035376 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5595						PCSAVE^
  5596	035107	264 00 0 00 035110 		JSR	.+1		;STORE PC
  5597			035110		FLAGL=.				;LOCATION OF PC
  5598	035110	000000	000000			0			;PC
  5599					^
  5600						CHECKS	(LOC,D,RESULT,RESULT)^
  5601
  5602	035111	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5603	035112	312 01 0 00 041725 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5604	035113	254 00 0 00 035117 		JRST	..0323		;NO - GO TO ERROR HANDLING
  5605	035114	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5606	035115	316 02 0 00 041725 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5607	035116	254 00 0 00 035122 		JRST	..0324+1  	;YES - DONT DO ERROR HANDLING
  5608									;	EXCEPT FOR ERLOOP
  5609
  5610	035117	200 14 0 13 000001 	..0323:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5611	035120	200 13 0 13 042100 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5612	035121				..0324:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5613	035121	036 14 0 00 042107 
  5614	035122	255 00 0 00 000000
  5615					^
  5616					^
  5617	035123	200 15 0 00 042077 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5618						TFLAG	([FLAGS],D,SPRINT)^
  5619
  5620	035124	200 13 0 00 035110 		MOVE	SCR1,FLAGL	;GET FLAGS
  5621	035125	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5622	035126	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  5623	035127	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5624						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5625	035130	036 13 0 00 042121 
  5626	035131	255 00 0 00 000000
  5627					^
  5628					^
  5629					;   ************************************************
  5630
  5631
  5632					;   ************************************************
  5633
  5634			035132			LOC=.				;ERROR LOOP RETURN ADDRESS
  5635			035400			CNUM=CNUM+4			;POINT TO THE TEST CASE
  5636			000002			REP=REP+1			;REPETITION COUNT
  5637						IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5638							RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5639	035132	200 15 0 00 042124 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5640	035133	120 01 0 00 035400 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5641	035134	255 17 0 00 035135 		JFCL	17,.+1			;CLEAR PC FLAGS
  5642	035135	115 01 0 00 035402 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-2
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0141

  5643						PCSAVE^
  5644	035136	264 00 0 00 035137 		JSR	.+1		;STORE PC
  5645			035137		FLAGL=.				;LOCATION OF PC
  5646	035137	000000	000000			0			;PC
  5647					^
  5648						CHECKS	(LOC,D,RESULT,RESULT)^
  5649
  5650	035140	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5651	035141	312 01 0 00 041725 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5652	035142	254 00 0 00 035146 		JRST	..0325		;NO - GO TO ERROR HANDLING
  5653	035143	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5654	035144	316 02 0 00 041725 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5655	035145	254 00 0 00 035151 		JRST	..0326+1  	;YES - DONT DO ERROR HANDLING
  5656									;	EXCEPT FOR ERLOOP
  5657
  5658	035146	200 14 0 13 000001 	..0325:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5659	035147	200 13 0 13 042100 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5660	035150				..0326:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5661	035150	036 14 0 00 042107 
  5662	035151	255 00 0 00 000000
  5663					^
  5664					^
  5665	035152	200 15 0 00 042124 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5666						TFLAG	([FLAGS],D,SPRINT)^
  5667
  5668	035153	200 13 0 00 035137 		MOVE	SCR1,FLAGL	;GET FLAGS
  5669	035154	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5670	035155	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  5671	035156	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5672						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5673	035157	036 13 0 00 042125 
  5674	035160	255 00 0 00 000000
  5675					^
  5676					^
  5677					;   ************************************************
  5678
  5679
  5680					;   ************************************************
  5681
  5682			035161			LOC=.				;ERROR LOOP RETURN ADDRESS
  5683			035404			CNUM=CNUM+4			;POINT TO THE TEST CASE
  5684			000003			REP=REP+1			;REPETITION COUNT
  5685						IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5686							RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5687	035161	200 15 0 00 042130 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5688	035162	120 01 0 00 035404 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5689	035163	255 17 0 00 035164 		JFCL	17,.+1			;CLEAR PC FLAGS
  5690	035164	115 01 0 00 035406 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5691						PCSAVE^
  5692	035165	264 00 0 00 035166 		JSR	.+1		;STORE PC
  5693			035166		FLAGL=.				;LOCATION OF PC
  5694	035166	000000	000000			0			;PC
  5695					^
  5696						CHECKS	(LOC,D,RESULT,RESULT)^
  5697
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-3
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0142

  5698	035167	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5699	035170	312 01 0 00 041725 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5700	035171	254 00 0 00 035175 		JRST	..0327		;NO - GO TO ERROR HANDLING
  5701	035172	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5702	035173	316 02 0 00 041725 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5703	035174	254 00 0 00 035200 		JRST	..0330+1  	;YES - DONT DO ERROR HANDLING
  5704									;	EXCEPT FOR ERLOOP
  5705
  5706	035175	200 14 0 13 000001 	..0327:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5707	035176	200 13 0 13 042100 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5708	035177				..0330:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5709	035177	036 14 0 00 042107 
  5710	035200	255 00 0 00 000000
  5711					^
  5712					^
  5713	035201	200 15 0 00 042130 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5714						TFLAG	([FLAGS],D,SPRINT)^
  5715
  5716	035202	200 13 0 00 035166 		MOVE	SCR1,FLAGL	;GET FLAGS
  5717	035203	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5718	035204	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  5719	035205	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5720						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5721	035206	036 13 0 00 042131 
  5722	035207	255 00 0 00 000000
  5723					^
  5724					^
  5725					;   ************************************************
  5726
  5727
  5728					;   ************************************************
  5729
  5730			035210			LOC=.				;ERROR LOOP RETURN ADDRESS
  5731			035410			CNUM=CNUM+4			;POINT TO THE TEST CASE
  5732			000004			REP=REP+1			;REPETITION COUNT
  5733						IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5734							RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5735	035210	200 15 0 00 042134 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5736	035211	120 01 0 00 035410 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5737	035212	255 17 0 00 035213 		JFCL	17,.+1			;CLEAR PC FLAGS
  5738	035213	115 01 0 00 035412 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5739						PCSAVE^
  5740	035214	264 00 0 00 035215 		JSR	.+1		;STORE PC
  5741			035215		FLAGL=.				;LOCATION OF PC
  5742	035215	000000	000000			0			;PC
  5743					^
  5744						CHECKS	(LOC,D,RESULT,RESULT)^
  5745
  5746	035216	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5747	035217	312 01 0 00 041725 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5748	035220	254 00 0 00 035224 		JRST	..0331		;NO - GO TO ERROR HANDLING
  5749	035221	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5750	035222	316 02 0 00 041725 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5751	035223	254 00 0 00 035227 		JRST	..0332+1  	;YES - DONT DO ERROR HANDLING
  5752									;	EXCEPT FOR ERLOOP
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-4
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0143

  5753
  5754	035224	200 14 0 13 000001 	..0331:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5755	035225	200 13 0 13 042100 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5756	035226				..0332:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5757	035226	036 14 0 00 042107 
  5758	035227	255 00 0 00 000000
  5759					^
  5760					^
  5761	035230	200 15 0 00 042134 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5762						TFLAG	([FLAGS],D,SPRINT)^
  5763
  5764	035231	200 13 0 00 035215 		MOVE	SCR1,FLAGL	;GET FLAGS
  5765	035232	200 14 0 00 041634 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5766	035233	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  5767	035234	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5768						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5769	035235	036 13 0 00 042135 
  5770	035236	255 00 0 00 000000
  5771					^
  5772					^
  5773					;   ************************************************
  5774
  5775
  5776					;   ************************************************
  5777
  5778			035237			LOC=.				;ERROR LOOP RETURN ADDRESS
  5779			035414			CNUM=CNUM+4			;POINT TO THE TEST CASE
  5780			000005			REP=REP+1			;REPETITION COUNT
  5781		600000	000000			IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5782		377777	777777				RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5783	035237	200 15 0 00 042140 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5784	035240	120 01 0 00 035414 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5785	035241	255 17 0 00 035242 		JFCL	17,.+1			;CLEAR PC FLAGS
  5786	035242	115 01 0 00 035416 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5787						PCSAVE^
  5788	035243	264 00 0 00 035244 		JSR	.+1		;STORE PC
  5789			035244		FLAGL=.				;LOCATION OF PC
  5790	035244	000000	000000			0			;PC
  5791					^
  5792						CHECKS	(LOC,D,RESULT,RESULT)^
  5793
  5794	035245	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5795	035246	312 01 0 00 042141 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5796	035247	254 00 0 00 035253 		JRST	..0333		;NO - GO TO ERROR HANDLING
  5797	035250	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5798	035251	316 02 0 00 042141 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5799	035252	254 00 0 00 035256 		JRST	..0334+1  	;YES - DONT DO ERROR HANDLING
  5800									;	EXCEPT FOR ERLOOP
  5801
  5802	035253	200 14 0 13 000001 	..0333:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5803	035254	200 13 0 13 042141 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5804	035255				..0334:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5805	035255	036 14 0 00 042107 
  5806	035256	255 00 0 00 000000
  5807					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-5
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0144

  5808					^
  5809	035257	200 15 0 00 042140 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5810						TFLAG	([FLAGS],D,SPRINT)^
  5811
  5812	035260	200 13 0 00 035244 		MOVE	SCR1,FLAGL	;GET FLAGS
  5813	035261	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5814	035262	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  5815	035263	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5816						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5817	035264	036 13 0 00 042143 
  5818	035265	255 00 0 00 000000
  5819					^
  5820					^
  5821					;   ************************************************
  5822
  5823
  5824					;   ************************************************
  5825
  5826			035266			LOC=.				;ERROR LOOP RETURN ADDRESS
  5827			035420			CNUM=CNUM+4			;POINT TO THE TEST CASE
  5828			000006			REP=REP+1			;REPETITION COUNT
  5829		600000	000000			IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5830		377777	777777				RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5831	035266	200 15 0 00 042146 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5832	035267	120 01 0 00 035420 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5833	035270	255 17 0 00 035271 		JFCL	17,.+1			;CLEAR PC FLAGS
  5834	035271	115 01 0 00 035422 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5835						PCSAVE^
  5836	035272	264 00 0 00 035273 		JSR	.+1		;STORE PC
  5837			035273		FLAGL=.				;LOCATION OF PC
  5838	035273	000000	000000			0			;PC
  5839					^
  5840						CHECKS	(LOC,D,RESULT,RESULT)^
  5841
  5842	035274	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5843	035275	312 01 0 00 042141 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5844	035276	254 00 0 00 035302 		JRST	..0335		;NO - GO TO ERROR HANDLING
  5845	035277	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5846	035300	316 02 0 00 042141 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5847	035301	254 00 0 00 035305 		JRST	..0336+1  	;YES - DONT DO ERROR HANDLING
  5848									;	EXCEPT FOR ERLOOP
  5849
  5850	035302	200 14 0 13 000001 	..0335:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5851	035303	200 13 0 13 042141 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5852	035304				..0336:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5853	035304	036 14 0 00 042107 
  5854	035305	255 00 0 00 000000
  5855					^
  5856					^
  5857	035306	200 15 0 00 042146 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5858						TFLAG	([FLAGS],D,SPRINT)^
  5859
  5860	035307	200 13 0 00 035273 		MOVE	SCR1,FLAGL	;GET FLAGS
  5861	035310	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5862	035311	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-6
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0145

  5863	035312	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5864						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5865	035313	036 13 0 00 042147 
  5866	035314	255 00 0 00 000000
  5867					^
  5868					^
  5869					;   ************************************************
  5870
  5871
  5872					;   ************************************************
  5873
  5874			035315			LOC=.				;ERROR LOOP RETURN ADDRESS
  5875			035424			CNUM=CNUM+4			;POINT TO THE TEST CASE
  5876			000007			REP=REP+1			;REPETITION COUNT
  5877		600000	000000			IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5878		377777	777777				RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5879	035315	200 15 0 00 042152 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5880	035316	120 01 0 00 035424 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5881	035317	255 17 0 00 035320 		JFCL	17,.+1			;CLEAR PC FLAGS
  5882	035320	115 01 0 00 035426 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5883						PCSAVE^
  5884	035321	264 00 0 00 035322 		JSR	.+1		;STORE PC
  5885			035322		FLAGL=.				;LOCATION OF PC
  5886	035322	000000	000000			0			;PC
  5887					^
  5888						CHECKS	(LOC,D,RESULT,RESULT)^
  5889
  5890	035323	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5891	035324	312 01 0 00 042141 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5892	035325	254 00 0 00 035331 		JRST	..0337		;NO - GO TO ERROR HANDLING
  5893	035326	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5894	035327	316 02 0 00 042141 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5895	035330	254 00 0 00 035334 		JRST	..0340+1  	;YES - DONT DO ERROR HANDLING
  5896									;	EXCEPT FOR ERLOOP
  5897
  5898	035331	200 14 0 13 000001 	..0337:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5899	035332	200 13 0 13 042141 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5900	035333				..0340:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5901	035333	036 14 0 00 042107 
  5902	035334	255 00 0 00 000000
  5903					^
  5904					^
  5905	035335	200 15 0 00 042152 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5906						TFLAG	([FLAGS],D,SPRINT)^
  5907
  5908	035336	200 13 0 00 035322 		MOVE	SCR1,FLAGL	;GET FLAGS
  5909	035337	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5910	035340	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  5911	035341	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5912						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5913	035342	036 13 0 00 042153 
  5914	035343	255 00 0 00 000000
  5915					^
  5916					^
  5917					;   ************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-7
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0146

  5918
  5919
  5920					;   ************************************************
  5921
  5922			035344			LOC=.				;ERROR LOOP RETURN ADDRESS
  5923			035430			CNUM=CNUM+4			;POINT TO THE TEST CASE
  5924			000010			REP=REP+1			;REPETITION COUNT
  5925		600000	000000			IFG REP-4,<FLAGS=^B1100B3	;FLAGS FOR SECOND 4 CASES
  5926		377777	777777				RESULT=377777777777>	;LARGEST POSITIVE NUMBER
  5927	035344	200 15 0 00 042156 		MOVE	SCR3,[CNUM,,CNUM+2]	;ADDRESS OF ADDL ERROR PRINT
  5928	035345	120 01 0 00 035430 		DMOVE	AC1,CNUM		;INIT MINUEND TO FLOATING 0/1
  5929	035346	255 17 0 00 035347 		JFCL	17,.+1			;CLEAR PC FLAGS
  5930	035347	115 01 0 00 035432 		DSUB	AC1,CNUM+2		;MAKE IT OVERFLOW (POS OR NEG)
  5931						PCSAVE^
  5932	035350	264 00 0 00 035351 		JSR	.+1		;STORE PC
  5933			035351		FLAGL=.				;LOCATION OF PC
  5934	035351	000000	000000			0			;PC
  5935					^
  5936						CHECKS	(LOC,D,RESULT,RESULT)^
  5937
  5938	035352	400 13 0 00 000000 		SETZ	SCR1,		;POINTER TO WHICH WORD IN ERROR
  5939	035353	312 01 0 00 042141 		CAME	AC1,[RESULT]	;IS LEFT HALF OF RESULT CORRECT?
  5940	035354	254 00 0 00 035360 		JRST	..0341		;NO - GO TO ERROR HANDLING
  5941	035355	201 13 0 00 000001 		MOVEI	SCR1,1		;YES, POINTER TO RIGHT HALF
  5942	035356	316 02 0 00 042141 		CAMN	AC1+1,[RESULT]	;IS RIGHT HALF CORRECT?
  5943	035357	254 00 0 00 035363 		JRST	..0342+1  	;YES - DONT DO ERROR HANDLING
  5944									;	EXCEPT FOR ERLOOP
  5945
  5946	035360	200 14 0 13 000001 	..0341:	MOVE	SCR2,AC1(SCR1)	;GET ACTUAL WORD OF RESULT
  5947	035361	200 13 0 13 042141 		MOVE	SCR1,[EXP RESULT,RESULT](SCR1)	;GET CORRECT RESULT
  5948	035362				..0342:	ERROR	(LOC,14,SCR1,SCR2,,TEST D - RESULT IS INCORRECT,SPRINT)^SALL
  5949	035362	036 14 0 00 042107 
  5950	035363	255 00 0 00 000000
  5951					^
  5952					^
  5953	035364	200 15 0 00 042156 		MOVE	SCR3,[CNUM,,CNUM+2]	;SCR3 - ADDR OF ADDL ERROR PRINT
  5954						TFLAG	([FLAGS],D,SPRINT)^
  5955
  5956	035365	200 13 0 00 035351 		MOVE	SCR1,FLAGL	;GET FLAGS
  5957	035366	200 14 0 00 041664 		MOVE	SCR2,[FLAGS] 	;SCR2 - CORRECT FLAGS
  5958	035367	430 13 0 00 000014 		XOR	SCR1,SCR2	;SET ALL MATCHING BITS TO 0
  5959	035370	603 13 0 00 740000 		TLNE	SCR1,740000	;TEST IF MATCH CORRECTLY
  5960						ERROR	(LOC,13,SCR2,FLAGL,,TEST D - PC FLAGS INCORRECT (LEFT 4 BITS),SPRINT)^SALL
  5961	035371	036 13 0 00 042157 
  5962	035372	200 17 0 00 030303
  5963					^
  5964					^
  5965					;   ************************************************
  5966
  5967	035373	254 00 0 00 035434 		JRST	SENDD			;SKIP OVER DATA
  5968
  5969					; **********************************************************************
  5970					;	8 SETS OF 3 DOUBLEWORDS (MINUEND,SUBTRAHEND,RESULT)
  5971					; **********************************************************************
  5972
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 17-8
DSKCFM	MAC	26-Sep-79 15:49		DSUB - TEST D                                                                      SEQ 0147

  5973	035374	200000	000000		SCOND:	EXP	1B1,0,^B11B1,0
  5974	035375	000000	000000
  5975	035376	600000	000000
  5976	035377	000000	000000
  5977	035400	000000	000001			EXP	1,0,1B0+1,0
  5978	035401	000000	000000
  5979	035402	400000	000001
  5980	035403	000000	000000
  5981	035404	000000	000000			EXP	0,1B1,1B0,1B1
  5982	035405	200000	000000
  5983	035406	400000	000000
  5984	035407	200000	000000
  5985	035410	000000	000000			EXP	0,1,1B0,1
  5986	035411	000000	000001
  5987	035412	400000	000000
  5988	035413	000000	000001
  5989	035414	577777	777777			EXP	577777777777,-1,1B1,0
  5990	035415	777777	777777
  5991	035416	200000	000000
  5992	035417	000000	000000
  5993	035420	777777	777776			EXP	777777777776,-1,377777777777,0
  5994	035421	777777	777777
  5995	035422	377777	777777
  5996	035423	000000	000000
  5997	035424	777777	777777			EXP	-1,577777777777,377777777777,^B11B1
  5998	035425	577777	777777
  5999	035426	377777	777777
  6000	035427	600000	000000
  6001	035430	777777	777777			EXP	-1,-2,377777777777,-1
  6002	035431	777777	777776
  6003	035432	377777	777777
  6004	035433	777777	777777
  6005	035434				SENDD:
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 18
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST A                                                                      SEQ 0148

  6006					SUBTTL	DMUL - TEST A
  6007														SALL
  6008			042162			T=SIXBTZ<DMUL TEST>
  6009														LALL
  6010					; **********************************************************************
  6011					;*DMUL - TEST A
  6012					;*
  6013					;*	0,# * 0 = 0	0 * 0,# = 0	THESE ARE GENERAL TESTS TO
  6014					;*	#,0 * 0 = 0	0 * #,0 = 0	ASCERTAIN THAT THE DMUL CAN
  6015					;*	#,# * 0 = 0	0 * #,# = 0	HANDLE DOUBLEWORDS.  THE ACS
  6016					;*      -1,-# * 0 = 0	0 * -1,-# = 0	WILL CONTAIN THE RESULT ARE
  6017					;*      -#,0 * 0 = 0	0 * -#,0 = 0	FILLED WITH GARBAGE AND THE
  6018					;*      -#,-# * 0 = 0	0 * -#,-# = 0	RESULT IS CHECKED TO SEE THAT
  6019					;*	0,0 * 0 = 0			DMUL PRODUCES A 4-WORD LONG
  6020					;*					RESULT IN THE ACS.
  6021					; **********************************************************************
  6022
  6023					; **********************************************************************
  6024					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6025					; **********************************************************************
  6026
  6027						MULT	(A,0,NUM)^
  6028
  6029					; --- MULTIPLICAND = (0,NUM)
  6030					; --- MULTIPLIER === (0,0)
  6031					; --- RESULT ======= (0,0,0,0)
  6032
  6033	035434	200 01 0 00 042174 	..0343:	MOVE	AC1,[[EXP 0,NUM,0,0,0,0,0,0],,MCAND]
  6034	035435	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6035	035436	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6036						ERROR	(..0343,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6037	035437	036 14 0 00 042204 
  6038	035440	255 00 0 00 000000
  6039					^
  6040					^
  6041
  6042					; **********************************************************************
  6043					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6044					; **********************************************************************
  6045
  6046						MULT	(A,NUM)^
  6047
  6048					; --- MULTIPLICAND = (NUM,0)
  6049					; --- MULTIPLIER === (0,0)
  6050					; --- RESULT ======= (0,0,0,0)
  6051
  6052	035441	200 01 0 00 042217 	..0344:	MOVE	AC1,[[EXP NUM,0,0,0,0,0,0,0],,MCAND]
  6053	035442	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6054	035443	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6055						ERROR	(..0344,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6056	035444	036 14 0 00 042204 
  6057	035445	255 00 0 00 000000
  6058					^
  6059					^
  6060
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 18-1
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST A                                                                      SEQ 0149

  6061					; **********************************************************************
  6062					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6063					; **********************************************************************
  6064
  6065						MULT	(A,NUM,NUM)^
  6066
  6067					; --- MULTIPLICAND = (NUM,NUM)
  6068					; --- MULTIPLIER === (0,0)
  6069					; --- RESULT ======= (0,0,0,0)
  6070
  6071	035446	200 01 0 00 042230 	..0345:	MOVE	AC1,[[EXP NUM,NUM,0,0,0,0,0,0],,MCAND]
  6072	035447	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6073	035450	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6074						ERROR	(..0345,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6075	035451	036 14 0 00 042204 
  6076	035452	255 00 0 00 000000
  6077					^
  6078					^
  6079
  6080					; **********************************************************************
  6081					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6082					; **********************************************************************
  6083
  6084						MULT	(A,0,0,0,NUM)^
  6085
  6086					; --- MULTIPLICAND = (0,0)
  6087					; --- MULTIPLIER === (0,NUM)
  6088					; --- RESULT ======= (0,0,0,0)
  6089
  6090	035453	200 01 0 00 042241 	..0346:	MOVE	AC1,[[EXP 0,0,0,NUM,0,0,0,0],,MCAND]
  6091	035454	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6092	035455	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6093						ERROR	(..0346,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6094	035456	036 14 0 00 042204 
  6095	035457	255 00 0 00 000000
  6096					^
  6097					^
  6098
  6099					; **********************************************************************
  6100					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6101					; **********************************************************************
  6102
  6103						MULT	(A,0,0,NUM)^
  6104
  6105					; --- MULTIPLICAND = (0,0)
  6106					; --- MULTIPLIER === (NUM,0)
  6107					; --- RESULT ======= (0,0,0,0)
  6108
  6109	035460	200 01 0 00 042252 	..0347:	MOVE	AC1,[[EXP 0,0,NUM,0,0,0,0,0],,MCAND]
  6110	035461	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6111	035462	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6112						ERROR	(..0347,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6113	035463	036 14 0 00 042204 
  6114	035464	255 00 0 00 000000
  6115					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 18-2
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST A                                                                      SEQ 0150

  6116					^
  6117
  6118					; **********************************************************************
  6119					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6120					; **********************************************************************
  6121
  6122						MULT	(A,0,0,NUM,NUM)^
  6123
  6124					; --- MULTIPLICAND = (0,0)
  6125					; --- MULTIPLIER === (NUM,NUM)
  6126					; --- RESULT ======= (0,0,0,0)
  6127
  6128	035465	200 01 0 00 042263 	..0350:	MOVE	AC1,[[EXP 0,0,NUM,NUM,0,0,0,0],,MCAND]
  6129	035466	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6130	035467	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6131						ERROR	(..0350,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6132	035470	036 14 0 00 042204 
  6133	035471	255 00 0 00 000000
  6134					^
  6135					^
  6136
  6137					; **********************************************************************
  6138					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6139					; **********************************************************************
  6140
  6141						MULT	(A,-1,-NUM)^
  6142
  6143					; --- MULTIPLICAND = (-1,-NUM)
  6144					; --- MULTIPLIER === (0,0)
  6145					; --- RESULT ======= (0,0,0,0)
  6146
  6147	035472	200 01 0 00 042274 	..0351:	MOVE	AC1,[[EXP -1,-NUM,0,0,0,0,0,0],,MCAND]
  6148	035473	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6149	035474	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6150						ERROR	(..0351,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6151	035475	036 14 0 00 042204 
  6152	035476	255 00 0 00 000000
  6153					^
  6154					^
  6155
  6156					; **********************************************************************
  6157					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6158					; **********************************************************************
  6159
  6160						MULT	(A,-NUM,-1)^
  6161
  6162					; --- MULTIPLICAND = (-NUM,-1)
  6163					; --- MULTIPLIER === (0,0)
  6164					; --- RESULT ======= (0,0,0,0)
  6165
  6166	035477	200 01 0 00 042305 	..0352:	MOVE	AC1,[[EXP -NUM,-1,0,0,0,0,0,0],,MCAND]
  6167	035500	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6168	035501	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6169						ERROR	(..0352,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6170	035502	036 14 0 00 042204 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 18-3
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST A                                                                      SEQ 0151

  6171	035503	255 00 0 00 000000
  6172					^
  6173					^
  6174
  6175					; **********************************************************************
  6176					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6177					; **********************************************************************
  6178
  6179						MULT	(A,-NUM,-NUM)^
  6180
  6181					; --- MULTIPLICAND = (-NUM,-NUM)
  6182					; --- MULTIPLIER === (0,0)
  6183					; --- RESULT ======= (0,0,0,0)
  6184
  6185	035504	200 01 0 00 042316 	..0353:	MOVE	AC1,[[EXP -NUM,-NUM,0,0,0,0,0,0],,MCAND]
  6186	035505	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6187	035506	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6188						ERROR	(..0353,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6189	035507	036 14 0 00 042204 
  6190	035510	255 00 0 00 000000
  6191					^
  6192					^
  6193
  6194					; **********************************************************************
  6195					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6196					; **********************************************************************
  6197
  6198						MULT	(A,0,0,-1,-NUM)^
  6199
  6200					; --- MULTIPLICAND = (0,0)
  6201					; --- MULTIPLIER === (-1,-NUM)
  6202					; --- RESULT ======= (0,0,0,0)
  6203
  6204	035511	200 01 0 00 042327 	..0354:	MOVE	AC1,[[EXP 0,0,-1,-NUM,0,0,0,0],,MCAND]
  6205	035512	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6206	035513	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6207						ERROR	(..0354,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6208	035514	036 14 0 00 042204 
  6209	035515	255 00 0 00 000000
  6210					^
  6211					^
  6212
  6213					; **********************************************************************
  6214					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6215					; **********************************************************************
  6216
  6217						MULT	(A,0,0,-NUM,-1)^
  6218
  6219					; --- MULTIPLICAND = (0,0)
  6220					; --- MULTIPLIER === (-NUM,-1)
  6221					; --- RESULT ======= (0,0,0,0)
  6222
  6223	035516	200 01 0 00 042340 	..0355:	MOVE	AC1,[[EXP 0,0,-NUM,-1,0,0,0,0],,MCAND]
  6224	035517	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6225	035520	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 18-4
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST A                                                                      SEQ 0152

  6226						ERROR	(..0355,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6227	035521	036 14 0 00 042204 
  6228	035522	255 00 0 00 000000
  6229					^
  6230					^
  6231
  6232					; **********************************************************************
  6233					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6234					; **********************************************************************
  6235
  6236						MULT	(A,0,0,-NUM,-NUM)^
  6237
  6238					; --- MULTIPLICAND = (0,0)
  6239					; --- MULTIPLIER === (-NUM,-NUM)
  6240					; --- RESULT ======= (0,0,0,0)
  6241
  6242	035523	200 01 0 00 042351 	..0356:	MOVE	AC1,[[EXP 0,0,-NUM,-NUM,0,0,0,0],,MCAND]
  6243	035524	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6244	035525	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6245						ERROR	(..0356,14,SCR1,SCR2,,TEST A - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6246	035526	036 14 0 00 042204 
  6247	035527	255 00 0 00 000000
  6248					^
  6249					^
  6250
  6251					; **********************************************************************
  6252					; ----------  DMUL - TEST A  -  # * 0 = 0  ----------
  6253					; **********************************************************************
  6254
  6255						MULT^
  6256
  6257					; --- MULTIPLICAND = (0,0)
  6258					; --- MULTIPLIER === (0,0)
  6259					; --- RESULT ======= (0,0,0,0)
  6260
  6261	035530	200 01 0 00 042362 	..0357:	MOVE	AC1,[[EXP 0,0,0,0,0,0,0,0],,MCAND]
  6262	035531	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6263	035532	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6264						ERROR	(..0357,14,SCR1,SCR2,,TEST  - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6265	035533	036 14 0 00 042372 
  6266	035534	255 00 0 00 000000
  6267					^
  6268					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 19
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST B                                                                      SEQ 0153

  6269					SUBTTL	DMUL - TEST B
  6270
  6271					; **********************************************************************
  6272					;*DMUL - TEST B
  6273					;*
  6274					;*	0,# * 1 = 0,#		THESE TEST THE DMUL ON A SLIGHTLY
  6275					;*	#,0 * 1 = #,0		STEEPER GRADIENT.  THIS WILL VERIFY
  6276					;*	#,# * 1 = #,#		THAT THE DMUL HANDLES DOUBLEWORDS AND
  6277					;*	-1,-# * 1 = -1,-#	A NON-ZERO MULTIPLIER.  THESE TESTS ARE
  6278					;*	-#,-1 * 1 = -#,-1	REPEATED WITH THE MULTIPLICAND AND THE
  6279					;*	-#,-# * 1 = -#,-#	MULTIPLIER REVERSED.
  6280					; **********************************************************************
  6281
  6282					; **********************************************************************
  6283					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6284					; **********************************************************************
  6285
  6286						MULT	(B,0,NUM,0,1,0,0,0,NUM)^
  6287
  6288					; --- MULTIPLICAND = (0,NUM)
  6289					; --- MULTIPLIER === (0,1)
  6290					; --- RESULT ======= (0,0,0,NUM)
  6291
  6292	035535	200 01 0 00 042405 	..0360:	MOVE	AC1,[[EXP 0,NUM,0,1,0,0,0,NUM],,MCAND]
  6293	035536	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6294	035537	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6295						ERROR	(..0360,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6296	035540	036 14 0 00 042415 
  6297	035541	255 00 0 00 000000
  6298					^
  6299					^
  6300
  6301					; **********************************************************************
  6302					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6303					; **********************************************************************
  6304
  6305						MULT	(B,NUM,0,0,1,0,0,NUM)^
  6306
  6307					; --- MULTIPLICAND = (NUM,0)
  6308					; --- MULTIPLIER === (0,1)
  6309					; --- RESULT ======= (0,0,NUM,0)
  6310
  6311	035542	200 01 0 00 042430 	..0361:	MOVE	AC1,[[EXP NUM,0,0,1,0,0,NUM,0],,MCAND]
  6312	035543	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6313	035544	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6314						ERROR	(..0361,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6315	035545	036 14 0 00 042415 
  6316	035546	255 00 0 00 000000
  6317					^
  6318					^
  6319
  6320					; **********************************************************************
  6321					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6322					; **********************************************************************
  6323
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 19-1
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST B                                                                      SEQ 0154

  6324						MULT	(B,NUM,NUM,0,1,0,0,NUM,NUM)^
  6325
  6326					; --- MULTIPLICAND = (NUM,NUM)
  6327					; --- MULTIPLIER === (0,1)
  6328					; --- RESULT ======= (0,0,NUM,NUM)
  6329
  6330	035547	200 01 0 00 042441 	..0362:	MOVE	AC1,[[EXP NUM,NUM,0,1,0,0,NUM,NUM],,MCAND]
  6331	035550	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6332	035551	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6333						ERROR	(..0362,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6334	035552	036 14 0 00 042415 
  6335	035553	255 00 0 00 000000
  6336					^
  6337					^
  6338
  6339					; **********************************************************************
  6340					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6341					; **********************************************************************
  6342
  6343						MULT	(B,0,1,0,NUM,0,0,0,NUM)^
  6344
  6345					; --- MULTIPLICAND = (0,1)
  6346					; --- MULTIPLIER === (0,NUM)
  6347					; --- RESULT ======= (0,0,0,NUM)
  6348
  6349	035554	200 01 0 00 042452 	..0363:	MOVE	AC1,[[EXP 0,1,0,NUM,0,0,0,NUM],,MCAND]
  6350	035555	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6351	035556	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6352						ERROR	(..0363,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6353	035557	036 14 0 00 042415 
  6354	035560	255 00 0 00 000000
  6355					^
  6356					^
  6357
  6358					; **********************************************************************
  6359					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6360					; **********************************************************************
  6361
  6362						MULT	(B,0,1,NUM,0,0,0,NUM)^
  6363
  6364					; --- MULTIPLICAND = (0,1)
  6365					; --- MULTIPLIER === (NUM,0)
  6366					; --- RESULT ======= (0,0,NUM,0)
  6367
  6368	035561	200 01 0 00 042463 	..0364:	MOVE	AC1,[[EXP 0,1,NUM,0,0,0,NUM,0],,MCAND]
  6369	035562	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6370	035563	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6371						ERROR	(..0364,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6372	035564	036 14 0 00 042415 
  6373	035565	255 00 0 00 000000
  6374					^
  6375					^
  6376
  6377					; **********************************************************************
  6378					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 19-2
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST B                                                                      SEQ 0155

  6379					; **********************************************************************
  6380
  6381						MULT	(B,0,1,NUM,NUM,0,0,NUM,NUM)^
  6382
  6383					; --- MULTIPLICAND = (0,1)
  6384					; --- MULTIPLIER === (NUM,NUM)
  6385					; --- RESULT ======= (0,0,NUM,NUM)
  6386
  6387	035566	200 01 0 00 042474 	..0365:	MOVE	AC1,[[EXP 0,1,NUM,NUM,0,0,NUM,NUM],,MCAND]
  6388	035567	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6389	035570	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6390						ERROR	(..0365,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6391	035571	036 14 0 00 042415 
  6392	035572	255 00 0 00 000000
  6393					^
  6394					^
  6395
  6396					; **********************************************************************
  6397					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6398					; **********************************************************************
  6399
  6400						MULT	(B,-1,-NUM,0,1,-1,-1,-1,-NUM)^
  6401
  6402					; --- MULTIPLICAND = (-1,-NUM)
  6403					; --- MULTIPLIER === (0,1)
  6404					; --- RESULT ======= (-1,-1,-1,-NUM)
  6405
  6406	035573	200 01 0 00 042505 	..0366:	MOVE	AC1,[[EXP -1,-NUM,0,1,-1,-1,-1,-NUM],,MCAND]
  6407	035574	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6408	035575	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6409						ERROR	(..0366,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6410	035576	036 14 0 00 042415 
  6411	035577	255 00 0 00 000000
  6412					^
  6413					^
  6414
  6415					; **********************************************************************
  6416					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6417					; **********************************************************************
  6418
  6419						MULT	(B,-NUM,-1,0,1,-1,-1,-NUM,-1)^
  6420
  6421					; --- MULTIPLICAND = (-NUM,-1)
  6422					; --- MULTIPLIER === (0,1)
  6423					; --- RESULT ======= (-1,-1,-NUM,-1)
  6424
  6425	035600	200 01 0 00 042516 	..0367:	MOVE	AC1,[[EXP -NUM,-1,0,1,-1,-1,-NUM,-1],,MCAND]
  6426	035601	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6427	035602	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6428						ERROR	(..0367,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6429	035603	036 14 0 00 042415 
  6430	035604	255 00 0 00 000000
  6431					^
  6432					^
  6433
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 19-3
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST B                                                                      SEQ 0156

  6434					; **********************************************************************
  6435					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6436					; **********************************************************************
  6437
  6438						MULT	(B,-NUM,-NUM,0,1,-1,-1,-NUM,-NUM)^
  6439
  6440					; --- MULTIPLICAND = (-NUM,-NUM)
  6441					; --- MULTIPLIER === (0,1)
  6442					; --- RESULT ======= (-1,-1,-NUM,-NUM)
  6443
  6444	035605	200 01 0 00 042527 	..0370:	MOVE	AC1,[[EXP -NUM,-NUM,0,1,-1,-1,-NUM,-NUM],,MCAND]
  6445	035606	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6446	035607	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6447						ERROR	(..0370,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6448	035610	036 14 0 00 042415 
  6449	035611	255 00 0 00 000000
  6450					^
  6451					^
  6452
  6453					; **********************************************************************
  6454					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6455					; **********************************************************************
  6456
  6457						MULT	(B,0,1,-1,-NUM,-1,-1,-1,-NUM)^
  6458
  6459					; --- MULTIPLICAND = (0,1)
  6460					; --- MULTIPLIER === (-1,-NUM)
  6461					; --- RESULT ======= (-1,-1,-1,-NUM)
  6462
  6463	035612	200 01 0 00 042540 	..0371:	MOVE	AC1,[[EXP 0,1,-1,-NUM,-1,-1,-1,-NUM],,MCAND]
  6464	035613	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6465	035614	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6466						ERROR	(..0371,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6467	035615	036 14 0 00 042415 
  6468	035616	255 00 0 00 000000
  6469					^
  6470					^
  6471
  6472					; **********************************************************************
  6473					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6474					; **********************************************************************
  6475
  6476						MULT	(B,0,1,-NUM,-1,-1,-1,-NUM,-1)^
  6477
  6478					; --- MULTIPLICAND = (0,1)
  6479					; --- MULTIPLIER === (-NUM,-1)
  6480					; --- RESULT ======= (-1,-1,-NUM,-1)
  6481
  6482	035617	200 01 0 00 042551 	..0372:	MOVE	AC1,[[EXP 0,1,-NUM,-1,-1,-1,-NUM,-1],,MCAND]
  6483	035620	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6484	035621	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6485						ERROR	(..0372,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6486	035622	036 14 0 00 042415 
  6487	035623	255 00 0 00 000000
  6488					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 19-4
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST B                                                                      SEQ 0157

  6489					^
  6490
  6491					; **********************************************************************
  6492					; ----------  DMUL - TEST B  -  # * 1 = 1  ----------
  6493					; **********************************************************************
  6494
  6495						MULT	(B,0,1,-NUM,-NUM,-1,-1,-NUM,-NUM)^
  6496
  6497					; --- MULTIPLICAND = (0,1)
  6498					; --- MULTIPLIER === (-NUM,-NUM)
  6499					; --- RESULT ======= (-1,-1,-NUM,-NUM)
  6500
  6501	035624	200 01 0 00 042562 	..0373:	MOVE	AC1,[[EXP 0,1,-NUM,-NUM,-1,-1,-NUM,-NUM],,MCAND]
  6502	035625	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6503	035626	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6504						ERROR	(..0373,14,SCR1,SCR2,,TEST B - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6505	035627	036 14 0 00 042415 
  6506	035630	255 00 0 00 000000
  6507					^
  6508					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0158

  6509					SUBTTL	DMUL - TEST C
  6510
  6511					; **********************************************************************
  6512					;*DMUL - TEST C
  6513					;*
  6514					;*	0,1777.. * 2		THESE TESTS VERIFY THAT BITS ARE
  6515					;*	0,3777.. * 2		SHIFTED ACROSS WORD BOUNDARIES. A WORD
  6516					;*	1777..,3777.. * 2	OF ONES IS MULTIPLIED BY A FLOATING 1
  6517					;*	3777..,3777.. * 2	WHICH WILL CAUSE A SHIFT ACROSS WORD
  6518					;*	0,3777.. * 1,0		BOUNDARIES OR NOT. THE TEST VERIFIES
  6519					;*	1,3777.. * 1,0		THAT THE SHIFT IS DONE PROPERLY FOR
  6520					;*	3777..,3777.. * 1,0	BOUNDARY CONDITIONS.
  6521					;*	0,1777.. * 2,0		IN EACH TEST THE PC FLAGS ARE TESTED
  6522					;*	0,3777.. * 2,0		SINCE THERE ARE NO OVERFLOW CONDITIONS
  6523					;*	3777..,3777.. * 2,0	THE LEFTMOST BIT OF THE PC SHOULD BE
  6524					;*				0 (NO AROV).
  6525					;*				THESE TESTS ARE REPEATED WITH MULT-
  6526					;*				PLICAND AND MULTIPLIER REVERSED.
  6527					; **********************************************************************
  6528
  6529					; **********************************************************************
  6530					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6531					; **********************************************************************
  6532
  6533						MULTF	(C,0,177777777777,0,2,0,0,0,377777777776)^
  6534
  6535					; --- MULTIPLICAND = (0,177777777777)
  6536					; --- MULTIPLIER === (0,2)
  6537					; --- RESULT ======= (0,0,0,377777777776)
  6538
  6539	035631	200 01 0 00 042573 	..0374:	MOVE	AC1,[[EXP 0,177777777777,0,2,0,0,0,377777777776],,MCAND]
  6540	035632	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6541	035633	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6542						ERROR	(..0374,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6543	035634	036 14 0 00 042603 
  6544	035635	255 00 0 00 000000
  6545					^
  6546
  6547	035636	200 14 0 00 040457 	..0375:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6548	035637	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6549						ERROR	(..0374,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6550					LL
  6551	035640	036 13 0 00 042615 
  6552	035641	255 00 0 00 000000
  6553					^
  6554					^
  6555
  6556					; **********************************************************************
  6557					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6558					; **********************************************************************
  6559
  6560						MULTF	(C,0,377777777777,0,2,0,0,1,377777777776)^
  6561
  6562					; --- MULTIPLICAND = (0,377777777777)
  6563					; --- MULTIPLIER === (0,2)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-1
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0159

  6564					; --- RESULT ======= (0,0,1,377777777776)
  6565
  6566	035642	200 01 0 00 042630 	..0376:	MOVE	AC1,[[EXP 0,377777777777,0,2,0,0,1,377777777776],,MCAND]
  6567	035643	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6568	035644	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6569						ERROR	(..0376,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6570	035645	036 14 0 00 042603 
  6571	035646	255 00 0 00 000000
  6572					^
  6573
  6574	035647	200 14 0 00 040457 	..0377:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6575	035650	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6576						ERROR	(..0376,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6577					LL
  6578	035651	036 13 0 00 042615 
  6579	035652	255 00 0 00 000000
  6580					^
  6581					^
  6582
  6583					; **********************************************************************
  6584					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6585					; **********************************************************************
  6586
  6587						MULTF	(C,177777777777,377777777777,0,2,0,0,377777777777,377777777776)^
  6588
  6589					; --- MULTIPLICAND = (177777777777,377777777777)
  6590					; --- MULTIPLIER === (0,2)
  6591					; --- RESULT ======= (0,0,377777777777,377777777776)
  6592
  6593					..0400:	MOVE	AC1,[[EXP 177777777777,377777777777,0,2,0,0,377777777777,377777777776],,MCA
  6594	035653	200 01 0 00 042641 	ND]
  6595	035654	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6596	035655	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6597						ERROR	(..0400,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6598	035656	036 14 0 00 042603 
  6599	035657	255 00 0 00 000000
  6600					^
  6601
  6602	035660	200 14 0 00 040457 	..0401:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6603	035661	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6604						ERROR	(..0400,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6605					LL
  6606	035662	036 13 0 00 042615 
  6607	035663	255 00 0 00 000000
  6608					^
  6609					^
  6610
  6611					; **********************************************************************
  6612					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6613					; **********************************************************************
  6614
  6615						MULTF	(C,377777777777,377777777777,0,2,0,1,377777777777,377777777776)^
  6616
  6617					; --- MULTIPLICAND = (377777777777,377777777777)
  6618					; --- MULTIPLIER === (0,2)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-2
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0160

  6619					; --- RESULT ======= (0,1,377777777777,377777777776)
  6620
  6621					..0402:	MOVE	AC1,[[EXP 377777777777,377777777777,0,2,0,1,377777777777,377777777776],,MCA
  6622	035664	200 01 0 00 042652 	ND]
  6623	035665	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6624	035666	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6625						ERROR	(..0402,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6626	035667	036 14 0 00 042603 
  6627	035670	255 00 0 00 000000
  6628					^
  6629
  6630	035671	200 14 0 00 040457 	..0403:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6631	035672	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6632						ERROR	(..0402,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6633					LL
  6634	035673	036 13 0 00 042615 
  6635	035674	255 00 0 00 000000
  6636					^
  6637					^
  6638
  6639					; **********************************************************************
  6640					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6641					; **********************************************************************
  6642
  6643						MULTF	(C,0,377777777777,1,0,0,0,377777777777)^
  6644
  6645					; --- MULTIPLICAND = (0,377777777777)
  6646					; --- MULTIPLIER === (1,0)
  6647					; --- RESULT ======= (0,0,377777777777,0)
  6648
  6649	035675	200 01 0 00 042663 	..0404:	MOVE	AC1,[[EXP 0,377777777777,1,0,0,0,377777777777,0],,MCAND]
  6650	035676	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6651	035677	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6652						ERROR	(..0404,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6653	035700	036 14 0 00 042603 
  6654	035701	255 00 0 00 000000
  6655					^
  6656
  6657	035702	200 14 0 00 040457 	..0405:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6658	035703	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6659						ERROR	(..0404,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6660					LL
  6661	035704	036 13 0 00 042615 
  6662	035705	255 00 0 00 000000
  6663					^
  6664					^
  6665
  6666					; **********************************************************************
  6667					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6668					; **********************************************************************
  6669
  6670						MULTF	(C,1,377777777777,1,0,0,1,377777777777)^
  6671
  6672					; --- MULTIPLICAND = (1,377777777777)
  6673					; --- MULTIPLIER === (1,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-3
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0161

  6674					; --- RESULT ======= (0,1,377777777777,0)
  6675
  6676	035706	200 01 0 00 042674 	..0406:	MOVE	AC1,[[EXP 1,377777777777,1,0,0,1,377777777777,0],,MCAND]
  6677	035707	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6678	035710	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6679						ERROR	(..0406,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6680	035711	036 14 0 00 042603 
  6681	035712	255 00 0 00 000000
  6682					^
  6683
  6684	035713	200 14 0 00 040457 	..0407:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6685	035714	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6686						ERROR	(..0406,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6687					LL
  6688	035715	036 13 0 00 042615 
  6689	035716	255 00 0 00 000000
  6690					^
  6691					^
  6692
  6693					; **********************************************************************
  6694					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6695					; **********************************************************************
  6696
  6697						MULTF	(C,377777777777,377777777777,1,0,0,377777777777,377777777777)^
  6698
  6699					; --- MULTIPLICAND = (377777777777,377777777777)
  6700					; --- MULTIPLIER === (1,0)
  6701					; --- RESULT ======= (0,377777777777,377777777777,0)
  6702
  6703					..0410:	MOVE	AC1,[[EXP 377777777777,377777777777,1,0,0,377777777777,377777777777,0],,MCA
  6704	035717	200 01 0 00 042705 	ND]
  6705	035720	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6706	035721	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6707						ERROR	(..0410,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6708	035722	036 14 0 00 042603 
  6709	035723	255 00 0 00 000000
  6710					^
  6711
  6712	035724	200 14 0 00 040457 	..0411:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6713	035725	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6714						ERROR	(..0410,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6715					LL
  6716	035726	036 13 0 00 042615 
  6717	035727	255 00 0 00 000000
  6718					^
  6719					^
  6720
  6721					; **********************************************************************
  6722					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6723					; **********************************************************************
  6724
  6725						MULTF	(C,0,177777777777,2,0,0,0,377777777776)^
  6726
  6727					; --- MULTIPLICAND = (0,177777777777)
  6728					; --- MULTIPLIER === (2,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-4
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0162

  6729					; --- RESULT ======= (0,0,377777777776,0)
  6730
  6731	035730	200 01 0 00 042716 	..0412:	MOVE	AC1,[[EXP 0,177777777777,2,0,0,0,377777777776,0],,MCAND]
  6732	035731	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6733	035732	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6734						ERROR	(..0412,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6735	035733	036 14 0 00 042603 
  6736	035734	255 00 0 00 000000
  6737					^
  6738
  6739	035735	200 14 0 00 040457 	..0413:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6740	035736	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6741						ERROR	(..0412,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6742					LL
  6743	035737	036 13 0 00 042615 
  6744	035740	255 00 0 00 000000
  6745					^
  6746					^
  6747
  6748					; **********************************************************************
  6749					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6750					; **********************************************************************
  6751
  6752						MULTF	(C,0,377777777777,2,0,0,1,377777777776)^
  6753
  6754					; --- MULTIPLICAND = (0,377777777777)
  6755					; --- MULTIPLIER === (2,0)
  6756					; --- RESULT ======= (0,1,377777777776,0)
  6757
  6758	035741	200 01 0 00 042727 	..0414:	MOVE	AC1,[[EXP 0,377777777777,2,0,0,1,377777777776,0],,MCAND]
  6759	035742	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6760	035743	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6761						ERROR	(..0414,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6762	035744	036 14 0 00 042603 
  6763	035745	255 00 0 00 000000
  6764					^
  6765
  6766	035746	200 14 0 00 040457 	..0415:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6767	035747	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6768						ERROR	(..0414,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6769					LL
  6770	035750	036 13 0 00 042615 
  6771	035751	255 00 0 00 000000
  6772					^
  6773					^
  6774
  6775					; **********************************************************************
  6776					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6777					; **********************************************************************
  6778
  6779						MULTF	(C,377777777777,377777777777,2,0,1,377777777777,377777777776)^
  6780
  6781					; --- MULTIPLICAND = (377777777777,377777777777)
  6782					; --- MULTIPLIER === (2,0)
  6783					; --- RESULT ======= (1,377777777777,377777777776,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-5
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0163

  6784
  6785					..0416:	MOVE	AC1,[[EXP 377777777777,377777777777,2,0,1,377777777777,377777777776,0],,MCA
  6786	035752	200 01 0 00 042740 	ND]
  6787	035753	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6788	035754	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6789						ERROR	(..0416,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6790	035755	036 14 0 00 042603 
  6791	035756	255 00 0 00 000000
  6792					^
  6793
  6794	035757	200 14 0 00 040457 	..0417:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6795	035760	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6796						ERROR	(..0416,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6797					LL
  6798	035761	036 13 0 00 042615 
  6799	035762	255 00 0 00 000000
  6800					^
  6801					^
  6802
  6803					; **********************************************************************
  6804					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6805					; **********************************************************************
  6806
  6807						MULTF	(C,0,2,0,177777777777,0,0,0,377777777776)^
  6808
  6809					; --- MULTIPLICAND = (0,2)
  6810					; --- MULTIPLIER === (0,177777777777)
  6811					; --- RESULT ======= (0,0,0,377777777776)
  6812
  6813	035763	200 01 0 00 042751 	..0420:	MOVE	AC1,[[EXP 0,2,0,177777777777,0,0,0,377777777776],,MCAND]
  6814	035764	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6815	035765	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6816						ERROR	(..0420,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6817	035766	036 14 0 00 042603 
  6818	035767	255 00 0 00 000000
  6819					^
  6820
  6821	035770	200 14 0 00 040457 	..0421:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6822	035771	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6823						ERROR	(..0420,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6824					LL
  6825	035772	036 13 0 00 042615 
  6826	035773	255 00 0 00 000000
  6827					^
  6828					^
  6829
  6830					; **********************************************************************
  6831					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6832					; **********************************************************************
  6833
  6834						MULTF	(C,0,2,0,377777777777,0,0,1,377777777776)^
  6835
  6836					; --- MULTIPLICAND = (0,2)
  6837					; --- MULTIPLIER === (0,377777777777)
  6838					; --- RESULT ======= (0,0,1,377777777776)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-6
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0164

  6839
  6840	035774	200 01 0 00 042762 	..0422:	MOVE	AC1,[[EXP 0,2,0,377777777777,0,0,1,377777777776],,MCAND]
  6841	035775	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6842	035776	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6843						ERROR	(..0422,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6844	035777	036 14 0 00 042603 
  6845	036000	255 00 0 00 000000
  6846					^
  6847
  6848	036001	200 14 0 00 040457 	..0423:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6849	036002	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6850						ERROR	(..0422,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6851					LL
  6852	036003	036 13 0 00 042615 
  6853	036004	255 00 0 00 000000
  6854					^
  6855					^
  6856
  6857					; **********************************************************************
  6858					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6859					; **********************************************************************
  6860
  6861						MULTF	(C,0,2,177777777777,377777777777,0,0,377777777777,377777777776)^
  6862
  6863					; --- MULTIPLICAND = (0,2)
  6864					; --- MULTIPLIER === (177777777777,377777777777)
  6865					; --- RESULT ======= (0,0,377777777777,377777777776)
  6866
  6867					..0424:	MOVE	AC1,[[EXP 0,2,177777777777,377777777777,0,0,377777777777,377777777776],,MCA
  6868	036005	200 01 0 00 042773 	ND]
  6869	036006	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6870	036007	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6871						ERROR	(..0424,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6872	036010	036 14 0 00 042603 
  6873	036011	255 00 0 00 000000
  6874					^
  6875
  6876	036012	200 14 0 00 040457 	..0425:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6877	036013	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6878						ERROR	(..0424,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6879					LL
  6880	036014	036 13 0 00 042615 
  6881	036015	255 00 0 00 000000
  6882					^
  6883					^
  6884
  6885					; **********************************************************************
  6886					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6887					; **********************************************************************
  6888
  6889						MULTF	(C,0,2,377777777777,377777777777,0,1,377777777777,377777777776)^
  6890
  6891					; --- MULTIPLICAND = (0,2)
  6892					; --- MULTIPLIER === (377777777777,377777777777)
  6893					; --- RESULT ======= (0,1,377777777777,377777777776)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-7
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0165

  6894
  6895					..0426:	MOVE	AC1,[[EXP 0,2,377777777777,377777777777,0,1,377777777777,377777777776],,MCA
  6896	036016	200 01 0 00 043004 	ND]
  6897	036017	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6898	036020	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6899						ERROR	(..0426,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6900	036021	036 14 0 00 042603 
  6901	036022	255 00 0 00 000000
  6902					^
  6903
  6904	036023	200 14 0 00 040457 	..0427:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6905	036024	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6906						ERROR	(..0426,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6907					LL
  6908	036025	036 13 0 00 042615 
  6909	036026	255 00 0 00 000000
  6910					^
  6911					^
  6912
  6913					; **********************************************************************
  6914					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6915					; **********************************************************************
  6916
  6917						MULTF	(C,1,0,0,377777777777,0,0,377777777777)^
  6918
  6919					; --- MULTIPLICAND = (1,0)
  6920					; --- MULTIPLIER === (0,377777777777)
  6921					; --- RESULT ======= (0,0,377777777777,0)
  6922
  6923	036027	200 01 0 00 043015 	..0430:	MOVE	AC1,[[EXP 1,0,0,377777777777,0,0,377777777777,0],,MCAND]
  6924	036030	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6925	036031	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6926						ERROR	(..0430,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6927	036032	036 14 0 00 042603 
  6928	036033	255 00 0 00 000000
  6929					^
  6930
  6931	036034	200 14 0 00 040457 	..0431:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6932	036035	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6933						ERROR	(..0430,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6934					LL
  6935	036036	036 13 0 00 042615 
  6936	036037	255 00 0 00 000000
  6937					^
  6938					^
  6939
  6940					; **********************************************************************
  6941					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6942					; **********************************************************************
  6943
  6944						MULTF	(C,1,0,1,377777777777,0,1,377777777777)^
  6945
  6946					; --- MULTIPLICAND = (1,0)
  6947					; --- MULTIPLIER === (1,377777777777)
  6948					; --- RESULT ======= (0,1,377777777777,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-8
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0166

  6949
  6950	036040	200 01 0 00 043026 	..0432:	MOVE	AC1,[[EXP 1,0,1,377777777777,0,1,377777777777,0],,MCAND]
  6951	036041	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6952	036042	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6953						ERROR	(..0432,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6954	036043	036 14 0 00 042603 
  6955	036044	255 00 0 00 000000
  6956					^
  6957
  6958	036045	200 14 0 00 040457 	..0433:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6959	036046	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6960						ERROR	(..0432,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6961					LL
  6962	036047	036 13 0 00 042615 
  6963	036050	255 00 0 00 000000
  6964					^
  6965					^
  6966
  6967					; **********************************************************************
  6968					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6969					; **********************************************************************
  6970
  6971						MULTF	(C,1,0,377777777777,377777777777,0,377777777777,377777777777)^
  6972
  6973					; --- MULTIPLICAND = (1,0)
  6974					; --- MULTIPLIER === (377777777777,377777777777)
  6975					; --- RESULT ======= (0,377777777777,377777777777,0)
  6976
  6977					..0434:	MOVE	AC1,[[EXP 1,0,377777777777,377777777777,0,377777777777,377777777777,0],,MCA
  6978	036051	200 01 0 00 043037 	ND]
  6979	036052	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  6980	036053	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  6981						ERROR	(..0434,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  6982	036054	036 14 0 00 042603 
  6983	036055	255 00 0 00 000000
  6984					^
  6985
  6986	036056	200 14 0 00 040457 	..0435:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  6987	036057	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  6988						ERROR	(..0434,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  6989					LL
  6990	036060	036 13 0 00 042615 
  6991	036061	255 00 0 00 000000
  6992					^
  6993					^
  6994
  6995					; **********************************************************************
  6996					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  6997					; **********************************************************************
  6998
  6999						MULTF	(C,2,0,0,177777777777,0,0,377777777776)^
  7000
  7001					; --- MULTIPLICAND = (2,0)
  7002					; --- MULTIPLIER === (0,177777777777)
  7003					; --- RESULT ======= (0,0,377777777776,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-9
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0167

  7004
  7005	036062	200 01 0 00 043050 	..0436:	MOVE	AC1,[[EXP 2,0,0,177777777777,0,0,377777777776,0],,MCAND]
  7006	036063	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7007	036064	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7008						ERROR	(..0436,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7009	036065	036 14 0 00 042603 
  7010	036066	255 00 0 00 000000
  7011					^
  7012
  7013	036067	200 14 0 00 040457 	..0437:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7014	036070	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7015						ERROR	(..0436,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7016					LL
  7017	036071	036 13 0 00 042615 
  7018	036072	255 00 0 00 000000
  7019					^
  7020					^
  7021
  7022					; **********************************************************************
  7023					; ----------  DMUL - TEST C  -  SHIFT 1'S ACROSS WORD BOUNDARIES  ----------
  7024					; **********************************************************************
  7025
  7026						MULTF	(C,2,0,0,377777777777,0,1,377777777776)^
  7027
  7028					; --- MULTIPLICAND = (2,0)
  7029					; --- MULTIPLIER === (0,377777777777)
  7030					; --- RESULT ======= (0,1,377777777776,0)
  7031
  7032	036073	200 01 0 00 043061 	..0440:	MOVE	AC1,[[EXP 2,0,0,377777777777,0,1,377777777776,0],,MCAND]
  7033	036074	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7034	036075	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7035						ERROR	(..0440,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7036	036076	036 14 0 00 042603 
  7037	036077	255 00 0 00 000000
  7038					^
  7039
  7040	036100	200 14 0 00 040457 	..0441:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7041	036101	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7042						ERROR	(..0440,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7043					LL
  7044	036102	036 13 0 00 042615 
  7045	036103	255 00 0 00 000000
  7046					^
  7047					^
  7048
  7049					; **********************************************************************
  7050					; ----------  DMUL - TEST C  -  SHIFT ACROSS WORD BOUNDARIES  ----------
  7051					; **********************************************************************
  7052
  7053						MULTF	(C,2,0,377777777777,377777777777,1,377777777777,377777777776)^
  7054
  7055					; --- MULTIPLICAND = (2,0)
  7056					; --- MULTIPLIER === (377777777777,377777777777)
  7057					; --- RESULT ======= (1,377777777777,377777777776,0)
  7058
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 20-10
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST C                                                                      SEQ 0168

  7059					..0442:	MOVE	AC1,[[EXP 2,0,377777777777,377777777777,1,377777777777,377777777776,0],,MCA
  7060	036104	200 01 0 00 043072 	ND]
  7061	036105	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7062	036106	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7063						ERROR	(..0442,14,SCR1,SCR2,,TEST C - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7064	036107	036 14 0 00 042603 
  7065	036110	255 00 0 00 000000
  7066					^
  7067
  7068	036111	200 14 0 00 040457 	..0443:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7069	036112	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7070						ERROR	(..0442,13,SCR2,MFLOC,,TEST C - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7071					LL
  7072	036113	036 13 0 00 042615 
  7073	036114	255 00 0 00 000000
  7074					^
  7075					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0169

  7076					SUBTTL	DMUL - TEST D
  7077
  7078					; **********************************************************************
  7079					;*DMUL - TEST D
  7080					;*
  7081					;*	7777..,6000.. * 2	THESE TESTS VERIFY THAT BITS ARE
  7082					;*	7777..,4000.. * 2	SHIFTED ACROSS WORD BOUNDARIES. A WORD
  7083					;*	6000..,4000.. * 2	OF ONES IS MULTIPLIED BY A FLOATING 1
  7084					;*	4000..,4000.. * 2	WHICH WILL CAUSE A SHIFT ACROSS WORD
  7085					;*	777..,400.. * 1,0	BOUNDARIES OR NOT. THE TEST VERIFIES
  7086					;*	..776,400.. * 1,0	THAT THE SHIFT IS DONE PROPERLY FOR
  7087					;*	400..,400.. * 1,0	BOUNDARY CONDITIONS.
  7088					;*	777..,600.. * 2,0	IN EACH TEST THE PC FLAGS ARE TESTED
  7089					;*	777..,400.. * 2,0	SINCE THERE ARE NO OVERFLOW CONDITIONS
  7090					;*	400..,400.. * 2,0	THE LEFTMOST BIT OF THE PC SHOULD BE
  7091					;*				0 (NO AROV).
  7092					;*				THESE TESTS ARE REPEATED WITH MULT-
  7093					;*				PLICAND AND MULTIPLIER REVERSED.
  7094					; **********************************************************************
  7095
  7096					; **********************************************************************
  7097					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7098					; **********************************************************************
  7099
  7100						MULTF	(D,-1,600000000000,0,2,-1,-1,-1,400000000000)^
  7101
  7102					; --- MULTIPLICAND = (-1,600000000000)
  7103					; --- MULTIPLIER === (0,2)
  7104					; --- RESULT ======= (-1,-1,-1,400000000000)
  7105
  7106	036115	200 01 0 00 043103 	..0444:	MOVE	AC1,[[EXP -1,600000000000,0,2,-1,-1,-1,400000000000],,MCAND]
  7107	036116	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7108	036117	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7109						ERROR	(..0444,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7110	036120	036 14 0 00 043113 
  7111	036121	255 00 0 00 000000
  7112					^
  7113
  7114	036122	200 14 0 00 040457 	..0445:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7115	036123	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7116						ERROR	(..0444,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7117					LL
  7118	036124	036 13 0 00 043125 
  7119	036125	255 00 0 00 000000
  7120					^
  7121					^
  7122
  7123					; **********************************************************************
  7124					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7125					; **********************************************************************
  7126
  7127						MULTF	(D,-1,400000000000,0,2,-1,-1,-2,400000000000)^
  7128
  7129					; --- MULTIPLICAND = (-1,400000000000)
  7130					; --- MULTIPLIER === (0,2)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-1
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0170

  7131					; --- RESULT ======= (-1,-1,-2,400000000000)
  7132
  7133	036126	200 01 0 00 043140 	..0446:	MOVE	AC1,[[EXP -1,400000000000,0,2,-1,-1,-2,400000000000],,MCAND]
  7134	036127	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7135	036130	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7136						ERROR	(..0446,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7137	036131	036 14 0 00 043113 
  7138	036132	255 00 0 00 000000
  7139					^
  7140
  7141	036133	200 14 0 00 040457 	..0447:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7142	036134	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7143						ERROR	(..0446,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7144					LL
  7145	036135	036 13 0 00 043125 
  7146	036136	255 00 0 00 000000
  7147					^
  7148					^
  7149
  7150					; **********************************************************************
  7151					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7152					; **********************************************************************
  7153
  7154						MULTF	(D,600000000000,400000000000,0,2,-1,-1,400000000000,400000000000)^
  7155
  7156					; --- MULTIPLICAND = (600000000000,400000000000)
  7157					; --- MULTIPLIER === (0,2)
  7158					; --- RESULT ======= (-1,-1,400000000000,400000000000)
  7159
  7160					..0450:	MOVE	AC1,[[EXP 600000000000,400000000000,0,2,-1,-1,400000000000,400000000000],,M
  7161	036137	200 01 0 00 043151 	CAND]
  7162	036140	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7163	036141	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7164						ERROR	(..0450,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7165	036142	036 14 0 00 043113 
  7166	036143	255 00 0 00 000000
  7167					^
  7168
  7169	036144	200 14 0 00 040457 	..0451:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7170	036145	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7171						ERROR	(..0450,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7172					LL
  7173	036146	036 13 0 00 043125 
  7174	036147	255 00 0 00 000000
  7175					^
  7176					^
  7177
  7178					; **********************************************************************
  7179					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7180					; **********************************************************************
  7181
  7182						MULTF	(D,400000000000,400000000000,0,2,-1,-2,400000000000,400000000000)^
  7183
  7184					; --- MULTIPLICAND = (400000000000,400000000000)
  7185					; --- MULTIPLIER === (0,2)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-2
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0171

  7186					; --- RESULT ======= (-1,-2,400000000000,400000000000)
  7187
  7188					..0452:	MOVE	AC1,[[EXP 400000000000,400000000000,0,2,-1,-2,400000000000,400000000000],,M
  7189	036150	200 01 0 00 043162 	CAND]
  7190	036151	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7191	036152	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7192						ERROR	(..0452,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7193	036153	036 14 0 00 043113 
  7194	036154	255 00 0 00 000000
  7195					^
  7196
  7197	036155	200 14 0 00 040457 	..0453:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7198	036156	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7199						ERROR	(..0452,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7200					LL
  7201	036157	036 13 0 00 043125 
  7202	036160	255 00 0 00 000000
  7203					^
  7204					^
  7205
  7206					; **********************************************************************
  7207					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7208					; **********************************************************************
  7209
  7210						MULTF	(D,-1,400000000000,1,0,-1,-1,400000000000,400000000000)^
  7211
  7212					; --- MULTIPLICAND = (-1,400000000000)
  7213					; --- MULTIPLIER === (1,0)
  7214					; --- RESULT ======= (-1,-1,400000000000,400000000000)
  7215
  7216	036161	200 01 0 00 043173 	..0454:	MOVE	AC1,[[EXP -1,400000000000,1,0,-1,-1,400000000000,400000000000],,MCAND]
  7217	036162	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7218	036163	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7219						ERROR	(..0454,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7220	036164	036 14 0 00 043113 
  7221	036165	255 00 0 00 000000
  7222					^
  7223
  7224	036166	200 14 0 00 040457 	..0455:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7225	036167	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7226						ERROR	(..0454,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7227					LL
  7228	036170	036 13 0 00 043125 
  7229	036171	255 00 0 00 000000
  7230					^
  7231					^
  7232
  7233					; **********************************************************************
  7234					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7235					; **********************************************************************
  7236
  7237						MULTF	(D,-2,400000000000,1,0,-1,-2,400000000000,400000000000)^
  7238
  7239					; --- MULTIPLICAND = (-2,400000000000)
  7240					; --- MULTIPLIER === (1,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-3
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0172

  7241					; --- RESULT ======= (-1,-2,400000000000,400000000000)
  7242
  7243	036172	200 01 0 00 043204 	..0456:	MOVE	AC1,[[EXP -2,400000000000,1,0,-1,-2,400000000000,400000000000],,MCAND]
  7244	036173	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7245	036174	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7246						ERROR	(..0456,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7247	036175	036 14 0 00 043113 
  7248	036176	255 00 0 00 000000
  7249					^
  7250
  7251	036177	200 14 0 00 040457 	..0457:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7252	036200	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7253						ERROR	(..0456,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7254					LL
  7255	036201	036 13 0 00 043125 
  7256	036202	255 00 0 00 000000
  7257					^
  7258					^
  7259
  7260					; **********************************************************************
  7261					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7262					; **********************************************************************
  7263
  7264						MULTF	(D,400000000000,400000000000,1,0,-1,400000000000,400000000000,400000000000)
  7265					^
  7266
  7267					; --- MULTIPLICAND = (400000000000,400000000000)
  7268					; --- MULTIPLIER === (1,0)
  7269					; --- RESULT ======= (-1,400000000000,400000000000,400000000000)
  7270
  7271					..0460:	MOVE	AC1,[[EXP 400000000000,400000000000,1,0,-1,400000000000,400000000000,400000
  7272	036203	200 01 0 00 043215 	000000],,MCAND]
  7273	036204	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7274	036205	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7275						ERROR	(..0460,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7276	036206	036 14 0 00 043113 
  7277	036207	255 00 0 00 000000
  7278					^
  7279
  7280	036210	200 14 0 00 040457 	..0461:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7281	036211	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7282						ERROR	(..0460,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7283					LL
  7284	036212	036 13 0 00 043125 
  7285	036213	255 00 0 00 000000
  7286					^
  7287					^
  7288
  7289					; **********************************************************************
  7290					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7291					; **********************************************************************
  7292
  7293						MULTF	(D,-1,600000000000,2,0,-1,-1,400000000000,400000000000)^
  7294
  7295					; --- MULTIPLICAND = (-1,600000000000)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-4
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0173

  7296					; --- MULTIPLIER === (2,0)
  7297					; --- RESULT ======= (-1,-1,400000000000,400000000000)
  7298
  7299	036214	200 01 0 00 043226 	..0462:	MOVE	AC1,[[EXP -1,600000000000,2,0,-1,-1,400000000000,400000000000],,MCAND]
  7300	036215	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7301	036216	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7302						ERROR	(..0462,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7303	036217	036 14 0 00 043113 
  7304	036220	255 00 0 00 000000
  7305					^
  7306
  7307	036221	200 14 0 00 040457 	..0463:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7308	036222	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7309						ERROR	(..0462,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7310					LL
  7311	036223	036 13 0 00 043125 
  7312	036224	255 00 0 00 000000
  7313					^
  7314					^
  7315
  7316					; **********************************************************************
  7317					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7318					; **********************************************************************
  7319
  7320						MULTF	(D,-1,400000000000,2,0,-1,-2,400000000000,400000000000)^
  7321
  7322					; --- MULTIPLICAND = (-1,400000000000)
  7323					; --- MULTIPLIER === (2,0)
  7324					; --- RESULT ======= (-1,-2,400000000000,400000000000)
  7325
  7326	036225	200 01 0 00 043237 	..0464:	MOVE	AC1,[[EXP -1,400000000000,2,0,-1,-2,400000000000,400000000000],,MCAND]
  7327	036226	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7328	036227	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7329						ERROR	(..0464,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7330	036230	036 14 0 00 043113 
  7331	036231	255 00 0 00 000000
  7332					^
  7333
  7334	036232	200 14 0 00 040457 	..0465:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7335	036233	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7336						ERROR	(..0464,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7337					LL
  7338	036234	036 13 0 00 043125 
  7339	036235	255 00 0 00 000000
  7340					^
  7341					^
  7342
  7343					; **********************************************************************
  7344					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7345					; **********************************************************************
  7346
  7347						MULTF	(D,400000000000,400000000000,2,0,-2,400000000000,400000000000,400000000000)
  7348					^
  7349
  7350					; --- MULTIPLICAND = (400000000000,400000000000)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-5
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0174

  7351					; --- MULTIPLIER === (2,0)
  7352					; --- RESULT ======= (-2,400000000000,400000000000,400000000000)
  7353
  7354					..0466:	MOVE	AC1,[[EXP 400000000000,400000000000,2,0,-2,400000000000,400000000000,400000
  7355	036236	200 01 0 00 043250 	000000],,MCAND]
  7356	036237	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7357	036240	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7358						ERROR	(..0466,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7359	036241	036 14 0 00 043113 
  7360	036242	255 00 0 00 000000
  7361					^
  7362
  7363	036243	200 14 0 00 040457 	..0467:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7364	036244	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7365						ERROR	(..0466,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7366					LL
  7367	036245	036 13 0 00 043125 
  7368	036246	255 00 0 00 000000
  7369					^
  7370					^
  7371
  7372					; **********************************************************************
  7373					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7374					; **********************************************************************
  7375
  7376						MULTF	(D,0,2,-1,600000000000,-1,-1,-1,400000000000)^
  7377
  7378					; --- MULTIPLICAND = (0,2)
  7379					; --- MULTIPLIER === (-1,600000000000)
  7380					; --- RESULT ======= (-1,-1,-1,400000000000)
  7381
  7382	036247	200 01 0 00 043261 	..0470:	MOVE	AC1,[[EXP 0,2,-1,600000000000,-1,-1,-1,400000000000],,MCAND]
  7383	036250	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7384	036251	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7385						ERROR	(..0470,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7386	036252	036 14 0 00 043113 
  7387	036253	255 00 0 00 000000
  7388					^
  7389
  7390	036254	200 14 0 00 040457 	..0471:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7391	036255	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7392						ERROR	(..0470,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7393					LL
  7394	036256	036 13 0 00 043125 
  7395	036257	255 00 0 00 000000
  7396					^
  7397					^
  7398
  7399					; **********************************************************************
  7400					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7401					; **********************************************************************
  7402
  7403						MULTF	(D,0,2,-1,400000000000,-1,-1,-2,400000000000)^
  7404
  7405					; --- MULTIPLICAND = (0,2)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-6
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0175

  7406					; --- MULTIPLIER === (-1,400000000000)
  7407					; --- RESULT ======= (-1,-1,-2,400000000000)
  7408
  7409	036260	200 01 0 00 043272 	..0472:	MOVE	AC1,[[EXP 0,2,-1,400000000000,-1,-1,-2,400000000000],,MCAND]
  7410	036261	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7411	036262	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7412						ERROR	(..0472,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7413	036263	036 14 0 00 043113 
  7414	036264	255 00 0 00 000000
  7415					^
  7416
  7417	036265	200 14 0 00 040457 	..0473:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7418	036266	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7419						ERROR	(..0472,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7420					LL
  7421	036267	036 13 0 00 043125 
  7422	036270	255 00 0 00 000000
  7423					^
  7424					^
  7425
  7426					; **********************************************************************
  7427					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7428					; **********************************************************************
  7429
  7430						MULTF	(D,0,2,600000000000,400000000000,-1,-1,400000000000,400000000000)^
  7431
  7432					; --- MULTIPLICAND = (0,2)
  7433					; --- MULTIPLIER === (600000000000,400000000000)
  7434					; --- RESULT ======= (-1,-1,400000000000,400000000000)
  7435
  7436					..0474:	MOVE	AC1,[[EXP 0,2,600000000000,400000000000,-1,-1,400000000000,400000000000],,M
  7437	036271	200 01 0 00 043303 	CAND]
  7438	036272	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7439	036273	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7440						ERROR	(..0474,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7441	036274	036 14 0 00 043113 
  7442	036275	255 00 0 00 000000
  7443					^
  7444
  7445	036276	200 14 0 00 040457 	..0475:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7446	036277	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7447						ERROR	(..0474,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7448					LL
  7449	036300	036 13 0 00 043125 
  7450	036301	255 00 0 00 000000
  7451					^
  7452					^
  7453
  7454					; **********************************************************************
  7455					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7456					; **********************************************************************
  7457
  7458						MULTF	(D,0,2,400000000000,400000000000,-1,-2,400000000000,400000000000)^
  7459
  7460					; --- MULTIPLICAND = (0,2)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-7
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0176

  7461					; --- MULTIPLIER === (400000000000,400000000000)
  7462					; --- RESULT ======= (-1,-2,400000000000,400000000000)
  7463
  7464					..0476:	MOVE	AC1,[[EXP 0,2,400000000000,400000000000,-1,-2,400000000000,400000000000],,M
  7465	036302	200 01 0 00 043314 	CAND]
  7466	036303	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7467	036304	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7468						ERROR	(..0476,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7469	036305	036 14 0 00 043113 
  7470	036306	255 00 0 00 000000
  7471					^
  7472
  7473	036307	200 14 0 00 040457 	..0477:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7474	036310	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7475						ERROR	(..0476,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7476					LL
  7477	036311	036 13 0 00 043125 
  7478	036312	255 00 0 00 000000
  7479					^
  7480					^
  7481
  7482					; **********************************************************************
  7483					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7484					; **********************************************************************
  7485
  7486						MULTF	(D,1,0,-1,400000000000,-1,-1,400000000000,400000000000)^
  7487
  7488					; --- MULTIPLICAND = (1,0)
  7489					; --- MULTIPLIER === (-1,400000000000)
  7490					; --- RESULT ======= (-1,-1,400000000000,400000000000)
  7491
  7492	036313	200 01 0 00 043325 	..0500:	MOVE	AC1,[[EXP 1,0,-1,400000000000,-1,-1,400000000000,400000000000],,MCAND]
  7493	036314	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7494	036315	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7495						ERROR	(..0500,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7496	036316	036 14 0 00 043113 
  7497	036317	255 00 0 00 000000
  7498					^
  7499
  7500	036320	200 14 0 00 040457 	..0501:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7501	036321	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7502						ERROR	(..0500,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7503					LL
  7504	036322	036 13 0 00 043125 
  7505	036323	255 00 0 00 000000
  7506					^
  7507					^
  7508
  7509					; **********************************************************************
  7510					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7511					; **********************************************************************
  7512
  7513						MULTF	(D,1,0,-2,400000000000,-1,-2,400000000000,400000000000)^
  7514
  7515					; --- MULTIPLICAND = (1,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-8
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0177

  7516					; --- MULTIPLIER === (-2,400000000000)
  7517					; --- RESULT ======= (-1,-2,400000000000,400000000000)
  7518
  7519	036324	200 01 0 00 043336 	..0502:	MOVE	AC1,[[EXP 1,0,-2,400000000000,-1,-2,400000000000,400000000000],,MCAND]
  7520	036325	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7521	036326	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7522						ERROR	(..0502,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7523	036327	036 14 0 00 043113 
  7524	036330	255 00 0 00 000000
  7525					^
  7526
  7527	036331	200 14 0 00 040457 	..0503:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7528	036332	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7529						ERROR	(..0502,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7530					LL
  7531	036333	036 13 0 00 043125 
  7532	036334	255 00 0 00 000000
  7533					^
  7534					^
  7535
  7536					; **********************************************************************
  7537					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7538					; **********************************************************************
  7539
  7540						MULTF	(D,1,0,400000000000,400000000000,-1,400000000000,400000000000,400000000000)
  7541					^
  7542
  7543					; --- MULTIPLICAND = (1,0)
  7544					; --- MULTIPLIER === (400000000000,400000000000)
  7545					; --- RESULT ======= (-1,400000000000,400000000000,400000000000)
  7546
  7547					..0504:	MOVE	AC1,[[EXP 1,0,400000000000,400000000000,-1,400000000000,400000000000,400000
  7548	036335	200 01 0 00 043347 	000000],,MCAND]
  7549	036336	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7550	036337	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7551						ERROR	(..0504,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7552	036340	036 14 0 00 043113 
  7553	036341	255 00 0 00 000000
  7554					^
  7555
  7556	036342	200 14 0 00 040457 	..0505:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7557	036343	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7558						ERROR	(..0504,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7559					LL
  7560	036344	036 13 0 00 043125 
  7561	036345	255 00 0 00 000000
  7562					^
  7563					^
  7564
  7565					; **********************************************************************
  7566					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7567					; **********************************************************************
  7568
  7569						MULTF	(D,2,0,-1,600000000000,-1,-1,400000000000,400000000000)^
  7570
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-9
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0178

  7571					; --- MULTIPLICAND = (2,0)
  7572					; --- MULTIPLIER === (-1,600000000000)
  7573					; --- RESULT ======= (-1,-1,400000000000,400000000000)
  7574
  7575	036346	200 01 0 00 043360 	..0506:	MOVE	AC1,[[EXP 2,0,-1,600000000000,-1,-1,400000000000,400000000000],,MCAND]
  7576	036347	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7577	036350	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7578						ERROR	(..0506,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7579	036351	036 14 0 00 043113 
  7580	036352	255 00 0 00 000000
  7581					^
  7582
  7583	036353	200 14 0 00 040457 	..0507:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7584	036354	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7585						ERROR	(..0506,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7586					LL
  7587	036355	036 13 0 00 043125 
  7588	036356	255 00 0 00 000000
  7589					^
  7590					^
  7591
  7592					; **********************************************************************
  7593					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7594					; **********************************************************************
  7595
  7596						MULTF	(D,2,0,-1,400000000000,-1,-2,400000000000,400000000000)^
  7597
  7598					; --- MULTIPLICAND = (2,0)
  7599					; --- MULTIPLIER === (-1,400000000000)
  7600					; --- RESULT ======= (-1,-2,400000000000,400000000000)
  7601
  7602	036357	200 01 0 00 043371 	..0510:	MOVE	AC1,[[EXP 2,0,-1,400000000000,-1,-2,400000000000,400000000000],,MCAND]
  7603	036360	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7604	036361	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7605						ERROR	(..0510,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7606	036362	036 14 0 00 043113 
  7607	036363	255 00 0 00 000000
  7608					^
  7609
  7610	036364	200 14 0 00 040457 	..0511:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7611	036365	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7612						ERROR	(..0510,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7613					LL
  7614	036366	036 13 0 00 043125 
  7615	036367	255 00 0 00 000000
  7616					^
  7617					^
  7618
  7619					; **********************************************************************
  7620					; ----------  DMUL - TEST D  -  SHIFT 0'S ACROSS WORD BOUNDARIES  ----------
  7621					; **********************************************************************
  7622
  7623						MULTF	(D,2,0,400000000000,400000000000,-2,400000000000,400000000000,400000000000)
  7624					^
  7625
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 21-10
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST D                                                                      SEQ 0179

  7626					; --- MULTIPLICAND = (2,0)
  7627					; --- MULTIPLIER === (400000000000,400000000000)
  7628					; --- RESULT ======= (-2,400000000000,400000000000,400000000000)
  7629
  7630					..0512:	MOVE	AC1,[[EXP 2,0,400000000000,400000000000,-2,400000000000,400000000000,400000
  7631	036370	200 01 0 00 043402 	000000],,MCAND]
  7632	036371	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7633	036372	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7634						ERROR	(..0512,14,SCR1,SCR2,,TEST D - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7635	036373	036 14 0 00 043113 
  7636	036374	255 00 0 00 000000
  7637					^
  7638
  7639	036375	200 14 0 00 040457 	..0513:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7640	036376	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7641						ERROR	(..0512,13,SCR2,MFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7642					LL
  7643	036377	036 13 0 00 043125 
  7644	036400	255 00 0 00 000000
  7645					^
  7646					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 22
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST E (OVERFLOW)                                                           SEQ 0180

  7647					SUBTTL	DMUL - TEST E (OVERFLOW)
  7648
  7649					; **********************************************************************
  7650					;*DMUL - TEST E
  7651					;*
  7652					;*  -2^70 * -2^70	THIS IS THE ONLY CASE THAT CAN SET
  7653					;*			THE AROV FLAG.  THIS TEST VERIFIES THE
  7654					;*			RESULT AND CHECKS THE SETTING OF THE
  7655					;*			AROV FLAG.
  7656					;*
  7657					;* ------- MULTIPLICAND = (4000...,4000...)
  7658					;* ------- MULTIPLIER === (4000...,4000...)
  7659					;* ------- RESULT ======= (4000...,4000...,4000...,4000...)
  7660					; **********************************************************************
  7661
  7662			036401			LOC=.
  7663
  7664	036401	120 01 0 00 042100 		DMOVE	AC1,[EXP 1B0,1B0] 	;INIT MULTIPLICAND
  7665	036402	120 03 0 00 043403 		DMOVE	AC1+2,[EXP 525252525252,252525252525] ;PUT GARBAGE IN
  7666										;  RIGHT HALF OF RESULT
  7667	036403	400 13 0 00 000000 		SETZ	SCR1,			;POINTER TO WHICH WORD INCORRECT
  7668	036404	255 17 0 00 036405 		JFCL	17,.+1			;CLEAR FLAGS
  7669	036405	116 01 0 00 000001 		DMUL	AC1,AC1			;MULTIPLY
  7670						PCSAVE^
  7671	036406	264 00 0 00 036407 		JSR	.+1		;STORE PC
  7672			036407		FLAGL=.				;LOCATION OF PC
  7673	036407	000000	000000			0			;PC
  7674					^
  7675	036410	312 01 0 00 041725 		CAME	AC1,[1B0]		;1ST WORD OF RESULT OK?
  7676	036411	254 00 0 00 036423 		JRST	MOVERR			;NO - GO DO ERROR PRINTOUT
  7677	036412	201 13 0 00 000001 		MOVEI	SCR1,1			;POINT TO 2ND WORD
  7678	036413	312 02 0 00 041725 		CAME	AC1+1,[1B0]		;2ND WORD OF RESULT OK?
  7679	036414	254 00 0 00 036423 		JRST	MOVERR			;NO - GO DO ERROR PRINTOUT
  7680	036415	201 13 0 00 000002 		MOVEI	SCR1,2			;POINT TO 3RD WORD
  7681	036416	312 03 0 00 041725 		CAME	AC1+2,[1B0]		;3RD WORD OF RESULT OK?
  7682	036417	254 00 0 00 036423 		JRST	MOVERR			;NO - GO DO ERROR PRINTOUT
  7683	036420	201 13 0 00 000003 		MOVEI	SCR1,3			;POINT TO 4TH WORD
  7684	036421	316 04 0 00 041725 		CAMN	AC1+3,[1B0]		;4TH WORD OF RESULT OK?
  7685	036422	254 00 0 00 036426 		JRST	MOVOK			;YES - GO CHECK AROV FLAGS
  7686	036423	200 13 0 13 000001 	MOVERR:	MOVE	SCR1,AC1(SCR1)		;GET INCORRECT WORD
  7687						ERROR	(LOC,13,[1B0],SCR1,,TEST E - RESULT INCORRECT,MPRINT)^SALL
  7688	036424	036 13 0 00 043412 
  7689	036425	255 00 0 00 000000
  7690					^
  7691	036426	255 10 0 00 036432 	MOVOK:	JOV	MOVRR+1			;TEST OVERFLOW - SHOULD BE ON
  7692	036427	201 15 0 00 042100 		MOVEI	SCR3,[EXP 1B0,1B0]	;ADDRESS OF OPERANDS FOR ADDL
  7693	036430	504 15 0 00 000015 		HRL	SCR3,SCR3		;  ERROR PRINT ROUTINE
  7694	036431				MOVRR:	ERROR	(LOC,13,AC1,FLAGL,,TEST E - PC FLAGS INCORRECT - LEFT 4 BITS,MPRINT)^SALL
  7695	036431	036 13 0 00 043424 
  7696	036432	255 00 0 00 000000
  7697					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 23
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST F - TEST NEGATIVE OPERANDS                                             SEQ 0181

  7698					SUBTTL	DMUL - TEST F - TEST NEGATIVE OPERANDS
  7699
  7700					; **********************************************************************
  7701					;*DMUL - TEST F
  7702					;*
  7703					;*       -2 * -3		THESE TESTS VERIFY THAT THE DMUL HANDLES
  7704					;*       -2,0 * -3		THE SIGNS PROPERLY WHEN MULTIPLYING 
  7705					;*       -2 * -3,0		OPERANDS WHICH ARE BOTH NEGATIVE.  TESTS
  7706					;*       -2,0 * -3,0		B,C,D TESTED THE COMBINATIONS POS*POS,
  7707					;*				POS*NEG AND NEG*POS BUT NOT NEG*NEG. THE
  7708					;*				AROV FLAG IS ALSO TESTED TO ASCERTAIN 
  7709					;*				THAT IT WAS NOT SET.
  7710					; **********************************************************************
  7711
  7712					; **********************************************************************
  7713					; ----------  DMUL TEST F - TEST NEGATIVE OPERANDS  ----------
  7714					; **********************************************************************
  7715
  7716						MULTF	(F,-1,-2,-1,-3,0,0,0,6)^
  7717
  7718					; --- MULTIPLICAND = (-1,-2)
  7719					; --- MULTIPLIER === (-1,-3)
  7720					; --- RESULT ======= (0,0,0,6)
  7721
  7722	036433	200 01 0 00 043437 	..0514:	MOVE	AC1,[[EXP -1,-2,-1,-3,0,0,0,6],,MCAND]
  7723	036434	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7724	036435	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7725						ERROR	(..0514,14,SCR1,SCR2,,TEST F - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7726	036436	036 14 0 00 043447 
  7727	036437	255 00 0 00 000000
  7728					^
  7729
  7730	036440	200 14 0 00 040457 	..0515:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7731	036441	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7732						ERROR	(..0514,13,SCR2,MFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7733					LL
  7734	036442	036 13 0 00 043461 
  7735	036443	255 00 0 00 000000
  7736					^
  7737					^
  7738
  7739					; **********************************************************************
  7740					; ----------  DMUL TEST F - TEST NEGATIVE OPERANDS  ----------
  7741					; **********************************************************************
  7742
  7743						MULTF	(F,-2,400000000000,-1,-3,0,0,6)^
  7744
  7745					; --- MULTIPLICAND = (-2,400000000000)
  7746					; --- MULTIPLIER === (-1,-3)
  7747					; --- RESULT ======= (0,0,6,0)
  7748
  7749	036444	200 01 0 00 043474 	..0516:	MOVE	AC1,[[EXP -2,400000000000,-1,-3,0,0,6,0],,MCAND]
  7750	036445	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7751	036446	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7752						ERROR	(..0516,14,SCR1,SCR2,,TEST F - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 23-1
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST F - TEST NEGATIVE OPERANDS                                             SEQ 0182

  7753	036447	036 14 0 00 043447 
  7754	036450	255 00 0 00 000000
  7755					^
  7756
  7757	036451	200 14 0 00 040457 	..0517:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7758	036452	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7759						ERROR	(..0516,13,SCR2,MFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7760					LL
  7761	036453	036 13 0 00 043461 
  7762	036454	255 00 0 00 000000
  7763					^
  7764					^
  7765
  7766					; **********************************************************************
  7767					; ----------  DMUL TEST F - TEST NEGATIVE OPERANDS  ----------
  7768					; **********************************************************************
  7769
  7770						MULTF	(F,-1,-2,-3,400000000000,0,0,6)^
  7771
  7772					; --- MULTIPLICAND = (-1,-2)
  7773					; --- MULTIPLIER === (-3,400000000000)
  7774					; --- RESULT ======= (0,0,6,0)
  7775
  7776	036455	200 01 0 00 043505 	..0520:	MOVE	AC1,[[EXP -1,-2,-3,400000000000,0,0,6,0],,MCAND]
  7777	036456	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7778	036457	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7779						ERROR	(..0520,14,SCR1,SCR2,,TEST F - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7780	036460	036 14 0 00 043447 
  7781	036461	255 00 0 00 000000
  7782					^
  7783
  7784	036462	200 14 0 00 040457 	..0521:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7785	036463	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7786						ERROR	(..0520,13,SCR2,MFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7787					LL
  7788	036464	036 13 0 00 043461 
  7789	036465	255 00 0 00 000000
  7790					^
  7791					^
  7792
  7793					; **********************************************************************
  7794					; ----------  DMUL TEST F - TEST NEGATIVE OPERANDS  ----------
  7795					; **********************************************************************
  7796
  7797						MULTF	(F,-2,400000000000,-3,400000000000,0,6)^
  7798
  7799					; --- MULTIPLICAND = (-2,400000000000)
  7800					; --- MULTIPLIER === (-3,400000000000)
  7801					; --- RESULT ======= (0,6,0,0)
  7802
  7803	036466	200 01 0 00 043516 	..0522:	MOVE	AC1,[[EXP -2,400000000000,-3,400000000000,0,6,0,0],,MCAND]
  7804	036467	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7805	036470	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7806						ERROR	(..0522,14,SCR1,SCR2,,TEST F - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7807	036471	036 14 0 00 043447 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 23-2
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST F - TEST NEGATIVE OPERANDS                                             SEQ 0183

  7808	036472	255 00 0 00 000000
  7809					^
  7810
  7811	036473	200 14 0 00 040457 	..0523:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7812	036474	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7813						ERROR	(..0522,13,SCR2,MFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7814					LL
  7815	036475	036 13 0 00 043461 
  7816	036476	255 00 0 00 000000
  7817					^
  7818					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0184

  7819					SUBTTL	DMUL - TEST G
  7820
  7821					; **********************************************************************
  7822					;*DMUL - TEST G
  7823					;*
  7824					;*	2 * 3	  2,0 * 3,0	THESE TESTS MULTIPLY NUMBERS WHICH HAVE
  7825					;*	2 * -3	  2,0 * -3,0	INCONSISTENT SIGNS AMONGST THE WORDS OF
  7826					;*      -2 * 3	 -2,-1 * 3,0	EACH OPERAND.  THE FLAGS IS ALSO TESTED
  7827					;*      -2 * -3	 -2,-1 * -3,0	TO VERIFY THAT IT IS NOT SET.
  7828					; **********************************************************************
  7829
  7830					; **********************************************************************
  7831					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  7832					; **********************************************************************
  7833
  7834						MULTF	(G,0,2,0,400000000003,0,0,0,6)^
  7835
  7836					; --- MULTIPLICAND = (0,2)
  7837					; --- MULTIPLIER === (0,400000000003)
  7838					; --- RESULT ======= (0,0,0,6)
  7839
  7840	036477	200 01 0 00 043527 	..0524:	MOVE	AC1,[[EXP 0,2,0,400000000003,0,0,0,6],,MCAND]
  7841	036500	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7842	036501	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7843						ERROR	(..0524,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7844	036502	036 14 0 00 043537 
  7845	036503	255 00 0 00 000000
  7846					^
  7847
  7848	036504	200 14 0 00 040457 	..0525:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7849	036505	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7850						ERROR	(..0524,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7851					LL
  7852	036506	036 13 0 00 043551 
  7853	036507	255 00 0 00 000000
  7854					^
  7855					^
  7856
  7857					; **********************************************************************
  7858					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  7859					; **********************************************************************
  7860
  7861						MULTF	(G,0,400000000002,0,400000000003,0,0,0,6)^
  7862
  7863					; --- MULTIPLICAND = (0,400000000002)
  7864					; --- MULTIPLIER === (0,400000000003)
  7865					; --- RESULT ======= (0,0,0,6)
  7866
  7867	036510	200 01 0 00 043564 	..0526:	MOVE	AC1,[[EXP 0,400000000002,0,400000000003,0,0,0,6],,MCAND]
  7868	036511	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7869	036512	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7870						ERROR	(..0526,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7871	036513	036 14 0 00 043537 
  7872	036514	255 00 0 00 000000
  7873					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-1
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0185

  7874
  7875	036515	200 14 0 00 040457 	..0527:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7876	036516	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7877						ERROR	(..0526,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7878					LL
  7879	036517	036 13 0 00 043551 
  7880	036520	255 00 0 00 000000
  7881					^
  7882					^
  7883
  7884					; **********************************************************************
  7885					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  7886					; **********************************************************************
  7887
  7888						MULTF	(G,0,400000000002,0,3,0,0,0,6)^
  7889
  7890					; --- MULTIPLICAND = (0,400000000002)
  7891					; --- MULTIPLIER === (0,3)
  7892					; --- RESULT ======= (0,0,0,6)
  7893
  7894	036521	200 01 0 00 043575 	..0530:	MOVE	AC1,[[EXP 0,400000000002,0,3,0,0,0,6],,MCAND]
  7895	036522	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7896	036523	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7897						ERROR	(..0530,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7898	036524	036 14 0 00 043537 
  7899	036525	255 00 0 00 000000
  7900					^
  7901
  7902	036526	200 14 0 00 040457 	..0531:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7903	036527	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7904						ERROR	(..0530,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7905					LL
  7906	036530	036 13 0 00 043551 
  7907	036531	255 00 0 00 000000
  7908					^
  7909					^
  7910
  7911					; **********************************************************************
  7912					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  7913					; **********************************************************************
  7914
  7915						MULTF	(G,0,2,-1,377777777775,-1,-1,-1,-6)^
  7916
  7917					; --- MULTIPLICAND = (0,2)
  7918					; --- MULTIPLIER === (-1,377777777775)
  7919					; --- RESULT ======= (-1,-1,-1,-6)
  7920
  7921	036532	200 01 0 00 043606 	..0532:	MOVE	AC1,[[EXP 0,2,-1,377777777775,-1,-1,-1,-6],,MCAND]
  7922	036533	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7923	036534	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7924						ERROR	(..0532,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7925	036535	036 14 0 00 043537 
  7926	036536	255 00 0 00 000000
  7927					^
  7928
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-2
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0186

  7929	036537	200 14 0 00 040457 	..0533:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7930	036540	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7931						ERROR	(..0532,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7932					LL
  7933	036541	036 13 0 00 043551 
  7934	036542	255 00 0 00 000000
  7935					^
  7936					^
  7937
  7938					; **********************************************************************
  7939					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  7940					; **********************************************************************
  7941
  7942						MULTF	(G,0,400000000002,-1,377777777775,-1,-1,-1,-6)^
  7943
  7944					; --- MULTIPLICAND = (0,400000000002)
  7945					; --- MULTIPLIER === (-1,377777777775)
  7946					; --- RESULT ======= (-1,-1,-1,-6)
  7947
  7948	036543	200 01 0 00 043617 	..0534:	MOVE	AC1,[[EXP 0,400000000002,-1,377777777775,-1,-1,-1,-6],,MCAND]
  7949	036544	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7950	036545	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7951						ERROR	(..0534,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7952	036546	036 14 0 00 043537 
  7953	036547	255 00 0 00 000000
  7954					^
  7955
  7956	036550	200 14 0 00 040457 	..0535:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  7957	036551	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7958						ERROR	(..0534,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7959					LL
  7960	036552	036 13 0 00 043551 
  7961	036553	255 00 0 00 000000
  7962					^
  7963					^
  7964
  7965					; **********************************************************************
  7966					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  7967					; **********************************************************************
  7968
  7969						MULTF	(G,0,400000000002,-1,-3,-1,-1,-1,-6)^
  7970
  7971					; --- MULTIPLICAND = (0,400000000002)
  7972					; --- MULTIPLIER === (-1,-3)
  7973					; --- RESULT ======= (-1,-1,-1,-6)
  7974
  7975	036554	200 01 0 00 043630 	..0536:	MOVE	AC1,[[EXP 0,400000000002,-1,-3,-1,-1,-1,-6],,MCAND]
  7976	036555	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  7977	036556	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  7978						ERROR	(..0536,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  7979	036557	036 14 0 00 043537 
  7980	036560	255 00 0 00 000000
  7981					^
  7982
  7983	036561	200 14 0 00 040457 	..0537:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-3
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0187

  7984	036562	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  7985						ERROR	(..0536,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  7986					LL
  7987	036563	036 13 0 00 043551 
  7988	036564	255 00 0 00 000000
  7989					^
  7990					^
  7991
  7992					; **********************************************************************
  7993					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  7994					; **********************************************************************
  7995
  7996						MULTF	(G,-1,-2,0,400000000003,-1,-1,-1,-6)^
  7997
  7998					; --- MULTIPLICAND = (-1,-2)
  7999					; --- MULTIPLIER === (0,400000000003)
  8000					; --- RESULT ======= (-1,-1,-1,-6)
  8001
  8002	036565	200 01 0 00 043641 	..0540:	MOVE	AC1,[[EXP -1,-2,0,400000000003,-1,-1,-1,-6],,MCAND]
  8003	036566	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8004	036567	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8005						ERROR	(..0540,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8006	036570	036 14 0 00 043537 
  8007	036571	255 00 0 00 000000
  8008					^
  8009
  8010	036572	200 14 0 00 040457 	..0541:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8011	036573	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8012						ERROR	(..0540,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8013					LL
  8014	036574	036 13 0 00 043551 
  8015	036575	255 00 0 00 000000
  8016					^
  8017					^
  8018
  8019					; **********************************************************************
  8020					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8021					; **********************************************************************
  8022
  8023						MULTF	(G,-1,377777777776,0,400000000003,-1,-1,-1,-6)^
  8024
  8025					; --- MULTIPLICAND = (-1,377777777776)
  8026					; --- MULTIPLIER === (0,400000000003)
  8027					; --- RESULT ======= (-1,-1,-1,-6)
  8028
  8029	036576	200 01 0 00 043652 	..0542:	MOVE	AC1,[[EXP -1,377777777776,0,400000000003,-1,-1,-1,-6],,MCAND]
  8030	036577	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8031	036600	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8032						ERROR	(..0542,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8033	036601	036 14 0 00 043537 
  8034	036602	255 00 0 00 000000
  8035					^
  8036
  8037	036603	200 14 0 00 040457 	..0543:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8038	036604	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-4
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0188

  8039						ERROR	(..0542,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8040					LL
  8041	036605	036 13 0 00 043551 
  8042	036606	255 00 0 00 000000
  8043					^
  8044					^
  8045
  8046					; **********************************************************************
  8047					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8048					; **********************************************************************
  8049
  8050						MULTF	(G,-1,377777777776,0,3,-1,-1,-1,-6)^
  8051
  8052					; --- MULTIPLICAND = (-1,377777777776)
  8053					; --- MULTIPLIER === (0,3)
  8054					; --- RESULT ======= (-1,-1,-1,-6)
  8055
  8056	036607	200 01 0 00 043663 	..0544:	MOVE	AC1,[[EXP -1,377777777776,0,3,-1,-1,-1,-6],,MCAND]
  8057	036610	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8058	036611	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8059						ERROR	(..0544,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8060	036612	036 14 0 00 043537 
  8061	036613	255 00 0 00 000000
  8062					^
  8063
  8064	036614	200 14 0 00 040457 	..0545:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8065	036615	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8066						ERROR	(..0544,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8067					LL
  8068	036616	036 13 0 00 043551 
  8069	036617	255 00 0 00 000000
  8070					^
  8071					^
  8072
  8073					; **********************************************************************
  8074					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8075					; **********************************************************************
  8076
  8077						MULTF	(G,-1,-2,-1,377777777775,0,0,0,6)^
  8078
  8079					; --- MULTIPLICAND = (-1,-2)
  8080					; --- MULTIPLIER === (-1,377777777775)
  8081					; --- RESULT ======= (0,0,0,6)
  8082
  8083	036620	200 01 0 00 043674 	..0546:	MOVE	AC1,[[EXP -1,-2,-1,377777777775,0,0,0,6],,MCAND]
  8084	036621	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8085	036622	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8086						ERROR	(..0546,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8087	036623	036 14 0 00 043537 
  8088	036624	255 00 0 00 000000
  8089					^
  8090
  8091	036625	200 14 0 00 040457 	..0547:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8092	036626	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8093						ERROR	(..0546,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-5
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0189

  8094					LL
  8095	036627	036 13 0 00 043551 
  8096	036630	255 00 0 00 000000
  8097					^
  8098					^
  8099
  8100					; **********************************************************************
  8101					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8102					; **********************************************************************
  8103
  8104						MULTF	(G,-1,377777777776,-1,377777777775,0,0,0,6)^
  8105
  8106					; --- MULTIPLICAND = (-1,377777777776)
  8107					; --- MULTIPLIER === (-1,377777777775)
  8108					; --- RESULT ======= (0,0,0,6)
  8109
  8110	036631	200 01 0 00 043705 	..0550:	MOVE	AC1,[[EXP -1,377777777776,-1,377777777775,0,0,0,6],,MCAND]
  8111	036632	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8112	036633	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8113						ERROR	(..0550,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8114	036634	036 14 0 00 043537 
  8115	036635	255 00 0 00 000000
  8116					^
  8117
  8118	036636	200 14 0 00 040457 	..0551:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8119	036637	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8120						ERROR	(..0550,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8121					LL
  8122	036640	036 13 0 00 043551 
  8123	036641	255 00 0 00 000000
  8124					^
  8125					^
  8126
  8127					; **********************************************************************
  8128					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8129					; **********************************************************************
  8130
  8131						MULTF	(G,-1,377777777776,-1,-3,0,0,0,6)^
  8132
  8133					; --- MULTIPLICAND = (-1,377777777776)
  8134					; --- MULTIPLIER === (-1,-3)
  8135					; --- RESULT ======= (0,0,0,6)
  8136
  8137	036642	200 01 0 00 043716 	..0552:	MOVE	AC1,[[EXP -1,377777777776,-1,-3,0,0,0,6],,MCAND]
  8138	036643	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8139	036644	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8140						ERROR	(..0552,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8141	036645	036 14 0 00 043537 
  8142	036646	255 00 0 00 000000
  8143					^
  8144
  8145	036647	200 14 0 00 040457 	..0553:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8146	036650	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8147						ERROR	(..0552,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8148					LL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-6
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0190

  8149	036651	036 13 0 00 043551 
  8150	036652	255 00 0 00 000000
  8151					^
  8152					^
  8153
  8154					; **********************************************************************
  8155					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8156					; **********************************************************************
  8157
  8158						MULTF	(G,2,0,3,400000000000,0,6)^
  8159
  8160					; --- MULTIPLICAND = (2,0)
  8161					; --- MULTIPLIER === (3,400000000000)
  8162					; --- RESULT ======= (0,6,0,0)
  8163
  8164	036653	200 01 0 00 043727 	..0554:	MOVE	AC1,[[EXP 2,0,3,400000000000,0,6,0,0],,MCAND]
  8165	036654	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8166	036655	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8167						ERROR	(..0554,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8168	036656	036 14 0 00 043537 
  8169	036657	255 00 0 00 000000
  8170					^
  8171
  8172	036660	200 14 0 00 040457 	..0555:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8173	036661	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8174						ERROR	(..0554,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8175					LL
  8176	036662	036 13 0 00 043551 
  8177	036663	255 00 0 00 000000
  8178					^
  8179					^
  8180
  8181					; **********************************************************************
  8182					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8183					; **********************************************************************
  8184
  8185						MULTF	(G,2,400000000000,3,400000000000,0,6)^
  8186
  8187					; --- MULTIPLICAND = (2,400000000000)
  8188					; --- MULTIPLIER === (3,400000000000)
  8189					; --- RESULT ======= (0,6,0,0)
  8190
  8191	036664	200 01 0 00 043740 	..0556:	MOVE	AC1,[[EXP 2,400000000000,3,400000000000,0,6,0,0],,MCAND]
  8192	036665	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8193	036666	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8194						ERROR	(..0556,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8195	036667	036 14 0 00 043537 
  8196	036670	255 00 0 00 000000
  8197					^
  8198
  8199	036671	200 14 0 00 040457 	..0557:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8200	036672	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8201						ERROR	(..0556,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8202					LL
  8203	036673	036 13 0 00 043551 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-7
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0191

  8204	036674	255 00 0 00 000000
  8205					^
  8206					^
  8207
  8208					; **********************************************************************
  8209					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8210					; **********************************************************************
  8211
  8212						MULTF	(G,2,400000000000,3,0,0,6,0)^
  8213
  8214					; --- MULTIPLICAND = (2,400000000000)
  8215					; --- MULTIPLIER === (3,0)
  8216					; --- RESULT ======= (0,6,0,0)
  8217
  8218	036675	200 01 0 00 043751 	..0560:	MOVE	AC1,[[EXP 2,400000000000,3,0,0,6,0,0],,MCAND]
  8219	036676	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8220	036677	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8221						ERROR	(..0560,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8222	036700	036 14 0 00 043537 
  8223	036701	255 00 0 00 000000
  8224					^
  8225
  8226	036702	200 14 0 00 040457 	..0561:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8227	036703	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8228						ERROR	(..0560,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8229					LL
  8230	036704	036 13 0 00 043551 
  8231	036705	255 00 0 00 000000
  8232					^
  8233					^
  8234
  8235					; **********************************************************************
  8236					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8237					; **********************************************************************
  8238
  8239						MULTF	(G,2,0,-3,0,-1,-6,400000000000,400000000000)^
  8240
  8241					; --- MULTIPLICAND = (2,0)
  8242					; --- MULTIPLIER === (-3,0)
  8243					; --- RESULT ======= (-1,-6,400000000000,400000000000)
  8244
  8245	036706	200 01 0 00 043762 	..0562:	MOVE	AC1,[[EXP 2,0,-3,0,-1,-6,400000000000,400000000000],,MCAND]
  8246	036707	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8247	036710	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8248						ERROR	(..0562,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8249	036711	036 14 0 00 043537 
  8250	036712	255 00 0 00 000000
  8251					^
  8252
  8253	036713	200 14 0 00 040457 	..0563:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8254	036714	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8255						ERROR	(..0562,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8256					LL
  8257	036715	036 13 0 00 043551 
  8258	036716	255 00 0 00 000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-8
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0192

  8259					^
  8260					^
  8261
  8262					; **********************************************************************
  8263					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8264					; **********************************************************************
  8265
  8266						MULTF	(G,2,400000000000,-3,0,-1,-6,400000000000,400000000000)^
  8267
  8268					; --- MULTIPLICAND = (2,400000000000)
  8269					; --- MULTIPLIER === (-3,0)
  8270					; --- RESULT ======= (-1,-6,400000000000,400000000000)
  8271
  8272	036717	200 01 0 00 043773 	..0564:	MOVE	AC1,[[EXP 2,400000000000,-3,0,-1,-6,400000000000,400000000000],,MCAND]
  8273	036720	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8274	036721	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8275						ERROR	(..0564,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8276	036722	036 14 0 00 043537 
  8277	036723	255 00 0 00 000000
  8278					^
  8279
  8280	036724	200 14 0 00 040457 	..0565:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8281	036725	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8282						ERROR	(..0564,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8283					LL
  8284	036726	036 13 0 00 043551 
  8285	036727	255 00 0 00 000000
  8286					^
  8287					^
  8288
  8289					; **********************************************************************
  8290					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8291					; **********************************************************************
  8292
  8293						MULTF	(G,2,400000000000,-3,400000000000,-1,-6,400000000000,400000000000)^
  8294
  8295					; --- MULTIPLICAND = (2,400000000000)
  8296					; --- MULTIPLIER === (-3,400000000000)
  8297					; --- RESULT ======= (-1,-6,400000000000,400000000000)
  8298
  8299					..0566:	MOVE	AC1,[[EXP 2,400000000000,-3,400000000000,-1,-6,400000000000,400000000000],,
  8300	036730	200 01 0 00 044004 	MCAND]
  8301	036731	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8302	036732	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8303						ERROR	(..0566,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8304	036733	036 14 0 00 043537 
  8305	036734	255 00 0 00 000000
  8306					^
  8307
  8308	036735	200 14 0 00 040457 	..0567:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8309	036736	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8310						ERROR	(..0566,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8311					LL
  8312	036737	036 13 0 00 043551 
  8313	036740	255 00 0 00 000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-9
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0193

  8314					^
  8315					^
  8316
  8317					; **********************************************************************
  8318					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8319					; **********************************************************************
  8320
  8321						MULTF	(G,-2,400000000000,3,400000000000,-1,-6,400000000000,400000000000)^
  8322
  8323					; --- MULTIPLICAND = (-2,400000000000)
  8324					; --- MULTIPLIER === (3,400000000000)
  8325					; --- RESULT ======= (-1,-6,400000000000,400000000000)
  8326
  8327					..0570:	MOVE	AC1,[[EXP -2,400000000000,3,400000000000,-1,-6,400000000000,400000000000],,
  8328	036741	200 01 0 00 044015 	MCAND]
  8329	036742	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8330	036743	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8331						ERROR	(..0570,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8332	036744	036 14 0 00 043537 
  8333	036745	255 00 0 00 000000
  8334					^
  8335
  8336	036746	200 14 0 00 040457 	..0571:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8337	036747	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8338						ERROR	(..0570,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8339					LL
  8340	036750	036 13 0 00 043551 
  8341	036751	255 00 0 00 000000
  8342					^
  8343					^
  8344
  8345					; **********************************************************************
  8346					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8347					; **********************************************************************
  8348
  8349						MULTF	(G,-2,0,3,400000000000,-1,-6,400000000000,400000000000)^
  8350
  8351					; --- MULTIPLICAND = (-2,0)
  8352					; --- MULTIPLIER === (3,400000000000)
  8353					; --- RESULT ======= (-1,-6,400000000000,400000000000)
  8354
  8355	036752	200 01 0 00 044026 	..0572:	MOVE	AC1,[[EXP -2,0,3,400000000000,-1,-6,400000000000,400000000000],,MCAND]
  8356	036753	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8357	036754	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8358						ERROR	(..0572,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8359	036755	036 14 0 00 043537 
  8360	036756	255 00 0 00 000000
  8361					^
  8362
  8363	036757	200 14 0 00 040457 	..0573:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8364	036760	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8365						ERROR	(..0572,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8366					LL
  8367	036761	036 13 0 00 043551 
  8368	036762	255 00 0 00 000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-10
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0194

  8369					^
  8370					^
  8371
  8372					; **********************************************************************
  8373					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8374					; **********************************************************************
  8375
  8376						MULTF	(G,-2,0,3,0,-1,-6,400000000000,400000000000)^
  8377
  8378					; --- MULTIPLICAND = (-2,0)
  8379					; --- MULTIPLIER === (3,0)
  8380					; --- RESULT ======= (-1,-6,400000000000,400000000000)
  8381
  8382	036763	200 01 0 00 044037 	..0574:	MOVE	AC1,[[EXP -2,0,3,0,-1,-6,400000000000,400000000000],,MCAND]
  8383	036764	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8384	036765	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8385						ERROR	(..0574,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8386	036766	036 14 0 00 043537 
  8387	036767	255 00 0 00 000000
  8388					^
  8389
  8390	036770	200 14 0 00 040457 	..0575:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8391	036771	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8392						ERROR	(..0574,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8393					LL
  8394	036772	036 13 0 00 043551 
  8395	036773	255 00 0 00 000000
  8396					^
  8397					^
  8398
  8399					; **********************************************************************
  8400					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8401					; **********************************************************************
  8402
  8403						MULTF	(G,-2,400000000000,-3,0,0,6)^
  8404
  8405					; --- MULTIPLICAND = (-2,400000000000)
  8406					; --- MULTIPLIER === (-3,0)
  8407					; --- RESULT ======= (0,6,0,0)
  8408
  8409	036774	200 01 0 00 044050 	..0576:	MOVE	AC1,[[EXP -2,400000000000,-3,0,0,6,0,0],,MCAND]
  8410	036775	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8411	036776	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8412						ERROR	(..0576,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8413	036777	036 14 0 00 043537 
  8414	037000	255 00 0 00 000000
  8415					^
  8416
  8417	037001	200 14 0 00 040457 	..0577:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8418	037002	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8419						ERROR	(..0576,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8420					LL
  8421	037003	036 13 0 00 043551 
  8422	037004	255 00 0 00 000000
  8423					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 24-11
DSKCFM	MAC	26-Sep-79 15:49		DMUL - TEST G                                                                      SEQ 0195

  8424					^
  8425
  8426					; **********************************************************************
  8427					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8428					; **********************************************************************
  8429
  8430						MULTF	(G,-2,0,-3,0,0,6)^
  8431
  8432					; --- MULTIPLICAND = (-2,0)
  8433					; --- MULTIPLIER === (-3,0)
  8434					; --- RESULT ======= (0,6,0,0)
  8435
  8436	037005	200 01 0 00 044061 	..0600:	MOVE	AC1,[[EXP -2,0,-3,0,0,6,0,0],,MCAND]
  8437	037006	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8438	037007	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8439						ERROR	(..0600,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8440	037010	036 14 0 00 043537 
  8441	037011	255 00 0 00 000000
  8442					^
  8443
  8444	037012	200 14 0 00 040457 	..0601:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8445	037013	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8446						ERROR	(..0600,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8447					LL
  8448	037014	036 13 0 00 043551 
  8449	037015	255 00 0 00 000000
  8450					^
  8451					^
  8452
  8453					; **********************************************************************
  8454					; ----------  DMUL - TEST G - INCONSISTENT SIGNS  ----------
  8455					; **********************************************************************
  8456
  8457						MULTF	(G,-2,0,-3,400000000000,0,6)^
  8458
  8459					; --- MULTIPLICAND = (-2,0)
  8460					; --- MULTIPLIER === (-3,400000000000)
  8461					; --- RESULT ======= (0,6,0,0)
  8462
  8463	037016	200 01 0 00 044072 	..0602:	MOVE	AC1,[[EXP -2,0,-3,400000000000,0,6,0,0],,MCAND]
  8464	037017	251 01 0 00 040511 		BLT	AC1,MRES+3	;SET UP OPERANDS FOR SUBROUTINE
  8465	037020	260 17 0 00 040451 		GO	MSUBR		;GO DO TEST
  8466						ERROR	(..0602,14,SCR1,SCR2,,TEST G - RESULT CALCULATED INCORRECTLY,MPRINT)^SALL
  8467	037021	036 14 0 00 043537 
  8468	037022	255 00 0 00 000000
  8469					^
  8470
  8471	037023	200 14 0 00 040457 	..0603:	MOVE	SCR2,MFLOC	;GET PC - TO TEST PC FLAGS
  8472	037024	623 14 0 00 400000 		TLZE	SCR2,AROV	;CALC OK PC (NO - AROV) & TEST
  8473						ERROR	(..0602,13,SCR2,MFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0 TO 4,MPRINT)^SA
  8474					LL
  8475	037025	036 13 0 00 043551 
  8476	037026	255 00 0 00 000000
  8477					^
  8478					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 25
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST A                                                                      SEQ 0196

  8479					SUBTTL	DDIV - TEST A
  8480														SALL
  8481			044073			T=SIXBTZ<DDIV TEST>
  8482														LALL
  8483					; **********************************************************************
  8484					;*DDIV - TEST A
  8485					;*
  8486					;*	(0,0,0,#) / 1		THESE BASIC TESTS VERIFY THAT THE DDIV
  8487					;*	(0,0,#,0) / 1		HANDLES A QUADRUPLE WORD DIVIDEND. FOR
  8488					;*				EACH TEST ALL PERMUTATIONS OF POSITIVE
  8489					;*				AND NEGATIVE OPERANDS ARE TESTED.
  8490					; **********************************************************************
  8491
  8492					; **********************************************************************
  8493					; ----------  DDIV - TEST A  -  (0,0,0,#) / 1  ----------
  8494					; **********************************************************************
  8495
  8496						PDIV	(A,0,0,0,NUM,0,1,0,NUM)^
  8497
  8498					; --- DIVIDEND == (0,0,0,NUM)
  8499					; --- DIVISOR === (0,1)
  8500					; --- QUOTIENT == (0,NUM)
  8501					; --- REMAINDER = (0,0)
  8502
  8503	037027	200 01 0 00 044107 	..0604:	MOVE	AC1,[[EXP 0,0,0,NUM,0,1,0,NUM,0,0],,PDEND]
  8504	037030	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8505	037031	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8506						ERROR	(..0604,14,SCR1,SCR2,,TEST A - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8507	037032	036 14 0 00 044117 
  8508	037033	255 00 0 00 000000
  8509					^
  8510					^
  8511
  8512					; **********************************************************************
  8513					; ----------  DDIV - TEST A  -  (0,0,#,0) / 1  ----------
  8514					; **********************************************************************
  8515
  8516						PDIV	(A,0,0,NUM,0,0,1,NUM,0)^
  8517
  8518					; --- DIVIDEND == (0,0,NUM,0)
  8519					; --- DIVISOR === (0,1)
  8520					; --- QUOTIENT == (NUM,0)
  8521					; --- REMAINDER = (0,0)
  8522
  8523	037034	200 01 0 00 044134 	..0605:	MOVE	AC1,[[EXP 0,0,NUM,0,0,1,NUM,0,0,0],,PDEND]
  8524	037035	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8525	037036	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8526						ERROR	(..0605,14,SCR1,SCR2,,TEST A - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8527	037037	036 14 0 00 044117 
  8528	037040	255 00 0 00 000000
  8529					^
  8530					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 26
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST B                                                                      SEQ 0197

  8531					SUBTTL	DDIV - TEST B
  8532
  8533					; **********************************************************************
  8534					;*DDIV - TEST B
  8535					;*
  8536					;*	(0,0,0,#) / #		THESE TESTS PERFORM SOME CASES MORE
  8537					;*	(0,0,#,0) / (#,0)	DIFFICULT THAN (A).  PERMUTATIONS OF
  8538					;*				POSITIVE AND NEGATIVE OPERANDS ARE
  8539					;*				TESTED.
  8540					; **********************************************************************
  8541
  8542					; **********************************************************************
  8543					; ----------  DDIV - TEST B  -  (0,0,0,#) / #  ----------
  8544					; **********************************************************************
  8545
  8546						PDIV	(B,0,0,0,NUM,0,NUM,0,1)^
  8547
  8548					; --- DIVIDEND == (0,0,0,NUM)
  8549					; --- DIVISOR === (0,NUM)
  8550					; --- QUOTIENT == (0,1)
  8551					; --- REMAINDER = (0,0)
  8552
  8553	037041	200 01 0 00 044147 	..0606:	MOVE	AC1,[[EXP 0,0,0,NUM,0,NUM,0,1,0,0],,PDEND]
  8554	037042	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8555	037043	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8556						ERROR	(..0606,14,SCR1,SCR2,,TEST B - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8557	037044	036 14 0 00 044157 
  8558	037045	255 00 0 00 000000
  8559					^
  8560					^
  8561
  8562					; **********************************************************************
  8563					; ----------  DDIV - TEST B  -  (0,0,#,0) / #,0  ----------
  8564					; **********************************************************************
  8565
  8566						PDIV	(B,0,0,NUM,0,NUM,0,0,1)^
  8567
  8568					; --- DIVIDEND == (0,0,NUM,0)
  8569					; --- DIVISOR === (NUM,0)
  8570					; --- QUOTIENT == (0,1)
  8571					; --- REMAINDER = (0,0)
  8572
  8573	037046	200 01 0 00 044174 	..0607:	MOVE	AC1,[[EXP 0,0,NUM,0,NUM,0,0,1,0,0],,PDEND]
  8574	037047	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8575	037050	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8576						ERROR	(..0607,14,SCR1,SCR2,,TEST B - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8577	037051	036 14 0 00 044157 
  8578	037052	255 00 0 00 000000
  8579					^
  8580					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0198

  8581					SUBTTL	DDIV - TEST C
  8582
  8583					; **********************************************************************
  8584					;*DDIV - TEST C
  8585					;*
  8586					;*	(0,0,0,1)  (0,0,1,0)  (0,0,1,0)  (0,1,0,0)  (0,1,0,0)  (1,0,0,0)
  8587					;*	 -------    -------    -------    -------    -------    -------
  8588					;*	    2	       2	 2,0	     2	       2,0	  2,0
  8589					;*
  8590					;*	THESE TESTS PERFORM DIVISIONS WHICH RESULT IN A SHIFT OF THE
  8591					;*	THE DIVIDEND ACROSS WORD BOUNDARIES.
  8592					;*	THESE TESTS ARE REPEATED FOR THE VARIOUS PERMUTATIONS OF
  8593					;*	POSITIVE AND NEGATIVE OPERANDS.
  8594					; **********************************************************************
  8595
  8596					; **********************************************************************
  8597					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8598					; **********************************************************************
  8599
  8600						PDIV	(C,0,0,0,1,0,2,0,0,0,1)^
  8601
  8602					; --- DIVIDEND == (0,0,0,1)
  8603					; --- DIVISOR === (0,2)
  8604					; --- QUOTIENT == (0,0)
  8605					; --- REMAINDER = (0,1)
  8606
  8607	037053	200 01 0 00 044207 	..0610:	MOVE	AC1,[[EXP 0,0,0,1,0,2,0,0,0,1],,PDEND]
  8608	037054	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8609	037055	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8610						ERROR	(..0610,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8611	037056	036 14 0 00 044217 
  8612	037057	255 00 0 00 000000
  8613					^
  8614					^
  8615
  8616					; **********************************************************************
  8617					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8618					; **********************************************************************
  8619
  8620						PDIV	(C,0,0,1,0,0,2,0,200000000000,0,0)^
  8621
  8622					; --- DIVIDEND == (0,0,1,0)
  8623					; --- DIVISOR === (0,2)
  8624					; --- QUOTIENT == (0,200000000000)
  8625					; --- REMAINDER = (0,0)
  8626
  8627	037060	200 01 0 00 044234 	..0611:	MOVE	AC1,[[EXP 0,0,1,0,0,2,0,200000000000,0,0],,PDEND]
  8628	037061	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8629	037062	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8630						ERROR	(..0611,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8631	037063	036 14 0 00 044217 
  8632	037064	255 00 0 00 000000
  8633					^
  8634					^
  8635
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-1
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0199

  8636					; **********************************************************************
  8637					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8638					; **********************************************************************
  8639
  8640						PDIV	(C,0,0,1,0,2,0,0,0,1,0)^
  8641
  8642					; --- DIVIDEND == (0,0,1,0)
  8643					; --- DIVISOR === (2,0)
  8644					; --- QUOTIENT == (0,0)
  8645					; --- REMAINDER = (1,0)
  8646
  8647	037065	200 01 0 00 044247 	..0612:	MOVE	AC1,[[EXP 0,0,1,0,2,0,0,0,1,0],,PDEND]
  8648	037066	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8649	037067	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8650						ERROR	(..0612,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8651	037070	036 14 0 00 044217 
  8652	037071	255 00 0 00 000000
  8653					^
  8654					^
  8655
  8656					; **********************************************************************
  8657					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8658					; **********************************************************************
  8659
  8660						PDIV	(C,0,1,0,0,0,2,200000000000,0,0,0)^
  8661
  8662					; --- DIVIDEND == (0,1,0,0)
  8663					; --- DIVISOR === (0,2)
  8664					; --- QUOTIENT == (200000000000,0)
  8665					; --- REMAINDER = (0,0)
  8666
  8667	037072	200 01 0 00 044262 	..0613:	MOVE	AC1,[[EXP 0,1,0,0,0,2,200000000000,0,0,0],,PDEND]
  8668	037073	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8669	037074	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8670						ERROR	(..0613,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8671	037075	036 14 0 00 044217 
  8672	037076	255 00 0 00 000000
  8673					^
  8674					^
  8675
  8676					; **********************************************************************
  8677					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8678					; **********************************************************************
  8679
  8680						PDIV	(C,0,1,0,0,2,0,0,200000000000,0,0)^
  8681
  8682					; --- DIVIDEND == (0,1,0,0)
  8683					; --- DIVISOR === (2,0)
  8684					; --- QUOTIENT == (0,200000000000)
  8685					; --- REMAINDER = (0,0)
  8686
  8687	037077	200 01 0 00 044275 	..0614:	MOVE	AC1,[[EXP 0,1,0,0,2,0,0,200000000000,0,0],,PDEND]
  8688	037100	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8689	037101	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8690						ERROR	(..0614,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-2
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0200

  8691	037102	036 14 0 00 044217 
  8692	037103	255 00 0 00 000000
  8693					^
  8694					^
  8695
  8696					; **********************************************************************
  8697					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8698					; **********************************************************************
  8699
  8700						PDIV	(C,1,0,0,0,2,0,200000000000,0,0,0)^
  8701
  8702					; --- DIVIDEND == (1,0,0,0)
  8703					; --- DIVISOR === (2,0)
  8704					; --- QUOTIENT == (200000000000,0)
  8705					; --- REMAINDER = (0,0)
  8706
  8707	037104	200 01 0 00 044310 	..0615:	MOVE	AC1,[[EXP 1,0,0,0,2,0,200000000000,0,0,0],,PDEND]
  8708	037105	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8709	037106	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8710						ERROR	(..0615,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8711	037107	036 14 0 00 044217 
  8712	037110	255 00 0 00 000000
  8713					^
  8714					^
  8715
  8716					; **********************************************************************
  8717					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8718					; **********************************************************************
  8719
  8720						PDIV	(C,-1,-1,-1,-1,0,2,0,0,-1,-1)^
  8721
  8722					; --- DIVIDEND == (-1,-1,-1,-1)
  8723					; --- DIVISOR === (0,2)
  8724					; --- QUOTIENT == (0,0)
  8725					; --- REMAINDER = (-1,-1)
  8726
  8727	037111	200 01 0 00 044323 	..0616:	MOVE	AC1,[[EXP -1,-1,-1,-1,0,2,0,0,-1,-1],,PDEND]
  8728	037112	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8729	037113	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8730						ERROR	(..0616,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8731	037114	036 14 0 00 044217 
  8732	037115	255 00 0 00 000000
  8733					^
  8734					^
  8735
  8736					; **********************************************************************
  8737					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8738					; **********************************************************************
  8739
  8740						PDIV	(C,-1,-1,-1,1B0,0,2,-1,600000000000,0,0)^
  8741
  8742					; --- DIVIDEND == (-1,-1,-1,1B0)
  8743					; --- DIVISOR === (0,2)
  8744					; --- QUOTIENT == (-1,600000000000)
  8745					; --- REMAINDER = (0,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-3
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0201

  8746
  8747	037116	200 01 0 00 044336 	..0617:	MOVE	AC1,[[EXP -1,-1,-1,1B0,0,2,-1,600000000000,0,0],,PDEND]
  8748	037117	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8749	037120	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8750						ERROR	(..0617,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8751	037121	036 14 0 00 044217 
  8752	037122	255 00 0 00 000000
  8753					^
  8754					^
  8755
  8756					; **********************************************************************
  8757					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8758					; **********************************************************************
  8759
  8760						PDIV	(C,-1,-1,-1,1B0,2,0,0,0,-1,1B0)^
  8761
  8762					; --- DIVIDEND == (-1,-1,-1,1B0)
  8763					; --- DIVISOR === (2,0)
  8764					; --- QUOTIENT == (0,0)
  8765					; --- REMAINDER = (-1,1B0)
  8766
  8767	037123	200 01 0 00 044351 	..0620:	MOVE	AC1,[[EXP -1,-1,-1,1B0,2,0,0,0,-1,1B0],,PDEND]
  8768	037124	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8769	037125	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8770						ERROR	(..0620,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8771	037126	036 14 0 00 044217 
  8772	037127	255 00 0 00 000000
  8773					^
  8774					^
  8775
  8776					; **********************************************************************
  8777					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8778					; **********************************************************************
  8779
  8780						PDIV	(C,-1,-1,1B0,1B0,0,2,600000000000,1B0,0,0)^
  8781
  8782					; --- DIVIDEND == (-1,-1,1B0,1B0)
  8783					; --- DIVISOR === (0,2)
  8784					; --- QUOTIENT == (600000000000,1B0)
  8785					; --- REMAINDER = (0,0)
  8786
  8787	037130	200 01 0 00 044364 	..0621:	MOVE	AC1,[[EXP -1,-1,1B0,1B0,0,2,600000000000,1B0,0,0],,PDEND]
  8788	037131	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8789	037132	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8790						ERROR	(..0621,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8791	037133	036 14 0 00 044217 
  8792	037134	255 00 0 00 000000
  8793					^
  8794					^
  8795
  8796					; **********************************************************************
  8797					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8798					; **********************************************************************
  8799
  8800						PDIV	(C,-1,-1,1B0,1B0,2,0,-1,600000000000,0,0)^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-4
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0202

  8801
  8802					; --- DIVIDEND == (-1,-1,1B0,1B0)
  8803					; --- DIVISOR === (2,0)
  8804					; --- QUOTIENT == (-1,600000000000)
  8805					; --- REMAINDER = (0,0)
  8806
  8807	037135	200 01 0 00 044377 	..0622:	MOVE	AC1,[[EXP -1,-1,1B0,1B0,2,0,-1,600000000000,0,0],,PDEND]
  8808	037136	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8809	037137	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8810						ERROR	(..0622,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8811	037140	036 14 0 00 044217 
  8812	037141	255 00 0 00 000000
  8813					^
  8814					^
  8815
  8816					; **********************************************************************
  8817					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8818					; **********************************************************************
  8819
  8820						PDIV	(C,-1,1B0,1B0,1B0,2,0,600000000000,1B0,0,0)^
  8821
  8822					; --- DIVIDEND == (-1,1B0,1B0,1B0)
  8823					; --- DIVISOR === (2,0)
  8824					; --- QUOTIENT == (600000000000,1B0)
  8825					; --- REMAINDER = (0,0)
  8826
  8827	037142	200 01 0 00 044412 	..0623:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,2,0,600000000000,1B0,0,0],,PDEND]
  8828	037143	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8829	037144	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8830						ERROR	(..0623,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8831	037145	036 14 0 00 044217 
  8832	037146	255 00 0 00 000000
  8833					^
  8834					^
  8835
  8836					; **********************************************************************
  8837					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8838					; **********************************************************************
  8839
  8840						PDIV	(C,0,0,0,1,-1,-2,0,0,0,1)^
  8841
  8842					; --- DIVIDEND == (0,0,0,1)
  8843					; --- DIVISOR === (-1,-2)
  8844					; --- QUOTIENT == (0,0)
  8845					; --- REMAINDER = (0,1)
  8846
  8847	037147	200 01 0 00 044425 	..0624:	MOVE	AC1,[[EXP 0,0,0,1,-1,-2,0,0,0,1],,PDEND]
  8848	037150	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8849	037151	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8850						ERROR	(..0624,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8851	037152	036 14 0 00 044217 
  8852	037153	255 00 0 00 000000
  8853					^
  8854					^
  8855
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-5
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0203

  8856					; **********************************************************************
  8857					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8858					; **********************************************************************
  8859
  8860						PDIV	(C,0,0,1,0,-1,-2,-1,600000000000,0,0)^
  8861
  8862					; --- DIVIDEND == (0,0,1,0)
  8863					; --- DIVISOR === (-1,-2)
  8864					; --- QUOTIENT == (-1,600000000000)
  8865					; --- REMAINDER = (0,0)
  8866
  8867	037154	200 01 0 00 044440 	..0625:	MOVE	AC1,[[EXP 0,0,1,0,-1,-2,-1,600000000000,0,0],,PDEND]
  8868	037155	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8869	037156	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8870						ERROR	(..0625,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8871	037157	036 14 0 00 044217 
  8872	037160	255 00 0 00 000000
  8873					^
  8874					^
  8875
  8876					; **********************************************************************
  8877					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8878					; **********************************************************************
  8879
  8880						PDIV	(C,0,0,1,0,-2,1B0,0,0,1,0)^
  8881
  8882					; --- DIVIDEND == (0,0,1,0)
  8883					; --- DIVISOR === (-2,1B0)
  8884					; --- QUOTIENT == (0,0)
  8885					; --- REMAINDER = (1,0)
  8886
  8887	037161	200 01 0 00 044453 	..0626:	MOVE	AC1,[[EXP 0,0,1,0,-2,1B0,0,0,1,0],,PDEND]
  8888	037162	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8889	037163	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8890						ERROR	(..0626,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8891	037164	036 14 0 00 044217 
  8892	037165	255 00 0 00 000000
  8893					^
  8894					^
  8895
  8896					; **********************************************************************
  8897					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8898					; **********************************************************************
  8899
  8900						PDIV	(C,0,1,0,0,-1,-2,600000000000,1B0,0,0)^
  8901
  8902					; --- DIVIDEND == (0,1,0,0)
  8903					; --- DIVISOR === (-1,-2)
  8904					; --- QUOTIENT == (600000000000,1B0)
  8905					; --- REMAINDER = (0,0)
  8906
  8907	037166	200 01 0 00 044466 	..0627:	MOVE	AC1,[[EXP 0,1,0,0,-1,-2,600000000000,1B0,0,0],,PDEND]
  8908	037167	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8909	037170	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8910						ERROR	(..0627,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-6
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0204

  8911	037171	036 14 0 00 044217 
  8912	037172	255 00 0 00 000000
  8913					^
  8914					^
  8915
  8916					; **********************************************************************
  8917					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8918					; **********************************************************************
  8919
  8920						PDIV	(C,0,1,0,0,-2,1B0,-1,600000000000,0,0)^
  8921
  8922					; --- DIVIDEND == (0,1,0,0)
  8923					; --- DIVISOR === (-2,1B0)
  8924					; --- QUOTIENT == (-1,600000000000)
  8925					; --- REMAINDER = (0,0)
  8926
  8927	037173	200 01 0 00 044501 	..0630:	MOVE	AC1,[[EXP 0,1,0,0,-2,1B0,-1,600000000000,0,0],,PDEND]
  8928	037174	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8929	037175	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8930						ERROR	(..0630,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8931	037176	036 14 0 00 044217 
  8932	037177	255 00 0 00 000000
  8933					^
  8934					^
  8935
  8936					; **********************************************************************
  8937					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8938					; **********************************************************************
  8939
  8940						PDIV	(C,1,0,0,0,-2,1B0,600000000000,1B0,0,0)^
  8941
  8942					; --- DIVIDEND == (1,0,0,0)
  8943					; --- DIVISOR === (-2,1B0)
  8944					; --- QUOTIENT == (600000000000,1B0)
  8945					; --- REMAINDER = (0,0)
  8946
  8947	037200	200 01 0 00 044514 	..0631:	MOVE	AC1,[[EXP 1,0,0,0,-2,1B0,600000000000,1B0,0,0],,PDEND]
  8948	037201	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8949	037202	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8950						ERROR	(..0631,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8951	037203	036 14 0 00 044217 
  8952	037204	255 00 0 00 000000
  8953					^
  8954					^
  8955
  8956					; **********************************************************************
  8957					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8958					; **********************************************************************
  8959
  8960						PDIV	(C,-1,-1,-1,-1,-1,-2,0,0,-1,-1)^
  8961
  8962					; --- DIVIDEND == (-1,-1,-1,-1)
  8963					; --- DIVISOR === (-1,-2)
  8964					; --- QUOTIENT == (0,0)
  8965					; --- REMAINDER = (-1,-1)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-7
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0205

  8966
  8967	037205	200 01 0 00 044527 	..0632:	MOVE	AC1,[[EXP -1,-1,-1,-1,-1,-2,0,0,-1,-1],,PDEND]
  8968	037206	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8969	037207	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8970						ERROR	(..0632,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8971	037210	036 14 0 00 044217 
  8972	037211	255 00 0 00 000000
  8973					^
  8974					^
  8975
  8976					; **********************************************************************
  8977					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8978					; **********************************************************************
  8979
  8980						PDIV	(C,-1,-1,-1,1B0,-1,-2,0,200000000000,0,0)^
  8981
  8982					; --- DIVIDEND == (-1,-1,-1,1B0)
  8983					; --- DIVISOR === (-1,-2)
  8984					; --- QUOTIENT == (0,200000000000)
  8985					; --- REMAINDER = (0,0)
  8986
  8987	037212	200 01 0 00 044542 	..0633:	MOVE	AC1,[[EXP -1,-1,-1,1B0,-1,-2,0,200000000000,0,0],,PDEND]
  8988	037213	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  8989	037214	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  8990						ERROR	(..0633,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  8991	037215	036 14 0 00 044217 
  8992	037216	255 00 0 00 000000
  8993					^
  8994					^
  8995
  8996					; **********************************************************************
  8997					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  8998					; **********************************************************************
  8999
  9000						PDIV	(C,-1,-1,-1,1B0,-2,1B0,0,0,-1,1B0)^
  9001
  9002					; --- DIVIDEND == (-1,-1,-1,1B0)
  9003					; --- DIVISOR === (-2,1B0)
  9004					; --- QUOTIENT == (0,0)
  9005					; --- REMAINDER = (-1,1B0)
  9006
  9007	037217	200 01 0 00 044555 	..0634:	MOVE	AC1,[[EXP -1,-1,-1,1B0,-2,1B0,0,0,-1,1B0],,PDEND]
  9008	037220	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9009	037221	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9010						ERROR	(..0634,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9011	037222	036 14 0 00 044217 
  9012	037223	255 00 0 00 000000
  9013					^
  9014					^
  9015
  9016					; **********************************************************************
  9017					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  9018					; **********************************************************************
  9019
  9020						PDIV	(C,-1,-1,1B0,1B0,-1,-2,200000000000,0,0,0)^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 27-8
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST C                                                                      SEQ 0206

  9021
  9022					; --- DIVIDEND == (-1,-1,1B0,1B0)
  9023					; --- DIVISOR === (-1,-2)
  9024					; --- QUOTIENT == (200000000000,0)
  9025					; --- REMAINDER = (0,0)
  9026
  9027	037224	200 01 0 00 044570 	..0635:	MOVE	AC1,[[EXP -1,-1,1B0,1B0,-1,-2,200000000000,0,0,0],,PDEND]
  9028	037225	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9029	037226	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9030						ERROR	(..0635,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9031	037227	036 14 0 00 044217 
  9032	037230	255 00 0 00 000000
  9033					^
  9034					^
  9035
  9036					; **********************************************************************
  9037					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  9038					; **********************************************************************
  9039
  9040						PDIV	(C,-1,-1,1B0,1B0,-2,1B0,0,200000000000,0,0)^
  9041
  9042					; --- DIVIDEND == (-1,-1,1B0,1B0)
  9043					; --- DIVISOR === (-2,1B0)
  9044					; --- QUOTIENT == (0,200000000000)
  9045					; --- REMAINDER = (0,0)
  9046
  9047	037231	200 01 0 00 044603 	..0636:	MOVE	AC1,[[EXP -1,-1,1B0,1B0,-2,1B0,0,200000000000,0,0],,PDEND]
  9048	037232	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9049	037233	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9050						ERROR	(..0636,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9051	037234	036 14 0 00 044217 
  9052	037235	255 00 0 00 000000
  9053					^
  9054					^
  9055
  9056					; **********************************************************************
  9057					; ----------  DDIV - TEST C (GENERAL TESTING)  ----------
  9058					; **********************************************************************
  9059
  9060						PDIV	(C,-1,1B0,1B0,1B0,-2,1B0,200000000000,0,0,0)^
  9061
  9062					; --- DIVIDEND == (-1,1B0,1B0,1B0)
  9063					; --- DIVISOR === (-2,1B0)
  9064					; --- QUOTIENT == (200000000000,0)
  9065					; --- REMAINDER = (0,0)
  9066
  9067	037236	200 01 0 00 044616 	..0637:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,-2,1B0,200000000000,0,0,0],,PDEND]
  9068	037237	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9069	037240	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9070						ERROR	(..0637,14,SCR1,SCR2,,TEST C - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9071	037241	036 14 0 00 044217 
  9072	037242	255 00 0 00 000000
  9073					^
  9074					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 28
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST D                                                                      SEQ 0207

  9075					SUBTTL	DDIV - TEST D
  9076
  9077					; **********************************************************************
  9078					;*DDIV - TEST D
  9079					;*
  9080					;*	MISCELLANEOUS TESTING.  THESE TESTS DIVIDE 2 NUMBERS AND JUST
  9081					;*	CHECK TO SEE THAT THE DDIV GETS THE CORRECT ANSWERS.
  9082					; **********************************************************************
  9083
  9084		111111	111111			ONE=111111111111
  9085		222222	222222			TWO=222222222222
  9086		333333	333333			THREE=333333333333
  9087		444444	444444			FOUR=444444444444
  9088		555555	555555			FIVE=555555555555
  9089
  9090					; **********************************************************************
  9091					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9092					; **********************************************************************
  9093
  9094						PDIVF	(D,THREE,THREE,THREE,THREE,344444444444,FOUR,365605075342,070414545131,0556
  9095					32516360,373564760527)^
  9096
  9097					; --- DIVIDEND == (THREE,THREE,THREE,THREE)
  9098					; --- DIVISOR === (344444444444,FOUR)
  9099					; --- QUOTIENT == (365605075342,070414545131)
  9100					; --- REMAINDER = (055632516360,373564760527)
  9101
  9102					..0640:	MOVE	AC1,[[EXP THREE,THREE,THREE,THREE,344444444444,FOUR,365605075342,0704145451
  9103	037243	200 01 0 00 044631 	31,055632516360,373564760527],,PDEND]
  9104	037244	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9105	037245	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9106						ERROR	(..0640,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9107	037246	036 14 0 00 044641 
  9108	037247	255 00 0 00 000000
  9109					^
  9110
  9111	037250	200 14 0 00 040521 	..0641:	MOVE	SCR2,PFLOC	;GET PC
  9112	037251	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9113						ERROR	(..0640,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9114					LL
  9115	037252	036 13 0 00 044653 
  9116	037253	255 00 0 00 000000
  9117					^
  9118					^
  9119
  9120					; **********************************************************************
  9121					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9122					; **********************************************************************
  9123
  9124						PDIVF	(D,THREE,FOUR,THREE,FOUR,344444444444,THREE,365605075340,247073632327,21367
  9125					2200375,376365035467)^
  9126
  9127					; --- DIVIDEND == (THREE,FOUR,THREE,FOUR)
  9128					; --- DIVISOR === (344444444444,THREE)
  9129					; --- QUOTIENT == (365605075340,247073632327)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 28-1
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST D                                                                      SEQ 0208

  9130					; --- REMAINDER = (213672200375,376365035467)
  9131
  9132					..0642:	MOVE	AC1,[[EXP THREE,FOUR,THREE,FOUR,344444444444,THREE,365605075340,24707363232
  9133	037254	200 01 0 00 044670 	7,213672200375,376365035467],,PDEND]
  9134	037255	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9135	037256	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9136						ERROR	(..0642,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9137	037257	036 14 0 00 044641 
  9138	037260	255 00 0 00 000000
  9139					^
  9140
  9141	037261	200 14 0 00 040521 	..0643:	MOVE	SCR2,PFLOC	;GET PC
  9142	037262	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9143						ERROR	(..0642,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9144					LL
  9145	037263	036 13 0 00 044653 
  9146	037264	255 00 0 00 000000
  9147					^
  9148					^
  9149
  9150					; **********************************************************************
  9151					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9152					; **********************************************************************
  9153
  9154						PDIVF	(D,TWO,TWO,TWO,TWO,THREE,THREE,252525252525,125252525253,ONE,ONE)^
  9155
  9156					; --- DIVIDEND == (TWO,TWO,TWO,TWO)
  9157					; --- DIVISOR === (THREE,THREE)
  9158					; --- QUOTIENT == (252525252525,125252525253)
  9159					; --- REMAINDER = (ONE,ONE)
  9160
  9161					..0644:	MOVE	AC1,[[EXP TWO,TWO,TWO,TWO,THREE,THREE,252525252525,125252525253,ONE,ONE],,P
  9162	037265	200 01 0 00 044703 	DEND]
  9163	037266	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9164	037267	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9165						ERROR	(..0644,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9166	037270	036 14 0 00 044641 
  9167	037271	255 00 0 00 000000
  9168					^
  9169
  9170	037272	200 14 0 00 040521 	..0645:	MOVE	SCR2,PFLOC	;GET PC
  9171	037273	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9172						ERROR	(..0644,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9173					LL
  9174	037274	036 13 0 00 044653 
  9175	037275	255 00 0 00 000000
  9176					^
  9177					^
  9178
  9179					; **********************************************************************
  9180					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9181					; **********************************************************************
  9182
  9183						PDIVF	(D,TWO,THREE,TWO,THREE,THREE,FOUR,252525252526,070707070710,004040404041,32
  9184					7272727273)^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 28-2
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST D                                                                      SEQ 0209

  9185
  9186					; --- DIVIDEND == (TWO,THREE,TWO,THREE)
  9187					; --- DIVISOR === (THREE,FOUR)
  9188					; --- QUOTIENT == (252525252526,070707070710)
  9189					; --- REMAINDER = (004040404041,327272727273)
  9190
  9191					..0646:	MOVE	AC1,[[EXP TWO,THREE,TWO,THREE,THREE,FOUR,252525252526,070707070710,00404040
  9192	037276	200 01 0 00 044716 	4041,327272727273],,PDEND]
  9193	037277	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9194	037300	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9195						ERROR	(..0646,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9196	037301	036 14 0 00 044641 
  9197	037302	255 00 0 00 000000
  9198					^
  9199
  9200	037303	200 14 0 00 040521 	..0647:	MOVE	SCR2,PFLOC	;GET PC
  9201	037304	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9202						ERROR	(..0646,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9203					LL
  9204	037305	036 13 0 00 044653 
  9205	037306	255 00 0 00 000000
  9206					^
  9207					^
  9208
  9209					; **********************************************************************
  9210					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9211					; **********************************************************************
  9212
  9213						PDIVF	(D,255555555555,FIVE,FIVE,FIVE,311111111111,ONE,335056427213,035475265746,1
  9214					44375704605,004166365327)^
  9215
  9216					; --- DIVIDEND == (255555555555,FIVE,FIVE,FIVE)
  9217					; --- DIVISOR === (311111111111,ONE)
  9218					; --- QUOTIENT == (335056427213,035475265746)
  9219					; --- REMAINDER = (144375704605,004166365327)
  9220
  9221					..0650:	MOVE	AC1,[[EXP 255555555555,FIVE,FIVE,FIVE,311111111111,ONE,335056427213,0354752
  9222	037307	200 01 0 00 044731 	65746,144375704605,004166365327],,PDEND]
  9223	037310	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9224	037311	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9225						ERROR	(..0650,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9226	037312	036 14 0 00 044641 
  9227	037313	255 00 0 00 000000
  9228					^
  9229
  9230	037314	200 14 0 00 040521 	..0651:	MOVE	SCR2,PFLOC	;GET PC
  9231	037315	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9232						ERROR	(..0650,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9233					LL
  9234	037316	036 13 0 00 044653 
  9235	037317	255 00 0 00 000000
  9236					^
  9237					^
  9238
  9239					; **********************************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 28-3
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST D                                                                      SEQ 0210

  9240					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9241					; **********************************************************************
  9242
  9243						PDIVF	(D,255555555555,TWO,FIVE,TWO,311111111111,666666666666,335056427212,3234437
  9244					57047,240023257716,107503314730)^
  9245
  9246					; --- DIVIDEND == (255555555555,TWO,FIVE,TWO)
  9247					; --- DIVISOR === (311111111111,666666666666)
  9248					; --- QUOTIENT == (335056427212,323443757047)
  9249					; --- REMAINDER = (240023257716,107503314730)
  9250
  9251					..0652:	MOVE	AC1,[[EXP 255555555555,TWO,FIVE,TWO,311111111111,666666666666,335056427212,
  9252	037320	200 01 0 00 044744 	323443757047,240023257716,107503314730],,PDEND]
  9253	037321	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9254	037322	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9255						ERROR	(..0652,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9256	037323	036 14 0 00 044641 
  9257	037324	255 00 0 00 000000
  9258					^
  9259
  9260	037325	200 14 0 00 040521 	..0653:	MOVE	SCR2,PFLOC	;GET PC
  9261	037326	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9262						ERROR	(..0652,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9263					LL
  9264	037327	036 13 0 00 044653 
  9265	037330	255 00 0 00 000000
  9266					^
  9267					^
  9268
  9269					; **********************************************************************
  9270					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9271					; **********************************************************************
  9272
  9273		123456	123456			K=123456123456
  9274						PDIVF	(D,K,K,K,K,234567234567,234567234567,210420323476,136703233600,055256055256
  9275					,055256055256)^
  9276
  9277					; --- DIVIDEND == (K,K,K,K)
  9278					; --- DIVISOR === (234567234567,234567234567)
  9279					; --- QUOTIENT == (210420323476,136703233600)
  9280					; --- REMAINDER = (055256055256,055256055256)
  9281
  9282					..0654:	MOVE	AC1,[[EXP K,K,K,K,234567234567,234567234567,210420323476,136703233600,05525
  9283	037331	200 01 0 00 044757 	6055256,055256055256],,PDEND]
  9284	037332	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9285	037333	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9286						ERROR	(..0654,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9287	037334	036 14 0 00 044641 
  9288	037335	255 00 0 00 000000
  9289					^
  9290
  9291	037336	200 14 0 00 040521 	..0655:	MOVE	SCR2,PFLOC	;GET PC
  9292	037337	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9293						ERROR	(..0654,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9294					LL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 28-4
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST D                                                                      SEQ 0211

  9295	037340	036 13 0 00 044653 
  9296	037341	255 00 0 00 000000
  9297					^
  9298					^
  9299
  9300					; **********************************************************************
  9301					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9302					; **********************************************************************
  9303
  9304						PDIVF	(D,FOUR,FOUR,FOUR,FOUR,THREE,333333333334,1B0,400000000001,511111111110,511
  9305					111111110)^
  9306
  9307					; --- DIVIDEND == (FOUR,FOUR,FOUR,FOUR)
  9308					; --- DIVISOR === (THREE,333333333334)
  9309					; --- QUOTIENT == (1B0,400000000001)
  9310					; --- REMAINDER = (511111111110,511111111110)
  9311
  9312					..0656:	MOVE	AC1,[[EXP FOUR,FOUR,FOUR,FOUR,THREE,333333333334,1B0,400000000001,511111111
  9313	037342	200 01 0 00 044772 	110,511111111110],,PDEND]
  9314	037343	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9315	037344	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9316						ERROR	(..0656,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9317	037345	036 14 0 00 044641 
  9318	037346	255 00 0 00 000000
  9319					^
  9320
  9321	037347	200 14 0 00 040521 	..0657:	MOVE	SCR2,PFLOC	;GET PC
  9322	037350	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9323						ERROR	(..0656,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9324					LL
  9325	037351	036 13 0 00 044653 
  9326	037352	255 00 0 00 000000
  9327					^
  9328					^
  9329
  9330					; **********************************************************************
  9331					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9332					; **********************************************************************
  9333
  9334						PDIVF	(D,FIVE,FIVE,FIVE,FIVE,FOUR,FOUR,252525252525,125252525252,606060606060,460
  9335					606060605)^
  9336
  9337					; --- DIVIDEND == (FIVE,FIVE,FIVE,FIVE)
  9338					; --- DIVISOR === (FOUR,FOUR)
  9339					; --- QUOTIENT == (252525252525,125252525252)
  9340					; --- REMAINDER = (606060606060,460606060605)
  9341
  9342					..0660:	MOVE	AC1,[[EXP FIVE,FIVE,FIVE,FIVE,FOUR,FOUR,252525252525,125252525252,606060606
  9343	037353	200 01 0 00 045005 	060,460606060605],,PDEND]
  9344	037354	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9345	037355	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9346						ERROR	(..0660,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9347	037356	036 14 0 00 044641 
  9348	037357	255 00 0 00 000000
  9349					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 28-5
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST D                                                                      SEQ 0212

  9350
  9351	037360	200 14 0 00 040521 	..0661:	MOVE	SCR2,PFLOC	;GET PC
  9352	037361	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9353						ERROR	(..0660,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9354					LL
  9355	037362	036 13 0 00 044653 
  9356	037363	255 00 0 00 000000
  9357					^
  9358					^
  9359
  9360					; **********************************************************************
  9361					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9362					; **********************************************************************
  9363
  9364						PDIVF	(D,FOUR,FIVE,FOUR,FIVE,432123456765,432123456765,364320315052,247020761620,
  9365					473571652245,600514541235)^
  9366
  9367					; --- DIVIDEND == (FOUR,FIVE,FOUR,FIVE)
  9368					; --- DIVISOR === (432123456765,432123456765)
  9369					; --- QUOTIENT == (364320315052,247020761620)
  9370					; --- REMAINDER = (473571652245,600514541235)
  9371
  9372					..0662:	MOVE	AC1,[[EXP FOUR,FIVE,FOUR,FIVE,432123456765,432123456765,364320315052,247020
  9373	037364	200 01 0 00 045020 	761620,473571652245,600514541235],,PDEND]
  9374	037365	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9375	037366	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9376						ERROR	(..0662,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9377	037367	036 14 0 00 044641 
  9378	037370	255 00 0 00 000000
  9379					^
  9380
  9381	037371	200 14 0 00 040521 	..0663:	MOVE	SCR2,PFLOC	;GET PC
  9382	037372	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9383						ERROR	(..0662,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9384					LL
  9385	037373	036 13 0 00 044653 
  9386	037374	255 00 0 00 000000
  9387					^
  9388					^
  9389
  9390					; **********************************************************************
  9391					; ----------  DDIV - TEST D (MISCELLANEOUS CASES)  ----------
  9392					; **********************************************************************
  9393
  9394						PDIVF	(D,FIVE,TWO,FIVE,TWO,543210123456,543210123456,356736272460,271326656374,76
  9395					3153710465,406655405512)^
  9396
  9397					; --- DIVIDEND == (FIVE,TWO,FIVE,TWO)
  9398					; --- DIVISOR === (543210123456,543210123456)
  9399					; --- QUOTIENT == (356736272460,271326656374)
  9400					; --- REMAINDER = (763153710465,406655405512)
  9401
  9402					..0664:	MOVE	AC1,[[EXP FIVE,TWO,FIVE,TWO,543210123456,543210123456,356736272460,27132665
  9403	037375	200 01 0 00 045033 	6374,763153710465,406655405512],,PDEND]
  9404	037376	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 28-6
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST D                                                                      SEQ 0213

  9405	037377	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9406						ERROR	(..0664,14,SCR1,SCR2,,TEST D - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9407	037400	036 14 0 00 044641 
  9408	037401	255 00 0 00 000000
  9409					^
  9410
  9411	037402	200 14 0 00 040521 	..0665:	MOVE	SCR2,PFLOC	;GET PC
  9412	037403	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9413						ERROR	(..0664,13,SCR2,PFLOC,,TEST D - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9414					LL
  9415	037404	036 13 0 00 044653 
  9416	037405	255 00 0 00 000000
  9417					^
  9418					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0214

  9419					SUBTTL	DDIV - TEST E
  9420
  9421					; **********************************************************************
  9422					;*DDIV - TEST E
  9423					;*
  9424					;*	-4/-2		-4/2		4/-2		4/2
  9425					;*	(-3,0,0,0)/(-6,0)   (-3,0,0,0)/(6,0)	3/-6	3/6
  9426					;*
  9427					;*	THESE TESTS VERIFY THAT THE DDIV HANDLES THE SIGN OF ITS
  9428					;*	OPERANDS PROPERLY.  THE SIGN BITS OF THE LOW ORDER WORDS ARE
  9429					;*	INITIALLY DIFFERENT FROM THE HIGH ORDER WORD.  THE SIGN SHOULD
  9430					;*	BE FORMED CORRECTLY IN SPITE OF THAT.
  9431					; **********************************************************************
  9432
  9433					; **********************************************************************
  9434					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9435					; **********************************************************************
  9436
  9437						PDIVF	(E,-1,377777777777,377777777777,377777777774,-1,377777777776,0,2)^
  9438
  9439					; --- DIVIDEND == (-1,377777777777,377777777777,377777777774)
  9440					; --- DIVISOR === (-1,377777777776)
  9441					; --- QUOTIENT == (0,2)
  9442					; --- REMAINDER = (0,0)
  9443
  9444					..0666:	MOVE	AC1,[[EXP -1,377777777777,377777777777,377777777774,-1,377777777776,0,2,0,0
  9445	037406	200 01 0 00 045046 	],,PDEND]
  9446	037407	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9447	037410	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9448						ERROR	(..0666,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9449	037411	036 14 0 00 045056 
  9450	037412	255 00 0 00 000000
  9451					^
  9452
  9453	037413	200 14 0 00 040521 	..0667:	MOVE	SCR2,PFLOC	;GET PC
  9454	037414	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9455						ERROR	(..0666,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9456					LL
  9457	037415	036 13 0 00 045070 
  9458	037416	255 00 0 00 000000
  9459					^
  9460					^
  9461
  9462					; **********************************************************************
  9463					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9464					; **********************************************************************
  9465
  9466						PDIVF	(E,-1,377777777777,377777777777,-4,-1,-2,0,2)^
  9467
  9468					; --- DIVIDEND == (-1,377777777777,377777777777,-4)
  9469					; --- DIVISOR === (-1,-2)
  9470					; --- QUOTIENT == (0,2)
  9471					; --- REMAINDER = (0,0)
  9472
  9473	037417	200 01 0 00 045105 	..0670:	MOVE	AC1,[[EXP -1,377777777777,377777777777,-4,-1,-2,0,2,0,0],,PDEND]
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-1
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0215

  9474	037420	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9475	037421	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9476						ERROR	(..0670,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9477	037422	036 14 0 00 045056 
  9478	037423	255 00 0 00 000000
  9479					^
  9480
  9481	037424	200 14 0 00 040521 	..0671:	MOVE	SCR2,PFLOC	;GET PC
  9482	037425	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9483						ERROR	(..0670,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9484					LL
  9485	037426	036 13 0 00 045070 
  9486	037427	255 00 0 00 000000
  9487					^
  9488					^
  9489
  9490					; **********************************************************************
  9491					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9492					; **********************************************************************
  9493
  9494						PDIVF	(E,-1,377777777777,377777777777,377777777774,0,400000000002,-1,-2)^
  9495
  9496					; --- DIVIDEND == (-1,377777777777,377777777777,377777777774)
  9497					; --- DIVISOR === (0,400000000002)
  9498					; --- QUOTIENT == (-1,-2)
  9499					; --- REMAINDER = (0,0)
  9500
  9501					..0672:	MOVE	AC1,[[EXP -1,377777777777,377777777777,377777777774,0,400000000002,-1,-2,0,
  9502	037430	200 01 0 00 045120 	0],,PDEND]
  9503	037431	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9504	037432	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9505						ERROR	(..0672,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9506	037433	036 14 0 00 045056 
  9507	037434	255 00 0 00 000000
  9508					^
  9509
  9510	037435	200 14 0 00 040521 	..0673:	MOVE	SCR2,PFLOC	;GET PC
  9511	037436	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9512						ERROR	(..0672,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9513					LL
  9514	037437	036 13 0 00 045070 
  9515	037440	255 00 0 00 000000
  9516					^
  9517					^
  9518
  9519					; **********************************************************************
  9520					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9521					; **********************************************************************
  9522
  9523						PDIVF	(E,-1,-1,-1,-4,0,400000000002,-1,-2)^
  9524
  9525					; --- DIVIDEND == (-1,-1,-1,-4)
  9526					; --- DIVISOR === (0,400000000002)
  9527					; --- QUOTIENT == (-1,-2)
  9528					; --- REMAINDER = (0,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-2
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0216

  9529
  9530	037441	200 01 0 00 045133 	..0674:	MOVE	AC1,[[EXP -1,-1,-1,-4,0,400000000002,-1,-2,0,0],,PDEND]
  9531	037442	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9532	037443	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9533						ERROR	(..0674,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9534	037444	036 14 0 00 045056 
  9535	037445	255 00 0 00 000000
  9536					^
  9537
  9538	037446	200 14 0 00 040521 	..0675:	MOVE	SCR2,PFLOC	;GET PC
  9539	037447	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9540						ERROR	(..0674,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9541					LL
  9542	037450	036 13 0 00 045070 
  9543	037451	255 00 0 00 000000
  9544					^
  9545					^
  9546
  9547					; **********************************************************************
  9548					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9549					; **********************************************************************
  9550
  9551						PDIVF	(E,0,1B0,1B0,400000000004,-1,377777777776,-1,-2)^
  9552
  9553					; --- DIVIDEND == (0,1B0,1B0,400000000004)
  9554					; --- DIVISOR === (-1,377777777776)
  9555					; --- QUOTIENT == (-1,-2)
  9556					; --- REMAINDER = (0,0)
  9557
  9558	037452	200 01 0 00 045146 	..0676:	MOVE	AC1,[[EXP 0,1B0,1B0,400000000004,-1,377777777776,-1,-2,0,0],,PDEND]
  9559	037453	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9560	037454	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9561						ERROR	(..0676,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9562	037455	036 14 0 00 045056 
  9563	037456	255 00 0 00 000000
  9564					^
  9565
  9566	037457	200 14 0 00 040521 	..0677:	MOVE	SCR2,PFLOC	;GET PC
  9567	037460	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9568						ERROR	(..0676,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9569					LL
  9570	037461	036 13 0 00 045070 
  9571	037462	255 00 0 00 000000
  9572					^
  9573					^
  9574
  9575					; **********************************************************************
  9576					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9577					; **********************************************************************
  9578
  9579						PDIVF	(E,0,1B0,1B0,400000000004,-1,-2,-1,-2)^
  9580
  9581					; --- DIVIDEND == (0,1B0,1B0,400000000004)
  9582					; --- DIVISOR === (-1,-2)
  9583					; --- QUOTIENT == (-1,-2)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-3
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0217

  9584					; --- REMAINDER = (0,0)
  9585
  9586	037463	200 01 0 00 045161 	..0700:	MOVE	AC1,[[EXP 0,1B0,1B0,400000000004,-1,-2,-1,-2,0,0],,PDEND]
  9587	037464	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9588	037465	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9589						ERROR	(..0700,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9590	037466	036 14 0 00 045056 
  9591	037467	255 00 0 00 000000
  9592					^
  9593
  9594	037470	200 14 0 00 040521 	..0701:	MOVE	SCR2,PFLOC	;GET PC
  9595	037471	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9596						ERROR	(..0700,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9597					LL
  9598	037472	036 13 0 00 045070 
  9599	037473	255 00 0 00 000000
  9600					^
  9601					^
  9602
  9603					; **********************************************************************
  9604					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9605					; **********************************************************************
  9606
  9607						PDIVF	(E,0,0,0,400000000004,0,2,0,2)^
  9608
  9609					; --- DIVIDEND == (0,0,0,400000000004)
  9610					; --- DIVISOR === (0,2)
  9611					; --- QUOTIENT == (0,2)
  9612					; --- REMAINDER = (0,0)
  9613
  9614	037474	200 01 0 00 045174 	..0702:	MOVE	AC1,[[EXP 0,0,0,400000000004,0,2,0,2,0,0],,PDEND]
  9615	037475	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9616	037476	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9617						ERROR	(..0702,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9618	037477	036 14 0 00 045056 
  9619	037500	255 00 0 00 000000
  9620					^
  9621
  9622	037501	200 14 0 00 040521 	..0703:	MOVE	SCR2,PFLOC	;GET PC
  9623	037502	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9624						ERROR	(..0702,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9625					LL
  9626	037503	036 13 0 00 045070 
  9627	037504	255 00 0 00 000000
  9628					^
  9629					^
  9630
  9631					; **********************************************************************
  9632					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9633					; **********************************************************************
  9634
  9635						PDIVF	(E,0,0,0,400000000004,0,400000000002,0,2)^
  9636
  9637					; --- DIVIDEND == (0,0,0,400000000004)
  9638					; --- DIVISOR === (0,400000000002)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-4
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0218

  9639					; --- QUOTIENT == (0,2)
  9640					; --- REMAINDER = (0,0)
  9641
  9642	037505	200 01 0 00 045207 	..0704:	MOVE	AC1,[[EXP 0,0,0,400000000004,0,400000000002,0,2,0,0],,PDEND]
  9643	037506	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9644	037507	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9645						ERROR	(..0704,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9646	037510	036 14 0 00 045056 
  9647	037511	255 00 0 00 000000
  9648					^
  9649
  9650	037512	200 14 0 00 040521 	..0705:	MOVE	SCR2,PFLOC	;GET PC
  9651	037513	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9652						ERROR	(..0704,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9653					LL
  9654	037514	036 13 0 00 045070 
  9655	037515	255 00 0 00 000000
  9656					^
  9657					^
  9658
  9659					; **********************************************************************
  9660					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9661					; **********************************************************************
  9662
  9663						PDIVF	(E,-3,1B0,1B0,1B0,-6,1B0,200000000000,0)^
  9664
  9665					; --- DIVIDEND == (-3,1B0,1B0,1B0)
  9666					; --- DIVISOR === (-6,1B0)
  9667					; --- QUOTIENT == (200000000000,0)
  9668					; --- REMAINDER = (0,0)
  9669
  9670	037516	200 01 0 00 045222 	..0706:	MOVE	AC1,[[EXP -3,1B0,1B0,1B0,-6,1B0,200000000000,0,0,0],,PDEND]
  9671	037517	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9672	037520	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9673						ERROR	(..0706,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9674	037521	036 14 0 00 045056 
  9675	037522	255 00 0 00 000000
  9676					^
  9677
  9678	037523	200 14 0 00 040521 	..0707:	MOVE	SCR2,PFLOC	;GET PC
  9679	037524	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9680						ERROR	(..0706,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9681					LL
  9682	037525	036 13 0 00 045070 
  9683	037526	255 00 0 00 000000
  9684					^
  9685					^
  9686
  9687					; **********************************************************************
  9688					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9689					; **********************************************************************
  9690
  9691						PDIVF	(E,-3,1B0,1B0,0,-6,1B0,200000000000,0)^
  9692
  9693					; --- DIVIDEND == (-3,1B0,1B0,0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-5
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0219

  9694					; --- DIVISOR === (-6,1B0)
  9695					; --- QUOTIENT == (200000000000,0)
  9696					; --- REMAINDER = (0,0)
  9697
  9698	037527	200 01 0 00 045235 	..0710:	MOVE	AC1,[[EXP -3,1B0,1B0,0,-6,1B0,200000000000,0,0,0],,PDEND]
  9699	037530	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9700	037531	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9701						ERROR	(..0710,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9702	037532	036 14 0 00 045056 
  9703	037533	255 00 0 00 000000
  9704					^
  9705
  9706	037534	200 14 0 00 040521 	..0711:	MOVE	SCR2,PFLOC	;GET PC
  9707	037535	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9708						ERROR	(..0710,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9709					LL
  9710	037536	036 13 0 00 045070 
  9711	037537	255 00 0 00 000000
  9712					^
  9713					^
  9714
  9715					; **********************************************************************
  9716					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9717					; **********************************************************************
  9718
  9719						PDIVF	(E,-3,1B0,0,0,6,0,600000000000,1B0)^
  9720
  9721					; --- DIVIDEND == (-3,1B0,0,0)
  9722					; --- DIVISOR === (6,0)
  9723					; --- QUOTIENT == (600000000000,1B0)
  9724					; --- REMAINDER = (0,0)
  9725
  9726	037540	200 01 0 00 045250 	..0712:	MOVE	AC1,[[EXP -3,1B0,0,0,6,0,600000000000,1B0,0,0],,PDEND]
  9727	037541	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9728	037542	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9729						ERROR	(..0712,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9730	037543	036 14 0 00 045056 
  9731	037544	255 00 0 00 000000
  9732					^
  9733
  9734	037545	200 14 0 00 040521 	..0713:	MOVE	SCR2,PFLOC	;GET PC
  9735	037546	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9736						ERROR	(..0712,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9737					LL
  9738	037547	036 13 0 00 045070 
  9739	037550	255 00 0 00 000000
  9740					^
  9741					^
  9742
  9743					; **********************************************************************
  9744					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9745					; **********************************************************************
  9746
  9747						PDIVF	(E,-3,0,0,0,6,1B0,600000000000,1B0)^
  9748
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-6
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0220

  9749					; --- DIVIDEND == (-3,0,0,0)
  9750					; --- DIVISOR === (6,1B0)
  9751					; --- QUOTIENT == (600000000000,1B0)
  9752					; --- REMAINDER = (0,0)
  9753
  9754	037551	200 01 0 00 045263 	..0714:	MOVE	AC1,[[EXP -3,0,0,0,6,1B0,600000000000,1B0,0,0],,PDEND]
  9755	037552	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9756	037553	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9757						ERROR	(..0714,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9758	037554	036 14 0 00 045056 
  9759	037555	255 00 0 00 000000
  9760					^
  9761
  9762	037556	200 14 0 00 040521 	..0715:	MOVE	SCR2,PFLOC	;GET PC
  9763	037557	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9764						ERROR	(..0714,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9765					LL
  9766	037560	036 13 0 00 045070 
  9767	037561	255 00 0 00 000000
  9768					^
  9769					^
  9770
  9771					; **********************************************************************
  9772					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9773					; **********************************************************************
  9774
  9775						PDIVF	(E,3,1B0,1B0,0,-6,1B0,600000000000,1B0)^
  9776
  9777					; --- DIVIDEND == (3,1B0,1B0,0)
  9778					; --- DIVISOR === (-6,1B0)
  9779					; --- QUOTIENT == (600000000000,1B0)
  9780					; --- REMAINDER = (0,0)
  9781
  9782	037562	200 01 0 00 045276 	..0716:	MOVE	AC1,[[EXP 3,1B0,1B0,0,-6,1B0,600000000000,1B0,0,0],,PDEND]
  9783	037563	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9784	037564	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9785						ERROR	(..0716,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9786	037565	036 14 0 00 045056 
  9787	037566	255 00 0 00 000000
  9788					^
  9789
  9790	037567	200 14 0 00 040521 	..0717:	MOVE	SCR2,PFLOC	;GET PC
  9791	037570	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9792						ERROR	(..0716,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9793					LL
  9794	037571	036 13 0 00 045070 
  9795	037572	255 00 0 00 000000
  9796					^
  9797					^
  9798
  9799					; **********************************************************************
  9800					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9801					; **********************************************************************
  9802
  9803						PDIVF	(E,3,1B0,0,1B0,-6,1B0,600000000000,1B0)^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-7
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0221

  9804
  9805					; --- DIVIDEND == (3,1B0,0,1B0)
  9806					; --- DIVISOR === (-6,1B0)
  9807					; --- QUOTIENT == (600000000000,1B0)
  9808					; --- REMAINDER = (0,0)
  9809
  9810	037573	200 01 0 00 045311 	..0720:	MOVE	AC1,[[EXP 3,1B0,0,1B0,-6,1B0,600000000000,1B0,0,0],,PDEND]
  9811	037574	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9812	037575	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9813						ERROR	(..0720,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9814	037576	036 14 0 00 045056 
  9815	037577	255 00 0 00 000000
  9816					^
  9817
  9818	037600	200 14 0 00 040521 	..0721:	MOVE	SCR2,PFLOC	;GET PC
  9819	037601	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9820						ERROR	(..0720,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9821					LL
  9822	037602	036 13 0 00 045070 
  9823	037603	255 00 0 00 000000
  9824					^
  9825					^
  9826
  9827					; **********************************************************************
  9828					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9829					; **********************************************************************
  9830
  9831						PDIVF	(E,3,0,1B0,1B0,6,1B0,200000000000,0)^
  9832
  9833					; --- DIVIDEND == (3,0,1B0,1B0)
  9834					; --- DIVISOR === (6,1B0)
  9835					; --- QUOTIENT == (200000000000,0)
  9836					; --- REMAINDER = (0,0)
  9837
  9838	037604	200 01 0 00 045324 	..0722:	MOVE	AC1,[[EXP 3,0,1B0,1B0,6,1B0,200000000000,0,0,0],,PDEND]
  9839	037605	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9840	037606	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9841						ERROR	(..0722,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9842	037607	036 14 0 00 045056 
  9843	037610	255 00 0 00 000000
  9844					^
  9845
  9846	037611	200 14 0 00 040521 	..0723:	MOVE	SCR2,PFLOC	;GET PC
  9847	037612	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9848						ERROR	(..0722,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9849					LL
  9850	037613	036 13 0 00 045070 
  9851	037614	255 00 0 00 000000
  9852					^
  9853					^
  9854
  9855					; **********************************************************************
  9856					; ----------  DDIV - TEST E (INCONSISTENT SIGNS IN OPERANDS)  ----------
  9857					; **********************************************************************
  9858
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 29-8
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST E                                                                      SEQ 0222

  9859						PDIVF	(E,3,1B0,1B0,1B0,6,0,200000000000,0)^
  9860
  9861					; --- DIVIDEND == (3,1B0,1B0,1B0)
  9862					; --- DIVISOR === (6,0)
  9863					; --- QUOTIENT == (200000000000,0)
  9864					; --- REMAINDER = (0,0)
  9865
  9866	037615	200 01 0 00 045337 	..0724:	MOVE	AC1,[[EXP 3,1B0,1B0,1B0,6,0,200000000000,0,0,0],,PDEND]
  9867	037616	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9868	037617	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9869						ERROR	(..0724,14,SCR1,SCR2,,TEST E - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9870	037620	036 14 0 00 045056 
  9871	037621	255 00 0 00 000000
  9872					^
  9873
  9874	037622	200 14 0 00 040521 	..0725:	MOVE	SCR2,PFLOC	;GET PC
  9875	037623	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9876						ERROR	(..0724,13,SCR2,PFLOC,,TEST E - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9877					LL
  9878	037624	036 13 0 00 045070 
  9879	037625	255 00 0 00 000000
  9880					^
  9881					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 30
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST F                                                                      SEQ 0223

  9882					SUBTTL	DDIV - TEST F
  9883
  9884					; **********************************************************************
  9885					;*DDIV - TEST F
  9886					;*
  9887					;*	 1,0,0,0     -1,0,0,0     0,-1,-1,-1     -1,0,0,1
  9888					;*	 -------     --------     ----------     --------
  9889					;*	   1,1          1,1           1,0           1,0
  9890					;*
  9891					;*	 1,0,0,0     -1,0,0,0     0,-1,-1,-1     -1,0,0,1
  9892					;*	 -------     --------     ----------     --------
  9893					;*	  -2,-1        -2,-1         -1,0          -1,0
  9894					;*
  9895					;*	THESE TESTS VERIFY THAT THE DDIV WILL NOT GENERATE AN
  9896					;*	OVERFLOW AND NO DIVIDE CONDITION WHEN THE DIVISOR IS
  9897					;*	JUST LARGE ENOUGH TO NOT CAUSE ONE.
  9898					; **********************************************************************
  9899
  9900					; **********************************************************************
  9901					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
  9902					; **********************************************************************
  9903
  9904						PDIVF	(F,1,0,0,0,1,1,377777777777,0,1,0)^
  9905
  9906					; --- DIVIDEND == (1,0,0,0)
  9907					; --- DIVISOR === (1,1)
  9908					; --- QUOTIENT == (377777777777,0)
  9909					; --- REMAINDER = (1,0)
  9910
  9911	037626	200 01 0 00 045352 	..0726:	MOVE	AC1,[[EXP 1,0,0,0,1,1,377777777777,0,1,0],,PDEND]
  9912	037627	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9913	037630	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9914						ERROR	(..0726,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9915	037631	036 14 0 00 045362 
  9916	037632	255 00 0 00 000000
  9917					^
  9918
  9919	037633	200 14 0 00 040521 	..0727:	MOVE	SCR2,PFLOC	;GET PC
  9920	037634	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9921						ERROR	(..0726,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9922					LL
  9923	037635	036 13 0 00 045374 
  9924	037636	255 00 0 00 000000
  9925					^
  9926					^
  9927
  9928					; **********************************************************************
  9929					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
  9930					; **********************************************************************
  9931
  9932						PDIVF	(F,1,0,0,0,-2,-1,400000000001,1B0,1,0)^
  9933
  9934					; --- DIVIDEND == (1,0,0,0)
  9935					; --- DIVISOR === (-2,-1)
  9936					; --- QUOTIENT == (400000000001,1B0)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 30-1
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST F                                                                      SEQ 0224

  9937					; --- REMAINDER = (1,0)
  9938
  9939	037637	200 01 0 00 045411 	..0730:	MOVE	AC1,[[EXP 1,0,0,0,-2,-1,400000000001,1B0,1,0],,PDEND]
  9940	037640	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9941	037641	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9942						ERROR	(..0730,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9943	037642	036 14 0 00 045362 
  9944	037643	255 00 0 00 000000
  9945					^
  9946
  9947	037644	200 14 0 00 040521 	..0731:	MOVE	SCR2,PFLOC	;GET PC
  9948	037645	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9949						ERROR	(..0730,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9950					LL
  9951	037646	036 13 0 00 045374 
  9952	037647	255 00 0 00 000000
  9953					^
  9954					^
  9955
  9956					; **********************************************************************
  9957					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
  9958					; **********************************************************************
  9959
  9960						PDIVF	(F,-1,1B0,1B0,1B0,1,1,400000000001,1B0,-1,1B0)^
  9961
  9962					; --- DIVIDEND == (-1,1B0,1B0,1B0)
  9963					; --- DIVISOR === (1,1)
  9964					; --- QUOTIENT == (400000000001,1B0)
  9965					; --- REMAINDER = (-1,1B0)
  9966
  9967	037650	200 01 0 00 045424 	..0732:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,1,1,400000000001,1B0,-1,1B0],,PDEND]
  9968	037651	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9969	037652	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9970						ERROR	(..0732,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9971	037653	036 14 0 00 045362 
  9972	037654	255 00 0 00 000000
  9973					^
  9974
  9975	037655	200 14 0 00 040521 	..0733:	MOVE	SCR2,PFLOC	;GET PC
  9976	037656	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
  9977						ERROR	(..0732,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
  9978					LL
  9979	037657	036 13 0 00 045374 
  9980	037660	255 00 0 00 000000
  9981					^
  9982					^
  9983
  9984					; **********************************************************************
  9985					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
  9986					; **********************************************************************
  9987
  9988						PDIVF	(F,-1,1B0,1B0,1B0,-2,-1,377777777777,0,-1,1B0)^
  9989
  9990					; --- DIVIDEND == (-1,1B0,1B0,1B0)
  9991					; --- DIVISOR === (-2,-1)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 30-2
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST F                                                                      SEQ 0225

  9992					; --- QUOTIENT == (377777777777,0)
  9993					; --- REMAINDER = (-1,1B0)
  9994
  9995	037661	200 01 0 00 045437 	..0734:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,-2,-1,377777777777,0,-1,1B0],,PDEND]
  9996	037662	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
  9997	037663	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
  9998						ERROR	(..0734,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
  9999	037664	036 14 0 00 045362 
 10000	037665	255 00 0 00 000000
 10001					^
 10002
 10003	037666	200 14 0 00 040521 	..0735:	MOVE	SCR2,PFLOC	;GET PC
 10004	037667	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
 10005						ERROR	(..0734,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
 10006					LL
 10007	037670	036 13 0 00 045374 
 10008	037671	255 00 0 00 000000
 10009					^
 10010					^
 10011
 10012					; **********************************************************************
 10013					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
 10014					; **********************************************************************
 10015
 10016						PDIVF	(F,0,377777777777,377777777777,377777777777,1,0,377777777777,377777777777,0
 10017					,377777777777)^
 10018
 10019					; --- DIVIDEND == (0,377777777777,377777777777,377777777777)
 10020					; --- DIVISOR === (1,0)
 10021					; --- QUOTIENT == (377777777777,377777777777)
 10022					; --- REMAINDER = (0,377777777777)
 10023
 10024					..0736:	MOVE	AC1,[[EXP 0,377777777777,377777777777,377777777777,1,0,377777777777,3777777
 10025	037672	200 01 0 00 045452 	77777,0,377777777777],,PDEND]
 10026	037673	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
 10027	037674	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
 10028						ERROR	(..0736,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
 10029	037675	036 14 0 00 045362 
 10030	037676	255 00 0 00 000000
 10031					^
 10032
 10033	037677	200 14 0 00 040521 	..0737:	MOVE	SCR2,PFLOC	;GET PC
 10034	037700	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
 10035						ERROR	(..0736,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
 10036					LL
 10037	037701	036 13 0 00 045374 
 10038	037702	255 00 0 00 000000
 10039					^
 10040					^
 10041
 10042					; **********************************************************************
 10043					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
 10044					; **********************************************************************
 10045
 10046						PDIVF	(F,0,377777777777,377777777777,377777777777,-1,1B0,1B0,400000000001,0,37777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 30-3
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST F                                                                      SEQ 0226

 10047					7777777)^
 10048
 10049					; --- DIVIDEND == (0,377777777777,377777777777,377777777777)
 10050					; --- DIVISOR === (-1,1B0)
 10051					; --- QUOTIENT == (1B0,400000000001)
 10052					; --- REMAINDER = (0,377777777777)
 10053
 10054					..0740:	MOVE	AC1,[[EXP 0,377777777777,377777777777,377777777777,-1,1B0,1B0,400000000001,
 10055	037703	200 01 0 00 045465 	0,377777777777],,PDEND]
 10056	037704	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
 10057	037705	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
 10058						ERROR	(..0740,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
 10059	037706	036 14 0 00 045362 
 10060	037707	255 00 0 00 000000
 10061					^
 10062
 10063	037710	200 14 0 00 040521 	..0741:	MOVE	SCR2,PFLOC	;GET PC
 10064	037711	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
 10065						ERROR	(..0740,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
 10066					LL
 10067	037712	036 13 0 00 045374 
 10068	037713	255 00 0 00 000000
 10069					^
 10070					^
 10071
 10072					; **********************************************************************
 10073					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
 10074					; **********************************************************************
 10075
 10076						PDIVF	(F,-1,1B0,1B0,400000000001,1,0,1B0,400000000001,-1,400000000001)^
 10077
 10078					; --- DIVIDEND == (-1,1B0,1B0,400000000001)
 10079					; --- DIVISOR === (1,0)
 10080					; --- QUOTIENT == (1B0,400000000001)
 10081					; --- REMAINDER = (-1,400000000001)
 10082
 10083					..0742:	MOVE	AC1,[[EXP -1,1B0,1B0,400000000001,1,0,1B0,400000000001,-1,400000000001],,PD
 10084	037714	200 01 0 00 045500 	END]
 10085	037715	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
 10086	037716	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
 10087						ERROR	(..0742,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
 10088	037717	036 14 0 00 045362 
 10089	037720	255 00 0 00 000000
 10090					^
 10091
 10092	037721	200 14 0 00 040521 	..0743:	MOVE	SCR2,PFLOC	;GET PC
 10093	037722	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
 10094						ERROR	(..0742,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
 10095					LL
 10096	037723	036 13 0 00 045374 
 10097	037724	255 00 0 00 000000
 10098					^
 10099					^
 10100
 10101					; **********************************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 30-4
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST F                                                                      SEQ 0227

 10102					; ----------  DDIV - TEST F (NOT QUITE OVERFLOW CONDITIONS)  ----------
 10103					; **********************************************************************
 10104
 10105						PDIVF	(F,-1,1B0,1B0,400000000001,-1,1B0,377777777777,377777777777,-1,400000000001
 10106					)^
 10107
 10108					; --- DIVIDEND == (-1,1B0,1B0,400000000001)
 10109					; --- DIVISOR === (-1,1B0)
 10110					; --- QUOTIENT == (377777777777,377777777777)
 10111					; --- REMAINDER = (-1,400000000001)
 10112
 10113					..0744:	MOVE	AC1,[[EXP -1,1B0,1B0,400000000001,-1,1B0,377777777777,377777777777,-1,40000
 10114	037725	200 01 0 00 045513 	0000001],,PDEND]
 10115	037726	251 01 0 00 040555 		BLT	AC1,PRES+3	;SET UP OPERANDS
 10116	037727	260 17 0 00 040513 		GO	PSUBR		;GO DO TEST
 10117						ERROR	(..0744,14,SCR1,SCR2,,TEST F - QUOTIENT/REMAINDER INCORRECT,DPRINT)^SALL
 10118	037730	036 14 0 00 045362 
 10119	037731	255 00 0 00 000000
 10120					^
 10121
 10122	037732	200 14 0 00 040521 	..0745:	MOVE	SCR2,PFLOC	;GET PC
 10123	037733	623 14 0 00 400040 		TLZE	SCR2,AROV+DCK	;CALC OK PC (NO - OV/DIV) & TEST
 10124						ERROR	(..0744,13,SCR2,PFLOC,,TEST F - PC FLAGS INCORRECT - BITS 0 & 12,DPRINT)^SA
 10125					LL
 10126	037734	036 13 0 00 045374 
 10127	037735	255 00 0 00 000000
 10128					^
 10129					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 31
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0228

 10130					SUBTTL	DDIV - TEST G
 10131
 10132					; **********************************************************************
 10133					;*DDIV - TEST G
 10134					;*
 10135					;*	   1     1,0     1,0,0     1,0,0,0     -1
 10136					;*	   -     ---     -----     -------      -
 10137					;*	   0      0        0          0         0
 10138					;*
 10139					;*	   1,0,0     1,0,0     1,0,0,0     1,0,0,0
 10140					;*	   -----     -----     -------     -------
 10141					;*	     1        -1          1           -1
 10142					;*
 10143					;*	   -1,0,0     -1,0,0     -1,0,0,0     -1,0,0,0
 10144					;*	   ------     ------     --------     --------
 10145					;*	      1         -1           1           -1
 10146					;*
 10147					;*	   1,0,0,0     1,0,0,0     -1,0,0,0     -1,0,0,0
 10148					;*	   -------     -------     --------     --------
 10149					;*	     1,0         -1,0         1,0         -1,0
 10150					;*
 10151					;*	   0,-1,-1,-1     0,-1,-1,-1     -1,0,0,1     -1,0,0,1
 10152					;*	   ----------     ----------     --------     --------
 10153					;*	      0,-1           -1,1          0,-1         -1,1
 10154					;*
 10155					;*	   1,0,-1,-1     1,0,-1,-1     -2,-1,0,1     -2,-1,0,1
 10156					;*	   ---------     ---------     ---------     ---------
 10157					;*	     0,-1          -1,1           0,-1         -1,1
 10158					;*
 10159					;*	   -2^140     2^140-1     2^140-1     -2^70+1,-2^70
 10160					;*	   ------     -------     -------     -------------
 10161					;*	    -2^70      2^70-1     -2^70+1        2^70-1
 10162					;*
 10163					;*	THESE TESTS ATTEMPT TO PERFORM VARIOUS DIVISIONS THAT
 10164					;*	SHOULD RESULT IN OVERFLOW.  THE SETTING OF AROV AND NO
 10165					;*	DIVIDE FLAGS IS VERIFIED AND THE DIVIDEND IS CHECKED TO
 10166					;*	SEE THAT IT DID NOT CHANGE.
 10167					;*
 10168					;*	ALSO TRY A FEW WITH INCONSISTENT SIGNS IN THE LEAST
 10169					;*	SIGNIFICANT WORDS OF THE DIVIDEND AND DIVISOR JUST TO MAKE
 10170					;*	SURE THAT THE DIVIDEND DOES NOT CHANGE ON ANY CONDITION.
 10171					; **********************************************************************
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0229

 10172
 10173					; **********************************************************************
 10174					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10175					; **********************************************************************
 10176
 10177						ODIV	(0,0,0,1,0,0)^
 10178
 10179					; --- DIVIDEND == (0,0,0,1)
 10180					; --- DIVISOR === (0,0)
 10181					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10182
 10183	037736	200 01 0 00 045522 	..0746:	MOVE	AC1,[[EXP 0,0,0,1,0,0],,ODEND]
 10184	037737	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10185	037740	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10186						ERROR	(..0746,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10187	037741	036 14 0 00 045532 
 10188	037742	255 00 0 00 000000
 10189					^
 10190
 10191	037743	200 14 0 00 040567 	..0747:	MOVE	SCR2,OFLOC	;GET PC
 10192	037744	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10193	037745	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10194						ERROR	(..0746,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10195
 10196	037746	036 13 0 00 045545 
 10197	037747	255 00 0 00 000000
 10198					^
 10199					^
 10200
 10201					; **********************************************************************
 10202					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10203					; **********************************************************************
 10204
 10205						ODIV	(0,0,1,0,0,0)^
 10206
 10207					; --- DIVIDEND == (0,0,1,0)
 10208					; --- DIVISOR === (0,0)
 10209					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10210
 10211	037750	200 01 0 00 045556 	..0750:	MOVE	AC1,[[EXP 0,0,1,0,0,0],,ODEND]
 10212	037751	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10213	037752	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10214						ERROR	(..0750,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10215	037753	036 14 0 00 045532 
 10216	037754	255 00 0 00 000000
 10217					^
 10218
 10219	037755	200 14 0 00 040567 	..0751:	MOVE	SCR2,OFLOC	;GET PC
 10220	037756	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10221	037757	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10222						ERROR	(..0750,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10223
 10224	037760	036 13 0 00 045545 
 10225	037761	255 00 0 00 000000
 10226					^
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-1
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0230

 10227					^
 10228
 10229					; **********************************************************************
 10230					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10231					; **********************************************************************
 10232
 10233						ODIV	(0,1,0,0,0,0)^
 10234
 10235					; --- DIVIDEND == (0,1,0,0)
 10236					; --- DIVISOR === (0,0)
 10237					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10238
 10239	037762	200 01 0 00 045565 	..0752:	MOVE	AC1,[[EXP 0,1,0,0,0,0],,ODEND]
 10240	037763	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10241	037764	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10242						ERROR	(..0752,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10243	037765	036 14 0 00 045532 
 10244	037766	255 00 0 00 000000
 10245					^
 10246
 10247	037767	200 14 0 00 040567 	..0753:	MOVE	SCR2,OFLOC	;GET PC
 10248	037770	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10249	037771	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10250						ERROR	(..0752,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10251
 10252	037772	036 13 0 00 045545 
 10253	037773	255 00 0 00 000000
 10254					^
 10255					^
 10256
 10257					; **********************************************************************
 10258					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10259					; **********************************************************************
 10260
 10261						ODIV	(1,0,0,0,0,0)^
 10262
 10263					; --- DIVIDEND == (1,0,0,0)
 10264					; --- DIVISOR === (0,0)
 10265					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10266
 10267	037774	200 01 0 00 045574 	..0754:	MOVE	AC1,[[EXP 1,0,0,0,0,0],,ODEND]
 10268	037775	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10269	037776	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10270						ERROR	(..0754,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10271	037777	036 14 0 00 045532 
 10272	040000	255 00 0 00 000000
 10273					^
 10274
 10275	040001	200 14 0 00 040567 	..0755:	MOVE	SCR2,OFLOC	;GET PC
 10276	040002	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10277	040003	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10278						ERROR	(..0754,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10279
 10280	040004	036 13 0 00 045545 
 10281	040005	255 00 0 00 000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-2
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0231

 10282					^
 10283					^
 10284
 10285					; **********************************************************************
 10286					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10287					; **********************************************************************
 10288
 10289						ODIV	(-1,-1,-1,-1,0,0)^
 10290
 10291					; --- DIVIDEND == (-1,-1,-1,-1)
 10292					; --- DIVISOR === (0,0)
 10293					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10294
 10295	040006	200 01 0 00 045603 	..0756:	MOVE	AC1,[[EXP -1,-1,-1,-1,0,0],,ODEND]
 10296	040007	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10297	040010	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10298						ERROR	(..0756,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10299	040011	036 14 0 00 045532 
 10300	040012	255 00 0 00 000000
 10301					^
 10302
 10303	040013	200 14 0 00 040567 	..0757:	MOVE	SCR2,OFLOC	;GET PC
 10304	040014	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10305	040015	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10306						ERROR	(..0756,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10307
 10308	040016	036 13 0 00 045545 
 10309	040017	255 00 0 00 000000
 10310					^
 10311					^
 10312
 10313					; **********************************************************************
 10314					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10315					; **********************************************************************
 10316
 10317						ODIV	(0,1,0,0,0,1)^
 10318
 10319					; --- DIVIDEND == (0,1,0,0)
 10320					; --- DIVISOR === (0,1)
 10321					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10322
 10323	040020	200 01 0 00 045612 	..0760:	MOVE	AC1,[[EXP 0,1,0,0,0,1],,ODEND]
 10324	040021	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10325	040022	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10326						ERROR	(..0760,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10327	040023	036 14 0 00 045532 
 10328	040024	255 00 0 00 000000
 10329					^
 10330
 10331	040025	200 14 0 00 040567 	..0761:	MOVE	SCR2,OFLOC	;GET PC
 10332	040026	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10333	040027	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10334						ERROR	(..0760,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10335
 10336	040030	036 13 0 00 045545 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-3
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0232

 10337	040031	255 00 0 00 000000
 10338					^
 10339					^
 10340
 10341					; **********************************************************************
 10342					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10343					; **********************************************************************
 10344
 10345						ODIV	(0,1,0,0,-1,-1)^
 10346
 10347					; --- DIVIDEND == (0,1,0,0)
 10348					; --- DIVISOR === (-1,-1)
 10349					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10350
 10351	040032	200 01 0 00 045621 	..0762:	MOVE	AC1,[[EXP 0,1,0,0,-1,-1],,ODEND]
 10352	040033	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10353	040034	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10354						ERROR	(..0762,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10355	040035	036 14 0 00 045532 
 10356	040036	255 00 0 00 000000
 10357					^
 10358
 10359	040037	200 14 0 00 040567 	..0763:	MOVE	SCR2,OFLOC	;GET PC
 10360	040040	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10361	040041	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10362						ERROR	(..0762,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10363
 10364	040042	036 13 0 00 045545 
 10365	040043	255 00 0 00 000000
 10366					^
 10367					^
 10368
 10369					; **********************************************************************
 10370					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10371					; **********************************************************************
 10372
 10373						ODIV	(1,0,0,0,0,1)^
 10374
 10375					; --- DIVIDEND == (1,0,0,0)
 10376					; --- DIVISOR === (0,1)
 10377					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10378
 10379	040044	200 01 0 00 045630 	..0764:	MOVE	AC1,[[EXP 1,0,0,0,0,1],,ODEND]
 10380	040045	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10381	040046	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10382						ERROR	(..0764,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10383	040047	036 14 0 00 045532 
 10384	040050	255 00 0 00 000000
 10385					^
 10386
 10387	040051	200 14 0 00 040567 	..0765:	MOVE	SCR2,OFLOC	;GET PC
 10388	040052	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10389	040053	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10390						ERROR	(..0764,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10391
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-4
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0233

 10392	040054	036 13 0 00 045545 
 10393	040055	255 00 0 00 000000
 10394					^
 10395					^
 10396
 10397					; **********************************************************************
 10398					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10399					; **********************************************************************
 10400
 10401						ODIV	(1,0,0,0,-1,-1)^
 10402
 10403					; --- DIVIDEND == (1,0,0,0)
 10404					; --- DIVISOR === (-1,-1)
 10405					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10406
 10407	040056	200 01 0 00 045637 	..0766:	MOVE	AC1,[[EXP 1,0,0,0,-1,-1],,ODEND]
 10408	040057	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10409	040060	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10410						ERROR	(..0766,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10411	040061	036 14 0 00 045532 
 10412	040062	255 00 0 00 000000
 10413					^
 10414
 10415	040063	200 14 0 00 040567 	..0767:	MOVE	SCR2,OFLOC	;GET PC
 10416	040064	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10417	040065	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10418						ERROR	(..0766,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10419
 10420	040066	036 13 0 00 045545 
 10421	040067	255 00 0 00 000000
 10422					^
 10423					^
 10424
 10425					; **********************************************************************
 10426					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10427					; **********************************************************************
 10428
 10429						ODIV	(-1,-1,1B0,1B0,0,1)^
 10430
 10431					; --- DIVIDEND == (-1,-1,1B0,1B0)
 10432					; --- DIVISOR === (0,1)
 10433					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10434
 10435	040070	200 01 0 00 045646 	..0770:	MOVE	AC1,[[EXP -1,-1,1B0,1B0,0,1],,ODEND]
 10436	040071	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10437	040072	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10438						ERROR	(..0770,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10439	040073	036 14 0 00 045532 
 10440	040074	255 00 0 00 000000
 10441					^
 10442
 10443	040075	200 14 0 00 040567 	..0771:	MOVE	SCR2,OFLOC	;GET PC
 10444	040076	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10445	040077	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10446						ERROR	(..0770,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-5
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0234

 10447
 10448	040100	036 13 0 00 045545 
 10449	040101	255 00 0 00 000000
 10450					^
 10451					^
 10452
 10453					; **********************************************************************
 10454					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10455					; **********************************************************************
 10456
 10457						ODIV	(-1,-1,1B0,1B0,-1,-1)^
 10458
 10459					; --- DIVIDEND == (-1,-1,1B0,1B0)
 10460					; --- DIVISOR === (-1,-1)
 10461					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10462
 10463	040102	200 01 0 00 045655 	..0772:	MOVE	AC1,[[EXP -1,-1,1B0,1B0,-1,-1],,ODEND]
 10464	040103	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10465	040104	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10466						ERROR	(..0772,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10467	040105	036 14 0 00 045532 
 10468	040106	255 00 0 00 000000
 10469					^
 10470
 10471	040107	200 14 0 00 040567 	..0773:	MOVE	SCR2,OFLOC	;GET PC
 10472	040110	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10473	040111	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10474						ERROR	(..0772,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10475
 10476	040112	036 13 0 00 045545 
 10477	040113	255 00 0 00 000000
 10478					^
 10479					^
 10480
 10481					; **********************************************************************
 10482					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10483					; **********************************************************************
 10484
 10485						ODIV	(-1,1B0,1B0,1B0,0,1)^
 10486
 10487					; --- DIVIDEND == (-1,1B0,1B0,1B0)
 10488					; --- DIVISOR === (0,1)
 10489					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10490
 10491	040114	200 01 0 00 045664 	..0774:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,0,1],,ODEND]
 10492	040115	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10493	040116	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10494						ERROR	(..0774,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10495	040117	036 14 0 00 045532 
 10496	040120	255 00 0 00 000000
 10497					^
 10498
 10499	040121	200 14 0 00 040567 	..0775:	MOVE	SCR2,OFLOC	;GET PC
 10500	040122	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10501	040123	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-6
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0235

 10502						ERROR	(..0774,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10503
 10504	040124	036 13 0 00 045545 
 10505	040125	255 00 0 00 000000
 10506					^
 10507					^
 10508
 10509					; **********************************************************************
 10510					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10511					; **********************************************************************
 10512
 10513						ODIV	(-1,1B0,1B0,1B0,-1,-1)^
 10514
 10515					; --- DIVIDEND == (-1,1B0,1B0,1B0)
 10516					; --- DIVISOR === (-1,-1)
 10517					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10518
 10519	040126	200 01 0 00 045673 	..0776:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,-1,-1],,ODEND]
 10520	040127	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10521	040130	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10522						ERROR	(..0776,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10523	040131	036 14 0 00 045532 
 10524	040132	255 00 0 00 000000
 10525					^
 10526
 10527	040133	200 14 0 00 040567 	..0777:	MOVE	SCR2,OFLOC	;GET PC
 10528	040134	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10529	040135	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10530						ERROR	(..0776,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10531
 10532	040136	036 13 0 00 045545 
 10533	040137	255 00 0 00 000000
 10534					^
 10535					^
 10536
 10537					; **********************************************************************
 10538					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10539					; **********************************************************************
 10540
 10541						ODIV	(1,0,0,0,1,0)^
 10542
 10543					; --- DIVIDEND == (1,0,0,0)
 10544					; --- DIVISOR === (1,0)
 10545					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10546
 10547	040140	200 01 0 00 045702 	..1000:	MOVE	AC1,[[EXP 1,0,0,0,1,0],,ODEND]
 10548	040141	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10549	040142	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10550						ERROR	(..1000,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10551	040143	036 14 0 00 045532 
 10552	040144	255 00 0 00 000000
 10553					^
 10554
 10555	040145	200 14 0 00 040567 	..1001:	MOVE	SCR2,OFLOC	;GET PC
 10556	040146	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-7
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0236

 10557	040147	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10558						ERROR	(..1000,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10559
 10560	040150	036 13 0 00 045545 
 10561	040151	255 00 0 00 000000
 10562					^
 10563					^
 10564
 10565					; **********************************************************************
 10566					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10567					; **********************************************************************
 10568
 10569						ODIV	(1,0,0,0,-1,0)^
 10570
 10571					; --- DIVIDEND == (1,0,0,0)
 10572					; --- DIVISOR === (-1,0)
 10573					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10574
 10575	040152	200 01 0 00 045711 	..1002:	MOVE	AC1,[[EXP 1,0,0,0,-1,0],,ODEND]
 10576	040153	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10577	040154	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10578						ERROR	(..1002,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10579	040155	036 14 0 00 045532 
 10580	040156	255 00 0 00 000000
 10581					^
 10582
 10583	040157	200 14 0 00 040567 	..1003:	MOVE	SCR2,OFLOC	;GET PC
 10584	040160	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10585	040161	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10586						ERROR	(..1002,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10587
 10588	040162	036 13 0 00 045545 
 10589	040163	255 00 0 00 000000
 10590					^
 10591					^
 10592
 10593					; **********************************************************************
 10594					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10595					; **********************************************************************
 10596
 10597						ODIV	(-1,1B0,1B0,1B0,1,0)^
 10598
 10599					; --- DIVIDEND == (-1,1B0,1B0,1B0)
 10600					; --- DIVISOR === (1,0)
 10601					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10602
 10603	040164	200 01 0 00 045720 	..1004:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,1,0],,ODEND]
 10604	040165	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10605	040166	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10606						ERROR	(..1004,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10607	040167	036 14 0 00 045532 
 10608	040170	255 00 0 00 000000
 10609					^
 10610
 10611	040171	200 14 0 00 040567 	..1005:	MOVE	SCR2,OFLOC	;GET PC
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-8
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0237

 10612	040172	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10613	040173	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10614						ERROR	(..1004,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10615
 10616	040174	036 13 0 00 045545 
 10617	040175	255 00 0 00 000000
 10618					^
 10619					^
 10620
 10621					; **********************************************************************
 10622					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10623					; **********************************************************************
 10624
 10625						ODIV	(-1,1B0,1B0,1B0,-1,1B0)^
 10626
 10627					; --- DIVIDEND == (-1,1B0,1B0,1B0)
 10628					; --- DIVISOR === (-1,1B0)
 10629					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10630
 10631	040176	200 01 0 00 045727 	..1006:	MOVE	AC1,[[EXP -1,1B0,1B0,1B0,-1,1B0],,ODEND]
 10632	040177	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10633	040200	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10634						ERROR	(..1006,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10635	040201	036 14 0 00 045532 
 10636	040202	255 00 0 00 000000
 10637					^
 10638
 10639	040203	200 14 0 00 040567 	..1007:	MOVE	SCR2,OFLOC	;GET PC
 10640	040204	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10641	040205	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10642						ERROR	(..1006,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10643
 10644	040206	036 13 0 00 045545 
 10645	040207	255 00 0 00 000000
 10646					^
 10647					^
 10648
 10649					; **********************************************************************
 10650					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10651					; **********************************************************************
 10652
 10653						ODIV	(0,377777777777,377777777777,377777777777,0,377777777777)^
 10654
 10655					; --- DIVIDEND == (0,377777777777,377777777777,377777777777)
 10656					; --- DIVISOR === (0,377777777777)
 10657					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10658
 10659	040210	200 01 0 00 045736 	..1010:	MOVE	AC1,[[EXP 0,377777777777,377777777777,377777777777,0,377777777777],,ODEND]
 10660	040211	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10661	040212	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10662						ERROR	(..1010,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10663	040213	036 14 0 00 045532 
 10664	040214	255 00 0 00 000000
 10665					^
 10666
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-9
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0238

 10667	040215	200 14 0 00 040567 	..1011:	MOVE	SCR2,OFLOC	;GET PC
 10668	040216	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10669	040217	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10670						ERROR	(..1010,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10671
 10672	040220	036 13 0 00 045545 
 10673	040221	255 00 0 00 000000
 10674					^
 10675					^
 10676
 10677					; **********************************************************************
 10678					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10679					; **********************************************************************
 10680
 10681						ODIV	(0,377777777777,377777777777,377777777777,-1,400000000001)^
 10682
 10683					; --- DIVIDEND == (0,377777777777,377777777777,377777777777)
 10684					; --- DIVISOR === (-1,400000000001)
 10685					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10686
 10687	040222				..1012:	MOVE	AC1,[[EXP 0,377777777777,377777777777,377777777777,-1,400000000001],,ODEND]
 10688	040222	200 01 0 00 045745 
 10689	040223	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10690	040224	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10691						ERROR	(..1012,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10692	040225	036 14 0 00 045532 
 10693	040226	255 00 0 00 000000
 10694					^
 10695
 10696	040227	200 14 0 00 040567 	..1013:	MOVE	SCR2,OFLOC	;GET PC
 10697	040230	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10698	040231	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10699						ERROR	(..1012,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10700
 10701	040232	036 13 0 00 045545 
 10702	040233	255 00 0 00 000000
 10703					^
 10704					^
 10705
 10706					; **********************************************************************
 10707					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10708					; **********************************************************************
 10709
 10710						ODIV	(-1,1B0,1B0,400000000001,0,377777777777)^
 10711
 10712					; --- DIVIDEND == (-1,1B0,1B0,400000000001)
 10713					; --- DIVISOR === (0,377777777777)
 10714					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10715
 10716	040234	200 01 0 00 045746 	..1014:	MOVE	AC1,[[EXP -1,1B0,1B0,400000000001,0,377777777777],,ODEND]
 10717	040235	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10718	040236	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10719						ERROR	(..1014,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10720	040237	036 14 0 00 045532 
 10721	040240	255 00 0 00 000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-10
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0239

 10722					^
 10723
 10724	040241	200 14 0 00 040567 	..1015:	MOVE	SCR2,OFLOC	;GET PC
 10725	040242	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10726	040243	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10727						ERROR	(..1014,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10728
 10729	040244	036 13 0 00 045545 
 10730	040245	255 00 0 00 000000
 10731					^
 10732					^
 10733
 10734					; **********************************************************************
 10735					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10736					; **********************************************************************
 10737
 10738						ODIV	(-1,1B0,1B0,400000000001,-1,400000000001)^
 10739
 10740					; --- DIVIDEND == (-1,1B0,1B0,400000000001)
 10741					; --- DIVISOR === (-1,400000000001)
 10742					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10743
 10744	040246	200 01 0 00 045755 	..1016:	MOVE	AC1,[[EXP -1,1B0,1B0,400000000001,-1,400000000001],,ODEND]
 10745	040247	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10746	040250	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10747						ERROR	(..1016,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10748	040251	036 14 0 00 045532 
 10749	040252	255 00 0 00 000000
 10750					^
 10751
 10752	040253	200 14 0 00 040567 	..1017:	MOVE	SCR2,OFLOC	;GET PC
 10753	040254	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10754	040255	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10755						ERROR	(..1016,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10756
 10757	040256	036 13 0 00 045545 
 10758	040257	255 00 0 00 000000
 10759					^
 10760					^
 10761
 10762					; **********************************************************************
 10763					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10764					; **********************************************************************
 10765
 10766						ODIV	(1,0,377777777777,377777777777,0,377777777777)^
 10767
 10768					; --- DIVIDEND == (1,0,377777777777,377777777777)
 10769					; --- DIVISOR === (0,377777777777)
 10770					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10771
 10772	040260	200 01 0 00 045756 	..1020:	MOVE	AC1,[[EXP 1,0,377777777777,377777777777,0,377777777777],,ODEND]
 10773	040261	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10774	040262	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10775						ERROR	(..1020,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10776	040263	036 14 0 00 045532 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-11
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0240

 10777	040264	255 00 0 00 000000
 10778					^
 10779
 10780	040265	200 14 0 00 040567 	..1021:	MOVE	SCR2,OFLOC	;GET PC
 10781	040266	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10782	040267	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10783						ERROR	(..1020,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10784
 10785	040270	036 13 0 00 045545 
 10786	040271	255 00 0 00 000000
 10787					^
 10788					^
 10789
 10790					; **********************************************************************
 10791					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10792					; **********************************************************************
 10793
 10794						ODIV	(1,0,377777777777,377777777777,-1,400000000001)^
 10795
 10796					; --- DIVIDEND == (1,0,377777777777,377777777777)
 10797					; --- DIVISOR === (-1,400000000001)
 10798					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10799
 10800	040272	200 01 0 00 045765 	..1022:	MOVE	AC1,[[EXP 1,0,377777777777,377777777777,-1,400000000001],,ODEND]
 10801	040273	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10802	040274	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10803						ERROR	(..1022,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10804	040275	036 14 0 00 045532 
 10805	040276	255 00 0 00 000000
 10806					^
 10807
 10808	040277	200 14 0 00 040567 	..1023:	MOVE	SCR2,OFLOC	;GET PC
 10809	040300	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10810	040301	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10811						ERROR	(..1022,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10812
 10813	040302	036 13 0 00 045545 
 10814	040303	255 00 0 00 000000
 10815					^
 10816					^
 10817
 10818					; **********************************************************************
 10819					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10820					; **********************************************************************
 10821
 10822						ODIV	(-2,-1,1B0,400000000001,0,377777777777)^
 10823
 10824					; --- DIVIDEND == (-2,-1,1B0,400000000001)
 10825					; --- DIVISOR === (0,377777777777)
 10826					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10827
 10828	040304	200 01 0 00 045774 	..1024:	MOVE	AC1,[[EXP -2,-1,1B0,400000000001,0,377777777777],,ODEND]
 10829	040305	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10830	040306	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10831						ERROR	(..1024,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-12
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0241

 10832	040307	036 14 0 00 045532 
 10833	040310	255 00 0 00 000000
 10834					^
 10835
 10836	040311	200 14 0 00 040567 	..1025:	MOVE	SCR2,OFLOC	;GET PC
 10837	040312	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10838	040313	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10839						ERROR	(..1024,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10840
 10841	040314	036 13 0 00 045545 
 10842	040315	255 00 0 00 000000
 10843					^
 10844					^
 10845
 10846					; **********************************************************************
 10847					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10848					; **********************************************************************
 10849
 10850						ODIV	(-2,-1,1B0,400000000001,-1,400000000001)^
 10851
 10852					; --- DIVIDEND == (-2,-1,1B0,400000000001)
 10853					; --- DIVISOR === (-1,400000000001)
 10854					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10855
 10856	040316	200 01 0 00 046003 	..1026:	MOVE	AC1,[[EXP -2,-1,1B0,400000000001,-1,400000000001],,ODEND]
 10857	040317	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10858	040320	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10859						ERROR	(..1026,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10860	040321	036 14 0 00 045532 
 10861	040322	255 00 0 00 000000
 10862					^
 10863
 10864	040323	200 14 0 00 040567 	..1027:	MOVE	SCR2,OFLOC	;GET PC
 10865	040324	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10866	040325	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10867						ERROR	(..1026,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10868
 10869	040326	036 13 0 00 045545 
 10870	040327	255 00 0 00 000000
 10871					^
 10872					^
 10873
 10874					; **********************************************************************
 10875					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10876					; **********************************************************************
 10877
 10878						ODIV	(1B0,1B0,1B0,1B0,1B0,1B0)^
 10879
 10880					; --- DIVIDEND == (1B0,1B0,1B0,1B0)
 10881					; --- DIVISOR === (1B0,1B0)
 10882					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10883
 10884	040330	200 01 0 00 046012 	..1030:	MOVE	AC1,[[EXP 1B0,1B0,1B0,1B0,1B0,1B0],,ODEND]
 10885	040331	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10886	040332	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-13
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0242

 10887						ERROR	(..1030,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10888	040333	036 14 0 00 045532 
 10889	040334	255 00 0 00 000000
 10890					^
 10891
 10892	040335	200 14 0 00 040567 	..1031:	MOVE	SCR2,OFLOC	;GET PC
 10893	040336	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10894	040337	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10895						ERROR	(..1030,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10896
 10897	040340	036 13 0 00 045545 
 10898	040341	255 00 0 00 000000
 10899					^
 10900					^
 10901
 10902					; **********************************************************************
 10903					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10904					; **********************************************************************
 10905
 10906						ODIV	(377777777777,377777777777,377777777777,377777777777,377777777777,377777777
 10907					777)^
 10908
 10909					; --- DIVIDEND == (377777777777,377777777777,377777777777,377777777777)
 10910					; --- DIVISOR === (377777777777,377777777777)
 10911					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10912
 10913					..1032:	MOVE	AC1,[[EXP 377777777777,377777777777,377777777777,377777777777,377777777777,
 10914	040342	200 01 0 00 046021 	377777777777],,ODEND]
 10915	040343	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10916	040344	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10917						ERROR	(..1032,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10918	040345	036 14 0 00 045532 
 10919	040346	255 00 0 00 000000
 10920					^
 10921
 10922	040347	200 14 0 00 040567 	..1033:	MOVE	SCR2,OFLOC	;GET PC
 10923	040350	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10924	040351	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10925						ERROR	(..1032,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10926
 10927	040352	036 13 0 00 045545 
 10928	040353	255 00 0 00 000000
 10929					^
 10930					^
 10931
 10932					; **********************************************************************
 10933					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10934					; **********************************************************************
 10935
 10936						ODIV	(377777777777,377777777777,377777777777,377777777777,1B0,400000000001)^
 10937
 10938					; --- DIVIDEND == (377777777777,377777777777,377777777777,377777777777)
 10939					; --- DIVISOR === (1B0,400000000001)
 10940					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10941
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-14
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0243

 10942					..1034:	MOVE	AC1,[[EXP 377777777777,377777777777,377777777777,377777777777,1B0,400000000
 10943	040354	200 01 0 00 046030 	001],,ODEND]
 10944	040355	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10945	040356	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10946						ERROR	(..1034,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10947	040357	036 14 0 00 045532 
 10948	040360	255 00 0 00 000000
 10949					^
 10950
 10951	040361	200 14 0 00 040567 	..1035:	MOVE	SCR2,OFLOC	;GET PC
 10952	040362	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10953	040363	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10954						ERROR	(..1034,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10955
 10956	040364	036 13 0 00 045545 
 10957	040365	255 00 0 00 000000
 10958					^
 10959					^
 10960
 10961					; **********************************************************************
 10962					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING  ----------
 10963					; **********************************************************************
 10964
 10965						ODIV	(1B0,400000000001,1B0,1B0,377777777777,377777777777)^
 10966
 10967					; --- DIVIDEND == (1B0,400000000001,1B0,1B0)
 10968					; --- DIVISOR === (377777777777,377777777777)
 10969					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10970
 10971	040366	200 01 0 00 046037 	..1036:	MOVE	AC1,[[EXP 1B0,400000000001,1B0,1B0,377777777777,377777777777],,ODEND]
 10972	040367	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 10973	040370	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 10974						ERROR	(..1036,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 10975	040371	036 14 0 00 045532 
 10976	040372	255 00 0 00 000000
 10977					^
 10978
 10979	040373	200 14 0 00 040567 	..1037:	MOVE	SCR2,OFLOC	;GET PC
 10980	040374	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 10981	040375	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 10982						ERROR	(..1036,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 10983
 10984	040376	036 13 0 00 045545 
 10985	040377	255 00 0 00 000000
 10986					^
 10987					^
 10988
 10989					; **********************************************************************
 10990					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING WITH INCONSISTENT SIGNS  -------
 10991					---
 10992					; **********************************************************************
 10993
 10994						ODIV	(1,1B0,-1,-1,0,377777777777)^
 10995
 10996					; --- DIVIDEND == (1,1B0,-1,-1)
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-15
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0244

 10997					; --- DIVISOR === (0,377777777777)
 10998					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 10999
 11000	040400	200 01 0 00 046046 	..1040:	MOVE	AC1,[[EXP 1,1B0,-1,-1,0,377777777777],,ODEND]
 11001	040401	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 11002	040402	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 11003						ERROR	(..1040,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 11004	040403	036 14 0 00 045532 
 11005	040404	255 00 0 00 000000
 11006					^
 11007
 11008	040405	200 14 0 00 040567 	..1041:	MOVE	SCR2,OFLOC	;GET PC
 11009	040406	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 11010	040407	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 11011						ERROR	(..1040,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 11012
 11013	040410	036 13 0 00 045545 
 11014	040411	255 00 0 00 000000
 11015					^
 11016					^
 11017
 11018					; **********************************************************************
 11019					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING WITH INCONSISTENT SIGNS  -------
 11020					---
 11021					; **********************************************************************
 11022
 11023						ODIV	(1,0,377777777777,377777777777,-1,1)^
 11024
 11025					; --- DIVIDEND == (1,0,377777777777,377777777777)
 11026					; --- DIVISOR === (-1,1)
 11027					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 11028
 11029	040412	200 01 0 00 046055 	..1042:	MOVE	AC1,[[EXP 1,0,377777777777,377777777777,-1,1],,ODEND]
 11030	040413	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 11031	040414	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 11032						ERROR	(..1042,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 11033	040415	036 14 0 00 045532 
 11034	040416	255 00 0 00 000000
 11035					^
 11036
 11037	040417	200 14 0 00 040567 	..1043:	MOVE	SCR2,OFLOC	;GET PC
 11038	040420	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 11039	040421	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 11040						ERROR	(..1042,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 11041
 11042	040422	036 13 0 00 045545 
 11043	040423	255 00 0 00 000000
 11044					^
 11045					^
 11046
 11047					; **********************************************************************
 11048					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING WITH INCONSISTENT SIGNS  -------
 11049					---
 11050					; **********************************************************************
 11051
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 32-16
DSKCFM	MAC	26-Sep-79 15:49		DDIV - TEST G                                                                      SEQ 0245

 11052						ODIV	(-2,377777777777,0,1,0,-1)^
 11053
 11054					; --- DIVIDEND == (-2,377777777777,0,1)
 11055					; --- DIVISOR === (0,-1)
 11056					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 11057
 11058	040424	200 01 0 00 046064 	..1044:	MOVE	AC1,[[EXP -2,377777777777,0,1,0,-1],,ODEND]
 11059	040425	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 11060	040426	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 11061						ERROR	(..1044,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 11062	040427	036 14 0 00 045532 
 11063	040430	255 00 0 00 000000
 11064					^
 11065
 11066	040431	200 14 0 00 040567 	..1045:	MOVE	SCR2,OFLOC	;GET PC
 11067	040432	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 11068	040433	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 11069						ERROR	(..1044,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 11070
 11071	040434	036 13 0 00 045545 
 11072	040435	255 00 0 00 000000
 11073					^
 11074					^
 11075
 11076					; **********************************************************************
 11077					; ----------  DDIV - TEST G - OVERFLOW / NO DIVIDE TESTING WITH INCONSISTENT SIGNS  -------
 11078					---
 11079					; **********************************************************************
 11080
 11081						ODIV	(-2,-1,0,1,-1,400000000001)^
 11082
 11083					; --- DIVIDEND == (-2,-1,0,1)
 11084					; --- DIVISOR === (-1,400000000001)
 11085					; --- QUOTIENT/REMAINDER - NOT CALCULATED (DIVIDEND UNCHANGED)
 11086
 11087	040436	200 01 0 00 046073 	..1046:	MOVE	AC1,[[EXP -2,-1,0,1,-1,400000000001],,ODEND]
 11088	040437	251 01 0 00 040635 		BLT	AC1,ORES-1	;SET UP OPERANDS
 11089	040440	260 17 0 00 040557 		GO	OSUBR		;GO DO TEST
 11090						ERROR	(..1046,14,SCR1,SCR2,,TEST G - DIVIDEND CHANGED ON OV/NODIV,DPRINT)^SALL
 11091	040441	036 14 0 00 045532 
 11092	040442	255 00 0 00 000000
 11093					^
 11094
 11095	040443	200 14 0 00 040567 	..1047:	MOVE	SCR2,OFLOC	;GET PC
 11096	040444	434 14 0 00 045535 		IOR	SCR2,[AROV+DCK,,0]	;CALC CORRECT PC (OV/NO DIV)
 11097	040445	312 14 0 00 040567 		CAME	SCR2,OFLOC	;PC CORRECT?
 11098						ERROR	(..1046,13,SCR2,OFLOC,,TEST G - PC FLAGS INCORRECT - BITS 0&12,DPRINT)^SALL
 11099
 11100	040446	036 13 0 00 045545 
 11101	040447	255 00 0 00 000000
 11102					^
 11103					^
 11104
 11105	040450	254 00 0 00 030057 	PHALT:	JRST	BEGEND
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 33
DSKCFM	MAC	26-Sep-79 15:49		TESTING SUBROUTINES                                                                SEQ 0246

 11106					SUBTTL	TESTING SUBROUTINES
 11107
 11108					; **********************************************************************
 11109					;*MSUBR - SUBROUTINE TO DO MULTIPLICATION CALCULATIONS
 11110					;*
 11111					;*	ARGUMENTS:	MCAND - CONTAINS MULTIPLICAND
 11112					;*			MPLIER - CONTAINS MULTIPLIER
 11113					;*			MRES - CONTAINS THE EXPECTED RESULT
 11114					; **********************************************************************
 11115
 11116	040451	200 15 0 00 046074 	MSUBR:	MOVE	SCR3,[MCAND,,MPLIER]	;ADDRS OF OPERANDS FOR ADDL PRINT ROUTINE
 11117	040452	120 01 0 00 040502 		DMOVE	AC1,MCAND		;INIT AC1 WITH MULTIPLICAND
 11118	040453	120 03 0 00 043403 		DMOVE	AC1+2,[EXP 525252525252,252525252525] ;PUT GARBAGE IN
 11119										;RIGHT HALF OF RESULT
 11120	040454	255 17 0 00 040455 		JFCL	17,.+1			;CLEAR PC FLAGS
 11121										;----------------------
 11122	040455	116 01 0 00 040504 		DMUL	AC1,MPLIER		;-----  MULTIPLY  -----
 11123										;----------------------
 11124	040456	264 00 0 00 040457 		JSR	.+1			;SAVE PC FLAGS
 11125	040457	000000	000000		MFLOC:	0				;PC FLAGS STORED HERE
 11126
 11127	040460	400 13 0 00 000000 		SETZ	SCR1,			;KEEP TRACK OF INCORRECT WORD
 11128	040461	312 01 0 00 040506 		CAME	AC1,MRES		;1ST WORD OF RESULT OK?
 11129	040462	254 00 0 00 040474 		JRST	MERROR			;FOUND AN ERROR
 11130
 11131	040463	201 13 0 00 000001 		MOVEI	SCR1,1			;POINT TO 2ND WORD AS INCORRECT
 11132	040464	312 02 0 00 040507 		CAME	AC1+1,MRES+1		;2ND WORD OF RESULT OK?
 11133	040465	254 00 0 00 040474 		JRST	MERROR			;FOUND AN ERROR
 11134
 11135	040466	201 13 0 00 000002 		MOVEI	SCR1,2			;POINT TO 3RD WORD AS INCORRECT
 11136	040467	312 03 0 00 040510 		CAME	AC1+2,MRES+2		;3RD WORD OF RESULT OK?
 11137	040470	254 00 0 00 040474 		JRST	MERROR			;FOUND AN ERROR
 11138
 11139	040471	201 13 0 00 000003 		MOVEI	SCR1,3			;POINT TO 4TH WORD AS INCORRECT
 11140	040472	316 04 0 00 040511 		CAMN	AC1+3,MRES+3		;4TH WORD OF RESULT OK?
 11141	040473	254 00 0 00 040477 		JRST	MTEST			;GO TEST IF PC FLAGS OK
 11142
 11143	040474	200 14 0 13 000001 	MERROR:	MOVE	SCR2,AC1(SCR1)		;GET ACTUAL RESULT
 11144	040475	200 13 0 13 040506 		MOVE	SCR1,MRES(SCR1)		;GET CORRECT RESULT
 11145	040476	263 17 0 00 000000 		RTN				;TAKE ERROR RETURN
 11146
 11147	040477	262 17 0 00 040512 	MTEST:	GET	MRET			;GET RETURN ADDRESS IN MRET
 11148	040500	350 00 0 00 040512 		AOS	MRET			;SET UP +1 NO ERROR RETURN
 11149	040501	254 00 1 00 040512 		JRST	@MRET			;RETURN
 11150
 11151	040502				MCAND:	BLOCK	2			;MULTIPLICAND
 11152	040504				MPLIER:	BLOCK	2			;MULTIPLIER
 11153	040506				MRES:	BLOCK	4			;EXPECTED RESULT
 11154	040512				MRET:	BLOCK	1			;RETURN + 1 ADDRESS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 34
DSKCFM	MAC	26-Sep-79 15:49		TESTING SUBROUTINES                                                                SEQ 0247

 11155
 11156					; **********************************************************************
 11157					;*PSUBR - SUBROUTINE TO DO DIVISION CALCULATIONS
 11158					;*
 11159					;*	ARGUMENTS:	PDEND - CONTAINS DIVIDEND
 11160					;*			PISOR - CONTAINS DIVISOR
 11161					;*			PRES - CONTAINS THE EXPECTED RESULT
 11162					; **********************************************************************
 11163
 11164	040513	200 15 0 00 046075 	PSUBR:	MOVE	SCR3,[PDEND,,PISOR]	;ADDRS OF OPERANDS FOR ADDL PRINT ROUTINE
 11165	040514	120 01 0 00 040544 		DMOVE	AC1,PDEND		;INIT DIVIDEND (4 WORDS)
 11166	040515	120 03 0 00 040546 		DMOVE	AC1+2,PDEND+2
 11167
 11168	040516	254 02 1 00 046076 		JRSTF	@[.+1]			;CLEAR PC FLAGS
 11169										;----------------------
 11170	040517	117 01 0 00 040550 		DDIV	AC1,PISOR		;-----  DIVIDE  -------
 11171										;----------------------
 11172	040520	264 00 0 00 040521 		JSR	.+1			;SAVE PC FLAGS
 11173	040521	000000	000000		PFLOC:	0				;PC FLAGS STORED HERE
 11174
 11175	040522	400 13 0 00 000000 		SETZ	SCR1,			;KEEP TRACK OF INCORRECT WORD
 11176	040523	312 01 0 00 040552 		CAME	AC1,PRES		;1ST WORD OF QUOTIENT OK?
 11177	040524	254 00 0 00 040536 		JRST	PERROR			;FOUND AN ERROR
 11178
 11179	040525	201 13 0 00 000001 		MOVEI	SCR1,1			;POINT TO 2ND WORD AS INCORRECT
 11180	040526	312 02 0 00 040553 		CAME	AC1+1,PRES+1		;2ND WORD OF QUOTIENT OK?
 11181	040527	254 00 0 00 040536 		JRST	PERROR			;FOUND AN ERROR
 11182
 11183	040530	201 13 0 00 000002 		MOVEI	SCR1,2			;POINT TO 3RD WORD AS INCORRECT
 11184	040531	312 03 0 00 040554 		CAME	AC1+2,PRES+2		;1ST WORD OF REMAINDER OK?
 11185	040532	254 00 0 00 040536 		JRST	PERROR			;FOUND AN ERROR
 11186
 11187	040533	201 13 0 00 000003 		MOVEI	SCR1,3			;POINT TO 4TH WORD AS INCORRECT
 11188	040534	316 04 0 00 040555 		CAMN	AC1+3,PRES+3		;2ND WORD OF REMAINDER OK?
 11189	040535	254 00 0 00 040541 		JRST	PTEST			;GO TEST IF PC FLAGS OK
 11190
 11191	040536	200 14 0 13 000001 	PERROR:	MOVE	SCR2,AC1(SCR1)		;GET ACTUAL RESULT
 11192	040537	200 13 0 13 040552 		MOVE	SCR1,PRES(SCR1)		;GET CORRECT RESULT
 11193	040540	263 17 0 00 000000 		RTN				;TAKE ERROR RETURN
 11194
 11195	040541	262 17 0 00 040512 	PTEST:	GET	MRET			;GET RETURN ADDRESS IN MRET
 11196	040542	350 00 0 00 040512 		AOS	MRET			;SET UP +1 NO ERROR RETURN
 11197	040543	254 00 1 00 040512 		JRST	@MRET			;RETURN
 11198
 11199	040544				PDEND:	BLOCK	4			;DIVIDEND
 11200	040550				PISOR:	BLOCK	2			;DIVISOR
 11201	040552				PRES:	BLOCK	4			;EXPECTED RESULT
 11202	040556				PRET:	BLOCK	1			;RETURN + 1 ADDRESS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 35
DSKCFM	MAC	26-Sep-79 15:49		TESTING SUBROUTINES                                                                SEQ 0248

 11203
 11204					; **********************************************************************
 11205					;*OSUBR - SUBROUTINE TO DO DIVISION CALCULATIONS
 11206					;*
 11207					;*	ARGUMENTS:	ODEND - CONTAINS DIVIDEND
 11208					;*			OISOR - CONTAINS DIVISOR
 11209					;*
 11210					;*	NOTE:	WHEN ENCOUNTERING A OVERFLOW/NO DIVIDE SITUATION THE PROCESSOR
 11211					;*		ENSURES THAT THE OPERANDS DO  NOT  CHANGE.  THE KL10 ENSURES
 11212					;*		THAT NEITHER THE MAGNITUDE PORTION NOR THE SIGN BITS CHANGE.
 11213					;*		THE KS10 ENSURES THAT THE MAGNITUDE PORTION OF  EITHER  WORD
 11214					;*		DOES NOT CHANGE - HOWEVER, IT ONLY  PROTECTS THE SIGN BIT OF
 11215					;*		THE MOST SIGNIFICANT WORD.  THE SIGN BIT OF THE  OTHER  WORD
 11216					;*		IS INDETERMINATE.  THIS TEST CHECKS TO FIND OUT WHAT TYPE OF
 11217					;*		PROCESSOR WE HAVE AND WILL MODIFY THE TEST FOR A KS10.
 11218					;*
 11219					;*		THE ABOVE WAS NOTICED WHEN RUNNING THE  DIAGNOSTIC ON THE KS10
 11220					;*		AFTER DEBUGGING ON A KL10. ACCORDING TO DON LEWINE, THIS WAS
 11221					;*		DONE TO SAVE SPACE IN THE KS10 MICROCODE.
 11222					; **********************************************************************
 11223
 11224	040557	200 15 0 00 046077 	OSUBR:	MOVE	SCR3,[ODEND,,OISOR]	;ADDRS OF OPERANDS FOR ADDL PRINT ROUTINE
 11225	040560	120 01 0 00 040630 		DMOVE	AC1,ODEND		;INIT DIVIDEND (4 WORDS)
 11226	040561	120 03 0 00 040632 		DMOVE	AC1+2,ODEND+2
 11227	040562	124 01 0 00 040636 		DMOVEM	AC1,ORES		;RESULT SHOULD BE SAME AS
 11228	040563	124 03 0 00 040640 		DMOVEM	AC1+2,ORES+2		;   DIVIDEND
 11229
 11230	040564	254 02 1 00 046100 		JRSTF	@[.+1]			;CLEAR PC FLAGS
 11231										;----------------------
 11232	040565	117 01 0 00 040634 		DDIV	AC1,OISOR		;-----  DIVIDE  -------
 11233										;----------------------
 11234	040566	264 00 0 00 040567 		JSR	.+1			;SAVE PC FLAGS
 11235	040567	000000	000000		OFLOC:	0				;PC FLAGS STORED HERE
 11236
 11237	040570	336 00 0 00 030524 		SKIPN	SM10			;KS10 PROCESSOR?
 11238	040571	254 00 0 00 040600 		JRST	OCON			;NO - KL10
 11239	040572	135 13 0 00 040622 		LDB	SCR1,OBYTEF		;COPY THE LOW ORDER SIGNS OF THE RESULT
 11240	040573	137 13 0 00 040625 		DPB	SCR1,OBYTET		;  INTO THE EXPECTED RESULT SINCE THEY
 11241	040574	135 13 0 00 040623 		LDB	SCR1,OBYTEF+1		;  ARE INDETERMINATE AND WE DONT WANT
 11242	040575	137 13 0 00 040626 		DPB	SCR1,OBYTET+1		;  TO TEST THE SIGN BIT.
 11243	040576	135 13 0 00 040624 		LDB	SCR1,OBYTEF+2		
 11244	040577	137 13 0 00 040627 		DPB	SCR1,OBYTET+2		
 11245
 11246	040600	400 13 0 00 000000 	OCON:	SETZ	SCR1,			;KEEP TRACK OF INCORRECT WORD
 11247	040601	312 01 0 00 040636 		CAME	AC1,ORES		;1ST WORD OF QUOTIENT OK?
 11248	040602	254 00 0 00 040614 		JRST	OERROR			;FOUND AN ERROR
 11249
 11250	040603	201 13 0 00 000001 		MOVEI	SCR1,1			;POINT TO 2ND WORD AS INCORRECT
 11251	040604	312 02 0 00 040637 		CAME	AC1+1,ORES+1		;2ND WORD OF QUOTIENT OK?
 11252	040605	254 00 0 00 040614 		JRST	OERROR			;FOUND AN ERROR
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 36
DSKCFM	MAC	26-Sep-79 15:49		TESTING SUBROUTINES                                                                SEQ 0249

 11253
 11254	040606	201 13 0 00 000002 		MOVEI	SCR1,2			;POINT TO 3RD WORD AS INCORRECT
 11255	040607	312 03 0 00 040640 		CAME	AC1+2,ORES+2		;1ST WORD OF REMAINDER OK?
 11256	040610	254 00 0 00 040614 		JRST	OERROR			;FOUND AN ERROR
 11257
 11258	040611	201 13 0 00 000003 		MOVEI	SCR1,3			;POINT TO 4TH WORD AS INCORRECT
 11259	040612	316 04 0 00 040641 		CAMN	AC1+3,ORES+3		;2ND WORD OF REMAINDER OK?
 11260	040613	254 00 0 00 040617 		JRST	OTEST			;GO TEST IF PC FLAGS OK
 11261
 11262	040614	200 14 0 13 000001 	OERROR:	MOVE	SCR2,AC1(SCR1)		;GET ACTUAL RESULT
 11263	040615	200 13 0 13 040636 		MOVE	SCR1,ORES(SCR1)		;GET CORRECT RESULT
 11264	040616	263 17 0 00 000000 		RTN				;TAKE ERROR RETURN
 11265
 11266	040617	262 17 0 00 040512 	OTEST:	GET	MRET			;GET RETURN ADDRESS IN MRET
 11267	040620	350 00 0 00 040512 		AOS	MRET			;SET UP +1 NO ERROR RETURN
 11268	040621	254 00 1 00 040512 		JRST	@MRET			;RETURN
 11269
 11270	040622	43 01 0 00 000002 	OBYTEF:	POINT	1,AC1+1,0		;BYTE POINTERS FOR GETTING SIGN
 11271	040623	43 01 0 00 000003 		POINT	1,AC1+2,0		;  FROM AC1+1,+2,+3 (ACTUAL RESULT)
 11272	040624	43 01 0 00 000004 		POINT	1,AC1+3,0
 11273	040625	43 01 0 00 040637 	OBYTET:	POINT	1,ORES+1,0		;BYTE POINTERS FOR PUTTING SIGN
 11274	040626	43 01 0 00 040640 		POINT	1,ORES+2,0		;  INTO ORES+1,+2,+3 (EXPECTED RESULT)
 11275	040627	43 01 0 00 040641 		POINT	1,ORES+3,0
 11276
 11277	040630				ODEND:	BLOCK	4			;DIVIDEND
 11278	040634				OISOR:	BLOCK	2			;DIVISOR
 11279	040636				ORES:	BLOCK	4			;EXPECTED RESULT
 11280	040642				ORET:	BLOCK	1			;RETURN + 1 ADDRESS
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 37
DSKCFM	MAC	26-Sep-79 15:49		ADDL ERROR PRINT ROUTINES                                                          SEQ 0250

 11281					SUBTTL	ADDL ERROR PRINT ROUTINES
 11282														SALL
 11283					; **********************************************************************
 11284					;*APRINT - ADDITION ERROR PRINTER
 11285					; **********************************************************************
 11286
 11287	040643	037 02 0 00 046101 	APRINT:	PMSG	(AUGEND:  )  
 11288
 11289	040644	554 13 0 00 000015 		HLRZ	SCR1,SCR3		;GET ADDR OF AUGEND
 11290	040645	200 00 1 00 000013 		MOVE	0,@SCR1			;GET AUGEND (LEFT WORD)
 11291	040646	037 14 0 00 000000 		PNTOCT
 11292
 11293	040647	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO RIGHT WORD
 11294	040650	200 00 1 00 000013 		MOVE	0,@SCR1			;GET AUGEND (RIGHT WORD)
 11295	040651	037 14 0 00 000000 		PNTOCT
 11296
 11297	040652	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11298	040653	037 02 0 00 046103 		PMSG	(ADDEND:  )  
 11299
 11300	040654	550 13 0 00 000015 		HRRZ	SCR1,SCR3		;GET ADDR OF ADDEND
 11301	040655	200 00 1 00 000013 		MOVE	0,@SCR1			;GET ADDEND (LEFT WORD)
 11302	040656	037 14 0 00 000000 		PNTOCT
 11303
 11304	040657	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO RIGHT WORD
 11305	040660	200 00 1 00 000013 		MOVE	0,@SCR1			;GET ADDEND (RIGHT WORD)
 11306	040661	037 14 0 00 000000 		PNTOCT
 11307
 11308	040662	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11309	040663	037 02 0 00 046105 		PMSG	(RESULT:  )
 11310
 11311	040664	200 00 0 00 000001 		MOVE	0,AC1			;GET LEFT WORD OF RESULT
 11312	040665	037 14 0 00 000000 		PNTOCT
 11313
 11314	040666	200 00 0 00 000002 		MOVE	0,AC1+1			;GET RIGHT WORD OF RESULT
 11315	040667	037 14 0 00 000000 		PNTOCT
 11316
 11317	040670	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11318	040671	263 17 0 00 000000 		RTN
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 38
DSKCFM	MAC	26-Sep-79 15:49		ADDL ERROR PRINT ROUTINES                                                          SEQ 0251

 11319
 11320					; **********************************************************************
 11321					;*SPRINT - SUBTRACTION ERROR PRINTER
 11322					; **********************************************************************
 11323
 11324	040672	037 02 0 00 046107 	SPRINT:	PMSG	(MINUEND:     )  
 11325
 11326	040673	554 13 0 00 000015 		HLRZ	SCR1,SCR3		;GET ADDR OF MINUEND
 11327	040674	200 00 1 00 000013 		MOVE	0,@SCR1			;GET MINUEND (LEFT WORD)
 11328	040675	037 14 0 00 000000 		PNTOCT
 11329
 11330	040676	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO RIGHT WORD
 11331	040677	200 00 1 00 000013 		MOVE	0,@SCR1			;GET MINUEND (RIGHT WORD)
 11332	040700	037 14 0 00 000000 		PNTOCT
 11333
 11334	040701	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11335	040702	037 02 0 00 046112 		PMSG	(SUBTRAHEND:  )  
 11336
 11337	040703	550 13 0 00 000015 		HRRZ	SCR1,SCR3		;GET ADDR OF SUBTRAHEND
 11338	040704	200 00 1 00 000013 		MOVE	0,@SCR1			;GET SUBTRAHEND (LEFT WORD)
 11339	040705	037 14 0 00 000000 		PNTOCT
 11340
 11341	040706	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO RIGHT WORD
 11342	040707	200 00 1 00 000013 		MOVE	0,@SCR1			;GET SUBTRAHEND (RIGHT WORD)
 11343	040710	037 14 0 00 000000 		PNTOCT
 11344
 11345	040711	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11346	040712	037 02 0 00 046115 		PMSG	(RESULT:      )
 11347
 11348	040713	200 00 0 00 000001 		MOVE	0,AC1			;GET LEFT WORD OF RESULT
 11349	040714	037 14 0 00 000000 		PNTOCT
 11350
 11351	040715	200 00 0 00 000002 		MOVE	0,AC1+1			;GET RIGHT WORD OF RESULT
 11352	040716	037 14 0 00 000000 		PNTOCT
 11353
 11354	040717	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11355	040720	263 17 0 00 000000 		RTN
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 39
DSKCFM	MAC	26-Sep-79 15:49		ADDL ERROR PRINT ROUTINES                                                          SEQ 0252

 11356
 11357					; **********************************************************************
 11358					;*MPRINT - MULTIPLICATION ERROR PRINTER
 11359					; **********************************************************************
 11360
 11361	040721	037 02 0 00 046120 	MPRINT:	PMSG	(MULTIPLICAND:  )  
 11362
 11363	040722	554 13 0 00 000015 		HLRZ	SCR1,SCR3		;GET ADDR OF MULTIPLICAND
 11364	040723	200 00 1 00 000013 		MOVE	0,@SCR1			;GET MULTIPLICAND (LEFT WORD)
 11365	040724	037 14 0 00 000000 		PNTOCT
 11366
 11367	040725	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO RIGHT WORD
 11368	040726	200 00 1 00 000013 		MOVE	0,@SCR1			;GET MULTIPLICAND (RIGHT WORD)
 11369	040727	037 14 0 00 000000 		PNTOCT
 11370
 11371	040730	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11372	040731	037 02 0 00 046123 		PMSG	(MULTIPLIER:    )  
 11373
 11374	040732	550 13 0 00 000015 		HRRZ	SCR1,SCR3		;GET ADDRESS OF MULTIPLIER
 11375	040733	200 00 1 00 000013 		MOVE	0,@SCR1			;GET LEFT WORD OF MULTIPLIER
 11376	040734	037 14 0 00 000000 		PNTOCT
 11377
 11378	040735	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO RIGHT WORD
 11379	040736	200 00 1 00 000013 		MOVE	0,@SCR1			;GET RIGHT WORD OF MULTIPLIER
 11380	040737	037 14 0 00 000000 		PNTOCT
 11381
 11382	040740	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11383	040741	037 02 0 00 046126 		PMSG	(RESULT:        )
 11384
 11385	040742	200 00 0 00 000001 		MOVE	0,AC1			;GET RESULT WORD 1
 11386	040743	037 14 0 00 000000 		PNTOCT
 11387
 11388	040744	200 00 0 00 000002 		MOVE	0,AC1+1			;GET RESULT WORD 2
 11389	040745	037 14 0 00 000000 		PNTOCT
 11390
 11391	040746	200 00 0 00 000003 		MOVE	0,AC1+2			;GET RESULT WORD 3
 11392	040747	037 14 0 00 000000 		PNTOCT
 11393
 11394	040750	200 00 0 00 000004 		MOVE	0,AC1+3			;GET RESULT WORD 4
 11395	040751	037 14 0 00 000000 		PNTOCT
 11396
 11397	040752	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11398	040753	263 17 0 00 000000 		RTN
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 40
DSKCFM	MAC	26-Sep-79 15:49		ADDL ERROR PRINT ROUTINES                                                          SEQ 0253

 11399
 11400					; **********************************************************************
 11401					;*DPRINT - DIVIDE ERROR PRINTER
 11402					; **********************************************************************
 11403
 11404	040754	037 02 0 00 046131 	DPRINT:	PMSG	(DIVIDEND:  )  
 11405
 11406	040755	554 13 0 00 000015 		HLRZ	SCR1,SCR3		;GET ADDR OF DIVIDEND
 11407	040756	200 00 1 00 000013 		MOVE	0,@SCR1			;GET DIVIDEND (WORD 1)
 11408	040757	037 14 0 00 000000 		PNTOCT
 11409
 11410	040760	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO 2ND WORD
 11411	040761	200 00 1 00 000013 		MOVE	0,@SCR1			;GET DIVIDEND (WORD 2)
 11412	040762	037 14 0 00 000000 		PNTOCT
 11413
 11414	040763	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO 3RD WORD
 11415	040764	200 00 1 00 000013 		MOVE	0,@SCR1			;GET DIVIDEND (WORD 3)
 11416	040765	037 14 0 00 000000 		PNTOCT
 11417
 11418	040766	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO 4TH WORD
 11419	040767	200 00 1 00 000013 		MOVE	0,@SCR1			;GET DIVIDEND (WORD 4)
 11420	040770	037 14 0 00 000000 		PNTOCT
 11421
 11422	040771	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11423	040772	037 02 0 00 046133 		PMSG	(DIVISOR:   )  
 11424
 11425	040773	550 13 0 00 000015 		HRRZ	SCR1,SCR3		;GET ADDRESS OF DIVISOR
 11426	040774	200 00 1 00 000013 		MOVE	0,@SCR1			;GET LEFT WORD OF DIVISOR
 11427	040775	037 14 0 00 000000 		PNTOCT
 11428
 11429	040776	340 13 0 00 000000 		AOJ	SCR1,			;POINT TO RIGHT WORD
 11430	040777	200 00 1 00 000013 		MOVE	0,@SCR1			;GET RIGHT WORD OF DIVISOR
 11431	041000	037 14 0 00 000000 		PNTOCT
 11432
 11433	041001	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11434	041002	037 02 0 00 046135 		PMSG	(QUOTIENT:  )
 11435
 11436	041003	200 00 0 00 000001 		MOVE	0,AC1			;GET LEFT WORD OF QUOTIENT
 11437	041004	037 14 0 00 000000 		PNTOCT
 11438
 11439	041005	200 00 0 00 000002 		MOVE	0,AC1+1			;GET RIGHT WORD OF QUOTIENT
 11440	041006	037 14 0 00 000000 		PNTOCT
 11441
 11442	041007	037 02 0 00 046137 		PMSG	(  REMAINDER:  )
 11443
 11444	041010	200 00 0 00 000003 		MOVE	0,AC1+2			;GET LEFT WORD OF REMAINDER
 11445	041011	037 14 0 00 000000 		PNTOCT
 11446
 11447	041012	200 00 0 00 000004 		MOVE	0,AC1+3			;GET RIGHT WORD OF REMAINDER
 11448	041013	037 14 0 00 000000 		PNTOCT
 11449
 11450	041014	037 00 0 00 030242 		PCRL				;PRINT OUT A CRLF
 11451	041015	263 17 0 00 000000 		RTN
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 41
DSKCFM	MAC	26-Sep-79 15:49		ADDL ERROR PRINT ROUTINES                                                          SEQ 0254

 11452
 11453					SUBTTL	*STOR* RESERVED STORAGE, SEPTEMBER 1979
 11454
 11455					;PROGRAM LITERALS
 11456
 11457						XLIST
 11458					IFNDEF	$LPAPER,<LIST>
 11459	041016					LIT
 11460	041016	44 41 44 44 00 64 
 11461	041017	45 63 64 77 00 00 
 11462	041020	000000	000000
 11463	041021	123456	765432
 11464	041022	000000	000000
 11465	041023	000000	000000
 11466	041024	041020	041022
 11467	041025	77 00 00 00 00 00 
 11468	041026	64 45 63 64 00 41 
 11469	041027	21 00 15 00 62 45 
 11470	041030	63 65 54 64 00 51 
 11471	041031	63 00 51 56 43 57 
 11472	041032	62 62 45 43 64 77 
 11473	041033	041016	041025
 11474	041034	000013	000014
 11475	041035	041026	040643
 11476	041036	041021	041022
 11477	041037	64 45 63 64 00 41 
 11478	041040	22 00 15 00 62 45 
 11479	041041	63 65 54 64 00 51 
 11480	041042	63 00 51 56 43 57 
 11481	041043	62 62 45 43 64 77 
 11482	041044	041016	041025
 11483	041045	000013	000014
 11484	041046	041037	040643
 11485	041047	123456	765432
 11486	041050	123456	765432
 11487	041051	041047	041022
 11488	041052	64 45 63 64 00 41 
 11489	041053	23 00 15 00 62 45 
 11490	041054	63 65 54 64 00 51 
 11491	041055	63 00 51 56 43 57 
 11492	041056	62 62 45 43 64 77 
 11493	041057	041016	041025
 11494	041060	000013	000014
 11495	041061	041052	040643
 11496	041062	041022	041020
 11497	041063	64 45 63 64 00 41 
 11498	041064	24 00 15 00 62 45 
 11499	041065	63 65 54 64 00 51 
 11500	041066	63 00 51 56 43 57 
 11501	041067	62 62 45 43 64 77 
 11502	041070	041016	041025
 11503	041071	000013	000014
 11504	041072	041063	040643
 11505	041073	041022	041021
 11506	041074	64 45 63 64 00 41 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0255

 11507	041075	25 00 15 00 62 45 
 11508	041076	63 65 54 64 00 51 
 11509	041077	63 00 51 56 43 57 
 11510	041100	62 62 45 43 64 77 
 11511	041101	041016	041025
 11512	041102	000013	000014
 11513	041103	041074	040643
 11514	041104	041022	041047
 11515	041105	64 45 63 64 00 41 
 11516	041106	26 00 15 00 62 45 
 11517	041107	63 65 54 64 00 51 
 11518	041110	63 00 51 56 43 57 
 11519	041111	62 62 45 43 64 77 
 11520	041112	041016	041025
 11521	041113	000013	000014
 11522	041114	041105	040643
 11523	041115	041022	041022
 11524	041116	64 45 63 64 00 41 
 11525	041117	27 00 15 00 62 45 
 11526	041120	63 65 54 64 00 51 
 11527	041121	63 00 51 56 43 57 
 11528	041122	62 62 45 43 64 77 
 11529	041123	041016	041025
 11530	041124	000013	000014
 11531	041125	041116	040643
 11532	041126	000000	000000
 11533	041127	000000	000001
 11534	041130	041126	041022
 11535	041131	64 45 63 64 00 42 
 11536	041132	21 00 15 00 62 45 
 11537	041133	63 65 54 64 00 51 
 11538	041134	63 00 51 56 43 57 
 11539	041135	62 62 45 43 64 77 
 11540	041136	041016	041025
 11541	041137	000013	000014
 11542	041140	041131	040643
 11543	041141	041022	041126
 11544	041142	64 45 63 64 00 42 
 11545	041143	22 00 15 00 62 45 
 11546	041144	63 65 54 64 00 51 
 11547	041145	63 00 51 56 43 57 
 11548	041146	62 62 45 43 64 77 
 11549	041147	041016	041025
 11550	041150	000013	000014
 11551	041151	041142	040643
 11552	041152	000000	000000
 11553	041153	200000	000000
 11554	041154	041152	041022
 11555	041155	041022	041152
 11556	041156	000000	000001
 11557	041157	000000	000000
 11558	041160	041156	041022
 11559	041161	041022	041156
 11560	041162	200000	000000
 11561	041163	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-1
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0256

 11562	041164	041162	041022
 11563	041165	041022	041162
 11564	041166	777777	777777
 11565	041167	777777	777776
 11566	041170	041166	041022
 11567	041171	041022	041166
 11568	041172	777777	777777
 11569	041173	577777	777777
 11570	041174	041172	041022
 11571	041175	041022	041172
 11572	041176	777777	777776
 11573	041177	777777	777777
 11574	041200	041176	041022
 11575	041201	041022	041176
 11576	041202	577777	777777
 11577	041203	777777	777777
 11578	041204	041202	041022
 11579	041205	041022	041202
 11580	041206	031327	031327
 11581	041207	64 45 63 64 00 43 
 11582	041210	00 15 00 62 45 63 
 11583	041211	65 54 64 00 51 56 
 11584	041212	43 57 62 62 45 43 
 11585	041213	64 77 00 00 00 00 
 11586	041214	041016	041025
 11587	041215	000014	000013
 11588	041216	041207	040643
 11589	041217	000000	000000
 11590	041220	777777	777777
 11591	041221	041217	041126
 11592	041222	64 45 63 64 00 44 
 11593	041223	21 00 15 00 62 45 
 11594	041224	63 65 54 64 00 51 
 11595	041225	63 00 51 56 43 57 
 11596	041226	62 62 45 43 64 77 
 11597	041227	041016	041025
 11598	041230	000013	000014
 11599	041231	041222	040643
 11600	041232	041126	041217
 11601	041233	64 45 63 64 00 44 
 11602	041234	22 00 15 00 62 45 
 11603	041235	63 65 54 64 00 51 
 11604	041236	63 00 51 56 43 57 
 11605	041237	62 62 45 43 64 77 
 11606	041240	041016	041025
 11607	041241	000013	000014
 11608	041242	041233	040643
 11609	041243	64 45 63 64 00 45 
 11610	041244	00 15 00 62 45 63 
 11611	041245	65 54 64 00 51 63 
 11612	041246	00 51 56 43 57 62 
 11613	041247	62 45 43 64 77 00 
 11614	041250	041016	041025
 11615	041251	000013	000014
 11616	041252	041243	040643
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-2
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0257

 11617	041253	64 45 63 64 00 45 
 11618	041254	00 15 00 60 43 00 
 11619	041255	46 54 41 47 63 00 
 11620	041256	51 56 43 57 62 62 
 11621	041257	45 43 64 00 10 54 
 11622	041260	45 46 64 00 24 00 
 11623	041261	42 51 64 63 11 77 
 11624	041262	041016	041025
 11625	041263	000014	031375
 11626	041264	041253	040643
 11627	041265	041016	041025
 11628	041266	000014	031424
 11629	041267	041253	040643
 11630	041270	041016	041025
 11631	041271	000014	031453
 11632	041272	041253	040643
 11633	041273	041016	041025
 11634	041274	000014	031502
 11635	041275	041253	040643
 11636	041276	041016	041025
 11637	041277	000014	031531
 11638	041300	041253	040643
 11639	041301	041016	041025
 11640	041302	000014	031560
 11641	041303	041253	040643
 11642	041304	033057	033061
 11643	041305	64 45 63 64 00 46 
 11644	041306	21 00 15 00 62 45 
 11645	041307	63 65 54 64 00 51 
 11646	041310	63 00 51 56 43 57 
 11647	041311	62 62 45 43 64 77 
 11648	041312	041016	041025
 11649	041313	000013	000014
 11650	041314	041305	040643
 11651	041315	64 45 63 64 00 46 
 11652	041316	21 00 15 00 60 43 
 11653	041317	00 46 54 41 47 63 
 11654	041320	00 51 56 43 57 62 
 11655	041321	62 45 43 64 00 10 
 11656	041322	54 45 46 64 00 24 
 11657	041323	00 42 51 64 63 11 
 11658	041324	77 00 00 00 00 00 
 11659	041325	041016	041025
 11660	041326	000014	031637
 11661	041327	041315	040643
 11662	041330	033063	033065
 11663	041331	041016	041025
 11664	041332	000014	031665
 11665	041333	041315	040643
 11666	041334	033067	033071
 11667	041335	041016	041025
 11668	041336	000014	031713
 11669	041337	041315	040643
 11670	041340	033073	033075
 11671	041341	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-3
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0258

 11672	041342	777777	777777
 11673	041343	041016	041025
 11674	041344	000014	031741
 11675	041345	041315	040643
 11676	041346	033077	033101
 11677	041347	041016	041025
 11678	041350	000014	031767
 11679	041351	041315	040643
 11680	041352	033103	033105
 11681	041353	041016	041025
 11682	041354	000014	032015
 11683	041355	041315	040643
 11684	041356	033107	033111
 11685	041357	777777	777776
 11686	041360	777777	777776
 11687	041361	64 45 63 64 00 46 
 11688	041362	22 00 15 00 62 45 
 11689	041363	63 65 54 64 00 51 
 11690	041364	63 00 51 56 43 57 
 11691	041365	62 62 45 43 64 77 
 11692	041366	041016	041025
 11693	041367	000013	000014
 11694	041370	041361	040643
 11695	041371	300000	000000
 11696	041372	64 45 63 64 00 46 
 11697	041373	22 00 15 00 60 43 
 11698	041374	00 46 54 41 47 63 
 11699	041375	00 51 56 43 57 62 
 11700	041376	62 45 43 64 00 10 
 11701	041377	54 45 46 64 00 24 
 11702	041400	00 42 51 64 63 11 
 11703	041401	77 00 00 00 00 00 
 11704	041402	041016	041025
 11705	041403	000014	032043
 11706	041404	041372	040643
 11707	041405	033113	033115
 11708	041406	041016	041025
 11709	041407	000014	032071
 11710	041410	041372	040643
 11711	041411	033117	033121
 11712	041412	041016	041025
 11713	041413	000014	032117
 11714	041414	041372	040643
 11715	041415	033123	033125
 11716	041416	041016	041025
 11717	041417	000014	032145
 11718	041420	041372	040643
 11719	041421	033127	033131
 11720	041422	041016	041025
 11721	041423	000014	032173
 11722	041424	041372	040643
 11723	041425	033133	033135
 11724	041426	041016	041025
 11725	041427	000014	032221
 11726	041430	041372	040643
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-4
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0259

 11727	041431	033137	033141
 11728	041432	000000	000001
 11729	041433	000000	000001
 11730	041434	64 45 63 64 00 46 
 11731	041435	23 00 15 00 62 45 
 11732	041436	63 65 54 64 00 51 
 11733	041437	63 00 51 56 43 57 
 11734	041440	62 62 45 43 64 77 
 11735	041441	041016	041025
 11736	041442	000013	000014
 11737	041443	041434	040643
 11738	041444	64 45 63 64 00 46 
 11739	041445	23 00 15 00 60 43 
 11740	041446	00 46 54 41 47 63 
 11741	041447	00 51 56 43 57 62 
 11742	041450	62 45 43 64 00 10 
 11743	041451	54 45 46 64 00 24 
 11744	041452	00 42 51 64 63 11 
 11745	041453	77 00 00 00 00 00 
 11746	041454	041016	041025
 11747	041455	000014	032247
 11748	041456	041444	040643
 11749	041457	033143	033145
 11750	041460	041016	041025
 11751	041461	000014	032275
 11752	041462	041444	040643
 11753	041463	033147	033151
 11754	041464	041016	041025
 11755	041465	000014	032323
 11756	041466	041444	040643
 11757	041467	033153	033155
 11758	041470	041016	041025
 11759	041471	000014	032351
 11760	041472	041444	040643
 11761	041473	033157	033161
 11762	041474	041016	041025
 11763	041475	000014	032377
 11764	041476	041444	040643
 11765	041477	033163	033165
 11766	041500	041016	041025
 11767	041501	000014	032425
 11768	041502	041444	040643
 11769	041503	033167	033171
 11770	041504	64 45 63 64 00 46 
 11771	041505	24 00 15 00 62 45 
 11772	041506	63 65 54 64 00 51 
 11773	041507	63 00 51 56 43 57 
 11774	041510	62 62 45 43 64 77 
 11775	041511	041016	041025
 11776	041512	000013	000014
 11777	041513	041504	040643
 11778	041514	64 45 63 64 00 46 
 11779	041515	24 00 15 00 60 43 
 11780	041516	00 46 54 41 47 63 
 11781	041517	00 51 56 43 57 62 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-5
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0260

 11782	041520	62 45 43 64 00 10 
 11783	041521	54 45 46 64 00 24 
 11784	041522	00 42 51 64 63 11 
 11785	041523	77 00 00 00 00 00 
 11786	041524	041016	041025
 11787	041525	000014	032453
 11788	041526	041514	040643
 11789	041527	033173	033175
 11790	041530	041016	041025
 11791	041531	000014	032501
 11792	041532	041514	040643
 11793	041533	033177	033201
 11794	041534	041016	041025
 11795	041535	000014	032527
 11796	041536	041514	040643
 11797	041537	033203	033205
 11798	041540	041016	041025
 11799	041541	000014	032555
 11800	041542	041514	040643
 11801	041543	033207	033211
 11802	041544	041016	041025
 11803	041545	000014	032603
 11804	041546	041514	040643
 11805	041547	033213	033215
 11806	041550	041016	041025
 11807	041551	000014	032631
 11808	041552	041514	040643
 11809	041553	033217	033221
 11810	041554	64 45 63 64 00 46 
 11811	041555	25 00 15 00 62 45 
 11812	041556	63 65 54 64 00 51 
 11813	041557	63 00 51 56 43 57 
 11814	041560	62 62 45 43 64 77 
 11815	041561	041016	041025
 11816	041562	000013	000014
 11817	041563	041554	040643
 11818	041564	64 45 63 64 00 46 
 11819	041565	25 00 15 00 60 43 
 11820	041566	00 46 54 41 47 63 
 11821	041567	00 51 56 43 57 62 
 11822	041570	62 45 43 64 00 10 
 11823	041571	54 45 46 64 00 24 
 11824	041572	00 42 51 64 63 11 
 11825	041573	77 00 00 00 00 00 
 11826	041574	041016	041025
 11827	041575	000014	032657
 11828	041576	041564	040643
 11829	041577	033223	033225
 11830	041600	041016	041025
 11831	041601	000014	032705
 11832	041602	041564	040643
 11833	041603	033227	033231
 11834	041604	041016	041025
 11835	041605	000014	032733
 11836	041606	041564	040643
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-6
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0261

 11837	041607	033233	033235
 11838	041610	041016	041025
 11839	041611	000014	032761
 11840	041612	041564	040643
 11841	041613	033237	033241
 11842	041614	041016	041025
 11843	041615	000014	033007
 11844	041616	041564	040643
 11845	041617	033243	033245
 11846	041620	041016	041025
 11847	041621	000014	033035
 11848	041622	041564	040643
 11849	041623	033530	033532
 11850	041624	64 45 63 64 00 47 
 11851	041625	00 15 00 62 45 63 
 11852	041626	65 54 64 00 51 63 
 11853	041627	00 51 56 43 57 62 
 11854	041630	62 45 43 64 77 00 
 11855	041631	041016	041025
 11856	041632	000013	000014
 11857	041633	041624	040643
 11858	041634	500000	000000
 11859	041635	64 45 63 64 00 47 
 11860	041636	00 15 00 60 43 00 
 11861	041637	46 54 41 47 63 00 
 11862	041640	51 56 43 57 62 62 
 11863	041641	45 43 64 00 10 54 
 11864	041642	45 46 64 00 24 00 
 11865	041643	42 51 64 63 11 77 
 11866	041644	041016	041025
 11867	041645	000014	033254
 11868	041646	041635	040643
 11869	041647	033536	033540
 11870	041650	041016	041025
 11871	041651	000014	033302
 11872	041652	041635	040643
 11873	041653	033544	033546
 11874	041654	041016	041025
 11875	041655	000014	033330
 11876	041656	041635	040643
 11877	041657	033552	033554
 11878	041660	041016	041025
 11879	041661	000014	033356
 11880	041662	041635	040643
 11881	041663	033560	033562
 11882	041664	600000	000000
 11883	041665	041016	041025
 11884	041666	000014	033404
 11885	041667	041635	040643
 11886	041670	033566	033570
 11887	041671	041016	041025
 11888	041672	000014	033432
 11889	041673	041635	040643
 11890	041674	033574	033576
 11891	041675	041016	041025
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-7
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0262

 11892	041676	000014	033460
 11893	041677	041635	040643
 11894	041700	033602	033604
 11895	041701	041016	041025
 11896	041702	000014	033506
 11897	041703	041635	040643
 11898	041704	44 63 65 42 00 64 
 11899	041705	45 63 64 77 00 00 
 11900	041706	041704	041025
 11901	041707	000013	000014
 11902	041710	041026	040672
 11903	041711	041704	041025
 11904	041712	000013	000014
 11905	041713	041037	040672
 11906	041714	041704	041025
 11907	041715	000013	000014
 11908	041716	041052	040672
 11909	041717	654321	012346
 11910	041720	777777	777777
 11911	041721	654321	012346
 11912	041722	041704	041025
 11913	041723	000013	000014
 11914	041724	041063	040672
 11915	041725	400000	000000
 11916	041726	654321	012346
 11917	041727	400000	000000
 11918	041730	041704	041025
 11919	041731	000013	000014
 11920	041732	041074	040672
 11921	041733	654321	012345
 11922	041734	654321	012346
 11923	041735	041704	041025
 11924	041736	000013	000014
 11925	041737	041105	040672
 11926	041740	777766	034012
 11927	041741	64 45 63 64 00 42 
 11928	041742	00 15 00 62 45 63 
 11929	041743	65 54 64 00 51 56 
 11930	041744	43 57 62 62 45 43 
 11931	041745	64 77 00 00 00 00 
 11932	041746	041704	041025
 11933	041747	000012	000013
 11934	041750	041741	040672
 11935	041751	64 45 63 64 00 42 
 11936	041752	00 15 00 60 43 00 
 11937	041753	46 54 41 47 63 00 
 11938	041754	51 56 43 57 62 62 
 11939	041755	45 43 64 00 10 54 
 11940	041756	45 46 64 00 24 00 
 11941	041757	42 51 64 63 11 77 
 11942	041760	041704	041025
 11943	041761	000014	033752
 11944	041762	041751	040672
 11945	041763	034647	034651
 11946	041764	64 45 63 64 00 43 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-8
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0263

 11947	041765	21 00 15 00 62 45 
 11948	041766	63 65 54 64 00 51 
 11949	041767	63 00 51 56 43 57 
 11950	041770	62 62 45 43 64 77 
 11951	041771	041704	041025
 11952	041772	000013	000014
 11953	041773	041764	040672
 11954	041774	034655	034657
 11955	041775	034663	034665
 11956	041776	034671	034673
 11957	041777	034677	034701
 11958	042000	034705	034707
 11959	042001	034713	034715
 11960	042002	64 45 63 64 00 43 
 11961	042003	22 00 15 00 62 45 
 11962	042004	63 65 54 64 00 51 
 11963	042005	63 00 51 56 43 57 
 11964	042006	62 62 45 43 64 77 
 11965	042007	041704	041025
 11966	042010	000013	000014
 11967	042011	042002	040672
 11968	042012	034721	034723
 11969	042013	034727	034731
 11970	042014	034735	034737
 11971	042015	034743	034745
 11972	042016	034751	034753
 11973	042017	034757	034761
 11974	042020	64 45 63 64 00 43 
 11975	042021	23 00 15 00 62 45 
 11976	042022	63 65 54 64 00 51 
 11977	042023	63 00 51 56 43 57 
 11978	042024	62 62 45 43 64 77 
 11979	042025	041704	041025
 11980	042026	000013	000014
 11981	042027	042020	040672
 11982	042030	034765	034767
 11983	042031	034773	034775
 11984	042032	035001	035003
 11985	042033	035007	035011
 11986	042034	035015	035017
 11987	042035	035023	035025
 11988	042036	777777	777775
 11989	042037	777777	777777
 11990	042040	777777	777775
 11991	042041	64 45 63 64 00 43 
 11992	042042	24 00 15 00 62 45 
 11993	042043	63 65 54 64 00 51 
 11994	042044	63 00 51 56 43 57 
 11995	042045	62 62 45 43 64 77 
 11996	042046	041704	041025
 11997	042047	000013	000014
 11998	042050	042041	040672
 11999	042051	035027	035031
 12000	042052	035033	035035
 12001	042053	035037	035041
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-9
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0264

 12002	042054	035043	035045
 12003	042055	035047	035051
 12004	042056	035053	035055
 12005	042057	000000	000003
 12006	042060	000000	000000
 12007	042061	000000	000003
 12008	042062	64 45 63 64 00 43 
 12009	042063	25 00 15 00 62 45 
 12010	042064	63 65 54 64 00 51 
 12011	042065	63 00 51 56 43 57 
 12012	042066	62 62 45 43 64 77 
 12013	042067	041704	041025
 12014	042070	000013	000014
 12015	042071	042062	040672
 12016	042072	035057	035061
 12017	042073	035063	035065
 12018	042074	035067	035071
 12019	042075	035073	035075
 12020	042076	035077	035101
 12021	042077	035374	035376
 12022	042100	400000	000000
 12023	042101	400000	000000
 12024	042102	64 45 63 64 00 44 
 12025	042103	00 15 00 62 45 63 
 12026	042104	65 54 64 00 51 63 
 12027	042105	00 51 56 43 57 62 
 12028	042106	62 45 43 64 77 00 
 12029	042107	041704	041025
 12030	042110	000013	000014
 12031	042111	042102	040672
 12032	042112	64 45 63 64 00 44 
 12033	042113	00 15 00 60 43 00 
 12034	042114	46 54 41 47 63 00 
 12035	042115	51 56 43 57 62 62 
 12036	042116	45 43 64 00 10 54 
 12037	042117	45 46 64 00 24 00 
 12038	042120	42 51 64 63 11 77 
 12039	042121	041704	041025
 12040	042122	000014	035110
 12041	042123	042112	040672
 12042	042124	035400	035402
 12043	042125	041704	041025
 12044	042126	000014	035137
 12045	042127	042112	040672
 12046	042130	035404	035406
 12047	042131	041704	041025
 12048	042132	000014	035166
 12049	042133	042112	040672
 12050	042134	035410	035412
 12051	042135	041704	041025
 12052	042136	000014	035215
 12053	042137	042112	040672
 12054	042140	035414	035416
 12055	042141	377777	777777
 12056	042142	377777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-10
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0265

 12057	042143	041704	041025
 12058	042144	000014	035244
 12059	042145	042112	040672
 12060	042146	035420	035422
 12061	042147	041704	041025
 12062	042150	000014	035273
 12063	042151	042112	040672
 12064	042152	035424	035426
 12065	042153	041704	041025
 12066	042154	000014	035322
 12067	042155	042112	040672
 12068	042156	035430	035432
 12069	042157	041704	041025
 12070	042160	000014	035351
 12071	042161	042112	040672
 12072	042162	44 55 65 54 00 64 
 12073	042163	45 63 64 77 00 00 
 12074	042164	000000	000000
 12075	042165	123456	765432
 12076	042166	000000	000000
 12077	042167	000000	000000
 12078	042170	000000	000000
 12079	042171	000000	000000
 12080	042172	000000	000000
 12081	042173	000000	000000
 12082	042174	042164	040502
 12083	042175	64 45 63 64 00 41 
 12084	042176	00 15 00 62 45 63 
 12085	042177	65 54 64 00 43 41 
 12086	042200	54 43 65 54 41 64 
 12087	042201	45 44 00 51 56 43 
 12088	042202	57 62 62 45 43 64 
 12089	042203	54 71 77 00 00 00 
 12090	042204	042162	041025
 12091	042205	000013	000014
 12092	042206	042175	040721
 12093	042207	123456	765432
 12094	042210	000000	000000
 12095	042211	000000	000000
 12096	042212	000000	000000
 12097	042213	000000	000000
 12098	042214	000000	000000
 12099	042215	000000	000000
 12100	042216	000000	000000
 12101	042217	042207	040502
 12102	042220	123456	765432
 12103	042221	123456	765432
 12104	042222	000000	000000
 12105	042223	000000	000000
 12106	042224	000000	000000
 12107	042225	000000	000000
 12108	042226	000000	000000
 12109	042227	000000	000000
 12110	042230	042220	040502
 12111	042231	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-11
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0266

 12112	042232	000000	000000
 12113	042233	000000	000000
 12114	042234	123456	765432
 12115	042235	000000	000000
 12116	042236	000000	000000
 12117	042237	000000	000000
 12118	042240	000000	000000
 12119	042241	042231	040502
 12120	042242	000000	000000
 12121	042243	000000	000000
 12122	042244	123456	765432
 12123	042245	000000	000000
 12124	042246	000000	000000
 12125	042247	000000	000000
 12126	042250	000000	000000
 12127	042251	000000	000000
 12128	042252	042242	040502
 12129	042253	000000	000000
 12130	042254	000000	000000
 12131	042255	123456	765432
 12132	042256	123456	765432
 12133	042257	000000	000000
 12134	042260	000000	000000
 12135	042261	000000	000000
 12136	042262	000000	000000
 12137	042263	042253	040502
 12138	042264	777777	777777
 12139	042265	654321	012346
 12140	042266	000000	000000
 12141	042267	000000	000000
 12142	042270	000000	000000
 12143	042271	000000	000000
 12144	042272	000000	000000
 12145	042273	000000	000000
 12146	042274	042264	040502
 12147	042275	654321	012346
 12148	042276	777777	777777
 12149	042277	000000	000000
 12150	042300	000000	000000
 12151	042301	000000	000000
 12152	042302	000000	000000
 12153	042303	000000	000000
 12154	042304	000000	000000
 12155	042305	042275	040502
 12156	042306	654321	012346
 12157	042307	654321	012346
 12158	042310	000000	000000
 12159	042311	000000	000000
 12160	042312	000000	000000
 12161	042313	000000	000000
 12162	042314	000000	000000
 12163	042315	000000	000000
 12164	042316	042306	040502
 12165	042317	000000	000000
 12166	042320	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-12
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0267

 12167	042321	777777	777777
 12168	042322	654321	012346
 12169	042323	000000	000000
 12170	042324	000000	000000
 12171	042325	000000	000000
 12172	042326	000000	000000
 12173	042327	042317	040502
 12174	042330	000000	000000
 12175	042331	000000	000000
 12176	042332	654321	012346
 12177	042333	777777	777777
 12178	042334	000000	000000
 12179	042335	000000	000000
 12180	042336	000000	000000
 12181	042337	000000	000000
 12182	042340	042330	040502
 12183	042341	000000	000000
 12184	042342	000000	000000
 12185	042343	654321	012346
 12186	042344	654321	012346
 12187	042345	000000	000000
 12188	042346	000000	000000
 12189	042347	000000	000000
 12190	042350	000000	000000
 12191	042351	042341	040502
 12192	042352	000000	000000
 12193	042353	000000	000000
 12194	042354	000000	000000
 12195	042355	000000	000000
 12196	042356	000000	000000
 12197	042357	000000	000000
 12198	042360	000000	000000
 12199	042361	000000	000000
 12200	042362	042352	040502
 12201	042363	64 45 63 64 00 00 
 12202	042364	15 00 62 45 63 65 
 12203	042365	54 64 00 43 41 54 
 12204	042366	43 65 54 41 64 45 
 12205	042367	44 00 51 56 43 57 
 12206	042370	62 62 45 43 64 54 
 12207	042371	71 77 00 00 00 00 
 12208	042372	042162	041025
 12209	042373	000013	000014
 12210	042374	042363	040721
 12211	042375	000000	000000
 12212	042376	123456	765432
 12213	042377	000000	000000
 12214	042400	000000	000001
 12215	042401	000000	000000
 12216	042402	000000	000000
 12217	042403	000000	000000
 12218	042404	123456	765432
 12219	042405	042375	040502
 12220	042406	64 45 63 64 00 42 
 12221	042407	00 15 00 62 45 63 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-13
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0268

 12222	042410	65 54 64 00 43 41 
 12223	042411	54 43 65 54 41 64 
 12224	042412	45 44 00 51 56 43 
 12225	042413	57 62 62 45 43 64 
 12226	042414	54 71 77 00 00 00 
 12227	042415	042162	041025
 12228	042416	000013	000014
 12229	042417	042406	040721
 12230	042420	123456	765432
 12231	042421	000000	000000
 12232	042422	000000	000000
 12233	042423	000000	000001
 12234	042424	000000	000000
 12235	042425	000000	000000
 12236	042426	123456	765432
 12237	042427	000000	000000
 12238	042430	042420	040502
 12239	042431	123456	765432
 12240	042432	123456	765432
 12241	042433	000000	000000
 12242	042434	000000	000001
 12243	042435	000000	000000
 12244	042436	000000	000000
 12245	042437	123456	765432
 12246	042440	123456	765432
 12247	042441	042431	040502
 12248	042442	000000	000000
 12249	042443	000000	000001
 12250	042444	000000	000000
 12251	042445	123456	765432
 12252	042446	000000	000000
 12253	042447	000000	000000
 12254	042450	000000	000000
 12255	042451	123456	765432
 12256	042452	042442	040502
 12257	042453	000000	000000
 12258	042454	000000	000001
 12259	042455	123456	765432
 12260	042456	000000	000000
 12261	042457	000000	000000
 12262	042460	000000	000000
 12263	042461	123456	765432
 12264	042462	000000	000000
 12265	042463	042453	040502
 12266	042464	000000	000000
 12267	042465	000000	000001
 12268	042466	123456	765432
 12269	042467	123456	765432
 12270	042470	000000	000000
 12271	042471	000000	000000
 12272	042472	123456	765432
 12273	042473	123456	765432
 12274	042474	042464	040502
 12275	042475	777777	777777
 12276	042476	654321	012346
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-14
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0269

 12277	042477	000000	000000
 12278	042500	000000	000001
 12279	042501	777777	777777
 12280	042502	777777	777777
 12281	042503	777777	777777
 12282	042504	654321	012346
 12283	042505	042475	040502
 12284	042506	654321	012346
 12285	042507	777777	777777
 12286	042510	000000	000000
 12287	042511	000000	000001
 12288	042512	777777	777777
 12289	042513	777777	777777
 12290	042514	654321	012346
 12291	042515	777777	777777
 12292	042516	042506	040502
 12293	042517	654321	012346
 12294	042520	654321	012346
 12295	042521	000000	000000
 12296	042522	000000	000001
 12297	042523	777777	777777
 12298	042524	777777	777777
 12299	042525	654321	012346
 12300	042526	654321	012346
 12301	042527	042517	040502
 12302	042530	000000	000000
 12303	042531	000000	000001
 12304	042532	777777	777777
 12305	042533	654321	012346
 12306	042534	777777	777777
 12307	042535	777777	777777
 12308	042536	777777	777777
 12309	042537	654321	012346
 12310	042540	042530	040502
 12311	042541	000000	000000
 12312	042542	000000	000001
 12313	042543	654321	012346
 12314	042544	777777	777777
 12315	042545	777777	777777
 12316	042546	777777	777777
 12317	042547	654321	012346
 12318	042550	777777	777777
 12319	042551	042541	040502
 12320	042552	000000	000000
 12321	042553	000000	000001
 12322	042554	654321	012346
 12323	042555	654321	012346
 12324	042556	777777	777777
 12325	042557	777777	777777
 12326	042560	654321	012346
 12327	042561	654321	012346
 12328	042562	042552	040502
 12329	042563	000000	000000
 12330	042564	177777	777777
 12331	042565	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-15
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0270

 12332	042566	000000	000002
 12333	042567	000000	000000
 12334	042570	000000	000000
 12335	042571	000000	000000
 12336	042572	377777	777776
 12337	042573	042563	040502
 12338	042574	64 45 63 64 00 43 
 12339	042575	00 15 00 62 45 63 
 12340	042576	65 54 64 00 43 41 
 12341	042577	54 43 65 54 41 64 
 12342	042600	45 44 00 51 56 43 
 12343	042601	57 62 62 45 43 64 
 12344	042602	54 71 77 00 00 00 
 12345	042603	042162	041025
 12346	042604	000013	000014
 12347	042605	042574	040721
 12348	042606	64 45 63 64 00 43 
 12349	042607	00 15 00 60 43 00 
 12350	042610	46 54 41 47 63 00 
 12351	042611	51 56 43 57 62 62 
 12352	042612	45 43 64 00 15 00 
 12353	042613	42 51 64 63 00 20 
 12354	042614	00 64 57 00 24 77 
 12355	042615	042162	041025
 12356	042616	000014	040457
 12357	042617	042606	040721
 12358	042620	000000	000000
 12359	042621	377777	777777
 12360	042622	000000	000000
 12361	042623	000000	000002
 12362	042624	000000	000000
 12363	042625	000000	000000
 12364	042626	000000	000001
 12365	042627	377777	777776
 12366	042630	042620	040502
 12367	042631	177777	777777
 12368	042632	377777	777777
 12369	042633	000000	000000
 12370	042634	000000	000002
 12371	042635	000000	000000
 12372	042636	000000	000000
 12373	042637	377777	777777
 12374	042640	377777	777776
 12375	042641	042631	040502
 12376	042642	377777	777777
 12377	042643	377777	777777
 12378	042644	000000	000000
 12379	042645	000000	000002
 12380	042646	000000	000000
 12381	042647	000000	000001
 12382	042650	377777	777777
 12383	042651	377777	777776
 12384	042652	042642	040502
 12385	042653	000000	000000
 12386	042654	377777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-16
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0271

 12387	042655	000000	000001
 12388	042656	000000	000000
 12389	042657	000000	000000
 12390	042660	000000	000000
 12391	042661	377777	777777
 12392	042662	000000	000000
 12393	042663	042653	040502
 12394	042664	000000	000001
 12395	042665	377777	777777
 12396	042666	000000	000001
 12397	042667	000000	000000
 12398	042670	000000	000000
 12399	042671	000000	000001
 12400	042672	377777	777777
 12401	042673	000000	000000
 12402	042674	042664	040502
 12403	042675	377777	777777
 12404	042676	377777	777777
 12405	042677	000000	000001
 12406	042700	000000	000000
 12407	042701	000000	000000
 12408	042702	377777	777777
 12409	042703	377777	777777
 12410	042704	000000	000000
 12411	042705	042675	040502
 12412	042706	000000	000000
 12413	042707	177777	777777
 12414	042710	000000	000002
 12415	042711	000000	000000
 12416	042712	000000	000000
 12417	042713	000000	000000
 12418	042714	377777	777776
 12419	042715	000000	000000
 12420	042716	042706	040502
 12421	042717	000000	000000
 12422	042720	377777	777777
 12423	042721	000000	000002
 12424	042722	000000	000000
 12425	042723	000000	000000
 12426	042724	000000	000001
 12427	042725	377777	777776
 12428	042726	000000	000000
 12429	042727	042717	040502
 12430	042730	377777	777777
 12431	042731	377777	777777
 12432	042732	000000	000002
 12433	042733	000000	000000
 12434	042734	000000	000001
 12435	042735	377777	777777
 12436	042736	377777	777776
 12437	042737	000000	000000
 12438	042740	042730	040502
 12439	042741	000000	000000
 12440	042742	000000	000002
 12441	042743	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-17
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0272

 12442	042744	177777	777777
 12443	042745	000000	000000
 12444	042746	000000	000000
 12445	042747	000000	000000
 12446	042750	377777	777776
 12447	042751	042741	040502
 12448	042752	000000	000000
 12449	042753	000000	000002
 12450	042754	000000	000000
 12451	042755	377777	777777
 12452	042756	000000	000000
 12453	042757	000000	000000
 12454	042760	000000	000001
 12455	042761	377777	777776
 12456	042762	042752	040502
 12457	042763	000000	000000
 12458	042764	000000	000002
 12459	042765	177777	777777
 12460	042766	377777	777777
 12461	042767	000000	000000
 12462	042770	000000	000000
 12463	042771	377777	777777
 12464	042772	377777	777776
 12465	042773	042763	040502
 12466	042774	000000	000000
 12467	042775	000000	000002
 12468	042776	377777	777777
 12469	042777	377777	777777
 12470	043000	000000	000000
 12471	043001	000000	000001
 12472	043002	377777	777777
 12473	043003	377777	777776
 12474	043004	042774	040502
 12475	043005	000000	000001
 12476	043006	000000	000000
 12477	043007	000000	000000
 12478	043010	377777	777777
 12479	043011	000000	000000
 12480	043012	000000	000000
 12481	043013	377777	777777
 12482	043014	000000	000000
 12483	043015	043005	040502
 12484	043016	000000	000001
 12485	043017	000000	000000
 12486	043020	000000	000001
 12487	043021	377777	777777
 12488	043022	000000	000000
 12489	043023	000000	000001
 12490	043024	377777	777777
 12491	043025	000000	000000
 12492	043026	043016	040502
 12493	043027	000000	000001
 12494	043030	000000	000000
 12495	043031	377777	777777
 12496	043032	377777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-18
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0273

 12497	043033	000000	000000
 12498	043034	377777	777777
 12499	043035	377777	777777
 12500	043036	000000	000000
 12501	043037	043027	040502
 12502	043040	000000	000002
 12503	043041	000000	000000
 12504	043042	000000	000000
 12505	043043	177777	777777
 12506	043044	000000	000000
 12507	043045	000000	000000
 12508	043046	377777	777776
 12509	043047	000000	000000
 12510	043050	043040	040502
 12511	043051	000000	000002
 12512	043052	000000	000000
 12513	043053	000000	000000
 12514	043054	377777	777777
 12515	043055	000000	000000
 12516	043056	000000	000001
 12517	043057	377777	777776
 12518	043060	000000	000000
 12519	043061	043051	040502
 12520	043062	000000	000002
 12521	043063	000000	000000
 12522	043064	377777	777777
 12523	043065	377777	777777
 12524	043066	000000	000001
 12525	043067	377777	777777
 12526	043070	377777	777776
 12527	043071	000000	000000
 12528	043072	043062	040502
 12529	043073	777777	777777
 12530	043074	600000	000000
 12531	043075	000000	000000
 12532	043076	000000	000002
 12533	043077	777777	777777
 12534	043100	777777	777777
 12535	043101	777777	777777
 12536	043102	400000	000000
 12537	043103	043073	040502
 12538	043104	64 45 63 64 00 44 
 12539	043105	00 15 00 62 45 63 
 12540	043106	65 54 64 00 43 41 
 12541	043107	54 43 65 54 41 64 
 12542	043110	45 44 00 51 56 43 
 12543	043111	57 62 62 45 43 64 
 12544	043112	54 71 77 00 00 00 
 12545	043113	042162	041025
 12546	043114	000013	000014
 12547	043115	043104	040721
 12548	043116	64 45 63 64 00 44 
 12549	043117	00 15 00 60 43 00 
 12550	043120	46 54 41 47 63 00 
 12551	043121	51 56 43 57 62 62 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-19
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0274

 12552	043122	45 43 64 00 15 00 
 12553	043123	42 51 64 63 00 20 
 12554	043124	00 64 57 00 24 77 
 12555	043125	042162	041025
 12556	043126	000014	040457
 12557	043127	043116	040721
 12558	043130	777777	777777
 12559	043131	400000	000000
 12560	043132	000000	000000
 12561	043133	000000	000002
 12562	043134	777777	777777
 12563	043135	777777	777777
 12564	043136	777777	777776
 12565	043137	400000	000000
 12566	043140	043130	040502
 12567	043141	600000	000000
 12568	043142	400000	000000
 12569	043143	000000	000000
 12570	043144	000000	000002
 12571	043145	777777	777777
 12572	043146	777777	777777
 12573	043147	400000	000000
 12574	043150	400000	000000
 12575	043151	043141	040502
 12576	043152	400000	000000
 12577	043153	400000	000000
 12578	043154	000000	000000
 12579	043155	000000	000002
 12580	043156	777777	777777
 12581	043157	777777	777776
 12582	043160	400000	000000
 12583	043161	400000	000000
 12584	043162	043152	040502
 12585	043163	777777	777777
 12586	043164	400000	000000
 12587	043165	000000	000001
 12588	043166	000000	000000
 12589	043167	777777	777777
 12590	043170	777777	777777
 12591	043171	400000	000000
 12592	043172	400000	000000
 12593	043173	043163	040502
 12594	043174	777777	777776
 12595	043175	400000	000000
 12596	043176	000000	000001
 12597	043177	000000	000000
 12598	043200	777777	777777
 12599	043201	777777	777776
 12600	043202	400000	000000
 12601	043203	400000	000000
 12602	043204	043174	040502
 12603	043205	400000	000000
 12604	043206	400000	000000
 12605	043207	000000	000001
 12606	043210	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-20
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0275

 12607	043211	777777	777777
 12608	043212	400000	000000
 12609	043213	400000	000000
 12610	043214	400000	000000
 12611	043215	043205	040502
 12612	043216	777777	777777
 12613	043217	600000	000000
 12614	043220	000000	000002
 12615	043221	000000	000000
 12616	043222	777777	777777
 12617	043223	777777	777777
 12618	043224	400000	000000
 12619	043225	400000	000000
 12620	043226	043216	040502
 12621	043227	777777	777777
 12622	043230	400000	000000
 12623	043231	000000	000002
 12624	043232	000000	000000
 12625	043233	777777	777777
 12626	043234	777777	777776
 12627	043235	400000	000000
 12628	043236	400000	000000
 12629	043237	043227	040502
 12630	043240	400000	000000
 12631	043241	400000	000000
 12632	043242	000000	000002
 12633	043243	000000	000000
 12634	043244	777777	777776
 12635	043245	400000	000000
 12636	043246	400000	000000
 12637	043247	400000	000000
 12638	043250	043240	040502
 12639	043251	000000	000000
 12640	043252	000000	000002
 12641	043253	777777	777777
 12642	043254	600000	000000
 12643	043255	777777	777777
 12644	043256	777777	777777
 12645	043257	777777	777777
 12646	043260	400000	000000
 12647	043261	043251	040502
 12648	043262	000000	000000
 12649	043263	000000	000002
 12650	043264	777777	777777
 12651	043265	400000	000000
 12652	043266	777777	777777
 12653	043267	777777	777777
 12654	043270	777777	777776
 12655	043271	400000	000000
 12656	043272	043262	040502
 12657	043273	000000	000000
 12658	043274	000000	000002
 12659	043275	600000	000000
 12660	043276	400000	000000
 12661	043277	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-21
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0276

 12662	043300	777777	777777
 12663	043301	400000	000000
 12664	043302	400000	000000
 12665	043303	043273	040502
 12666	043304	000000	000000
 12667	043305	000000	000002
 12668	043306	400000	000000
 12669	043307	400000	000000
 12670	043310	777777	777777
 12671	043311	777777	777776
 12672	043312	400000	000000
 12673	043313	400000	000000
 12674	043314	043304	040502
 12675	043315	000000	000001
 12676	043316	000000	000000
 12677	043317	777777	777777
 12678	043320	400000	000000
 12679	043321	777777	777777
 12680	043322	777777	777777
 12681	043323	400000	000000
 12682	043324	400000	000000
 12683	043325	043315	040502
 12684	043326	000000	000001
 12685	043327	000000	000000
 12686	043330	777777	777776
 12687	043331	400000	000000
 12688	043332	777777	777777
 12689	043333	777777	777776
 12690	043334	400000	000000
 12691	043335	400000	000000
 12692	043336	043326	040502
 12693	043337	000000	000001
 12694	043340	000000	000000
 12695	043341	400000	000000
 12696	043342	400000	000000
 12697	043343	777777	777777
 12698	043344	400000	000000
 12699	043345	400000	000000
 12700	043346	400000	000000
 12701	043347	043337	040502
 12702	043350	000000	000002
 12703	043351	000000	000000
 12704	043352	777777	777777
 12705	043353	600000	000000
 12706	043354	777777	777777
 12707	043355	777777	777777
 12708	043356	400000	000000
 12709	043357	400000	000000
 12710	043360	043350	040502
 12711	043361	000000	000002
 12712	043362	000000	000000
 12713	043363	777777	777777
 12714	043364	400000	000000
 12715	043365	777777	777777
 12716	043366	777777	777776
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-22
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0277

 12717	043367	400000	000000
 12718	043370	400000	000000
 12719	043371	043361	040502
 12720	043372	000000	000002
 12721	043373	000000	000000
 12722	043374	400000	000000
 12723	043375	400000	000000
 12724	043376	777777	777776
 12725	043377	400000	000000
 12726	043400	400000	000000
 12727	043401	400000	000000
 12728	043402	043372	040502
 12729	043403	525252	525252
 12730	043404	252525	252525
 12731	043405	64 45 63 64 00 45 
 12732	043406	00 15 00 62 45 63 
 12733	043407	65 54 64 00 51 56 
 12734	043410	43 57 62 62 45 43 
 12735	043411	64 77 00 00 00 00 
 12736	043412	042162	041025
 12737	043413	041725	000013
 12738	043414	043405	040721
 12739	043415	64 45 63 64 00 45 
 12740	043416	00 15 00 60 43 00 
 12741	043417	46 54 41 47 63 00 
 12742	043420	51 56 43 57 62 62 
 12743	043421	45 43 64 00 15 00 
 12744	043422	54 45 46 64 00 24 
 12745	043423	00 42 51 64 63 77 
 12746	043424	042162	041025
 12747	043425	000001	036407
 12748	043426	043415	040721
 12749	043427	777777	777777
 12750	043430	777777	777776
 12751	043431	777777	777777
 12752	043432	777777	777775
 12753	043433	000000	000000
 12754	043434	000000	000000
 12755	043435	000000	000000
 12756	043436	000000	000006
 12757	043437	043427	040502
 12758	043440	64 45 63 64 00 46 
 12759	043441	00 15 00 62 45 63 
 12760	043442	65 54 64 00 43 41 
 12761	043443	54 43 65 54 41 64 
 12762	043444	45 44 00 51 56 43 
 12763	043445	57 62 62 45 43 64 
 12764	043446	54 71 77 00 00 00 
 12765	043447	042162	041025
 12766	043450	000013	000014
 12767	043451	043440	040721
 12768	043452	64 45 63 64 00 46 
 12769	043453	00 15 00 60 43 00 
 12770	043454	46 54 41 47 63 00 
 12771	043455	51 56 43 57 62 62 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-23
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0278

 12772	043456	45 43 64 00 15 00 
 12773	043457	42 51 64 63 00 20 
 12774	043460	00 64 57 00 24 77 
 12775	043461	042162	041025
 12776	043462	000014	040457
 12777	043463	043452	040721
 12778	043464	777777	777776
 12779	043465	400000	000000
 12780	043466	777777	777777
 12781	043467	777777	777775
 12782	043470	000000	000000
 12783	043471	000000	000000
 12784	043472	000000	000006
 12785	043473	000000	000000
 12786	043474	043464	040502
 12787	043475	777777	777777
 12788	043476	777777	777776
 12789	043477	777777	777775
 12790	043500	400000	000000
 12791	043501	000000	000000
 12792	043502	000000	000000
 12793	043503	000000	000006
 12794	043504	000000	000000
 12795	043505	043475	040502
 12796	043506	777777	777776
 12797	043507	400000	000000
 12798	043510	777777	777775
 12799	043511	400000	000000
 12800	043512	000000	000000
 12801	043513	000000	000006
 12802	043514	000000	000000
 12803	043515	000000	000000
 12804	043516	043506	040502
 12805	043517	000000	000000
 12806	043520	000000	000002
 12807	043521	000000	000000
 12808	043522	400000	000003
 12809	043523	000000	000000
 12810	043524	000000	000000
 12811	043525	000000	000000
 12812	043526	000000	000006
 12813	043527	043517	040502
 12814	043530	64 45 63 64 00 47 
 12815	043531	00 15 00 62 45 63 
 12816	043532	65 54 64 00 43 41 
 12817	043533	54 43 65 54 41 64 
 12818	043534	45 44 00 51 56 43 
 12819	043535	57 62 62 45 43 64 
 12820	043536	54 71 77 00 00 00 
 12821	043537	042162	041025
 12822	043540	000013	000014
 12823	043541	043530	040721
 12824	043542	64 45 63 64 00 47 
 12825	043543	00 15 00 60 43 00 
 12826	043544	46 54 41 47 63 00 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-24
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0279

 12827	043545	51 56 43 57 62 62 
 12828	043546	45 43 64 00 15 00 
 12829	043547	42 51 64 63 00 20 
 12830	043550	00 64 57 00 24 77 
 12831	043551	042162	041025
 12832	043552	000014	040457
 12833	043553	043542	040721
 12834	043554	000000	000000
 12835	043555	400000	000002
 12836	043556	000000	000000
 12837	043557	400000	000003
 12838	043560	000000	000000
 12839	043561	000000	000000
 12840	043562	000000	000000
 12841	043563	000000	000006
 12842	043564	043554	040502
 12843	043565	000000	000000
 12844	043566	400000	000002
 12845	043567	000000	000000
 12846	043570	000000	000003
 12847	043571	000000	000000
 12848	043572	000000	000000
 12849	043573	000000	000000
 12850	043574	000000	000006
 12851	043575	043565	040502
 12852	043576	000000	000000
 12853	043577	000000	000002
 12854	043600	777777	777777
 12855	043601	377777	777775
 12856	043602	777777	777777
 12857	043603	777777	777777
 12858	043604	777777	777777
 12859	043605	777777	777772
 12860	043606	043576	040502
 12861	043607	000000	000000
 12862	043610	400000	000002
 12863	043611	777777	777777
 12864	043612	377777	777775
 12865	043613	777777	777777
 12866	043614	777777	777777
 12867	043615	777777	777777
 12868	043616	777777	777772
 12869	043617	043607	040502
 12870	043620	000000	000000
 12871	043621	400000	000002
 12872	043622	777777	777777
 12873	043623	777777	777775
 12874	043624	777777	777777
 12875	043625	777777	777777
 12876	043626	777777	777777
 12877	043627	777777	777772
 12878	043630	043620	040502
 12879	043631	777777	777777
 12880	043632	777777	777776
 12881	043633	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-25
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0280

 12882	043634	400000	000003
 12883	043635	777777	777777
 12884	043636	777777	777777
 12885	043637	777777	777777
 12886	043640	777777	777772
 12887	043641	043631	040502
 12888	043642	777777	777777
 12889	043643	377777	777776
 12890	043644	000000	000000
 12891	043645	400000	000003
 12892	043646	777777	777777
 12893	043647	777777	777777
 12894	043650	777777	777777
 12895	043651	777777	777772
 12896	043652	043642	040502
 12897	043653	777777	777777
 12898	043654	377777	777776
 12899	043655	000000	000000
 12900	043656	000000	000003
 12901	043657	777777	777777
 12902	043660	777777	777777
 12903	043661	777777	777777
 12904	043662	777777	777772
 12905	043663	043653	040502
 12906	043664	777777	777777
 12907	043665	777777	777776
 12908	043666	777777	777777
 12909	043667	377777	777775
 12910	043670	000000	000000
 12911	043671	000000	000000
 12912	043672	000000	000000
 12913	043673	000000	000006
 12914	043674	043664	040502
 12915	043675	777777	777777
 12916	043676	377777	777776
 12917	043677	777777	777777
 12918	043700	377777	777775
 12919	043701	000000	000000
 12920	043702	000000	000000
 12921	043703	000000	000000
 12922	043704	000000	000006
 12923	043705	043675	040502
 12924	043706	777777	777777
 12925	043707	377777	777776
 12926	043710	777777	777777
 12927	043711	777777	777775
 12928	043712	000000	000000
 12929	043713	000000	000000
 12930	043714	000000	000000
 12931	043715	000000	000006
 12932	043716	043706	040502
 12933	043717	000000	000002
 12934	043720	000000	000000
 12935	043721	000000	000003
 12936	043722	400000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-26
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0281

 12937	043723	000000	000000
 12938	043724	000000	000006
 12939	043725	000000	000000
 12940	043726	000000	000000
 12941	043727	043717	040502
 12942	043730	000000	000002
 12943	043731	400000	000000
 12944	043732	000000	000003
 12945	043733	400000	000000
 12946	043734	000000	000000
 12947	043735	000000	000006
 12948	043736	000000	000000
 12949	043737	000000	000000
 12950	043740	043730	040502
 12951	043741	000000	000002
 12952	043742	400000	000000
 12953	043743	000000	000003
 12954	043744	000000	000000
 12955	043745	000000	000000
 12956	043746	000000	000006
 12957	043747	000000	000000
 12958	043750	000000	000000
 12959	043751	043741	040502
 12960	043752	000000	000002
 12961	043753	000000	000000
 12962	043754	777777	777775
 12963	043755	000000	000000
 12964	043756	777777	777777
 12965	043757	777777	777772
 12966	043760	400000	000000
 12967	043761	400000	000000
 12968	043762	043752	040502
 12969	043763	000000	000002
 12970	043764	400000	000000
 12971	043765	777777	777775
 12972	043766	000000	000000
 12973	043767	777777	777777
 12974	043770	777777	777772
 12975	043771	400000	000000
 12976	043772	400000	000000
 12977	043773	043763	040502
 12978	043774	000000	000002
 12979	043775	400000	000000
 12980	043776	777777	777775
 12981	043777	400000	000000
 12982	044000	777777	777777
 12983	044001	777777	777772
 12984	044002	400000	000000
 12985	044003	400000	000000
 12986	044004	043774	040502
 12987	044005	777777	777776
 12988	044006	400000	000000
 12989	044007	000000	000003
 12990	044010	400000	000000
 12991	044011	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-27
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0282

 12992	044012	777777	777772
 12993	044013	400000	000000
 12994	044014	400000	000000
 12995	044015	044005	040502
 12996	044016	777777	777776
 12997	044017	000000	000000
 12998	044020	000000	000003
 12999	044021	400000	000000
 13000	044022	777777	777777
 13001	044023	777777	777772
 13002	044024	400000	000000
 13003	044025	400000	000000
 13004	044026	044016	040502
 13005	044027	777777	777776
 13006	044030	000000	000000
 13007	044031	000000	000003
 13008	044032	000000	000000
 13009	044033	777777	777777
 13010	044034	777777	777772
 13011	044035	400000	000000
 13012	044036	400000	000000
 13013	044037	044027	040502
 13014	044040	777777	777776
 13015	044041	400000	000000
 13016	044042	777777	777775
 13017	044043	000000	000000
 13018	044044	000000	000000
 13019	044045	000000	000006
 13020	044046	000000	000000
 13021	044047	000000	000000
 13022	044050	044040	040502
 13023	044051	777777	777776
 13024	044052	000000	000000
 13025	044053	777777	777775
 13026	044054	000000	000000
 13027	044055	000000	000000
 13028	044056	000000	000006
 13029	044057	000000	000000
 13030	044060	000000	000000
 13031	044061	044051	040502
 13032	044062	777777	777776
 13033	044063	000000	000000
 13034	044064	777777	777775
 13035	044065	400000	000000
 13036	044066	000000	000000
 13037	044067	000000	000006
 13038	044070	000000	000000
 13039	044071	000000	000000
 13040	044072	044062	040502
 13041	044073	44 44 51 66 00 64 
 13042	044074	45 63 64 77 00 00 
 13043	044075	000000	000000
 13044	044076	000000	000000
 13045	044077	000000	000000
 13046	044100	123456	765432
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-28
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0283

 13047	044101	000000	000000
 13048	044102	000000	000001
 13049	044103	000000	000000
 13050	044104	123456	765432
 13051	044105	000000	000000
 13052	044106	000000	000000
 13053	044107	044075	040544
 13054	044110	64 45 63 64 00 41 
 13055	044111	00 15 00 61 65 57 
 13056	044112	64 51 45 56 64 17 
 13057	044113	62 45 55 41 51 56 
 13058	044114	44 45 62 00 51 56 
 13059	044115	43 57 62 62 45 43 
 13060	044116	64 77 00 00 00 00 
 13061	044117	044073	041025
 13062	044120	000013	000014
 13063	044121	044110	040754
 13064	044122	000000	000000
 13065	044123	000000	000000
 13066	044124	123456	765432
 13067	044125	000000	000000
 13068	044126	000000	000000
 13069	044127	000000	000001
 13070	044130	123456	765432
 13071	044131	000000	000000
 13072	044132	000000	000000
 13073	044133	000000	000000
 13074	044134	044122	040544
 13075	044135	000000	000000
 13076	044136	000000	000000
 13077	044137	000000	000000
 13078	044140	123456	765432
 13079	044141	000000	000000
 13080	044142	123456	765432
 13081	044143	000000	000000
 13082	044144	000000	000001
 13083	044145	000000	000000
 13084	044146	000000	000000
 13085	044147	044135	040544
 13086	044150	64 45 63 64 00 42 
 13087	044151	00 15 00 61 65 57 
 13088	044152	64 51 45 56 64 17 
 13089	044153	62 45 55 41 51 56 
 13090	044154	44 45 62 00 51 56 
 13091	044155	43 57 62 62 45 43 
 13092	044156	64 77 00 00 00 00 
 13093	044157	044073	041025
 13094	044160	000013	000014
 13095	044161	044150	040754
 13096	044162	000000	000000
 13097	044163	000000	000000
 13098	044164	123456	765432
 13099	044165	000000	000000
 13100	044166	123456	765432
 13101	044167	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-29
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0284

 13102	044170	000000	000000
 13103	044171	000000	000001
 13104	044172	000000	000000
 13105	044173	000000	000000
 13106	044174	044162	040544
 13107	044175	000000	000000
 13108	044176	000000	000000
 13109	044177	000000	000000
 13110	044200	000000	000001
 13111	044201	000000	000000
 13112	044202	000000	000002
 13113	044203	000000	000000
 13114	044204	000000	000000
 13115	044205	000000	000000
 13116	044206	000000	000001
 13117	044207	044175	040544
 13118	044210	64 45 63 64 00 43 
 13119	044211	00 15 00 61 65 57 
 13120	044212	64 51 45 56 64 17 
 13121	044213	62 45 55 41 51 56 
 13122	044214	44 45 62 00 51 56 
 13123	044215	43 57 62 62 45 43 
 13124	044216	64 77 00 00 00 00 
 13125	044217	044073	041025
 13126	044220	000013	000014
 13127	044221	044210	040754
 13128	044222	000000	000000
 13129	044223	000000	000000
 13130	044224	000000	000001
 13131	044225	000000	000000
 13132	044226	000000	000000
 13133	044227	000000	000002
 13134	044230	000000	000000
 13135	044231	200000	000000
 13136	044232	000000	000000
 13137	044233	000000	000000
 13138	044234	044222	040544
 13139	044235	000000	000000
 13140	044236	000000	000000
 13141	044237	000000	000001
 13142	044240	000000	000000
 13143	044241	000000	000002
 13144	044242	000000	000000
 13145	044243	000000	000000
 13146	044244	000000	000000
 13147	044245	000000	000001
 13148	044246	000000	000000
 13149	044247	044235	040544
 13150	044250	000000	000000
 13151	044251	000000	000001
 13152	044252	000000	000000
 13153	044253	000000	000000
 13154	044254	000000	000000
 13155	044255	000000	000002
 13156	044256	200000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-30
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0285

 13157	044257	000000	000000
 13158	044260	000000	000000
 13159	044261	000000	000000
 13160	044262	044250	040544
 13161	044263	000000	000000
 13162	044264	000000	000001
 13163	044265	000000	000000
 13164	044266	000000	000000
 13165	044267	000000	000002
 13166	044270	000000	000000
 13167	044271	000000	000000
 13168	044272	200000	000000
 13169	044273	000000	000000
 13170	044274	000000	000000
 13171	044275	044263	040544
 13172	044276	000000	000001
 13173	044277	000000	000000
 13174	044300	000000	000000
 13175	044301	000000	000000
 13176	044302	000000	000002
 13177	044303	000000	000000
 13178	044304	200000	000000
 13179	044305	000000	000000
 13180	044306	000000	000000
 13181	044307	000000	000000
 13182	044310	044276	040544
 13183	044311	777777	777777
 13184	044312	777777	777777
 13185	044313	777777	777777
 13186	044314	777777	777777
 13187	044315	000000	000000
 13188	044316	000000	000002
 13189	044317	000000	000000
 13190	044320	000000	000000
 13191	044321	777777	777777
 13192	044322	777777	777777
 13193	044323	044311	040544
 13194	044324	777777	777777
 13195	044325	777777	777777
 13196	044326	777777	777777
 13197	044327	400000	000000
 13198	044330	000000	000000
 13199	044331	000000	000002
 13200	044332	777777	777777
 13201	044333	600000	000000
 13202	044334	000000	000000
 13203	044335	000000	000000
 13204	044336	044324	040544
 13205	044337	777777	777777
 13206	044340	777777	777777
 13207	044341	777777	777777
 13208	044342	400000	000000
 13209	044343	000000	000002
 13210	044344	000000	000000
 13211	044345	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-31
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0286

 13212	044346	000000	000000
 13213	044347	777777	777777
 13214	044350	400000	000000
 13215	044351	044337	040544
 13216	044352	777777	777777
 13217	044353	777777	777777
 13218	044354	400000	000000
 13219	044355	400000	000000
 13220	044356	000000	000000
 13221	044357	000000	000002
 13222	044360	600000	000000
 13223	044361	400000	000000
 13224	044362	000000	000000
 13225	044363	000000	000000
 13226	044364	044352	040544
 13227	044365	777777	777777
 13228	044366	777777	777777
 13229	044367	400000	000000
 13230	044370	400000	000000
 13231	044371	000000	000002
 13232	044372	000000	000000
 13233	044373	777777	777777
 13234	044374	600000	000000
 13235	044375	000000	000000
 13236	044376	000000	000000
 13237	044377	044365	040544
 13238	044400	777777	777777
 13239	044401	400000	000000
 13240	044402	400000	000000
 13241	044403	400000	000000
 13242	044404	000000	000002
 13243	044405	000000	000000
 13244	044406	600000	000000
 13245	044407	400000	000000
 13246	044410	000000	000000
 13247	044411	000000	000000
 13248	044412	044400	040544
 13249	044413	000000	000000
 13250	044414	000000	000000
 13251	044415	000000	000000
 13252	044416	000000	000001
 13253	044417	777777	777777
 13254	044420	777777	777776
 13255	044421	000000	000000
 13256	044422	000000	000000
 13257	044423	000000	000000
 13258	044424	000000	000001
 13259	044425	044413	040544
 13260	044426	000000	000000
 13261	044427	000000	000000
 13262	044430	000000	000001
 13263	044431	000000	000000
 13264	044432	777777	777777
 13265	044433	777777	777776
 13266	044434	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-32
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0287

 13267	044435	600000	000000
 13268	044436	000000	000000
 13269	044437	000000	000000
 13270	044440	044426	040544
 13271	044441	000000	000000
 13272	044442	000000	000000
 13273	044443	000000	000001
 13274	044444	000000	000000
 13275	044445	777777	777776
 13276	044446	400000	000000
 13277	044447	000000	000000
 13278	044450	000000	000000
 13279	044451	000000	000001
 13280	044452	000000	000000
 13281	044453	044441	040544
 13282	044454	000000	000000
 13283	044455	000000	000001
 13284	044456	000000	000000
 13285	044457	000000	000000
 13286	044460	777777	777777
 13287	044461	777777	777776
 13288	044462	600000	000000
 13289	044463	400000	000000
 13290	044464	000000	000000
 13291	044465	000000	000000
 13292	044466	044454	040544
 13293	044467	000000	000000
 13294	044470	000000	000001
 13295	044471	000000	000000
 13296	044472	000000	000000
 13297	044473	777777	777776
 13298	044474	400000	000000
 13299	044475	777777	777777
 13300	044476	600000	000000
 13301	044477	000000	000000
 13302	044500	000000	000000
 13303	044501	044467	040544
 13304	044502	000000	000001
 13305	044503	000000	000000
 13306	044504	000000	000000
 13307	044505	000000	000000
 13308	044506	777777	777776
 13309	044507	400000	000000
 13310	044510	600000	000000
 13311	044511	400000	000000
 13312	044512	000000	000000
 13313	044513	000000	000000
 13314	044514	044502	040544
 13315	044515	777777	777777
 13316	044516	777777	777777
 13317	044517	777777	777777
 13318	044520	777777	777777
 13319	044521	777777	777777
 13320	044522	777777	777776
 13321	044523	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-33
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0288

 13322	044524	000000	000000
 13323	044525	777777	777777
 13324	044526	777777	777777
 13325	044527	044515	040544
 13326	044530	777777	777777
 13327	044531	777777	777777
 13328	044532	777777	777777
 13329	044533	400000	000000
 13330	044534	777777	777777
 13331	044535	777777	777776
 13332	044536	000000	000000
 13333	044537	200000	000000
 13334	044540	000000	000000
 13335	044541	000000	000000
 13336	044542	044530	040544
 13337	044543	777777	777777
 13338	044544	777777	777777
 13339	044545	777777	777777
 13340	044546	400000	000000
 13341	044547	777777	777776
 13342	044550	400000	000000
 13343	044551	000000	000000
 13344	044552	000000	000000
 13345	044553	777777	777777
 13346	044554	400000	000000
 13347	044555	044543	040544
 13348	044556	777777	777777
 13349	044557	777777	777777
 13350	044560	400000	000000
 13351	044561	400000	000000
 13352	044562	777777	777777
 13353	044563	777777	777776
 13354	044564	200000	000000
 13355	044565	000000	000000
 13356	044566	000000	000000
 13357	044567	000000	000000
 13358	044570	044556	040544
 13359	044571	777777	777777
 13360	044572	777777	777777
 13361	044573	400000	000000
 13362	044574	400000	000000
 13363	044575	777777	777776
 13364	044576	400000	000000
 13365	044577	000000	000000
 13366	044600	200000	000000
 13367	044601	000000	000000
 13368	044602	000000	000000
 13369	044603	044571	040544
 13370	044604	777777	777777
 13371	044605	400000	000000
 13372	044606	400000	000000
 13373	044607	400000	000000
 13374	044610	777777	777776
 13375	044611	400000	000000
 13376	044612	200000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-34
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0289

 13377	044613	000000	000000
 13378	044614	000000	000000
 13379	044615	000000	000000
 13380	044616	044604	040544
 13381	044617	333333	333333
 13382	044620	333333	333333
 13383	044621	333333	333333
 13384	044622	333333	333333
 13385	044623	344444	444444
 13386	044624	444444	444444
 13387	044625	365605	075342
 13388	044626	070414	545131
 13389	044627	055632	516360
 13390	044630	373564	760527
 13391	044631	044617	040544
 13392	044632	64 45 63 64 00 44 
 13393	044633	00 15 00 61 65 57 
 13394	044634	64 51 45 56 64 17 
 13395	044635	62 45 55 41 51 56 
 13396	044636	44 45 62 00 51 56 
 13397	044637	43 57 62 62 45 43 
 13398	044640	64 77 00 00 00 00 
 13399	044641	044073	041025
 13400	044642	000013	000014
 13401	044643	044632	040754
 13402	044644	64 45 63 64 00 44 
 13403	044645	00 15 00 60 43 00 
 13404	044646	46 54 41 47 63 00 
 13405	044647	51 56 43 57 62 62 
 13406	044650	45 43 64 00 15 00 
 13407	044651	42 51 64 63 00 20 
 13408	044652	00 06 00 21 22 77 
 13409	044653	044073	041025
 13410	044654	000014	040521
 13411	044655	044644	040754
 13412	044656	333333	333333
 13413	044657	444444	444444
 13414	044660	333333	333333
 13415	044661	444444	444444
 13416	044662	344444	444444
 13417	044663	333333	333333
 13418	044664	365605	075340
 13419	044665	247073	632327
 13420	044666	213672	200375
 13421	044667	376365	035467
 13422	044670	044656	040544
 13423	044671	222222	222222
 13424	044672	222222	222222
 13425	044673	222222	222222
 13426	044674	222222	222222
 13427	044675	333333	333333
 13428	044676	333333	333333
 13429	044677	252525	252525
 13430	044700	125252	525253
 13431	044701	111111	111111
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-35
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0290

 13432	044702	111111	111111
 13433	044703	044671	040544
 13434	044704	222222	222222
 13435	044705	333333	333333
 13436	044706	222222	222222
 13437	044707	333333	333333
 13438	044710	333333	333333
 13439	044711	444444	444444
 13440	044712	252525	252526
 13441	044713	070707	070710
 13442	044714	004040	404041
 13443	044715	327272	727273
 13444	044716	044704	040544
 13445	044717	255555	555555
 13446	044720	555555	555555
 13447	044721	555555	555555
 13448	044722	555555	555555
 13449	044723	311111	111111
 13450	044724	111111	111111
 13451	044725	335056	427213
 13452	044726	035475	265746
 13453	044727	144375	704605
 13454	044730	004166	365327
 13455	044731	044717	040544
 13456	044732	255555	555555
 13457	044733	222222	222222
 13458	044734	555555	555555
 13459	044735	222222	222222
 13460	044736	311111	111111
 13461	044737	666666	666666
 13462	044740	335056	427212
 13463	044741	323443	757047
 13464	044742	240023	257716
 13465	044743	107503	314730
 13466	044744	044732	040544
 13467	044745	123456	123456
 13468	044746	123456	123456
 13469	044747	123456	123456
 13470	044750	123456	123456
 13471	044751	234567	234567
 13472	044752	234567	234567
 13473	044753	210420	323476
 13474	044754	136703	233600
 13475	044755	055256	055256
 13476	044756	055256	055256
 13477	044757	044745	040544
 13478	044760	444444	444444
 13479	044761	444444	444444
 13480	044762	444444	444444
 13481	044763	444444	444444
 13482	044764	333333	333333
 13483	044765	333333	333334
 13484	044766	400000	000000
 13485	044767	400000	000001
 13486	044770	511111	111110
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-36
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0291

 13487	044771	511111	111110
 13488	044772	044760	040544
 13489	044773	555555	555555
 13490	044774	555555	555555
 13491	044775	555555	555555
 13492	044776	555555	555555
 13493	044777	444444	444444
 13494	045000	444444	444444
 13495	045001	252525	252525
 13496	045002	125252	525252
 13497	045003	606060	606060
 13498	045004	460606	060605
 13499	045005	044773	040544
 13500	045006	444444	444444
 13501	045007	555555	555555
 13502	045010	444444	444444
 13503	045011	555555	555555
 13504	045012	432123	456765
 13505	045013	432123	456765
 13506	045014	364320	315052
 13507	045015	247020	761620
 13508	045016	473571	652245
 13509	045017	600514	541235
 13510	045020	045006	040544
 13511	045021	555555	555555
 13512	045022	222222	222222
 13513	045023	555555	555555
 13514	045024	222222	222222
 13515	045025	543210	123456
 13516	045026	543210	123456
 13517	045027	356736	272460
 13518	045030	271326	656374
 13519	045031	763153	710465
 13520	045032	406655	405512
 13521	045033	045021	040544
 13522	045034	777777	777777
 13523	045035	377777	777777
 13524	045036	377777	777777
 13525	045037	377777	777774
 13526	045040	777777	777777
 13527	045041	377777	777776
 13528	045042	000000	000000
 13529	045043	000000	000002
 13530	045044	000000	000000
 13531	045045	000000	000000
 13532	045046	045034	040544
 13533	045047	64 45 63 64 00 45 
 13534	045050	00 15 00 61 65 57 
 13535	045051	64 51 45 56 64 17 
 13536	045052	62 45 55 41 51 56 
 13537	045053	44 45 62 00 51 56 
 13538	045054	43 57 62 62 45 43 
 13539	045055	64 77 00 00 00 00 
 13540	045056	044073	041025
 13541	045057	000013	000014
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-37
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0292

 13542	045060	045047	040754
 13543	045061	64 45 63 64 00 45 
 13544	045062	00 15 00 60 43 00 
 13545	045063	46 54 41 47 63 00 
 13546	045064	51 56 43 57 62 62 
 13547	045065	45 43 64 00 15 00 
 13548	045066	42 51 64 63 00 20 
 13549	045067	00 06 00 21 22 77 
 13550	045070	044073	041025
 13551	045071	000014	040521
 13552	045072	045061	040754
 13553	045073	777777	777777
 13554	045074	377777	777777
 13555	045075	377777	777777
 13556	045076	777777	777774
 13557	045077	777777	777777
 13558	045100	777777	777776
 13559	045101	000000	000000
 13560	045102	000000	000002
 13561	045103	000000	000000
 13562	045104	000000	000000
 13563	045105	045073	040544
 13564	045106	777777	777777
 13565	045107	377777	777777
 13566	045110	377777	777777
 13567	045111	377777	777774
 13568	045112	000000	000000
 13569	045113	400000	000002
 13570	045114	777777	777777
 13571	045115	777777	777776
 13572	045116	000000	000000
 13573	045117	000000	000000
 13574	045120	045106	040544
 13575	045121	777777	777777
 13576	045122	777777	777777
 13577	045123	777777	777777
 13578	045124	777777	777774
 13579	045125	000000	000000
 13580	045126	400000	000002
 13581	045127	777777	777777
 13582	045130	777777	777776
 13583	045131	000000	000000
 13584	045132	000000	000000
 13585	045133	045121	040544
 13586	045134	000000	000000
 13587	045135	400000	000000
 13588	045136	400000	000000
 13589	045137	400000	000004
 13590	045140	777777	777777
 13591	045141	377777	777776
 13592	045142	777777	777777
 13593	045143	777777	777776
 13594	045144	000000	000000
 13595	045145	000000	000000
 13596	045146	045134	040544
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-38
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0293

 13597	045147	000000	000000
 13598	045150	400000	000000
 13599	045151	400000	000000
 13600	045152	400000	000004
 13601	045153	777777	777777
 13602	045154	777777	777776
 13603	045155	777777	777777
 13604	045156	777777	777776
 13605	045157	000000	000000
 13606	045160	000000	000000
 13607	045161	045147	040544
 13608	045162	000000	000000
 13609	045163	000000	000000
 13610	045164	000000	000000
 13611	045165	400000	000004
 13612	045166	000000	000000
 13613	045167	000000	000002
 13614	045170	000000	000000
 13615	045171	000000	000002
 13616	045172	000000	000000
 13617	045173	000000	000000
 13618	045174	045162	040544
 13619	045175	000000	000000
 13620	045176	000000	000000
 13621	045177	000000	000000
 13622	045200	400000	000004
 13623	045201	000000	000000
 13624	045202	400000	000002
 13625	045203	000000	000000
 13626	045204	000000	000002
 13627	045205	000000	000000
 13628	045206	000000	000000
 13629	045207	045175	040544
 13630	045210	777777	777775
 13631	045211	400000	000000
 13632	045212	400000	000000
 13633	045213	400000	000000
 13634	045214	777777	777772
 13635	045215	400000	000000
 13636	045216	200000	000000
 13637	045217	000000	000000
 13638	045220	000000	000000
 13639	045221	000000	000000
 13640	045222	045210	040544
 13641	045223	777777	777775
 13642	045224	400000	000000
 13643	045225	400000	000000
 13644	045226	000000	000000
 13645	045227	777777	777772
 13646	045230	400000	000000
 13647	045231	200000	000000
 13648	045232	000000	000000
 13649	045233	000000	000000
 13650	045234	000000	000000
 13651	045235	045223	040544
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-39
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0294

 13652	045236	777777	777775
 13653	045237	400000	000000
 13654	045240	000000	000000
 13655	045241	000000	000000
 13656	045242	000000	000006
 13657	045243	000000	000000
 13658	045244	600000	000000
 13659	045245	400000	000000
 13660	045246	000000	000000
 13661	045247	000000	000000
 13662	045250	045236	040544
 13663	045251	777777	777775
 13664	045252	000000	000000
 13665	045253	000000	000000
 13666	045254	000000	000000
 13667	045255	000000	000006
 13668	045256	400000	000000
 13669	045257	600000	000000
 13670	045260	400000	000000
 13671	045261	000000	000000
 13672	045262	000000	000000
 13673	045263	045251	040544
 13674	045264	000000	000003
 13675	045265	400000	000000
 13676	045266	400000	000000
 13677	045267	000000	000000
 13678	045270	777777	777772
 13679	045271	400000	000000
 13680	045272	600000	000000
 13681	045273	400000	000000
 13682	045274	000000	000000
 13683	045275	000000	000000
 13684	045276	045264	040544
 13685	045277	000000	000003
 13686	045300	400000	000000
 13687	045301	000000	000000
 13688	045302	400000	000000
 13689	045303	777777	777772
 13690	045304	400000	000000
 13691	045305	600000	000000
 13692	045306	400000	000000
 13693	045307	000000	000000
 13694	045310	000000	000000
 13695	045311	045277	040544
 13696	045312	000000	000003
 13697	045313	000000	000000
 13698	045314	400000	000000
 13699	045315	400000	000000
 13700	045316	000000	000006
 13701	045317	400000	000000
 13702	045320	200000	000000
 13703	045321	000000	000000
 13704	045322	000000	000000
 13705	045323	000000	000000
 13706	045324	045312	040544
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-40
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0295

 13707	045325	000000	000003
 13708	045326	400000	000000
 13709	045327	400000	000000
 13710	045330	400000	000000
 13711	045331	000000	000006
 13712	045332	000000	000000
 13713	045333	200000	000000
 13714	045334	000000	000000
 13715	045335	000000	000000
 13716	045336	000000	000000
 13717	045337	045325	040544
 13718	045340	000000	000001
 13719	045341	000000	000000
 13720	045342	000000	000000
 13721	045343	000000	000000
 13722	045344	000000	000001
 13723	045345	000000	000001
 13724	045346	377777	777777
 13725	045347	000000	000000
 13726	045350	000000	000001
 13727	045351	000000	000000
 13728	045352	045340	040544
 13729	045353	64 45 63 64 00 46 
 13730	045354	00 15 00 61 65 57 
 13731	045355	64 51 45 56 64 17 
 13732	045356	62 45 55 41 51 56 
 13733	045357	44 45 62 00 51 56 
 13734	045360	43 57 62 62 45 43 
 13735	045361	64 77 00 00 00 00 
 13736	045362	044073	041025
 13737	045363	000013	000014
 13738	045364	045353	040754
 13739	045365	64 45 63 64 00 46 
 13740	045366	00 15 00 60 43 00 
 13741	045367	46 54 41 47 63 00 
 13742	045370	51 56 43 57 62 62 
 13743	045371	45 43 64 00 15 00 
 13744	045372	42 51 64 63 00 20 
 13745	045373	00 06 00 21 22 77 
 13746	045374	044073	041025
 13747	045375	000014	040521
 13748	045376	045365	040754
 13749	045377	000000	000001
 13750	045400	000000	000000
 13751	045401	000000	000000
 13752	045402	000000	000000
 13753	045403	777777	777776
 13754	045404	777777	777777
 13755	045405	400000	000001
 13756	045406	400000	000000
 13757	045407	000000	000001
 13758	045410	000000	000000
 13759	045411	045377	040544
 13760	045412	777777	777777
 13761	045413	400000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-41
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0296

 13762	045414	400000	000000
 13763	045415	400000	000000
 13764	045416	000000	000001
 13765	045417	000000	000001
 13766	045420	400000	000001
 13767	045421	400000	000000
 13768	045422	777777	777777
 13769	045423	400000	000000
 13770	045424	045412	040544
 13771	045425	777777	777777
 13772	045426	400000	000000
 13773	045427	400000	000000
 13774	045430	400000	000000
 13775	045431	777777	777776
 13776	045432	777777	777777
 13777	045433	377777	777777
 13778	045434	000000	000000
 13779	045435	777777	777777
 13780	045436	400000	000000
 13781	045437	045425	040544
 13782	045440	000000	000000
 13783	045441	377777	777777
 13784	045442	377777	777777
 13785	045443	377777	777777
 13786	045444	000000	000001
 13787	045445	000000	000000
 13788	045446	377777	777777
 13789	045447	377777	777777
 13790	045450	000000	000000
 13791	045451	377777	777777
 13792	045452	045440	040544
 13793	045453	000000	000000
 13794	045454	377777	777777
 13795	045455	377777	777777
 13796	045456	377777	777777
 13797	045457	777777	777777
 13798	045460	400000	000000
 13799	045461	400000	000000
 13800	045462	400000	000001
 13801	045463	000000	000000
 13802	045464	377777	777777
 13803	045465	045453	040544
 13804	045466	777777	777777
 13805	045467	400000	000000
 13806	045470	400000	000000
 13807	045471	400000	000001
 13808	045472	000000	000001
 13809	045473	000000	000000
 13810	045474	400000	000000
 13811	045475	400000	000001
 13812	045476	777777	777777
 13813	045477	400000	000001
 13814	045500	045466	040544
 13815	045501	777777	777777
 13816	045502	400000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-42
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0297

 13817	045503	400000	000000
 13818	045504	400000	000001
 13819	045505	777777	777777
 13820	045506	400000	000000
 13821	045507	377777	777777
 13822	045510	377777	777777
 13823	045511	777777	777777
 13824	045512	400000	000001
 13825	045513	045501	040544
 13826	045514	000000	000000
 13827	045515	000000	000000
 13828	045516	000000	000000
 13829	045517	000000	000001
 13830	045520	000000	000000
 13831	045521	000000	000000
 13832	045522	045514	040630
 13833	045523	64 45 63 64 00 47 
 13834	045524	00 15 00 44 51 66 
 13835	045525	51 44 45 56 44 00 
 13836	045526	43 50 41 56 47 45 
 13837	045527	44 00 57 56 00 57 
 13838	045530	66 17 56 57 44 51 
 13839	045531	66 77 00 00 00 00 
 13840	045532	044073	041025
 13841	045533	000013	000014
 13842	045534	045523	040754
 13843	045535	400040	000000
 13844	045536	64 45 63 64 00 47 
 13845	045537	00 15 00 60 43 00 
 13846	045540	46 54 41 47 63 00 
 13847	045541	51 56 43 57 62 62 
 13848	045542	45 43 64 00 15 00 
 13849	045543	42 51 64 63 00 20 
 13850	045544	06 21 22 77 00 00 
 13851	045545	044073	041025
 13852	045546	000014	040567
 13853	045547	045536	040754
 13854	045550	000000	000000
 13855	045551	000000	000000
 13856	045552	000000	000001
 13857	045553	000000	000000
 13858	045554	000000	000000
 13859	045555	000000	000000
 13860	045556	045550	040630
 13861	045557	000000	000000
 13862	045560	000000	000001
 13863	045561	000000	000000
 13864	045562	000000	000000
 13865	045563	000000	000000
 13866	045564	000000	000000
 13867	045565	045557	040630
 13868	045566	000000	000001
 13869	045567	000000	000000
 13870	045570	000000	000000
 13871	045571	000000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-43
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0298

 13872	045572	000000	000000
 13873	045573	000000	000000
 13874	045574	045566	040630
 13875	045575	777777	777777
 13876	045576	777777	777777
 13877	045577	777777	777777
 13878	045600	777777	777777
 13879	045601	000000	000000
 13880	045602	000000	000000
 13881	045603	045575	040630
 13882	045604	000000	000000
 13883	045605	000000	000001
 13884	045606	000000	000000
 13885	045607	000000	000000
 13886	045610	000000	000000
 13887	045611	000000	000001
 13888	045612	045604	040630
 13889	045613	000000	000000
 13890	045614	000000	000001
 13891	045615	000000	000000
 13892	045616	000000	000000
 13893	045617	777777	777777
 13894	045620	777777	777777
 13895	045621	045613	040630
 13896	045622	000000	000001
 13897	045623	000000	000000
 13898	045624	000000	000000
 13899	045625	000000	000000
 13900	045626	000000	000000
 13901	045627	000000	000001
 13902	045630	045622	040630
 13903	045631	000000	000001
 13904	045632	000000	000000
 13905	045633	000000	000000
 13906	045634	000000	000000
 13907	045635	777777	777777
 13908	045636	777777	777777
 13909	045637	045631	040630
 13910	045640	777777	777777
 13911	045641	777777	777777
 13912	045642	400000	000000
 13913	045643	400000	000000
 13914	045644	000000	000000
 13915	045645	000000	000001
 13916	045646	045640	040630
 13917	045647	777777	777777
 13918	045650	777777	777777
 13919	045651	400000	000000
 13920	045652	400000	000000
 13921	045653	777777	777777
 13922	045654	777777	777777
 13923	045655	045647	040630
 13924	045656	777777	777777
 13925	045657	400000	000000
 13926	045660	400000	000000
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-44
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0299

 13927	045661	400000	000000
 13928	045662	000000	000000
 13929	045663	000000	000001
 13930	045664	045656	040630
 13931	045665	777777	777777
 13932	045666	400000	000000
 13933	045667	400000	000000
 13934	045670	400000	000000
 13935	045671	777777	777777
 13936	045672	777777	777777
 13937	045673	045665	040630
 13938	045674	000000	000001
 13939	045675	000000	000000
 13940	045676	000000	000000
 13941	045677	000000	000000
 13942	045700	000000	000001
 13943	045701	000000	000000
 13944	045702	045674	040630
 13945	045703	000000	000001
 13946	045704	000000	000000
 13947	045705	000000	000000
 13948	045706	000000	000000
 13949	045707	777777	777777
 13950	045710	000000	000000
 13951	045711	045703	040630
 13952	045712	777777	777777
 13953	045713	400000	000000
 13954	045714	400000	000000
 13955	045715	400000	000000
 13956	045716	000000	000001
 13957	045717	000000	000000
 13958	045720	045712	040630
 13959	045721	777777	777777
 13960	045722	400000	000000
 13961	045723	400000	000000
 13962	045724	400000	000000
 13963	045725	777777	777777
 13964	045726	400000	000000
 13965	045727	045721	040630
 13966	045730	000000	000000
 13967	045731	377777	777777
 13968	045732	377777	777777
 13969	045733	377777	777777
 13970	045734	000000	000000
 13971	045735	377777	777777
 13972	045736	045730	040630
 13973	045737	000000	000000
 13974	045740	377777	777777
 13975	045741	377777	777777
 13976	045742	377777	777777
 13977	045743	777777	777777
 13978	045744	400000	000001
 13979	045745	045737	040630
 13980	045746	045457	040630
 13981	045747	777777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-45
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0300

 13982	045750	400000	000000
 13983	045751	400000	000000
 13984	045752	400000	000001
 13985	045753	777777	777777
 13986	045754	400000	000001
 13987	045755	045747	040630
 13988	045756	043027	040630
 13989	045757	000000	000001
 13990	045760	000000	000000
 13991	045761	377777	777777
 13992	045762	377777	777777
 13993	045763	777777	777777
 13994	045764	400000	000001
 13995	045765	045757	040630
 13996	045766	777777	777776
 13997	045767	777777	777777
 13998	045770	400000	000000
 13999	045771	400000	000001
 14000	045772	000000	000000
 14001	045773	377777	777777
 14002	045774	045766	040630
 14003	045775	777777	777776
 14004	045776	777777	777777
 14005	045777	400000	000000
 14006	046000	400000	000001
 14007	046001	777777	777777
 14008	046002	400000	000001
 14009	046003	045775	040630
 14010	046004	400000	000000
 14011	046005	400000	000000
 14012	046006	400000	000000
 14013	046007	400000	000000
 14014	046010	400000	000000
 14015	046011	400000	000000
 14016	046012	046004	040630
 14017	046013	377777	777777
 14018	046014	377777	777777
 14019	046015	377777	777777
 14020	046016	377777	777777
 14021	046017	377777	777777
 14022	046020	377777	777777
 14023	046021	046013	040630
 14024	046022	377777	777777
 14025	046023	377777	777777
 14026	046024	377777	777777
 14027	046025	377777	777777
 14028	046026	400000	000000
 14029	046027	400000	000001
 14030	046030	046022	040630
 14031	046031	400000	000000
 14032	046032	400000	000001
 14033	046033	400000	000000
 14034	046034	400000	000000
 14035	046035	377777	777777
 14036	046036	377777	777777
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-46
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0301

 14037	046037	046031	040630
 14038	046040	000000	000001
 14039	046041	400000	000000
 14040	046042	777777	777777
 14041	046043	777777	777777
 14042	046044	000000	000000
 14043	046045	377777	777777
 14044	046046	046040	040630
 14045	046047	000000	000001
 14046	046050	000000	000000
 14047	046051	377777	777777
 14048	046052	377777	777777
 14049	046053	777777	777777
 14050	046054	000000	000001
 14051	046055	046047	040630
 14052	046056	777777	777776
 14053	046057	377777	777777
 14054	046060	000000	000000
 14055	046061	000000	000001
 14056	046062	000000	000000
 14057	046063	777777	777777
 14058	046064	046056	040630
 14059	046065	777777	777776
 14060	046066	777777	777777
 14061	046067	000000	000000
 14062	046070	000000	000001
 14063	046071	777777	777777
 14064	046072	400000	000001
 14065	046073	046065	040630
 14066	046074	040502	040504
 14067	046075	040544	040550
 14068	046076	000000	040517
 14069	046077	040630	040634
 14070	046100	000000	040565
 14071	046101	41 65 47 45 56 44 
 14072	046102	32 00 00 77 00 00 
 14073	046103	41 44 44 45 56 44 
 14074	046104	32 00 00 77 00 00 
 14075	046105	62 45 63 65 54 64 
 14076	046106	32 00 00 77 00 00 
 14077	046107	55 51 56 65 45 56 
 14078	046110	44 32 00 00 00 00 
 14079	046111	00 77 00 00 00 00 
 14080	046112	63 65 42 64 62 41 
 14081	046113	50 45 56 44 32 00 
 14082	046114	00 77 00 00 00 00 
 14083	046115	62 45 63 65 54 64 
 14084	046116	32 00 00 00 00 00 
 14085	046117	00 77 00 00 00 00 
 14086	046120	55 65 54 64 51 60 
 14087	046121	54 51 43 41 56 44 
 14088	046122	32 00 00 77 00 00 
 14089	046123	55 65 54 64 51 60 
 14090	046124	54 51 45 62 32 00 
 14091	046125	00 00 00 77 00 00 
DSKCF DECSYSTEM 2020 ADVANCED INSTRUCTION DIAGNOSTIC #6, VER 0,3	MACRO %53(1020) 15:50 26-Sep-79 Page 1-47
STOR	KSM	18-Sep-79 17:06		*STOR* RESERVED STORAGE, SEPTEMBER 1979                                            SEQ 0302

 14092	046126	62 45 63 65 54 64 
 14093	046127	32 00 00 00 00 00 
 14094	046130	00 00 00 77 00 00 
 14095	046131	44 51 66 51 44 45 
 14096	046132	56 44 32 00 00 77 
 14097	046133	44 51 66 51 63 57 
 14098	046134	62 32 00 00 00 77 
 14099	046135	61 65 57 64 51 45 
 14100	046136	56 64 32 00 00 77 
 14101	046137	00 00 62 45 55 41 
 14102	046140	51 56 44 45 62 32 
 14103	046141	00 00 77 00 00 00 
 14104						LIST
 14105	051403	000000	000000		ENDSLD:	0
 14106
 14107					IFDEF	DEBUG,<
 14108	051404				PATCH:	BLOCK DEBUG		;PATCHING AREA
 14109					>
 14110
 14111					;PROGRAM VARIABLES
 14112	051434					VAR
 14113
 14114					IFDEF	PGMEND,<
 14115	051434	000000	000000		END:	0
 14116			030000			END	BEGIN	>

NO ERRORS DETECTED

PROGRAM BREAK IS 000000
ABSOLUTE BREAK IS 051435
CPU TIME USED 01:14.863

78P CORE USED

ABORT	   290#
AC1	    35#	   943	   944	   948	   951	   955	   968	   969	   973	   976	   980	   993	   994	   998     SEQ 0303
	  1001	  1005	  1018	  1019	  1023	  1026	  1030	  1043	  1044	  1048	  1051	  1055	  1068	  1069
	  1073	  1076	  1080	  1093	  1094	  1098	  1101	  1105	  1172	  1173	  1177	  1180	  1184	  1193
	  1195	  1199	  1202	  1206	  1229	  1230	  1234	  1237	  1241	  1250	  1252	  1256	  1259	  1263
	  1286	  1287	  1291	  1294	  1298	  1307	  1309	  1313	  1316	  1320	  1343	  1344	  1348	  1351
	  1355	  1364	  1366	  1370	  1373	  1377	  1400	  1401	  1405	  1408	  1412	  1421	  1423	  1427
	  1430	  1434	  1457	  1458	  1462	  1465	  1469	  1478	  1480	  1484	  1487	  1491	  1514	  1515
	  1519	  1522	  1526	  1535	  1537	  1541	  1544	  1548	  1571	  1572	  1576	  1579	  1583	  1592
	  1594	  1598	  1601	  1605	  1635	  1640	  1642	  1643	  1644	  1646	  1649	  1652	  1656	  1670
	  1686	  1687	  1691	  1694	  1698	  1711	  1712	  1716	  1719	  1723	  1770	  1774	  1783	  1786
	  1790	  1815	  1819	  1828	  1831	  1835	  1860	  1864	  1873	  1876	  1880	  1905	  1909	  1918
	  1921	  1925	  1950	  1954	  1963	  1966	  1970	  1995	  1999	  2008	  2011	  2015	  2114	  2116
	  2127	  2130	  2134	  2162	  2164	  2175	  2178	  2182	  2210	  2212	  2223	  2226	  2230	  2258
	  2260	  2271	  2274	  2278	  2306	  2308	  2319	  2322	  2326	  2354	  2356	  2367	  2370	  2374
	  2421	  2423	  2432	  2435	  2439	  2466	  2468	  2477	  2480	  2484	  2511	  2513	  2522	  2525
	  2529	  2556	  2558	  2567	  2570	  2574	  2601	  2603	  2612	  2615	  2619	  2646	  2648	  2657
	  2660	  2664	  2711	  2713	  2722	  2725	  2729	  2756	  2758	  2767	  2770	  2774	  2801	  2803
	  2812	  2815	  2819	  2846	  2848	  2857	  2860	  2864	  2891	  2893	  2902	  2905	  2909	  2936
	  2938	  2947	  2950	  2954	  3001	  3003	  3012	  3015	  3019	  3046	  3048	  3057	  3060	  3064
	  3091	  3093	  3102	  3105	  3109	  3136	  3138	  3147	  3150	  3154	  3181	  3183	  3192	  3195
	  3199	  3226	  3228	  3237	  3240	  3244	  3291	  3293	  3302	  3305	  3309	  3336	  3338	  3347
	  3350	  3354	  3381	  3383	  3392	  3395	  3399	  3426	  3428	  3437	  3440	  3444	  3471	  3473
	  3482	  3485	  3489	  3516	  3518	  3527	  3530	  3534	  3735	  3737	  3746	  3749	  3753	  3780
	  3782	  3791	  3794	  3798	  3825	  3827	  3836	  3839	  3843	  3870	  3872	  3881	  3884	  3888
	  3915	  3917	  3926	  3929	  3933	  3960	  3962	  3971	  3974	  3978	  4005	  4007	  4016	  4019
	  4023	  4050	  4052	  4061	  4064	  4068	  4163	  4164	  4168	  4171	  4175	  4188	  4189	  4193
	  4196	  4200	  4213	  4214	  4218	  4221	  4225	  4238	  4239	  4243	  4246	  4250	  4263	  4264
	  4268	  4271	  4275	  4288	  4289	  4293	  4296	  4300	  4344	  4371	  4375	  4380	  4387	  4390
	  4394	  4499	  4500	  4504	  4507	  4511	  4526	  4527	  4531	  4534	  4538	  4553	  4554	  4558
	  4561	  4565	  4580	  4581	  4585	  4588	  4592	  4607	  4608	  4612	  4615	  4619	  4634	  4635
	  4639	  4642	  4646	  4678	  4679	  4683	  4686	  4690	  4705	  4706	  4710	  4713	  4717	  4732
	  4733	  4737	  4740	  4744	  4759	  4760	  4764	  4767	  4771	  4786	  4787	  4791	  4794	  4798
	  4813	  4814	  4818	  4821	  4825	  4857	  4858	  4862	  4865	  4869	  4884	  4885	  4889	  4892
	  4896	  4911	  4912	  4916	  4919	  4923	  4938	  4939	  4943	  4946	  4950	  4965	  4966	  4970
	  4973	  4977	  4992	  4993	  4997	  5000	  5004	  5036	  5037	  5041	  5044	  5048	  5063	  5064
	  5068	  5071	  5075	  5090	  5091	  5095	  5098	  5102	  5117	  5118	  5122	  5125	  5129	  5144
	  5145	  5149	  5152	  5156	  5171	  5172	  5176	  5179	  5183	  5215	  5216	  5220	  5223	  5227
	  5242	  5243	  5247	  5250	  5254	  5269	  5270	  5274	  5277	  5281	  5296	  5297	  5301	  5304
	  5308	  5323	  5324	  5328	  5331	  5335	  5350	  5351	  5355	  5358	  5362	  5592	  5594	  5603
	  5606	  5610	  5640	  5642	  5651	  5654	  5658	  5688	  5690	  5699	  5702	  5706	  5736	  5738
	  5747	  5750	  5754	  5784	  5786	  5795	  5798	  5802	  5832	  5834	  5843	  5846	  5850	  5880
	  5882	  5891	  5894	  5898	  5928	  5930	  5939	  5942	  5946	  6033	  6034	  6052	  6053	  6071
	  6072	  6090	  6091	  6109	  6110	  6128	  6129	  6147	  6148	  6166	  6167	  6185	  6186	  6204
	  6205	  6223	  6224	  6242	  6243	  6261	  6262	  6292	  6293	  6311	  6312	  6330	  6331	  6349
	  6350	  6368	  6369	  6387	  6388	  6406	  6407	  6425	  6426	  6444	  6445	  6463	  6464	  6482
	  6483	  6501	  6502	  6539	  6540	  6566	  6567	  6593	  6595	  6621	  6623	  6649	  6650	  6676
	  6677	  6703	  6705	  6731	  6732	  6758	  6759	  6785	  6787	  6813	  6814	  6840	  6841	  6867
	  6869	  6895	  6897	  6923	  6924	  6950	  6951	  6977	  6979	  7005	  7006	  7032	  7033	  7059
	  7061	  7106	  7107	  7133	  7134	  7160	  7162	  7188	  7190	  7216	  7217	  7243	  7244	  7271
	  7273	  7299	  7300	  7326	  7327	  7354	  7356	  7382	  7383	  7409	  7410	  7436	  7438	  7464
	  7466	  7492	  7493	  7519	  7520	  7547	  7549	  7575	  7576	  7602	  7603	  7630	  7632	  7664
	  7665	  7669	  7675	  7678	  7681	  7684	  7686	  7695	  7722	  7723	  7749	  7750	  7776	  7777
	  7803	  7804	  7840	  7841	  7867	  7868	  7894	  7895	  7921	  7922	  7948	  7949	  7975	  7976
	  8002	  8003	  8029	  8030	  8056	  8057	  8083	  8084	  8110	  8111	  8137	  8138	  8164	  8165     SEQ 0304
	  8191	  8192	  8218	  8219	  8245	  8246	  8272	  8273	  8299	  8301	  8327	  8329	  8355	  8356
	  8382	  8383	  8409	  8410	  8436	  8437	  8463	  8464	  8503	  8504	  8523	  8524	  8553	  8554
	  8573	  8574	  8607	  8608	  8627	  8628	  8647	  8648	  8667	  8668	  8687	  8688	  8707	  8708
	  8727	  8728	  8747	  8748	  8767	  8768	  8787	  8788	  8807	  8808	  8827	  8828	  8847	  8848
	  8867	  8868	  8887	  8888	  8907	  8908	  8927	  8928	  8947	  8948	  8967	  8968	  8987	  8988
	  9007	  9008	  9027	  9028	  9047	  9048	  9067	  9068	  9102	  9104	  9132	  9134	  9161	  9163
	  9191	  9193	  9221	  9223	  9251	  9253	  9282	  9284	  9312	  9314	  9342	  9344	  9372	  9374
	  9402	  9404	  9444	  9446	  9473	  9474	  9501	  9503	  9530	  9531	  9558	  9559	  9586	  9587
	  9614	  9615	  9642	  9643	  9670	  9671	  9698	  9699	  9726	  9727	  9754	  9755	  9782	  9783
	  9810	  9811	  9838	  9839	  9866	  9867	  9911	  9912	  9939	  9940	  9967	  9968	  9995	  9996
	 10024	 10026	 10054	 10056	 10083	 10085	 10113	 10115	 10183	 10184	 10211	 10212	 10239	 10240
	 10267	 10268	 10295	 10296	 10323	 10324	 10351	 10352	 10379	 10380	 10407	 10408	 10435	 10436
	 10463	 10464	 10491	 10492	 10519	 10520	 10547	 10548	 10575	 10576	 10603	 10604	 10631	 10632
	 10659	 10660	 10687	 10689	 10716	 10717	 10744	 10745	 10772	 10773	 10800	 10801	 10828	 10829
	 10856	 10857	 10884	 10885	 10913	 10915	 10942	 10944	 10971	 10972	 11000	 11001	 11029	 11030
	 11058	 11059	 11087	 11088	 11117	 11118	 11122	 11128	 11132	 11136	 11140	 11143	 11165	 11166
	 11170	 11176	 11180	 11184	 11188	 11191	 11225	 11226	 11227	 11228	 11232	 11247	 11251	 11255
	 11259	 11262	 11270	 11271	 11272	 11311	 11314	 11348	 11351	 11385	 11388	 11391	 11394	 11436
	 11439	 11444	 11447
ACONE	  1748	  2037#
ACONF1	  2087	  3557#
ACONF2	  2399	  3581#
ACONF3	  2689	  3606#
ACONF4	  2979	  3630#
ACONF5	  3269	  3655#
ACONG	  3709	  3733	  3778	  3823	  3868	  3913	  3958	  4003	  4048	  4094#
ADADDI	  1665	  1669	  1670#
ADATA	  1640	  1641	  1644	  1667#
AENDB	  1617#
AENDD	  2035	  2061#
AENDF	  3555	  3679#
AENDG	  4088	  4142#
AERR	  1650	  1655#
AERRC	  1653	  1657#
ALEFT	  1166#	  1171	  1172	  1177	  1185	  1194	  1195	  1199	  1207	  1223#	  1228	  1229	  1234	  1242
	  1251	  1252	  1256	  1264	  1280#	  1285	  1286	  1291	  1299	  1308	  1309	  1313	  1321	  1337#
	  1342	  1343	  1348	  1356	  1365	  1366	  1370	  1378	  1394#	  1396	  1396#	  1399	  1400	  1405
	  1413	  1422	  1423	  1427	  1435	  1451#	  1453	  1453#	  1456	  1457	  1462	  1470	  1479	  1480
	  1484	  1492	  1508#	  1510	  1510#	  1513	  1514	  1519	  1527	  1536	  1537	  1541	  1549	  1565#
	  1567	  1567#	  1570	  1571	  1576	  1584	  1593	  1594	  1598	  1606
ALOOP	  1637#	  1664
ALTMGO	   640#
APRINT	   958	   983	  1008	  1033	  1058	  1083	  1108	  1187	  1209	  1244	  1266	  1301	  1323	  1358
	  1380	  1415	  1437	  1472	  1494	  1529	  1551	  1586	  1608	  1658	  1701	  1726	  1793	  1804
	  1838	  1849	  1883	  1894	  1928	  1939	  1973	  1984	  2018	  2029	  2137	  2149	  2185	  2197
	  2233	  2245	  2281	  2293	  2329	  2341	  2377	  2389	  2442	  2454	  2487	  2499	  2532	  2544
	  2577	  2589	  2622	  2634	  2667	  2679	  2732	  2744	  2777	  2789	  2822	  2834	  2867	  2879
	  2912	  2924	  2957	  2969	  3022	  3034	  3067	  3079	  3112	  3124	  3157	  3169	  3202	  3214
	  3247	  3259	  3312	  3324	  3357	  3369	  3402	  3414	  3447	  3459	  3492	  3504	  3537	  3549
	  3756	  3767	  3801	  3812	  3846	  3857	  3891	  3902	  3936	  3947	  3981	  3992	  4026	  4037
	  4071	  4082	 11287#
ARIGHT	  1167#	  1171	  1172	  1180	  1185	  1194	  1195	  1202	  1207	  1224#	  1228	  1229	  1237	  1242
	  1251	  1252	  1259	  1264	  1281#	  1285	  1286	  1294	  1299	  1308	  1309	  1316	  1321	  1338#    SEQ 0305
	  1342	  1343	  1351	  1356	  1365	  1366	  1373	  1378	  1395#	  1397	  1397#	  1399	  1400	  1408
	  1413	  1422	  1423	  1430	  1435	  1452#	  1454	  1454#	  1456	  1457	  1465	  1470	  1479	  1480
	  1487	  1492	  1509#	  1511	  1511#	  1513	  1514	  1522	  1527	  1536	  1537	  1544	  1549	  1566#
	  1568	  1568#	  1570	  1571	  1579	  1584	  1593	  1594	  1601	  1606
AROV	   554#	  6548	  6575	  6603	  6631	  6658	  6685	  6713	  6740	  6767	  6795	  6822	  6849	  6877
	  6905	  6932	  6959	  6987	  7014	  7041	  7069	  7115	  7142	  7170	  7198	  7225	  7252	  7281
	  7308	  7335	  7364	  7391	  7418	  7446	  7474	  7501	  7528	  7557	  7584	  7611	  7640	  7731
	  7758	  7785	  7812	  7849	  7876	  7903	  7930	  7957	  7984	  8011	  8038	  8065	  8092	  8119
	  8146	  8173	  8200	  8227	  8254	  8281	  8309	  8337	  8364	  8391	  8418	  8445	  8472	  9112
	  9142	  9171	  9201	  9231	  9261	  9292	  9322	  9352	  9382	  9412	  9454	  9482	  9511	  9539
	  9567	  9595	  9623	  9651	  9679	  9707	  9735	  9763	  9791	  9819	  9847	  9875	  9920	  9948
	  9976	 10004	 10034	 10064	 10093	 10123	 10192	 10220	 10248	 10276	 10304	 10332	 10360	 10388
	 10416	 10444	 10472	 10500	 10528	 10556	 10584	 10612	 10640	 10668	 10697	 10725	 10753	 10781
	 10809	 10837	 10865	 10893	 10923	 10952	 10980	 11009	 11038	 11067	 11096
AROVTP	   554#
AROVU	   554#
ASHIFT	  1637	  1638	  1669#
AST	   755#
ATEST1	   942#	   959
ATEST2	   967#	   984
ATEST3	   992#	  1009
ATEST4	  1017#	  1034
ATEST5	  1042#	  1059
ATEST6	  1067#	  1084
ATEST7	  1092#	  1109
ATSIN	   756#
ATSTD1	  1685#	  1702
ATSTD2	  1710#	  1727
BDONE	  4356	  4454#
BDONEI	  4406	  4409	  4413	  4420#
BEGEND	   636#	 11105
BEGIN	    55	    56	    57	    58	    59	   505	   506	   567#	 14116
BEGIN1	   583#	   637
BELL	   759#
BERROR	  4388	  4393#
BFLAG	  4391	  4400#
BFSET	  4408#	  4415	  4418
BIS	   554#
BSAME	  4404	  4411#
BTESTB	  4371#	  4397	  4429
CCA	   554#
CHAIN	   310#
CHNOFF	   554#
CHNON	   554#
CLKU	   554#
CLOCKF	   622#
CNT	    38#	  1634	  1637	  1662	  1663
CNTLC	   639#
CNTRP	   554#
CNUM	  1748#	  1769	  1769#	  1770	  1772	  1783	  1786	  1791	  1814	  1814#	  1815	  1817	  1828	  1831
	  1836	  1859	  1859#	  1860	  1862	  1873	  1876	  1881	  1904	  1904#	  1905	  1907	  1918	  1921
	  1926	  1949	  1949#	  1950	  1952	  1963	  1966	  1971	  1994	  1994#	  1995	  1997	  2008	  2011
	  2016	  2087#	  2112	  2112#	  2113	  2114	  2116	  2160	  2160#	  2161	  2162	  2164	  2208	  2208#    SEQ 0306
	  2209	  2210	  2212	  2256	  2256#	  2257	  2258	  2260	  2304	  2304#	  2305	  2306	  2308	  2352
	  2352#	  2353	  2354	  2356	  2399#	  2419	  2419#	  2420	  2421	  2423	  2464	  2464#	  2465	  2466
	  2468	  2509	  2509#	  2510	  2511	  2513	  2554	  2554#	  2555	  2556	  2558	  2599	  2599#	  2600
	  2601	  2603	  2644	  2644#	  2645	  2646	  2648	  2689#	  2709	  2709#	  2710	  2711	  2713	  2754
	  2754#	  2755	  2756	  2758	  2799	  2799#	  2800	  2801	  2803	  2844	  2844#	  2845	  2846	  2848
	  2889	  2889#	  2890	  2891	  2893	  2934	  2934#	  2935	  2936	  2938	  2979#	  2999	  2999#	  3000
	  3001	  3003	  3044	  3044#	  3045	  3046	  3048	  3089	  3089#	  3090	  3091	  3093	  3134	  3134#
	  3135	  3136	  3138	  3179	  3179#	  3180	  3181	  3183	  3224	  3224#	  3225	  3226	  3228	  3269#
	  3289	  3289#	  3290	  3291	  3293	  3334	  3334#	  3335	  3336	  3338	  3379	  3379#	  3380	  3381
	  3383	  3424	  3424#	  3425	  3426	  3428	  3469	  3469#	  3470	  3471	  3473	  3514	  3514#	  3515
	  3516	  3518	  3709#	  3731	  3731#	  3733	  3734	  3735	  3737	  3746	  3749	  3754	  3776	  3776#
	  3778	  3779	  3780	  3782	  3791	  3794	  3799	  3821	  3821#	  3823	  3824	  3825	  3827	  3836
	  3839	  3844	  3866	  3866#	  3868	  3869	  3870	  3872	  3881	  3884	  3889	  3911	  3911#	  3913
	  3914	  3915	  3917	  3926	  3929	  3934	  3956	  3956#	  3958	  3959	  3960	  3962	  3971	  3974
	  3979	  4001	  4001#	  4003	  4004	  4005	  4007	  4016	  4019	  4024	  4046	  4046#	  4048	  4049
	  4050	  4052	  4061	  4064	  4069	  4480#	  4497	  4497#	  4498	  4499	  4500	  4504	  4507	  4512
	  4524	  4524#	  4525	  4526	  4527	  4531	  4534	  4539	  4551	  4551#	  4552	  4553	  4554	  4558
	  4561	  4566	  4578	  4578#	  4579	  4580	  4581	  4585	  4588	  4593	  4605	  4605#	  4606	  4607
	  4608	  4612	  4615	  4620	  4632	  4632#	  4633	  4634	  4635	  4639	  4642	  4647	  4659#	  4676
	  4676#	  4677	  4678	  4679	  4683	  4686	  4691	  4703	  4703#	  4704	  4705	  4706	  4710	  4713
	  4718	  4730	  4730#	  4731	  4732	  4733	  4737	  4740	  4745	  4757	  4757#	  4758	  4759	  4760
	  4764	  4767	  4772	  4784	  4784#	  4785	  4786	  4787	  4791	  4794	  4799	  4811	  4811#	  4812
	  4813	  4814	  4818	  4821	  4826	  4838#	  4855	  4855#	  4856	  4857	  4858	  4862	  4865	  4870
	  4882	  4882#	  4883	  4884	  4885	  4889	  4892	  4897	  4909	  4909#	  4910	  4911	  4912	  4916
	  4919	  4924	  4936	  4936#	  4937	  4938	  4939	  4943	  4946	  4951	  4963	  4963#	  4964	  4965
	  4966	  4970	  4973	  4978	  4990	  4990#	  4991	  4992	  4993	  4997	  5000	  5005	  5017#	  5034
	  5034#	  5035	  5036	  5037	  5061	  5061#	  5062	  5063	  5064	  5088	  5088#	  5089	  5090	  5091
	  5115	  5115#	  5116	  5117	  5118	  5142	  5142#	  5143	  5144	  5145	  5169	  5169#	  5170	  5171
	  5172	  5196#	  5213	  5213#	  5214	  5215	  5216	  5240	  5240#	  5241	  5242	  5243	  5267	  5267#
	  5268	  5269	  5270	  5294	  5294#	  5295	  5296	  5297	  5321	  5321#	  5322	  5323	  5324	  5348
	  5348#	  5349	  5350	  5351	  5559#	  5587	  5587#	  5591	  5592	  5594	  5617	  5635	  5635#	  5639
	  5640	  5642	  5665	  5683	  5683#	  5687	  5688	  5690	  5713	  5731	  5731#	  5735	  5736	  5738
	  5761	  5779	  5779#	  5783	  5784	  5786	  5809	  5827	  5827#	  5831	  5832	  5834	  5857	  5875
	  5875#	  5879	  5880	  5882	  5905	  5923	  5923#	  5927	  5928	  5930	  5953
COMMA	   748#
CONSW	   623#
CPOPJ	   643#
CPOPJ1	   641#
CRLF	   440	   441	   743#
CRLF2	   444	   445	   745#
CRY0	   554#
CRY1	   554#
CSHFLG	   802#
CSHMEM	   803#
CTRP	   554#
CYCL60	   796#
DCK	   554#	  9112	  9142	  9171	  9201	  9231	  9261	  9292	  9322	  9352	  9382	  9412	  9454	  9482
	  9511	  9539	  9567	  9595	  9623	  9651	  9679	  9707	  9735	  9763	  9791	  9819	  9847	  9875
	  9920	  9948	  9976	 10004	 10034	 10064	 10093	 10123	 10192	 10220	 10248	 10276	 10304	 10332
	 10360	 10388	 10416	 10444	 10472	 10500	 10528	 10556	 10584	 10612	 10640	 10668	 10697	 10725
	 10753	 10781	 10809	 10837	 10865	 10893	 10923	 10952	 10980	 11009	 11038	 11067	 11096
DDTLNK	   324#	   581
DDTSRT	   581#                                                                                                            SEQ 0307
DEBUG	    71#	 14107	 14108
DECVER	     4#	    10	    16	   602
DF22F	   707#
DIAGMN	   570#
DING	   296#
DOLLAR	   762#
DPRINT	  8507	  8527	  8557	  8577	  8611	  8631	  8651	  8671	  8691	  8711	  8731	  8751	  8771	  8791
	  8811	  8831	  8851	  8871	  8891	  8911	  8931	  8951	  8971	  8991	  9011	  9031	  9051	  9071
	  9107	  9115	  9137	  9145	  9166	  9174	  9196	  9204	  9226	  9234	  9256	  9264	  9287	  9295
	  9317	  9325	  9347	  9355	  9377	  9385	  9407	  9415	  9449	  9457	  9477	  9485	  9506	  9514
	  9534	  9542	  9562	  9570	  9590	  9598	  9618	  9626	  9646	  9654	  9674	  9682	  9702	  9710
	  9730	  9738	  9758	  9766	  9786	  9794	  9814	  9822	  9842	  9850	  9870	  9878	  9915	  9923
	  9943	  9951	  9971	  9979	  9999	 10007	 10029	 10037	 10059	 10067	 10088	 10096	 10118	 10126
	 10187	 10196	 10215	 10224	 10243	 10252	 10271	 10280	 10299	 10308	 10327	 10336	 10355	 10364
	 10383	 10392	 10411	 10420	 10439	 10448	 10467	 10476	 10495	 10504	 10523	 10532	 10551	 10560
	 10579	 10588	 10607	 10616	 10635	 10644	 10663	 10672	 10692	 10701	 10720	 10729	 10748	 10757
	 10776	 10785	 10804	 10813	 10832	 10841	 10860	 10869	 10888	 10897	 10918	 10927	 10947	 10956
	 10975	 10984	 11004	 11013	 11033	 11042	 11062	 11071	 11091	 11100	 11404#
DSKUPD	   607
EBIT0	   554#
EBIT1	   554#
EBIT10	   554#
EBIT11	   554#
EBIT12	   554#
EBIT13	   554#
EBIT14	   554#
EBIT15	   554#
EBIT2	   554#
EBIT3	   554#
EBIT4	   554#
EBIT5	   554#
EBIT6	   554#
EBIT7	   554#
EBIT8	   554#
EBIT9	   554#
END	 14115#
ENDFIX	   882#
ENDSLD	 14105#
ERMORE	   656#
EROLD	   516
ERRPC	   627#
ERRTLS	   628#
ERSTOP	   299#
EXCASB	    69#	   605
EXIOT	   554#
FIVE	  9088#	  9221	  9251	  9342	  9372	  9402
FLAGL	  1777#	  1799	  1804	  1822#	  1844	  1849	  1867#	  1889	  1894	  1912#	  1934	  1939	  1957#	  1979
	  1984	  2002#	  2024	  2029	  2119#	  2143	  2149	  2167#	  2191	  2197	  2215#	  2239	  2245	  2263#
	  2287	  2293	  2311#	  2335	  2341	  2359#	  2383	  2389	  2426#	  2448	  2454	  2471#	  2493	  2499
	  2516#	  2538	  2544	  2561#	  2583	  2589	  2606#	  2628	  2634	  2651#	  2673	  2679	  2716#	  2738
	  2744	  2761#	  2783	  2789	  2806#	  2828	  2834	  2851#	  2873	  2879	  2896#	  2918	  2924	  2941#
	  2963	  2969	  3006#	  3028	  3034	  3051#	  3073	  3079	  3096#	  3118	  3124	  3141#	  3163	  3169
	  3186#	  3208	  3214	  3231#	  3253	  3259	  3296#	  3318	  3324	  3341#	  3363	  3369	  3386#	  3408     SEQ 0308
	  3414	  3431#	  3453	  3459	  3476#	  3498	  3504	  3521#	  3543	  3549	  3740#	  3762	  3767	  3785#
	  3807	  3812	  3830#	  3852	  3857	  3875#	  3897	  3902	  3920#	  3942	  3947	  3965#	  3987	  3992
	  4010#	  4032	  4037	  4055#	  4077	  4082	  4384#	  4400	  4422	  4428	  5597#	  5620	  5625	  5645#
	  5668	  5673	  5693#	  5716	  5721	  5741#	  5764	  5769	  5789#	  5812	  5817	  5837#	  5860	  5865
	  5885#	  5908	  5913	  5933#	  5956	  5961	  7672#	  7695
FLAGS	  3711#	  3763	  3808	  3853	  3898	  3913#	  3943	  3988	  4033	  4078	  5563#	  5621	  5669	  5717
	  5765	  5781#	  5813	  5829#	  5861	  5877#	  5909	  5925#	  5957
FOUR	  9087#	  9102	  9132	  9191	  9312	  9342	  9372
FOV	   554#
FOVU	   554#
FRDLNK	   322#
FSELNK	   321#
FXU	   554#
HYPEN	   753#
ILOOP	  4360#	  4432
IMINU	  4357	  4371	  4402	  4405	  4411	  4452#
INHCSH	   307#
INHPAG	   304#
IOCLR	   554#
ISUBTR	  4363	  4372	  4380	  4401	  4412	  4414	  4416	  4417	  4453#
ITERAT	    60#	   600
ITRCH1	   660#
ITRCNT	   600#
JOB41	   554#
JOBAPR	   554#
JOBCNI	   554#
JOBDDT	   554#
JOBFF	   554#
JOBOPC	   554#
JOBREL	   554#
JOBREN	   554#
JOBSA	   554#
JOBSYM	   554#
JOBTPC	   554#
JOBUSY	   554#
JOBUUO	   554#
JOBVER	   554#
K	  9273#	  9282
KAIFLG	   617#
KLFLG	   618#
KNTRP	   554#
KTRP	   554#
LACLK	   554#
LACLKE	   554#
LAPRAL	   554#
LAPRP1	   554#
LAPRP2	   554#
LAPRP3	   554#
LAPRP4	   554#
LAPRP5	   554#
LAPRP6	   554#
LAPRP7	   554#
LCHNOF	   554#                                                                                                            SEQ 0309
LCHNON	   554#
LCNTXT	   554#
LCNXER	   554#
LCPAER	   554#
LCPSFT	   554#
LCPWRF	   554#
LDATAF	   554#
LDLNK	   323#	   570	   572
LDNXER	   554#
LDPAER	   554#
LDPSFT	   554#
LDPWRF	   554#
LEBXMH	   554#
LEBXML	   554#
LENXER	   554#
LEPAER	   554#
LEPSFT	   554#
LEPWRF	   554#
LEUPFW	   554#
LEXCMP	   554#
LFLGCL	   554#
LFLGDS	   554#
LFLGEN	   554#
LFLGST	   554#
LFP	   757#
LINSTF	   554#
LINT	   554#
LIOCLR	   554#
LLACBL	   554#
LLDUSB	   554#
LMBXMH	   554#
LMBXML	   554#
LNXMEN	   554#
LNXMER	   554#
LOC	  1165#	  1188	  1192#	  1210	  1222#	  1245	  1249#	  1267	  1279#	  1302	  1306#	  1324	  1336#	  1359
	  1363#	  1381	  1393#	  1416	  1420#	  1438	  1450#	  1473	  1477#	  1495	  1507#	  1530	  1534#	  1552
	  1564#	  1587	  1591#	  1609	  1659	  1768#	  1794	  1805	  1813#	  1839	  1850	  1858#	  1884	  1895
	  1903#	  1929	  1940	  1948#	  1974	  1985	  1993#	  2019	  2030	  2110#	  2138	  2150	  2158#	  2186
	  2198	  2206#	  2234	  2246	  2254#	  2282	  2294	  2302#	  2330	  2342	  2350#	  2378	  2390	  2418#
	  2443	  2455	  2463#	  2488	  2500	  2508#	  2533	  2545	  2553#	  2578	  2590	  2598#	  2623	  2635
	  2643#	  2668	  2680	  2708#	  2733	  2745	  2753#	  2778	  2790	  2798#	  2823	  2835	  2843#	  2868
	  2880	  2888#	  2913	  2925	  2933#	  2958	  2970	  2998#	  3023	  3035	  3043#	  3068	  3080	  3088#
	  3113	  3125	  3133#	  3158	  3170	  3178#	  3203	  3215	  3223#	  3248	  3260	  3288#	  3313	  3325
	  3333#	  3358	  3370	  3378#	  3403	  3415	  3423#	  3448	  3460	  3468#	  3493	  3505	  3513#	  3538
	  3550	  3732#	  3757	  3768	  3777#	  3802	  3813	  3822#	  3847	  3858	  3867#	  3892	  3903	  3912#
	  3937	  3948	  3957#	  3982	  3993	  4002#	  4027	  4038	  4047#	  4072	  4083	  4496#	  4515	  4523#
	  4542	  4550#	  4569	  4577#	  4596	  4604#	  4623	  4631#	  4650	  4675#	  4694	  4702#	  4721	  4729#
	  4748	  4756#	  4775	  4783#	  4802	  4810#	  4829	  4854#	  4873	  4881#	  4900	  4908#	  4927	  4935#
	  4954	  4962#	  4981	  4989#	  5008	  5033#	  5052	  5060#	  5079	  5087#	  5106	  5114#	  5133	  5141#
	  5160	  5168#	  5187	  5212#	  5231	  5239#	  5258	  5266#	  5285	  5293#	  5312	  5320#	  5339	  5347#
	  5366	  5586#	  5614	  5626	  5634#	  5662	  5674	  5682#	  5710	  5722	  5730#	  5758	  5770	  5778#
	  5806	  5818	  5826#	  5854	  5866	  5874#	  5902	  5914	  5922#	  5950	  5962	  7662#	  7689	  7696
LOOPER	   298#                                                                                                            SEQ 0310
LPAREN	   554#
LPARER	   554#
LPFWPC	   554#
LPGFTR	   554#
LPICH1	   554#
LPICH2	   554#
LPICH3	   554#
LPICH4	   554#
LPICH5	   554#
LPICH6	   554#
LPICH7	   554#
LPICHA	   554#
LPICLR	   554#
LPIIP1	   554#
LPIIP2	   554#
LPIIP3	   554#
LPIIP4	   554#
LPIIP5	   554#
LPIIP6	   554#
LPIIP7	   554#
LPIOFF	   554#
LPION	   554#
LPRCH1	   554#
LPRCH2	   554#
LPRCH3	   554#
LPRCH4	   554#
LPRCH5	   554#
LPRCH6	   554#
LPRCH7	   554#
LPRFMH	   554#
LPRFML	   554#
LPSFT	   554#
LPSFTE	   554#
LPWRFE	   554#
LPWRFL	   554#
LREQSE	   554#
LRQCLR	   554#
LSECMO	   554#
LSMODE	   554#
LSNXER	   554#
LSPAER	   554#
LSPSFT	   554#
LSPWRF	   554#
LTBASH	   554#
LTBASL	   554#
LTRPAE	   554#
LTRPEN	   554#
LUSCMP	   554#
LUUO	   554#
LUUO1	   687	   688
LUUO10	   687	   692
LUUO11	   687	   692
LUUO12	   687	   693                                                                                                     SEQ 0311
LUUO13	   687	   693
LUUO14	   687	   694
LUUO15	   687	   694
LUUO16	   687	   695
LUUO17	   687	   695
LUUO2	   687	   689
LUUO20	   687	   696
LUUO21	   687	   696
LUUO22	   687	   697
LUUO23	   687	   697
LUUO24	   687	   698
LUUO25	   687	   698
LUUO26	   687	   699
LUUO27	   687	   699
LUUO3	   687	   689
LUUO30	   687	   700
LUUO31	   687	   700
LUUO32	   687	   701
LUUO33	   687	   701
LUUO4	   687	   690
LUUO5	   687	   690
LUUO6	   687	   691
LUUO7	   687	   691
LUUOI	   554#
LWRITE	   554#
MAPNEW	   708#
MARGIN	   630#
MCAND	  6033	  6052	  6071	  6090	  6109	  6128	  6147	  6166	  6185	  6204	  6223	  6242	  6261	  6292
	  6311	  6330	  6349	  6368	  6387	  6406	  6425	  6444	  6463	  6482	  6501	  6539	  6566	  6594
	  6622	  6649	  6676	  6704	  6731	  6758	  6786	  6813	  6840	  6868	  6896	  6923	  6950	  6978
	  7005	  7032	  7060	  7106	  7133	  7161	  7189	  7216	  7243	  7272	  7299	  7326	  7355	  7382
	  7409	  7437	  7465	  7492	  7519	  7548	  7575	  7602	  7631	  7722	  7749	  7776	  7803	  7840
	  7867	  7894	  7921	  7948	  7975	  8002	  8029	  8056	  8083	  8110	  8137	  8164	  8191	  8218
	  8245	  8272	  8300	  8328	  8355	  8382	  8409	  8436	  8463	 11116	 11117	 11151#
MCNVER	     3#	    10	    16	   602
MEMLOW	   710#
MEMMAP	   608
MEMSIZ	   711#
MEMTOT	   709#
MERROR	 11129	 11133	 11137	 11143#
MFLOC	  6547	  6551	  6574	  6578	  6602	  6606	  6630	  6634	  6657	  6661	  6684	  6688	  6712	  6716
	  6739	  6743	  6766	  6770	  6794	  6798	  6821	  6825	  6848	  6852	  6876	  6880	  6904	  6908
	  6931	  6935	  6958	  6962	  6986	  6990	  7013	  7017	  7040	  7044	  7068	  7072	  7114	  7118
	  7141	  7145	  7169	  7173	  7197	  7201	  7224	  7228	  7251	  7255	  7280	  7284	  7307	  7311
	  7334	  7338	  7363	  7367	  7390	  7394	  7417	  7421	  7445	  7449	  7473	  7477	  7500	  7504
	  7527	  7531	  7556	  7560	  7583	  7587	  7610	  7614	  7639	  7643	  7730	  7734	  7757	  7761
	  7784	  7788	  7811	  7815	  7848	  7852	  7875	  7879	  7902	  7906	  7929	  7933	  7956	  7960
	  7983	  7987	  8010	  8014	  8037	  8041	  8064	  8068	  8091	  8095	  8118	  8122	  8145	  8149
	  8172	  8176	  8199	  8203	  8226	  8230	  8253	  8257	  8280	  8284	  8308	  8312	  8336	  8340
	  8363	  8367	  8390	  8394	  8417	  8421	  8444	  8448	  8471	  8475	 11125#
MINU	  4344#	  4345	  4353	  4355	  4356	  4357	  4364
MINUS	   752#
MODDVC	   306#                                                                                                            SEQ 0312
MODDVL	   505	   505#	   603
MODDVU	   506	   506#	   604
MODLNK	   325#	   567
MONCTL	   620#
MONFLG	   619#
MONTEN	   621#
MONTYP	   834#
MOVERR	  7676	  7679	  7682	  7686#
MOVOK	  7685	  7691#
MOVRR	  7691	  7694#
MPLIER	 11116	 11122	 11152#
MPRINT	  6037	  6056	  6075	  6094	  6113	  6132	  6151	  6170	  6189	  6208	  6227	  6246	  6265	  6296
	  6315	  6334	  6353	  6372	  6391	  6410	  6429	  6448	  6467	  6486	  6505	  6543	  6551	  6570
	  6578	  6598	  6606	  6626	  6634	  6653	  6661	  6680	  6688	  6708	  6716	  6735	  6743	  6762
	  6770	  6790	  6798	  6817	  6825	  6844	  6852	  6872	  6880	  6900	  6908	  6927	  6935	  6954
	  6962	  6982	  6990	  7009	  7017	  7036	  7044	  7064	  7072	  7110	  7118	  7137	  7145	  7165
	  7173	  7193	  7201	  7220	  7228	  7247	  7255	  7276	  7284	  7303	  7311	  7330	  7338	  7359
	  7367	  7386	  7394	  7413	  7421	  7441	  7449	  7469	  7477	  7496	  7504	  7523	  7531	  7552
	  7560	  7579	  7587	  7606	  7614	  7635	  7643	  7688	  7695	  7726	  7734	  7753	  7761	  7780
	  7788	  7807	  7815	  7844	  7852	  7871	  7879	  7898	  7906	  7925	  7933	  7952	  7960	  7979
	  7987	  8006	  8014	  8033	  8041	  8060	  8068	  8087	  8095	  8114	  8122	  8141	  8149	  8168
	  8176	  8195	  8203	  8222	  8230	  8249	  8257	  8276	  8284	  8304	  8312	  8332	  8340	  8359
	  8367	  8386	  8394	  8413	  8421	  8440	  8448	  8467	  8475	 11361#
MPVU	   554#
MRES	  6034	  6053	  6072	  6091	  6110	  6129	  6148	  6167	  6186	  6205	  6224	  6243	  6262	  6293
	  6312	  6331	  6350	  6369	  6388	  6407	  6426	  6445	  6464	  6483	  6502	  6540	  6567	  6595
	  6623	  6650	  6677	  6705	  6732	  6759	  6787	  6814	  6841	  6869	  6897	  6924	  6951	  6979
	  7006	  7033	  7061	  7107	  7134	  7162	  7190	  7217	  7244	  7273	  7300	  7327	  7356	  7383
	  7410	  7438	  7466	  7493	  7520	  7549	  7576	  7603	  7632	  7723	  7750	  7777	  7804	  7841
	  7868	  7895	  7922	  7949	  7976	  8003	  8030	  8057	  8084	  8111	  8138	  8165	  8192	  8219
	  8246	  8273	  8301	  8329	  8356	  8383	  8410	  8437	  8464	 11128	 11132	 11136	 11140	 11144
	 11153#
MRET	 11147	 11148	 11149	 11154#	 11195	 11196	 11197	 11266	 11267	 11268
MSUBR	  6035	  6054	  6073	  6092	  6111	  6130	  6149	  6168	  6187	  6206	  6225	  6244	  6263	  6294
	  6313	  6332	  6351	  6370	  6389	  6408	  6427	  6446	  6465	  6484	  6503	  6541	  6568	  6596
	  6624	  6651	  6678	  6706	  6733	  6760	  6788	  6815	  6842	  6870	  6898	  6925	  6952	  6980
	  7007	  7034	  7062	  7108	  7135	  7163	  7191	  7218	  7245	  7274	  7301	  7328	  7357	  7384
	  7411	  7439	  7467	  7494	  7521	  7550	  7577	  7604	  7633	  7724	  7751	  7778	  7805	  7842
	  7869	  7896	  7923	  7950	  7977	  8004	  8031	  8058	  8085	  8112	  8139	  8166	  8193	  8220
	  8247	  8274	  8302	  8330	  8357	  8384	  8411	  8438	  8465	 11116#
MTEST	 11141	 11147#
MUUO	   554#
MUUOPC	   554#
NOPNT	   294#
NUM	   907#	   942	   943	   951	   956	   967	   968	   973	   981	   992	   993	   998	  1001	  1006
	  1017	  1019	  1026	  1031	  1042	  1044	  1048	  1056	  1067	  1069	  1073	  1076	  1081	  4162
	  4163	  4171	  4176	  4187	  4188	  4193	  4201	  4212	  4213	  4218	  4221	  4226	  4237	  4239
	  4246	  4251	  4262	  4264	  4268	  4276	  4287	  4289	  4293	  4296	  4301	  6033	  6052	  6071
	  6090	  6109	  6128	  6147	  6166	  6185	  6204	  6223	  6242	  6292	  6311	  6330	  6349	  6368
	  6387	  6406	  6425	  6444	  6463	  6482	  6501	  8503	  8523	  8553	  8573
NXMU	   554#
OBYTEF	 11239	 11241	 11243	 11270#
OBYTET	 11240	 11242	 11244	 11273#                                                                                    SEQ 0313
OCON	 11238	 11246#
ODEND	 10183	 10211	 10239	 10267	 10295	 10323	 10351	 10379	 10407	 10435	 10463	 10491	 10519	 10547
	 10575	 10603	 10631	 10659	 10687	 10716	 10744	 10772	 10800	 10828	 10856	 10884	 10914	 10943
	 10971	 11000	 11029	 11058	 11087	 11224	 11225	 11226	 11277#
OERROR	 11248	 11252	 11256	 11262#
OFLOC	 10191	 10193	 10196	 10219	 10221	 10224	 10247	 10249	 10252	 10275	 10277	 10280	 10303	 10305
	 10308	 10331	 10333	 10336	 10359	 10361	 10364	 10387	 10389	 10392	 10415	 10417	 10420	 10443
	 10445	 10448	 10471	 10473	 10476	 10499	 10501	 10504	 10527	 10529	 10532	 10555	 10557	 10560
	 10583	 10585	 10588	 10611	 10613	 10616	 10639	 10641	 10644	 10667	 10669	 10672	 10696	 10698
	 10701	 10724	 10726	 10729	 10752	 10754	 10757	 10780	 10782	 10785	 10808	 10810	 10813	 10836
	 10838	 10841	 10864	 10866	 10869	 10892	 10894	 10897	 10922	 10924	 10927	 10951	 10953	 10956
	 10979	 10981	 10984	 11008	 11010	 11013	 11037	 11039	 11042	 11066	 11068	 11071	 11095	 11097
	 11100	 11235#
OISOR	 11224	 11232	 11278#
OLOOP	  4355#	  4361
ONE	  9084#	  9161	  9221
OPRSEL	   308#
OPTIME	   722#
ORES	 10184	 10212	 10240	 10268	 10296	 10324	 10352	 10380	 10408	 10436	 10464	 10492	 10520	 10548
	 10576	 10604	 10632	 10660	 10689	 10717	 10745	 10773	 10801	 10829	 10857	 10885	 10915	 10944
	 10972	 11001	 11030	 11059	 11088	 11227	 11228	 11247	 11251	 11255	 11259	 11263	 11273	 11274
	 11275	 11279#
ORET	 11280#
OSUBR	 10185	 10213	 10241	 10269	 10297	 10325	 10353	 10381	 10409	 10437	 10465	 10493	 10521	 10549
	 10577	 10605	 10633	 10661	 10690	 10718	 10746	 10774	 10802	 10830	 10858	 10886	 10916	 10945
	 10973	 11002	 11031	 11060	 11089	 11224#
OTEST	 11260	 11266#
P	   351	   352	   353	   354	   554#	   642
PAG	   554#
PALERS	   300#
PAREA1	    61#	   598
PAREA2	    62#	   599
PAREA3	    63#	   596
PAREA4	    64#	   597
PAREA5	    65#	   609
PAREA6	    66#	   610
PAREA7	   609#
PAREA8	   610#
PARU	   554#
PASCNT	   624#
PATCH	 14108#
PDEND	  8503	  8523	  8553	  8573	  8607	  8627	  8647	  8667	  8687	  8707	  8727	  8747	  8767	  8787
	  8807	  8827	  8847	  8867	  8887	  8907	  8927	  8947	  8967	  8987	  9007	  9027	  9047	  9067
	  9103	  9133	  9162	  9192	  9222	  9252	  9283	  9313	  9343	  9373	  9403	  9445	  9473	  9502
	  9530	  9558	  9586	  9614	  9642	  9670	  9698	  9726	  9754	  9782	  9810	  9838	  9866	  9911
	  9939	  9967	  9995	 10025	 10055	 10084	 10114	 11164	 11165	 11166	 11199#
PDISF	   719#
PDLOVU	   554#
PDOVTP	   554#
PERIOD	   749#
PERROR	 11177	 11181	 11185	 11191#
PFLOC	  9111	  9115	  9141	  9145	  9170	  9174	  9200	  9204	  9230	  9234	  9260	  9264	  9291	  9295
	  9321	  9325	  9351	  9355	  9381	  9385	  9411	  9415	  9453	  9457	  9481	  9485	  9510	  9514     SEQ 0314
	  9538	  9542	  9566	  9570	  9594	  9598	  9622	  9626	  9650	  9654	  9678	  9682	  9706	  9710
	  9734	  9738	  9762	  9766	  9790	  9794	  9818	  9822	  9846	  9850	  9874	  9878	  9919	  9923
	  9947	  9951	  9975	  9979	 10003	 10007	 10033	 10037	 10063	 10067	 10092	 10096	 10122	 10126
	 11173#
PFSTRT	   576#
PGMEND	    68#	 14114
PGMNAM	   601	   887#
PHALT	    54	 11105#
PICHN1	   554#
PICHN2	   554#
PICHN3	   554#
PICHN4	   554#
PICHN5	   554#
PICHN6	   554#
PICHN7	   554#
PICHNA	   554#
PICLR	   554#
PIOFF	   554#
PION	   554#
PISOR	 11164	 11170	 11200#
PLIST	   788#	   788
PLISTE	   788	   790#
PLISTS	   789#
PLUS	   754#
PNTENB	   718#
PNTEXT	   597#
PNTFLG	   717#
PNTINH	   720#
PNTLPT	   295#
PNTNAM	   596#
PNTRP	   554#
PNTSPC	   721#
PRES	  8504	  8524	  8554	  8574	  8608	  8628	  8648	  8668	  8688	  8708	  8728	  8748	  8768	  8788
	  8808	  8828	  8848	  8868	  8888	  8908	  8928	  8948	  8968	  8988	  9008	  9028	  9048	  9068
	  9104	  9134	  9163	  9193	  9223	  9253	  9284	  9314	  9344	  9374	  9404	  9446	  9474	  9503
	  9531	  9559	  9587	  9615	  9643	  9671	  9699	  9727	  9755	  9783	  9811	  9839	  9867	  9912
	  9940	  9968	  9996	 10026	 10056	 10085	 10115	 11176	 11180	 11184	 11188	 11192	 11201#
PRET	 11202#
PSUBR	  8505	  8525	  8555	  8575	  8609	  8629	  8649	  8669	  8689	  8709	  8729	  8749	  8769	  8789
	  8809	  8829	  8849	  8869	  8889	  8909	  8929	  8949	  8969	  8989	  9009	  9029	  9049	  9069
	  9105	  9135	  9164	  9194	  9224	  9254	  9285	  9315	  9345	  9375	  9405	  9447	  9475	  9504
	  9532	  9560	  9588	  9616	  9644	  9672	  9700	  9728	  9756	  9784	  9812	  9840	  9868	  9913
	  9941	  9969	  9997	 10027	 10057	 10086	 10116	 11164#
PTEST	 11189	 11195#
PTRP	   554#
PVPAGI	   815#
QUEST	   760#
RADIX	   763#
RADLSC	   765#
RADLSP	   764#
RANDBS	   598#
REENTR	   578#
RELIAB	   302#                                                                                                            SEQ 0315
REP	  1133#	  1164	  1164#	  1166	  1167	  1214	  1221	  1221#	  1223	  1224	  1271	  1278	  1278#	  1280
	  1281	  1328	  1335	  1335#	  1337	  1338	  1385	  1386#	  1392	  1392#	  1394	  1395	  1442	  1449
	  1449#	  1451	  1452	  1499	  1506	  1506#	  1508	  1509	  1556	  1563	  1563#	  1565	  1566	  1613
	  1614#	  2088#	  2111	  2111#	  2122	  2123	  2159	  2159#	  2170	  2171	  2207	  2207#	  2218	  2219
	  2255	  2255#	  2266	  2267	  2303	  2303#	  2314	  2315	  2351	  2351#	  2362	  2363	  5561#	  5588
	  5588#	  5589	  5636	  5636#	  5637	  5684	  5684#	  5685	  5732	  5732#	  5733	  5780	  5780#	  5781
	  5828	  5828#	  5829	  5876	  5876#	  5877	  5924	  5924#	  5925
REPP	  1134#	  1168	  1225	  1282	  1339	  1385#	  1396	  1453	  1510	  1567	  1613#
REPT	   554#
REPT1	   554#
REPTU	   676#
REQSET	   554#
RESRT1	   653#
RESRT2	   654#
RESULT	  5562#	  5603	  5606	  5611	  5651	  5654	  5659	  5699	  5702	  5707	  5747	  5750	  5755	  5782#
	  5795	  5798	  5803	  5830#	  5843	  5846	  5851	  5878#	  5891	  5894	  5899	  5926#	  5939	  5942
	  5947
RETURN	   585#
RLEFT	  2122#	  2127	  2135	  2170#	  2175	  2183	  2218#	  2223	  2231	  2266#	  2271	  2279	  2314#	  2319
	  2327	  2362#	  2367	  2375
RRIGHT	  2123#	  2130	  2135	  2171#	  2178	  2183	  2219#	  2226	  2231	  2267#	  2274	  2279	  2315#	  2322
	  2327	  2363#	  2370	  2375
RSTART	   291#
RTP	   758#
RUNFLG	   625#
SADR1	    49#	   574
SADR10	    58#	   590
SADR11	    59#	   591
SADR2	    50#	   576
SADR3	    51#	   578
SADR4	    52#
SADR5	    53#	   639
SADR6	    54#	   640
SADR7	    55#	   587
SADR8	    56#	   588
SADR9	    57#	   589
SBINIT	   364	   584#
SCONC1	  4480	  5373#
SCONC2	  4659	  5410#
SCONC3	  4838	  5447#
SCONC4	  5017	  5484#
SCONC5	  5196	  5508#
SCOND	  5559	  5973#
SCOPE	   677#
SCR0	    40#	    41	    42	    43	  4346	  4346#	  4372	  4373	  4375	  4376	  4387	  4393	  4396	  4401
	  4402	  4403	  4411	  4412	  4414
SCR1	    41#	   947	   950	   955	   956	   958	   972	   975	   980	   981	   983	   997	  1000	  1005
	  1006	  1008	  1022	  1025	  1030	  1031	  1033	  1047	  1050	  1055	  1056	  1058	  1072	  1075
	  1080	  1081	  1083	  1097	  1100	  1105	  1106	  1108	  1176	  1179	  1184	  1185	  1187	  1198
	  1201	  1206	  1207	  1209	  1233	  1236	  1241	  1242	  1244	  1255	  1258	  1263	  1264	  1266
	  1290	  1293	  1298	  1299	  1301	  1312	  1315	  1320	  1321	  1323	  1347	  1350	  1355	  1356
	  1358	  1369	  1372	  1377	  1378	  1380	  1404	  1407	  1412	  1413	  1415	  1426	  1429	  1434
	  1435	  1437	  1461	  1464	  1469	  1470	  1472	  1483	  1486	  1491	  1492	  1494	  1518	  1521     SEQ 0316
	  1526	  1527	  1529	  1540	  1543	  1548	  1549	  1551	  1575	  1578	  1583	  1584	  1586	  1597
	  1600	  1605	  1606	  1608	  1648	  1651	  1655	  1656	  1658	  1690	  1693	  1698	  1699	  1701
	  1715	  1718	  1723	  1724	  1726	  1782	  1785	  1790	  1791	  1793	  1799	  1801	  1802	  1827
	  1830	  1835	  1836	  1838	  1844	  1846	  1847	  1872	  1875	  1880	  1881	  1883	  1889	  1891
	  1892	  1917	  1920	  1925	  1926	  1928	  1934	  1936	  1937	  1962	  1965	  1970	  1971	  1973
	  1979	  1981	  1982	  2007	  2010	  2015	  2016	  2018	  2024	  2026	  2027	  2126	  2129	  2134
	  2135	  2137	  2143	  2145	  2146	  2174	  2177	  2182	  2183	  2185	  2191	  2193	  2194	  2222
	  2225	  2230	  2231	  2233	  2239	  2241	  2242	  2270	  2273	  2278	  2279	  2281	  2287	  2289
	  2290	  2318	  2321	  2326	  2327	  2329	  2335	  2337	  2338	  2366	  2369	  2374	  2375	  2377
	  2383	  2385	  2386	  2431	  2434	  2439	  2440	  2442	  2448	  2450	  2451	  2476	  2479	  2484
	  2485	  2487	  2493	  2495	  2496	  2521	  2524	  2529	  2530	  2532	  2538	  2540	  2541	  2566
	  2569	  2574	  2575	  2577	  2583	  2585	  2586	  2611	  2614	  2619	  2620	  2622	  2628	  2630
	  2631	  2656	  2659	  2664	  2665	  2667	  2673	  2675	  2676	  2721	  2724	  2729	  2730	  2732
	  2738	  2740	  2741	  2766	  2769	  2774	  2775	  2777	  2783	  2785	  2786	  2811	  2814	  2819
	  2820	  2822	  2828	  2830	  2831	  2856	  2859	  2864	  2865	  2867	  2873	  2875	  2876	  2901
	  2904	  2909	  2910	  2912	  2918	  2920	  2921	  2946	  2949	  2954	  2955	  2957	  2963	  2965
	  2966	  3011	  3014	  3019	  3020	  3022	  3028	  3030	  3031	  3056	  3059	  3064	  3065	  3067
	  3073	  3075	  3076	  3101	  3104	  3109	  3110	  3112	  3118	  3120	  3121	  3146	  3149	  3154
	  3155	  3157	  3163	  3165	  3166	  3191	  3194	  3199	  3200	  3202	  3208	  3210	  3211	  3236
	  3239	  3244	  3245	  3247	  3253	  3255	  3256	  3301	  3304	  3309	  3310	  3312	  3318	  3320
	  3321	  3346	  3349	  3354	  3355	  3357	  3363	  3365	  3366	  3391	  3394	  3399	  3400	  3402
	  3408	  3410	  3411	  3436	  3439	  3444	  3445	  3447	  3453	  3455	  3456	  3481	  3484	  3489
	  3490	  3492	  3498	  3500	  3501	  3526	  3529	  3534	  3535	  3537	  3543	  3545	  3546	  3745
	  3748	  3753	  3754	  3756	  3762	  3764	  3765	  3790	  3793	  3798	  3799	  3801	  3807	  3809
	  3810	  3835	  3838	  3843	  3844	  3846	  3852	  3854	  3855	  3880	  3883	  3888	  3889	  3891
	  3897	  3899	  3900	  3925	  3928	  3933	  3934	  3936	  3942	  3944	  3945	  3970	  3973	  3978
	  3979	  3981	  3987	  3989	  3990	  4015	  4018	  4023	  4024	  4026	  4032	  4034	  4035	  4060
	  4063	  4068	  4069	  4071	  4077	  4079	  4080	  4167	  4170	  4175	  4176	  4178	  4192	  4195
	  4200	  4201	  4203	  4217	  4220	  4225	  4226	  4228	  4242	  4245	  4250	  4251	  4253	  4267
	  4270	  4275	  4276	  4278	  4292	  4295	  4300	  4301	  4303	  4374	  4390	  4394	  4396	  4417
	  4422	  4424	  4425	  4503	  4506	  4511	  4512	  4514	  4530	  4533	  4538	  4539	  4541	  4557
	  4560	  4565	  4566	  4568	  4584	  4587	  4592	  4593	  4595	  4611	  4614	  4619	  4620	  4622
	  4638	  4641	  4646	  4647	  4649	  4682	  4685	  4690	  4691	  4693	  4709	  4712	  4717	  4718
	  4720	  4736	  4739	  4744	  4745	  4747	  4763	  4766	  4771	  4772	  4774	  4790	  4793	  4798
	  4799	  4801	  4817	  4820	  4825	  4826	  4828	  4861	  4864	  4869	  4870	  4872	  4888	  4891
	  4896	  4897	  4899	  4915	  4918	  4923	  4924	  4926	  4942	  4945	  4950	  4951	  4953	  4969
	  4972	  4977	  4978	  4980	  4996	  4999	  5004	  5005	  5007	  5040	  5043	  5048	  5049	  5051
	  5067	  5070	  5075	  5076	  5078	  5094	  5097	  5102	  5103	  5105	  5121	  5124	  5129	  5130
	  5132	  5148	  5151	  5156	  5157	  5159	  5175	  5178	  5183	  5184	  5186	  5219	  5222	  5227
	  5228	  5230	  5246	  5249	  5254	  5255	  5257	  5273	  5276	  5281	  5282	  5284	  5300	  5303
	  5308	  5309	  5311	  5327	  5330	  5335	  5336	  5338	  5354	  5357	  5362	  5363	  5365	  5602
	  5605	  5610	  5611	  5613	  5620	  5622	  5623	  5650	  5653	  5658	  5659	  5661	  5668	  5670
	  5671	  5698	  5701	  5706	  5707	  5709	  5716	  5718	  5719	  5746	  5749	  5754	  5755	  5757
	  5764	  5766	  5767	  5794	  5797	  5802	  5803	  5805	  5812	  5814	  5815	  5842	  5845	  5850
	  5851	  5853	  5860	  5862	  5863	  5890	  5893	  5898	  5899	  5901	  5908	  5910	  5911	  5938
	  5941	  5946	  5947	  5949	  5956	  5958	  5959	  6037	  6056	  6075	  6094	  6113	  6132	  6151
	  6170	  6189	  6208	  6227	  6246	  6265	  6296	  6315	  6334	  6353	  6372	  6391	  6410	  6429
	  6448	  6467	  6486	  6505	  6543	  6570	  6598	  6626	  6653	  6680	  6708	  6735	  6762	  6790
	  6817	  6844	  6872	  6900	  6927	  6954	  6982	  7009	  7036	  7064	  7110	  7137	  7165	  7193
	  7220	  7247	  7276	  7303	  7330	  7359	  7386	  7413	  7441	  7469	  7496	  7523	  7552	  7579
	  7606	  7635	  7667	  7677	  7680	  7683	  7686	  7688	  7726	  7753	  7780	  7807	  7844	  7871
	  7898	  7925	  7952	  7979	  8006	  8033	  8060	  8087	  8114	  8141	  8168	  8195	  8222	  8249
	  8276	  8304	  8332	  8359	  8386	  8413	  8440	  8467	  8507	  8527	  8557	  8577	  8611	  8631     SEQ 0317
	  8651	  8671	  8691	  8711	  8731	  8751	  8771	  8791	  8811	  8831	  8851	  8871	  8891	  8911
	  8931	  8951	  8971	  8991	  9011	  9031	  9051	  9071	  9107	  9137	  9166	  9196	  9226	  9256
	  9287	  9317	  9347	  9377	  9407	  9449	  9477	  9506	  9534	  9562	  9590	  9618	  9646	  9674
	  9702	  9730	  9758	  9786	  9814	  9842	  9870	  9915	  9943	  9971	  9999	 10029	 10059	 10088
	 10118	 10187	 10215	 10243	 10271	 10299	 10327	 10355	 10383	 10411	 10439	 10467	 10495	 10523
	 10551	 10579	 10607	 10635	 10663	 10692	 10720	 10748	 10776	 10804	 10832	 10860	 10888	 10918
	 10947	 10975	 11004	 11033	 11062	 11091	 11127	 11131	 11135	 11139	 11143	 11144	 11175	 11179
	 11183	 11187	 11191	 11192	 11239	 11240	 11241	 11242	 11243	 11244	 11246	 11250	 11254	 11258
	 11262	 11263	 11289	 11290	 11293	 11294	 11300	 11301	 11304	 11305	 11326	 11327	 11330	 11331
	 11337	 11338	 11341	 11342	 11363	 11364	 11367	 11368	 11374	 11375	 11378	 11379	 11406	 11407
	 11410	 11411	 11414	 11415	 11418	 11419	 11425	 11426	 11429	 11430
SCR2	    42#	   955	   958	   980	   983	  1005	  1008	  1030	  1033	  1055	  1058	  1080	  1083	  1105
	  1108	  1184	  1187	  1206	  1209	  1241	  1244	  1263	  1266	  1298	  1301	  1320	  1323	  1355
	  1358	  1377	  1380	  1412	  1415	  1434	  1437	  1469	  1472	  1491	  1494	  1526	  1529	  1548
	  1551	  1583	  1586	  1605	  1608	  1655	  1658	  1698	  1701	  1723	  1726	  1790	  1793	  1800
	  1801	  1804	  1835	  1838	  1845	  1846	  1849	  1880	  1883	  1890	  1891	  1894	  1925	  1928
	  1935	  1936	  1939	  1970	  1973	  1980	  1981	  1984	  2015	  2018	  2025	  2026	  2029	  2134
	  2137	  2144	  2145	  2149	  2182	  2185	  2192	  2193	  2197	  2230	  2233	  2240	  2241	  2245
	  2278	  2281	  2288	  2289	  2293	  2326	  2329	  2336	  2337	  2341	  2374	  2377	  2384	  2385
	  2389	  2439	  2442	  2449	  2450	  2454	  2484	  2487	  2494	  2495	  2499	  2529	  2532	  2539
	  2540	  2544	  2574	  2577	  2584	  2585	  2589	  2619	  2622	  2629	  2630	  2634	  2664	  2667
	  2674	  2675	  2679	  2729	  2732	  2739	  2740	  2744	  2774	  2777	  2784	  2785	  2789	  2819
	  2822	  2829	  2830	  2834	  2864	  2867	  2874	  2875	  2879	  2909	  2912	  2919	  2920	  2924
	  2954	  2957	  2964	  2965	  2969	  3019	  3022	  3029	  3030	  3034	  3064	  3067	  3074	  3075
	  3079	  3109	  3112	  3119	  3120	  3124	  3154	  3157	  3164	  3165	  3169	  3199	  3202	  3209
	  3210	  3214	  3244	  3247	  3254	  3255	  3259	  3309	  3312	  3319	  3320	  3324	  3354	  3357
	  3364	  3365	  3369	  3399	  3402	  3409	  3410	  3414	  3444	  3447	  3454	  3455	  3459	  3489
	  3492	  3499	  3500	  3504	  3534	  3537	  3544	  3545	  3549	  3753	  3756	  3763	  3764	  3767
	  3798	  3801	  3808	  3809	  3812	  3843	  3846	  3853	  3854	  3857	  3888	  3891	  3898	  3899
	  3902	  3933	  3936	  3943	  3944	  3947	  3978	  3981	  3988	  3989	  3992	  4023	  4026	  4033
	  4034	  4037	  4068	  4071	  4078	  4079	  4082	  4175	  4178	  4200	  4203	  4225	  4228	  4250
	  4253	  4275	  4278	  4300	  4303	  4378	  4389	  4393	  4394	  4400	  4408	  4423	  4424	  4428
	  4511	  4514	  4538	  4541	  4565	  4568	  4592	  4595	  4619	  4622	  4646	  4649	  4690	  4693
	  4717	  4720	  4744	  4747	  4771	  4774	  4798	  4801	  4825	  4828	  4869	  4872	  4896	  4899
	  4923	  4926	  4950	  4953	  4977	  4980	  5004	  5007	  5048	  5051	  5075	  5078	  5102	  5105
	  5129	  5132	  5156	  5159	  5183	  5186	  5227	  5230	  5254	  5257	  5281	  5284	  5308	  5311
	  5335	  5338	  5362	  5365	  5610	  5613	  5621	  5622	  5625	  5658	  5661	  5669	  5670	  5673
	  5706	  5709	  5717	  5718	  5721	  5754	  5757	  5765	  5766	  5769	  5802	  5805	  5813	  5814
	  5817	  5850	  5853	  5861	  5862	  5865	  5898	  5901	  5909	  5910	  5913	  5946	  5949	  5957
	  5958	  5961	  6037	  6056	  6075	  6094	  6113	  6132	  6151	  6170	  6189	  6208	  6227	  6246
	  6265	  6296	  6315	  6334	  6353	  6372	  6391	  6410	  6429	  6448	  6467	  6486	  6505	  6543
	  6547	  6548	  6551	  6570	  6574	  6575	  6578	  6598	  6602	  6603	  6606	  6626	  6630	  6631
	  6634	  6653	  6657	  6658	  6661	  6680	  6684	  6685	  6688	  6708	  6712	  6713	  6716	  6735
	  6739	  6740	  6743	  6762	  6766	  6767	  6770	  6790	  6794	  6795	  6798	  6817	  6821	  6822
	  6825	  6844	  6848	  6849	  6852	  6872	  6876	  6877	  6880	  6900	  6904	  6905	  6908	  6927
	  6931	  6932	  6935	  6954	  6958	  6959	  6962	  6982	  6986	  6987	  6990	  7009	  7013	  7014
	  7017	  7036	  7040	  7041	  7044	  7064	  7068	  7069	  7072	  7110	  7114	  7115	  7118	  7137
	  7141	  7142	  7145	  7165	  7169	  7170	  7173	  7193	  7197	  7198	  7201	  7220	  7224	  7225
	  7228	  7247	  7251	  7252	  7255	  7276	  7280	  7281	  7284	  7303	  7307	  7308	  7311	  7330
	  7334	  7335	  7338	  7359	  7363	  7364	  7367	  7386	  7390	  7391	  7394	  7413	  7417	  7418
	  7421	  7441	  7445	  7446	  7449	  7469	  7473	  7474	  7477	  7496	  7500	  7501	  7504	  7523
	  7527	  7528	  7531	  7552	  7556	  7557	  7560	  7579	  7583	  7584	  7587	  7606	  7610	  7611
	  7614	  7635	  7639	  7640	  7643	  7726	  7730	  7731	  7734	  7753	  7757	  7758	  7761	  7780     SEQ 0318
	  7784	  7785	  7788	  7807	  7811	  7812	  7815	  7844	  7848	  7849	  7852	  7871	  7875	  7876
	  7879	  7898	  7902	  7903	  7906	  7925	  7929	  7930	  7933	  7952	  7956	  7957	  7960	  7979
	  7983	  7984	  7987	  8006	  8010	  8011	  8014	  8033	  8037	  8038	  8041	  8060	  8064	  8065
	  8068	  8087	  8091	  8092	  8095	  8114	  8118	  8119	  8122	  8141	  8145	  8146	  8149	  8168
	  8172	  8173	  8176	  8195	  8199	  8200	  8203	  8222	  8226	  8227	  8230	  8249	  8253	  8254
	  8257	  8276	  8280	  8281	  8284	  8304	  8308	  8309	  8312	  8332	  8336	  8337	  8340	  8359
	  8363	  8364	  8367	  8386	  8390	  8391	  8394	  8413	  8417	  8418	  8421	  8440	  8444	  8445
	  8448	  8467	  8471	  8472	  8475	  8507	  8527	  8557	  8577	  8611	  8631	  8651	  8671	  8691
	  8711	  8731	  8751	  8771	  8791	  8811	  8831	  8851	  8871	  8891	  8911	  8931	  8951	  8971
	  8991	  9011	  9031	  9051	  9071	  9107	  9111	  9112	  9115	  9137	  9141	  9142	  9145	  9166
	  9170	  9171	  9174	  9196	  9200	  9201	  9204	  9226	  9230	  9231	  9234	  9256	  9260	  9261
	  9264	  9287	  9291	  9292	  9295	  9317	  9321	  9322	  9325	  9347	  9351	  9352	  9355	  9377
	  9381	  9382	  9385	  9407	  9411	  9412	  9415	  9449	  9453	  9454	  9457	  9477	  9481	  9482
	  9485	  9506	  9510	  9511	  9514	  9534	  9538	  9539	  9542	  9562	  9566	  9567	  9570	  9590
	  9594	  9595	  9598	  9618	  9622	  9623	  9626	  9646	  9650	  9651	  9654	  9674	  9678	  9679
	  9682	  9702	  9706	  9707	  9710	  9730	  9734	  9735	  9738	  9758	  9762	  9763	  9766	  9786
	  9790	  9791	  9794	  9814	  9818	  9819	  9822	  9842	  9846	  9847	  9850	  9870	  9874	  9875
	  9878	  9915	  9919	  9920	  9923	  9943	  9947	  9948	  9951	  9971	  9975	  9976	  9979	  9999
	 10003	 10004	 10007	 10029	 10033	 10034	 10037	 10059	 10063	 10064	 10067	 10088	 10092	 10093
	 10096	 10118	 10122	 10123	 10126	 10187	 10191	 10192	 10193	 10196	 10215	 10219	 10220	 10221
	 10224	 10243	 10247	 10248	 10249	 10252	 10271	 10275	 10276	 10277	 10280	 10299	 10303	 10304
	 10305	 10308	 10327	 10331	 10332	 10333	 10336	 10355	 10359	 10360	 10361	 10364	 10383	 10387
	 10388	 10389	 10392	 10411	 10415	 10416	 10417	 10420	 10439	 10443	 10444	 10445	 10448	 10467
	 10471	 10472	 10473	 10476	 10495	 10499	 10500	 10501	 10504	 10523	 10527	 10528	 10529	 10532
	 10551	 10555	 10556	 10557	 10560	 10579	 10583	 10584	 10585	 10588	 10607	 10611	 10612	 10613
	 10616	 10635	 10639	 10640	 10641	 10644	 10663	 10667	 10668	 10669	 10672	 10692	 10696	 10697
	 10698	 10701	 10720	 10724	 10725	 10726	 10729	 10748	 10752	 10753	 10754	 10757	 10776	 10780
	 10781	 10782	 10785	 10804	 10808	 10809	 10810	 10813	 10832	 10836	 10837	 10838	 10841	 10860
	 10864	 10865	 10866	 10869	 10888	 10892	 10893	 10894	 10897	 10918	 10922	 10923	 10924	 10927
	 10947	 10951	 10952	 10953	 10956	 10975	 10979	 10980	 10981	 10984	 11004	 11008	 11009	 11010
	 11013	 11033	 11037	 11038	 11039	 11042	 11062	 11066	 11067	 11068	 11071	 11091	 11095	 11096
	 11097	 11100	 11143	 11191	 11262
SCR3	    43#	   942	   967	   992	  1017	  1042	  1067	  1092	  1171	  1194	  1228	  1251	  1285	  1308
	  1342	  1365	  1399	  1422	  1456	  1479	  1513	  1536	  1570	  1593	  1641	  1685	  1710	  1772
	  1773	  1817	  1818	  1862	  1863	  1907	  1908	  1952	  1953	  1997	  1998	  2113	  2161	  2209
	  2257	  2305	  2353	  2420	  2465	  2510	  2555	  2600	  2645	  2710	  2755	  2800	  2845	  2890
	  2935	  3000	  3045	  3090	  3135	  3180	  3225	  3290	  3335	  3380	  3425	  3470	  3515	  3734
	  3779	  3824	  3869	  3914	  3959	  4004	  4049	  4162	  4187	  4212	  4237	  4262	  4287	  4364
	  4365	  4498	  4525	  4552	  4579	  4606	  4633	  4677	  4704	  4731	  4758	  4785	  4812	  4856
	  4883	  4910	  4937	  4964	  4991	  5035	  5062	  5089	  5116	  5143	  5170	  5214	  5241	  5268
	  5295	  5322	  5349	  5591	  5617	  5639	  5665	  5687	  5713	  5735	  5761	  5783	  5809	  5831
	  5857	  5879	  5905	  5927	  5953	  7692	  7693	 11116	 11164	 11224	 11289	 11300	 11326	 11337
	 11363	 11374	 11406	 11425
SENDC	  5371	  5532#
SENDD	  5967	  6005#
SFSTRT	   574#
SLASH	   761#
SM10	   865#	 11237
SNTRP	   554#
SPACE	   750#
SPRINT	  4178	  4203	  4228	  4253	  4278	  4303	  4396	  4428	  4514	  4541	  4568	  4595	  4622	  4649
	  4693	  4720	  4747	  4774	  4801	  4828	  4872	  4899	  4926	  4953	  4980	  5007	  5051	  5078
	  5105	  5132	  5159	  5186	  5230	  5257	  5284	  5311	  5338	  5365	  5613	  5625	  5661	  5673     SEQ 0319
	  5709	  5721	  5757	  5769	  5805	  5817	  5853	  5865	  5901	  5913	  5949	  5961	 11324#
SRTDDT	    52	   580#
START	    51	   568	   920#
START1	   587#
START2	   588#
START3	   589#
START4	   590#
START5	   591#
STARTA	    49	    50	    53	   583	   921#
STEST1	  4162#	  4179
STEST2	  4187#	  4204
STEST3	  4212#	  4229
STEST4	  4237#	  4254
STEST5	  4262#	  4279
STEST6	  4287#	  4304
STRP	   554#
SUBLNK	   326#	   584
SUBT	  4353	  4358	  4434#
SUBTR	  4345#	  4358	  4360	  4361	  4363	  4365
SWPTAB	   871#
SWTEXR	   599#
SYSEXR	   572#
T	   924#	   958	   983	  1008	  1033	  1058	  1083	  1108	  1187	  1209	  1244	  1266	  1301	  1323
	  1358	  1380	  1415	  1437	  1472	  1494	  1529	  1551	  1586	  1608	  1658	  1701	  1726	  1793
	  1804	  1838	  1849	  1883	  1894	  1928	  1939	  1973	  1984	  2018	  2029	  2137	  2149	  2185
	  2197	  2233	  2245	  2281	  2293	  2329	  2341	  2377	  2389	  2442	  2454	  2487	  2499	  2532
	  2544	  2577	  2589	  2622	  2634	  2667	  2679	  2732	  2744	  2777	  2789	  2822	  2834	  2867
	  2879	  2912	  2924	  2957	  2969	  3022	  3034	  3067	  3079	  3112	  3124	  3157	  3169	  3202
	  3214	  3247	  3259	  3312	  3324	  3357	  3369	  3402	  3414	  3447	  3459	  3492	  3504	  3537
	  3549	  3756	  3767	  3801	  3812	  3846	  3857	  3891	  3902	  3936	  3947	  3981	  3992	  4026
	  4037	  4071	  4082	  4145#	  4178	  4203	  4228	  4253	  4278	  4303	  4396	  4428	  4514	  4541
	  4568	  4595	  4622	  4649	  4693	  4720	  4747	  4774	  4801	  4828	  4872	  4899	  4926	  4953
	  4980	  5007	  5051	  5078	  5105	  5132	  5159	  5186	  5230	  5257	  5284	  5311	  5338	  5365
	  5613	  5625	  5661	  5673	  5709	  5721	  5757	  5769	  5805	  5817	  5853	  5865	  5901	  5913
	  5949	  5961	  6008#	  6037	  6056	  6075	  6094	  6113	  6132	  6151	  6170	  6189	  6208	  6227
	  6246	  6265	  6296	  6315	  6334	  6353	  6372	  6391	  6410	  6429	  6448	  6467	  6486	  6505
	  6543	  6551	  6570	  6578	  6598	  6606	  6626	  6634	  6653	  6661	  6680	  6688	  6708	  6716
	  6735	  6743	  6762	  6770	  6790	  6798	  6817	  6825	  6844	  6852	  6872	  6880	  6900	  6908
	  6927	  6935	  6954	  6962	  6982	  6990	  7009	  7017	  7036	  7044	  7064	  7072	  7110	  7118
	  7137	  7145	  7165	  7173	  7193	  7201	  7220	  7228	  7247	  7255	  7276	  7284	  7303	  7311
	  7330	  7338	  7359	  7367	  7386	  7394	  7413	  7421	  7441	  7449	  7469	  7477	  7496	  7504
	  7523	  7531	  7552	  7560	  7579	  7587	  7606	  7614	  7635	  7643	  7688	  7695	  7726	  7734
	  7753	  7761	  7780	  7788	  7807	  7815	  7844	  7852	  7871	  7879	  7898	  7906	  7925	  7933
	  7952	  7960	  7979	  7987	  8006	  8014	  8033	  8041	  8060	  8068	  8087	  8095	  8114	  8122
	  8141	  8149	  8168	  8176	  8195	  8203	  8222	  8230	  8249	  8257	  8276	  8284	  8304	  8312
	  8332	  8340	  8359	  8367	  8386	  8394	  8413	  8421	  8440	  8448	  8467	  8475	  8481#	  8507
	  8527	  8557	  8577	  8611	  8631	  8651	  8671	  8691	  8711	  8731	  8751	  8771	  8791	  8811
	  8831	  8851	  8871	  8891	  8911	  8931	  8951	  8971	  8991	  9011	  9031	  9051	  9071	  9107
	  9115	  9137	  9145	  9166	  9174	  9196	  9204	  9226	  9234	  9256	  9264	  9287	  9295	  9317
	  9325	  9347	  9355	  9377	  9385	  9407	  9415	  9449	  9457	  9477	  9485	  9506	  9514	  9534
	  9542	  9562	  9570	  9590	  9598	  9618	  9626	  9646	  9654	  9674	  9682	  9702	  9710	  9730
	  9738	  9758	  9766	  9786	  9794	  9814	  9822	  9842	  9850	  9870	  9878	  9915	  9923	  9943
	  9951	  9971	  9979	  9999	 10007	 10029	 10037	 10059	 10067	 10088	 10096	 10118	 10126	 10187     SEQ 0320
	 10196	 10215	 10224	 10243	 10252	 10271	 10280	 10299	 10308	 10327	 10336	 10355	 10364	 10383
	 10392	 10411	 10420	 10439	 10448	 10467	 10476	 10495	 10504	 10523	 10532	 10551	 10560	 10579
	 10588	 10607	 10616	 10635	 10644	 10663	 10672	 10692	 10701	 10720	 10729	 10748	 10757	 10776
	 10785	 10804	 10813	 10832	 10841	 10860	 10869	 10888	 10897	 10918	 10927	 10947	 10956	 10975
	 10984	 11004	 11013	 11033	 11042	 11062	 11071	 11091	 11100
TAB	   751#
TEMP	  1643	  1649	  1652	  1655	  1668#
TESTPC	   626#
THREE	  9086#	  9102	  9132	  9161	  9191	  9312
TICKS	   629#
TN0	   554#
TN1	   554#
TOTALS	   292#
TRP3TP	   554#
TTNBRF	   809#
TTYFIL	   725#
TTYSPD	   726#
TWO	  9085#	  9161	  9191	  9251	  9402
TXTINH	   303#
UBAVEC	   554#
USER	   616#
USERF	   554#
USRASB	    70#	   606
USRCRF	   735#
USRLFF	   734#
UUODIS	   688#
UUOEXT	   644#
UUORTN	   645#
UUOSKP	   642#
$$MUUO	   840#
$$OUTE	   846#
$$TAX1	   858#
$$TAX2	   859#
$$TOGG	   852#
$$UUO	   829#
$ACC0	   667#
$BEND1	   637#
$BEND2	   638#
$CHRIN	   728#
$CRLF	   730#
$DEVCH	   554#
$DSKUP	   607#
$DVOFF	   724#
$EMODE	   605#
$FFF	   732#
$IBUF	   780#
$INEXT	   782#
$INNM	   781#
$ITRHL	   648#
$ITRX1	   649#
$LPAPE	 11458
$MMAP	   608#
$MODVL	   603#                                                                                                            SEQ 0321
$MODVU	   604#
$OBUF	   771#
$ONETM	   631#
$OUTEX	   773#
$OUTNM	   772#
$PAPER	   554
$PARER	   655#
$PNAME	   601#
$PSHER	   659#
$PVER	   602#
$RSRTX	   651#
$RSRTY	   652#
$SPAG1	   671#
$START	   568#
$SVAPR	   669#
$SVPAG	   670#
$SVPI	   668#
$SVUPC	   674#
$SVUUO	   673#
$TABF	   731#
$TTCHR	   727#
$TWCNT	   723#
$TYPNB	   729#
$UMODE	   606#
$UORTX	   646#
$USRHL	   650#
$UUOER	   647#	   688
$VTF	   733#
%ACTFL	   680#
%ACTUL	   681#
%COREC	   679#
%CORFL	   678#
%DISCR	   682#
%ERHI1	   821#
%ERHI2	   822#
%ERHI3	   823#
..0001	   949	   955#
..0002	   952	   957#
..0003	   974	   980#
..0004	   977	   982#
..0005	   999	  1005#
..0006	  1002	  1007#
..0007	  1024	  1030#
..0010	  1027	  1032#
..0011	  1049	  1055#
..0012	  1052	  1057#
..0013	  1074	  1080#
..0014	  1077	  1082#
..0015	  1099	  1105#
..0016	  1102	  1107#
..0017	  1178	  1184#
..0020	  1181	  1186#
..0021	  1200	  1206#                                                                                                    SEQ 0322
..0022	  1203	  1208#
..0023	  1235	  1241#
..0024	  1238	  1243#
..0025	  1257	  1263#
..0026	  1260	  1265#
..0027	  1292	  1298#
..0030	  1295	  1300#
..0031	  1314	  1320#
..0032	  1317	  1322#
..0033	  1349	  1355#
..0034	  1352	  1357#
..0035	  1371	  1377#
..0036	  1374	  1379#
..0037	  1406	  1412#
..0040	  1409	  1414#
..0041	  1428	  1434#
..0042	  1431	  1436#
..0043	  1463	  1469#
..0044	  1466	  1471#
..0045	  1485	  1491#
..0046	  1488	  1493#
..0047	  1520	  1526#
..0050	  1523	  1528#
..0051	  1542	  1548#
..0052	  1545	  1550#
..0053	  1577	  1583#
..0054	  1580	  1585#
..0055	  1599	  1605#
..0056	  1602	  1607#
..0057	  1692	  1698#
..0060	  1695	  1700#
..0061	  1717	  1723#
..0062	  1720	  1725#
..0063	  1784	  1790#
..0064	  1787	  1792#
..0065	  1829	  1835#
..0066	  1832	  1837#
..0067	  1874	  1880#
..0070	  1877	  1882#
..0071	  1919	  1925#
..0072	  1922	  1927#
..0073	  1964	  1970#
..0074	  1967	  1972#
..0075	  2009	  2015#
..0076	  2012	  2017#
..0077	  2128	  2134#
..0100	  2131	  2136#
..0101	  2176	  2182#
..0102	  2179	  2184#
..0103	  2224	  2230#
..0104	  2227	  2232#
..0105	  2272	  2278#
..0106	  2275	  2280#                                                                                                    SEQ 0323
..0107	  2320	  2326#
..0110	  2323	  2328#
..0111	  2368	  2374#
..0112	  2371	  2376#
..0113	  2433	  2439#
..0114	  2436	  2441#
..0115	  2478	  2484#
..0116	  2481	  2486#
..0117	  2523	  2529#
..0120	  2526	  2531#
..0121	  2568	  2574#
..0122	  2571	  2576#
..0123	  2613	  2619#
..0124	  2616	  2621#
..0125	  2658	  2664#
..0126	  2661	  2666#
..0127	  2723	  2729#
..0130	  2726	  2731#
..0131	  2768	  2774#
..0132	  2771	  2776#
..0133	  2813	  2819#
..0134	  2816	  2821#
..0135	  2858	  2864#
..0136	  2861	  2866#
..0137	  2903	  2909#
..0140	  2906	  2911#
..0141	  2948	  2954#
..0142	  2951	  2956#
..0143	  3013	  3019#
..0144	  3016	  3021#
..0145	  3058	  3064#
..0146	  3061	  3066#
..0147	  3103	  3109#
..0150	  3106	  3111#
..0151	  3148	  3154#
..0152	  3151	  3156#
..0153	  3193	  3199#
..0154	  3196	  3201#
..0155	  3238	  3244#
..0156	  3241	  3246#
..0157	  3303	  3309#
..0160	  3306	  3311#
..0161	  3348	  3354#
..0162	  3351	  3356#
..0163	  3393	  3399#
..0164	  3396	  3401#
..0165	  3438	  3444#
..0166	  3441	  3446#
..0167	  3483	  3489#
..0170	  3486	  3491#
..0171	  3528	  3534#
..0172	  3531	  3536#
..0173	  3747	  3753#                                                                                                    SEQ 0324
..0174	  3750	  3755#
..0175	  3792	  3798#
..0176	  3795	  3800#
..0177	  3837	  3843#
..0200	  3840	  3845#
..0201	  3882	  3888#
..0202	  3885	  3890#
..0203	  3927	  3933#
..0204	  3930	  3935#
..0205	  3972	  3978#
..0206	  3975	  3980#
..0207	  4017	  4023#
..0210	  4020	  4025#
..0211	  4062	  4068#
..0212	  4065	  4070#
..0213	  4169	  4175#
..0214	  4172	  4177#
..0215	  4194	  4200#
..0216	  4197	  4202#
..0217	  4219	  4225#
..0220	  4222	  4227#
..0221	  4244	  4250#
..0222	  4247	  4252#
..0223	  4269	  4275#
..0224	  4272	  4277#
..0225	  4294	  4300#
..0226	  4297	  4302#
..0227	  4505	  4511#
..0230	  4508	  4513#
..0231	  4532	  4538#
..0232	  4535	  4540#
..0233	  4559	  4565#
..0234	  4562	  4567#
..0235	  4586	  4592#
..0236	  4589	  4594#
..0237	  4613	  4619#
..0240	  4616	  4621#
..0241	  4640	  4646#
..0242	  4643	  4648#
..0243	  4684	  4690#
..0244	  4687	  4692#
..0245	  4711	  4717#
..0246	  4714	  4719#
..0247	  4738	  4744#
..0250	  4741	  4746#
..0251	  4765	  4771#
..0252	  4768	  4773#
..0253	  4792	  4798#
..0254	  4795	  4800#
..0255	  4819	  4825#
..0256	  4822	  4827#
..0257	  4863	  4869#
..0260	  4866	  4871#                                                                                                    SEQ 0325
..0261	  4890	  4896#
..0262	  4893	  4898#
..0263	  4917	  4923#
..0264	  4920	  4925#
..0265	  4944	  4950#
..0266	  4947	  4952#
..0267	  4971	  4977#
..0270	  4974	  4979#
..0271	  4998	  5004#
..0272	  5001	  5006#
..0273	  5042	  5048#
..0274	  5045	  5050#
..0275	  5069	  5075#
..0276	  5072	  5077#
..0277	  5096	  5102#
..0300	  5099	  5104#
..0301	  5123	  5129#
..0302	  5126	  5131#
..0303	  5150	  5156#
..0304	  5153	  5158#
..0305	  5177	  5183#
..0306	  5180	  5185#
..0307	  5221	  5227#
..0310	  5224	  5229#
..0311	  5248	  5254#
..0312	  5251	  5256#
..0313	  5275	  5281#
..0314	  5278	  5283#
..0315	  5302	  5308#
..0316	  5305	  5310#
..0317	  5329	  5335#
..0320	  5332	  5337#
..0321	  5356	  5362#
..0322	  5359	  5364#
..0323	  5604	  5610#
..0324	  5607	  5612#
..0325	  5652	  5658#
..0326	  5655	  5660#
..0327	  5700	  5706#
..0330	  5703	  5708#
..0331	  5748	  5754#
..0332	  5751	  5756#
..0333	  5796	  5802#
..0334	  5799	  5804#
..0335	  5844	  5850#
..0336	  5847	  5852#
..0337	  5892	  5898#
..0340	  5895	  5900#
..0341	  5940	  5946#
..0342	  5943	  5948#
..0343	  6033#	  6038
..0344	  6052#	  6057
..0345	  6071#	  6076                                                                                                     SEQ 0326
..0346	  6090#	  6095
..0347	  6109#	  6114
..0350	  6128#	  6133
..0351	  6147#	  6152
..0352	  6166#	  6171
..0353	  6185#	  6190
..0354	  6204#	  6209
..0355	  6223#	  6228
..0356	  6242#	  6247
..0357	  6261#	  6266
..0360	  6292#	  6297
..0361	  6311#	  6316
..0362	  6330#	  6335
..0363	  6349#	  6354
..0364	  6368#	  6373
..0365	  6387#	  6392
..0366	  6406#	  6411
..0367	  6425#	  6430
..0370	  6444#	  6449
..0371	  6463#	  6468
..0372	  6482#	  6487
..0373	  6501#	  6506
..0374	  6539#	  6544	  6552
..0375	  6547#
..0376	  6566#	  6571	  6579
..0377	  6574#
..0400	  6593#	  6599	  6607
..0401	  6602#
..0402	  6621#	  6627	  6635
..0403	  6630#
..0404	  6649#	  6654	  6662
..0405	  6657#
..0406	  6676#	  6681	  6689
..0407	  6684#
..0410	  6703#	  6709	  6717
..0411	  6712#
..0412	  6731#	  6736	  6744
..0413	  6739#
..0414	  6758#	  6763	  6771
..0415	  6766#
..0416	  6785#	  6791	  6799
..0417	  6794#
..0420	  6813#	  6818	  6826
..0421	  6821#
..0422	  6840#	  6845	  6853
..0423	  6848#
..0424	  6867#	  6873	  6881
..0425	  6876#
..0426	  6895#	  6901	  6909
..0427	  6904#
..0430	  6923#	  6928	  6936
..0431	  6931#
..0432	  6950#	  6955	  6963                                                                                             SEQ 0327
..0433	  6958#
..0434	  6977#	  6983	  6991
..0435	  6986#
..0436	  7005#	  7010	  7018
..0437	  7013#
..0440	  7032#	  7037	  7045
..0441	  7040#
..0442	  7059#	  7065	  7073
..0443	  7068#
..0444	  7106#	  7111	  7119
..0445	  7114#
..0446	  7133#	  7138	  7146
..0447	  7141#
..0450	  7160#	  7166	  7174
..0451	  7169#
..0452	  7188#	  7194	  7202
..0453	  7197#
..0454	  7216#	  7221	  7229
..0455	  7224#
..0456	  7243#	  7248	  7256
..0457	  7251#
..0460	  7271#	  7277	  7285
..0461	  7280#
..0462	  7299#	  7304	  7312
..0463	  7307#
..0464	  7326#	  7331	  7339
..0465	  7334#
..0466	  7354#	  7360	  7368
..0467	  7363#
..0470	  7382#	  7387	  7395
..0471	  7390#
..0472	  7409#	  7414	  7422
..0473	  7417#
..0474	  7436#	  7442	  7450
..0475	  7445#
..0476	  7464#	  7470	  7478
..0477	  7473#
..0500	  7492#	  7497	  7505
..0501	  7500#
..0502	  7519#	  7524	  7532
..0503	  7527#
..0504	  7547#	  7553	  7561
..0505	  7556#
..0506	  7575#	  7580	  7588
..0507	  7583#
..0510	  7602#	  7607	  7615
..0511	  7610#
..0512	  7630#	  7636	  7644
..0513	  7639#
..0514	  7722#	  7727	  7735
..0515	  7730#
..0516	  7749#	  7754	  7762
..0517	  7757#                                                                                                            SEQ 0328
..0520	  7776#	  7781	  7789
..0521	  7784#
..0522	  7803#	  7808	  7816
..0523	  7811#
..0524	  7840#	  7845	  7853
..0525	  7848#
..0526	  7867#	  7872	  7880
..0527	  7875#
..0530	  7894#	  7899	  7907
..0531	  7902#
..0532	  7921#	  7926	  7934
..0533	  7929#
..0534	  7948#	  7953	  7961
..0535	  7956#
..0536	  7975#	  7980	  7988
..0537	  7983#
..0540	  8002#	  8007	  8015
..0541	  8010#
..0542	  8029#	  8034	  8042
..0543	  8037#
..0544	  8056#	  8061	  8069
..0545	  8064#
..0546	  8083#	  8088	  8096
..0547	  8091#
..0550	  8110#	  8115	  8123
..0551	  8118#
..0552	  8137#	  8142	  8150
..0553	  8145#
..0554	  8164#	  8169	  8177
..0555	  8172#
..0556	  8191#	  8196	  8204
..0557	  8199#
..0560	  8218#	  8223	  8231
..0561	  8226#
..0562	  8245#	  8250	  8258
..0563	  8253#
..0564	  8272#	  8277	  8285
..0565	  8280#
..0566	  8299#	  8305	  8313
..0567	  8308#
..0570	  8327#	  8333	  8341
..0571	  8336#
..0572	  8355#	  8360	  8368
..0573	  8363#
..0574	  8382#	  8387	  8395
..0575	  8390#
..0576	  8409#	  8414	  8422
..0577	  8417#
..0600	  8436#	  8441	  8449
..0601	  8444#
..0602	  8463#	  8468	  8476
..0603	  8471#
..0604	  8503#	  8508                                                                                                     SEQ 0329
..0605	  8523#	  8528
..0606	  8553#	  8558
..0607	  8573#	  8578
..0610	  8607#	  8612
..0611	  8627#	  8632
..0612	  8647#	  8652
..0613	  8667#	  8672
..0614	  8687#	  8692
..0615	  8707#	  8712
..0616	  8727#	  8732
..0617	  8747#	  8752
..0620	  8767#	  8772
..0621	  8787#	  8792
..0622	  8807#	  8812
..0623	  8827#	  8832
..0624	  8847#	  8852
..0625	  8867#	  8872
..0626	  8887#	  8892
..0627	  8907#	  8912
..0630	  8927#	  8932
..0631	  8947#	  8952
..0632	  8967#	  8972
..0633	  8987#	  8992
..0634	  9007#	  9012
..0635	  9027#	  9032
..0636	  9047#	  9052
..0637	  9067#	  9072
..0640	  9102#	  9108	  9116
..0641	  9111#
..0642	  9132#	  9138	  9146
..0643	  9141#
..0644	  9161#	  9167	  9175
..0645	  9170#
..0646	  9191#	  9197	  9205
..0647	  9200#
..0650	  9221#	  9227	  9235
..0651	  9230#
..0652	  9251#	  9257	  9265
..0653	  9260#
..0654	  9282#	  9288	  9296
..0655	  9291#
..0656	  9312#	  9318	  9326
..0657	  9321#
..0660	  9342#	  9348	  9356
..0661	  9351#
..0662	  9372#	  9378	  9386
..0663	  9381#
..0664	  9402#	  9408	  9416
..0665	  9411#
..0666	  9444#	  9450	  9458
..0667	  9453#
..0670	  9473#	  9478	  9486
..0671	  9481#                                                                                                            SEQ 0330
..0672	  9501#	  9507	  9515
..0673	  9510#
..0674	  9530#	  9535	  9543
..0675	  9538#
..0676	  9558#	  9563	  9571
..0677	  9566#
..0700	  9586#	  9591	  9599
..0701	  9594#
..0702	  9614#	  9619	  9627
..0703	  9622#
..0704	  9642#	  9647	  9655
..0705	  9650#
..0706	  9670#	  9675	  9683
..0707	  9678#
..0710	  9698#	  9703	  9711
..0711	  9706#
..0712	  9726#	  9731	  9739
..0713	  9734#
..0714	  9754#	  9759	  9767
..0715	  9762#
..0716	  9782#	  9787	  9795
..0717	  9790#
..0720	  9810#	  9815	  9823
..0721	  9818#
..0722	  9838#	  9843	  9851
..0723	  9846#
..0724	  9866#	  9871	  9879
..0725	  9874#
..0726	  9911#	  9916	  9924
..0727	  9919#
..0730	  9939#	  9944	  9952
..0731	  9947#
..0732	  9967#	  9972	  9980
..0733	  9975#
..0734	  9995#	 10000	 10008
..0735	 10003#
..0736	 10024#	 10030	 10038
..0737	 10033#
..0740	 10054#	 10060	 10068
..0741	 10063#
..0742	 10083#	 10089	 10097
..0743	 10092#
..0744	 10113#	 10119	 10127
..0745	 10122#
..0746	 10183#	 10188	 10197
..0747	 10191#
..0750	 10211#	 10216	 10225
..0751	 10219#
..0752	 10239#	 10244	 10253
..0753	 10247#
..0754	 10267#	 10272	 10281
..0755	 10275#
..0756	 10295#	 10300	 10309                                                                                             SEQ 0331
..0757	 10303#
..0760	 10323#	 10328	 10337
..0761	 10331#
..0762	 10351#	 10356	 10365
..0763	 10359#
..0764	 10379#	 10384	 10393
..0765	 10387#
..0766	 10407#	 10412	 10421
..0767	 10415#
..0770	 10435#	 10440	 10449
..0771	 10443#
..0772	 10463#	 10468	 10477
..0773	 10471#
..0774	 10491#	 10496	 10505
..0775	 10499#
..0776	 10519#	 10524	 10533
..0777	 10527#
..1000	 10547#	 10552	 10561
..1001	 10555#
..1002	 10575#	 10580	 10589
..1003	 10583#
..1004	 10603#	 10608	 10617
..1005	 10611#
..1006	 10631#	 10636	 10645
..1007	 10639#
..1010	 10659#	 10664	 10673
..1011	 10667#
..1012	 10687#	 10693	 10702
..1013	 10696#
..1014	 10716#	 10721	 10730
..1015	 10724#
..1016	 10744#	 10749	 10758
..1017	 10752#
..1020	 10772#	 10777	 10786
..1021	 10780#
..1022	 10800#	 10805	 10814
..1023	 10808#
..1024	 10828#	 10833	 10842
..1025	 10836#
..1026	 10856#	 10861	 10870
..1027	 10864#
..1030	 10884#	 10889	 10898
..1031	 10892#
..1032	 10913#	 10919	 10928
..1033	 10922#
..1034	 10942#	 10948	 10957
..1035	 10951#
..1036	 10971#	 10976	 10985
..1037	 10979#
..1040	 11000#	 11005	 11014
..1041	 11008#
..1042	 11029#	 11034	 11043
..1043	 11037#                                                                                                            SEQ 0332
..1044	 11058#	 11063	 11072
..1045	 11066#
..1046	 11087#	 11092	 11101
..1047	 11095#
.JB41	   554#
.JBAPR	   554#
.JBCNI	   554#
.JBDDT	   554#
.JBFF	   554#
.JBOPC	   554#
.JBREL	   554#
.JBREN	   554#
.JBSA	   554#
.JBSYM	   554#
.JBTPC	   554#
.JBUSY	   554#
.JBUUO	   554#
.JBVER	   554#

APRID	   554#
BCIO	   554#                                                                                                            SEQ 0333
BCIOB	   554#
BSIO	   554#
BSIOB	   554#
CFLUSH	   476#
CHECKA	   204#	   945	   970	   995	  1020	  1045	  1070	  1095	  1174	  1196	  1231	  1253	  1288	  1310
	  1345	  1367	  1402	  1424	  1459	  1481	  1516	  1538	  1573	  1595	  1688	  1713	  2124	  2172
	  2220	  2268	  2316	  2364	  2429	  2474	  2519	  2564	  2609	  2654	  2719	  2764	  2809	  2854
	  2899	  2944	  3009	  3054	  3099	  3144	  3189	  3234	  3299	  3344	  3389	  3434	  3479	  3524
CHECKB	   245#	  1780	  1825	  1870	  1915	  1960	  2005	  3743	  3788	  3833	  3878	  3923	  3968	  4013
	  4058
CHECKS	   224#	  4165	  4190	  4215	  4240	  4265	  4290	  5038	  5065	  5092	  5119	  5146	  5173	  5217
	  5244	  5271	  5298	  5325	  5352	  5600	  5648	  5696	  5744	  5792	  5840	  5888	  5936
CHECKT	   265#	  4501	  4528	  4555	  4582	  4609	  4636	  4680	  4707	  4734	  4761	  4788	  4815	  4859
	  4886	  4913	  4940	  4967	  4994
CINVAL	   475#
CLOKOP	   470#
CLRPT	   554#
CWRTBI	   477#
DROPDV	   437#
ENDUUO	   483#	   636
EOPUUO	   484#	   638
ERLOOP	   524#	   959	   984	  1009	  1034	  1059	  1084	  1109	  1188	  1210	  1245	  1267	  1302	  1324
	  1359	  1381	  1416	  1438	  1473	  1495	  1530	  1552	  1587	  1609	  1659	  1702	  1727	  1794
	  1805	  1839	  1850	  1884	  1895	  1929	  1940	  1974	  1985	  2019	  2030	  2138	  2150	  2186
	  2198	  2234	  2246	  2282	  2294	  2330	  2342	  2378	  2390	  2443	  2455	  2488	  2500	  2533
	  2545	  2578	  2590	  2623	  2635	  2668	  2680	  2733	  2745	  2778	  2790	  2823	  2835	  2868
	  2880	  2913	  2925	  2958	  2970	  3023	  3035	  3068	  3080	  3113	  3125	  3158	  3170	  3203
	  3215	  3248	  3260	  3313	  3325	  3358	  3370	  3403	  3415	  3448	  3460	  3493	  3505	  3538
	  3550	  3757	  3768	  3802	  3813	  3847	  3858	  3892	  3903	  3937	  3948	  3982	  3993	  4027
	  4038	  4072	  4083	  4179	  4204	  4229	  4254	  4279	  4304	  4397	  4429	  4515	  4542	  4569
	  4596	  4623	  4650	  4694	  4721	  4748	  4775	  4802	  4829	  4873	  4900	  4927	  4954	  4981
	  5008	  5052	  5079	  5106	  5133	  5160	  5187	  5231	  5258	  5285	  5312	  5339	  5366	  5614
	  5626	  5662	  5674	  5710	  5722	  5758	  5770	  5806	  5818	  5854	  5866	  5902	  5914	  5950
	  5962	  6038	  6057	  6076	  6095	  6114	  6133	  6152	  6171	  6190	  6209	  6228	  6247	  6266
	  6297	  6316	  6335	  6354	  6373	  6392	  6411	  6430	  6449	  6468	  6487	  6506	  6544	  6552
	  6571	  6579	  6599	  6607	  6627	  6635	  6654	  6662	  6681	  6689	  6709	  6717	  6736	  6744
	  6763	  6771	  6791	  6799	  6818	  6826	  6845	  6853	  6873	  6881	  6901	  6909	  6928	  6936
	  6955	  6963	  6983	  6991	  7010	  7018	  7037	  7045	  7065	  7073	  7111	  7119	  7138	  7146
	  7166	  7174	  7194	  7202	  7221	  7229	  7248	  7256	  7277	  7285	  7304	  7312	  7331	  7339
	  7360	  7368	  7387	  7395	  7414	  7422	  7442	  7450	  7470	  7478	  7497	  7505	  7524	  7532
	  7553	  7561	  7580	  7588	  7607	  7615	  7636	  7644	  7689	  7696	  7727	  7735	  7754	  7762
	  7781	  7789	  7808	  7816	  7845	  7853	  7872	  7880	  7899	  7907	  7926	  7934	  7953	  7961
	  7980	  7988	  8007	  8015	  8034	  8042	  8061	  8069	  8088	  8096	  8115	  8123	  8142	  8150
	  8169	  8177	  8196	  8204	  8223	  8231	  8250	  8258	  8277	  8285	  8305	  8313	  8333	  8341
	  8360	  8368	  8387	  8395	  8414	  8422	  8441	  8449	  8468	  8476	  8508	  8528	  8558	  8578
	  8612	  8632	  8652	  8672	  8692	  8712	  8732	  8752	  8772	  8792	  8812	  8832	  8852	  8872
	  8892	  8912	  8932	  8952	  8972	  8992	  9012	  9032	  9052	  9072	  9108	  9116	  9138	  9146
	  9167	  9175	  9197	  9205	  9227	  9235	  9257	  9265	  9288	  9296	  9318	  9326	  9348	  9356
	  9378	  9386	  9408	  9416	  9450	  9458	  9478	  9486	  9507	  9515	  9535	  9543	  9563	  9571
	  9591	  9599	  9619	  9627	  9647	  9655	  9675	  9683	  9703	  9711	  9731	  9739	  9759	  9767
	  9787	  9795	  9815	  9823	  9843	  9851	  9871	  9879	  9916	  9924	  9944	  9952	  9972	  9980
	 10000	 10008	 10030	 10038	 10060	 10068	 10089	 10097	 10119	 10127	 10188	 10197	 10216	 10225
	 10244	 10253	 10272	 10281	 10300	 10309	 10328	 10337	 10356	 10365	 10384	 10393	 10412	 10421     SEQ 0334
	 10440	 10449	 10468	 10477	 10496	 10505	 10524	 10533	 10552	 10561	 10580	 10589	 10608	 10617
	 10636	 10645	 10664	 10673	 10693	 10702	 10721	 10730	 10749	 10758	 10777	 10786	 10805	 10814
	 10833	 10842	 10861	 10870	 10889	 10898	 10919	 10928	 10948	 10957	 10976	 10985	 11005	 11014
	 11034	 11043	 11063	 11072	 11092	 11101
ERLP1	   525#
ERLP2	   526#
ERRHLT	   371#
ERROR	   533#	   912#	   957	   982	  1007	  1032	  1057	  1082	  1107	  1186	  1208	  1243	  1265	  1300
	  1322	  1357	  1379	  1414	  1436	  1471	  1493	  1528	  1550	  1585	  1607	  1657	  1700	  1725
	  1792	  1803	  1837	  1848	  1882	  1893	  1927	  1938	  1972	  1983	  2017	  2028	  2136	  2147
	  2184	  2195	  2232	  2243	  2280	  2291	  2328	  2339	  2376	  2387	  2441	  2452	  2486	  2497
	  2531	  2542	  2576	  2587	  2621	  2632	  2666	  2677	  2731	  2742	  2776	  2787	  2821	  2832
	  2866	  2877	  2911	  2922	  2956	  2967	  3021	  3032	  3066	  3077	  3111	  3122	  3156	  3167
	  3201	  3212	  3246	  3257	  3311	  3322	  3356	  3367	  3401	  3412	  3446	  3457	  3491	  3502
	  3536	  3547	  3755	  3766	  3800	  3811	  3845	  3856	  3890	  3901	  3935	  3946	  3980	  3991
	  4025	  4036	  4070	  4081	  4177	  4202	  4227	  4252	  4277	  4302	  4395	  4426	  4513	  4540
	  4567	  4594	  4621	  4648	  4692	  4719	  4746	  4773	  4800	  4827	  4871	  4898	  4925	  4952
	  4979	  5006	  5050	  5077	  5104	  5131	  5158	  5185	  5229	  5256	  5283	  5310	  5337	  5364
	  5612	  5624	  5660	  5672	  5708	  5720	  5756	  5768	  5804	  5816	  5852	  5864	  5900	  5912
	  5948	  5960	  6036	  6055	  6074	  6093	  6112	  6131	  6150	  6169	  6188	  6207	  6226	  6245
	  6264	  6295	  6314	  6333	  6352	  6371	  6390	  6409	  6428	  6447	  6466	  6485	  6504	  6542
	  6549	  6569	  6576	  6597	  6604	  6625	  6632	  6652	  6659	  6679	  6686	  6707	  6714	  6734
	  6741	  6761	  6768	  6789	  6796	  6816	  6823	  6843	  6850	  6871	  6878	  6899	  6906	  6926
	  6933	  6953	  6960	  6981	  6988	  7008	  7015	  7035	  7042	  7063	  7070	  7109	  7116	  7136
	  7143	  7164	  7171	  7192	  7199	  7219	  7226	  7246	  7253	  7275	  7282	  7302	  7309	  7329
	  7336	  7358	  7365	  7385	  7392	  7412	  7419	  7440	  7447	  7468	  7475	  7495	  7502	  7522
	  7529	  7551	  7558	  7578	  7585	  7605	  7612	  7634	  7641	  7687	  7694	  7725	  7732	  7752
	  7759	  7779	  7786	  7806	  7813	  7843	  7850	  7870	  7877	  7897	  7904	  7924	  7931	  7951
	  7958	  7978	  7985	  8005	  8012	  8032	  8039	  8059	  8066	  8086	  8093	  8113	  8120	  8140
	  8147	  8167	  8174	  8194	  8201	  8221	  8228	  8248	  8255	  8275	  8282	  8303	  8310	  8331
	  8338	  8358	  8365	  8385	  8392	  8412	  8419	  8439	  8446	  8466	  8473	  8506	  8526	  8556
	  8576	  8610	  8630	  8650	  8670	  8690	  8710	  8730	  8750	  8770	  8790	  8810	  8830	  8850
	  8870	  8890	  8910	  8930	  8950	  8970	  8990	  9010	  9030	  9050	  9070	  9106	  9113	  9136
	  9143	  9165	  9172	  9195	  9202	  9225	  9232	  9255	  9262	  9286	  9293	  9316	  9323	  9346
	  9353	  9376	  9383	  9406	  9413	  9448	  9455	  9476	  9483	  9505	  9512	  9533	  9540	  9561
	  9568	  9589	  9596	  9617	  9624	  9645	  9652	  9673	  9680	  9701	  9708	  9729	  9736	  9757
	  9764	  9785	  9792	  9813	  9820	  9841	  9848	  9869	  9876	  9914	  9921	  9942	  9949	  9970
	  9977	  9998	 10005	 10028	 10035	 10058	 10065	 10087	 10094	 10117	 10124	 10186	 10194	 10214
	 10222	 10242	 10250	 10270	 10278	 10298	 10306	 10326	 10334	 10354	 10362	 10382	 10390	 10410
	 10418	 10438	 10446	 10466	 10474	 10494	 10502	 10522	 10530	 10550	 10558	 10578	 10586	 10606
	 10614	 10634	 10642	 10662	 10670	 10691	 10699	 10719	 10727	 10747	 10755	 10775	 10783	 10803
	 10811	 10831	 10839	 10859	 10867	 10887	 10895	 10917	 10925	 10946	 10954	 10974	 10982	 11003
	 11011	 11032	 11040	 11061	 11069	 11090	 11098
ERROR1	   544#
ERUUO	   523#	   958	   983	  1008	  1033	  1058	  1083	  1108	  1187	  1209	  1244	  1266	  1301	  1323
	  1358	  1380	  1415	  1437	  1472	  1494	  1529	  1551	  1586	  1608	  1658	  1701	  1726	  1793
	  1804	  1838	  1849	  1883	  1894	  1928	  1939	  1973	  1984	  2018	  2029	  2137	  2149	  2185
	  2197	  2233	  2245	  2281	  2293	  2329	  2341	  2377	  2389	  2442	  2454	  2487	  2499	  2532
	  2544	  2577	  2589	  2622	  2634	  2667	  2679	  2732	  2744	  2777	  2789	  2822	  2834	  2867
	  2879	  2912	  2924	  2957	  2969	  3022	  3034	  3067	  3079	  3112	  3124	  3157	  3169	  3202
	  3214	  3247	  3259	  3312	  3324	  3357	  3369	  3402	  3414	  3447	  3459	  3492	  3504	  3537
	  3549	  3756	  3767	  3801	  3812	  3846	  3857	  3891	  3902	  3936	  3947	  3981	  3992	  4026
	  4037	  4071	  4082	  4178	  4203	  4228	  4253	  4278	  4303	  4396	  4428	  4514	  4541	  4568     SEQ 0335
	  4595	  4622	  4649	  4693	  4720	  4747	  4774	  4801	  4828	  4872	  4899	  4926	  4953	  4980
	  5007	  5051	  5078	  5105	  5132	  5159	  5186	  5230	  5257	  5284	  5311	  5338	  5365	  5613
	  5625	  5661	  5673	  5709	  5721	  5757	  5769	  5805	  5817	  5853	  5865	  5901	  5913	  5949
	  5961	  6037	  6056	  6075	  6094	  6113	  6132	  6151	  6170	  6189	  6208	  6227	  6246	  6265
	  6296	  6315	  6334	  6353	  6372	  6391	  6410	  6429	  6448	  6467	  6486	  6505	  6543	  6551
	  6570	  6578	  6598	  6606	  6626	  6634	  6653	  6661	  6680	  6688	  6708	  6716	  6735	  6743
	  6762	  6770	  6790	  6798	  6817	  6825	  6844	  6852	  6872	  6880	  6900	  6908	  6927	  6935
	  6954	  6962	  6982	  6990	  7009	  7017	  7036	  7044	  7064	  7072	  7110	  7118	  7137	  7145
	  7165	  7173	  7193	  7201	  7220	  7228	  7247	  7255	  7276	  7284	  7303	  7311	  7330	  7338
	  7359	  7367	  7386	  7394	  7413	  7421	  7441	  7449	  7469	  7477	  7496	  7504	  7523	  7531
	  7552	  7560	  7579	  7587	  7606	  7614	  7635	  7643	  7688	  7695	  7726	  7734	  7753	  7761
	  7780	  7788	  7807	  7815	  7844	  7852	  7871	  7879	  7898	  7906	  7925	  7933	  7952	  7960
	  7979	  7987	  8006	  8014	  8033	  8041	  8060	  8068	  8087	  8095	  8114	  8122	  8141	  8149
	  8168	  8176	  8195	  8203	  8222	  8230	  8249	  8257	  8276	  8284	  8304	  8312	  8332	  8340
	  8359	  8367	  8386	  8394	  8413	  8421	  8440	  8448	  8467	  8475	  8507	  8527	  8557	  8577
	  8611	  8631	  8651	  8671	  8691	  8711	  8731	  8751	  8771	  8791	  8811	  8831	  8851	  8871
	  8891	  8911	  8931	  8951	  8971	  8991	  9011	  9031	  9051	  9071	  9107	  9115	  9137	  9145
	  9166	  9174	  9196	  9204	  9226	  9234	  9256	  9264	  9287	  9295	  9317	  9325	  9347	  9355
	  9377	  9385	  9407	  9415	  9449	  9457	  9477	  9485	  9506	  9514	  9534	  9542	  9562	  9570
	  9590	  9598	  9618	  9626	  9646	  9654	  9674	  9682	  9702	  9710	  9730	  9738	  9758	  9766
	  9786	  9794	  9814	  9822	  9842	  9850	  9870	  9878	  9915	  9923	  9943	  9951	  9971	  9979
	  9999	 10007	 10029	 10037	 10059	 10067	 10088	 10096	 10118	 10126	 10187	 10196	 10215	 10224
	 10243	 10252	 10271	 10280	 10299	 10308	 10327	 10336	 10355	 10364	 10383	 10392	 10411	 10420
	 10439	 10448	 10467	 10476	 10495	 10504	 10523	 10532	 10551	 10560	 10579	 10588	 10607	 10616
	 10635	 10644	 10663	 10672	 10692	 10701	 10720	 10729	 10748	 10757	 10776	 10785	 10804	 10813
	 10832	 10841	 10860	 10869	 10888	 10897	 10918	 10927	 10947	 10956	 10975	 10984	 11004	 11013
	 11033	 11042	 11062	 11071	 11091	 11100
FATAL	   370#
FRD36	   512#
FRD8	   513#
FREAD	   511#
FSELEC	   510#
GET	   354#	 11147	 11195	 11266
GO	   351#	  6035	  6054	  6073	  6092	  6111	  6130	  6149	  6168	  6187	  6206	  6225	  6244	  6263
	  6294	  6313	  6332	  6351	  6370	  6389	  6408	  6427	  6446	  6465	  6484	  6503	  6541	  6568
	  6596	  6624	  6651	  6678	  6706	  6733	  6760	  6788	  6815	  6842	  6870	  6898	  6925	  6952
	  6980	  7007	  7034	  7062	  7108	  7135	  7163	  7191	  7218	  7245	  7274	  7301	  7328	  7357
	  7384	  7411	  7439	  7467	  7494	  7521	  7550	  7577	  7604	  7633	  7724	  7751	  7778	  7805
	  7842	  7869	  7896	  7923	  7950	  7977	  8004	  8031	  8058	  8085	  8112	  8139	  8166	  8193
	  8220	  8247	  8274	  8302	  8330	  8357	  8384	  8411	  8438	  8465	  8505	  8525	  8555	  8575
	  8609	  8629	  8649	  8669	  8689	  8709	  8729	  8749	  8769	  8789	  8809	  8829	  8849	  8869
	  8889	  8909	  8929	  8949	  8969	  8989	  9009	  9029	  9049	  9069	  9105	  9135	  9164	  9194
	  9224	  9254	  9285	  9315	  9345	  9375	  9405	  9447	  9475	  9504	  9532	  9560	  9588	  9616
	  9644	  9672	  9700	  9728	  9756	  9784	  9812	  9840	  9868	  9913	  9941	  9969	  9997	 10027
	 10057	 10086	 10116	 10185	 10213	 10241	 10269	 10297	 10325	 10353	 10381	 10409	 10437	 10465
	 10493	 10521	 10549	 10577	 10605	 10633	 10661	 10690	 10718	 10746	 10774	 10802	 10830	 10858
	 10886	 10916	 10945	 10973	 11002	 11031	 11060	 11089
HALT	    55	    56	    57	    58	    59	   356#	   657
JEN	   358#
JRSTF	   357#	 11168	 11230
MAPADR	   493#
MAPCNK	   494#
MAPMEM	   490#                                                                                                            SEQ 0336
MAPPNT	   496#
MAPSET	   495#
MEMSEG	   492#
MEMZRO	   491#
MODPCP	   503#
MODPCU	   502#
MTROP	   471#
MULT	   101#	  6027	  6046	  6065	  6084	  6103	  6122	  6141	  6160	  6179	  6198	  6217	  6236	  6255
	  6286	  6305	  6324	  6343	  6362	  6381	  6400	  6419	  6438	  6457	  6476	  6495
MULTF	   118#	  6533	  6560	  6587	  6615	  6643	  6670	  6697	  6725	  6752	  6779	  6807	  6834	  6861
	  6889	  6917	  6944	  6971	  6999	  7026	  7053	  7100	  7127	  7154	  7182	  7210	  7237	  7264
	  7293	  7320	  7347	  7376	  7403	  7430	  7458	  7486	  7513	  7540	  7569	  7596	  7623	  7716
	  7743	  7770	  7797	  7834	  7861	  7888	  7915	  7942	  7969	  7996	  8023	  8050	  8077	  8104
	  8131	  8158	  8185	  8212	  8239	  8266	  8293	  8321	  8349	  8376	  8403	  8430	  8457
NAME	     7#	    10
ODIV	   180#	 10177	 10205	 10233	 10261	 10289	 10317	 10345	 10373	 10401	 10429	 10457	 10485	 10513
	 10541	 10569	 10597	 10625	 10653	 10681	 10710	 10738	 10766	 10794	 10822	 10850	 10878	 10906
	 10936	 10965	 10994	 11023	 11052	 11081
PBELL	   446#
PCRL	   440#	 11297	 11308	 11317	 11334	 11345	 11354	 11371	 11382	 11397	 11422	 11433	 11450
PCRL2	   444#
PCRL2F	   445#
PCRLF	   441#
PCSAVE	    78#	  1775	  1820	  1865	  1910	  1955	  2000	  2117	  2165	  2213	  2261	  2309	  2357	  2424
	  2469	  2514	  2559	  2604	  2649	  2714	  2759	  2804	  2849	  2894	  2939	  3004	  3049	  3094
	  3139	  3184	  3229	  3294	  3339	  3384	  3429	  3474	  3519	  3738	  3783	  3828	  3873	  3918
	  3963	  4008	  4053	  4382	  5595	  5643	  5691	  5739	  5787	  5835	  5883	  5931	  7670
PDIV	   139#	  8496	  8516	  8546	  8566	  8600	  8620	  8640	  8660	  8680	  8700	  8720	  8740	  8760
	  8780	  8800	  8820	  8840	  8860	  8880	  8900	  8920	  8940	  8960	  8980	  9000	  9020	  9040
	  9060
PDIVF	   157#	  9094	  9124	  9154	  9183	  9213	  9243	  9274	  9304	  9334	  9364	  9394	  9437	  9466
	  9494	  9523	  9551	  9579	  9607	  9635	  9663	  9691	  9719	  9747	  9775	  9803	  9831	  9859
	  9904	  9932	  9960	  9988	 10016	 10046	 10076	 10105
PFORCE	   448#
PGMINT	   364#	   920
PJRST	   355#
PMSG	   450#	 11287	 11298	 11309	 11324	 11335	 11346	 11361	 11372	 11383	 11404	 11423	 11434	 11442
PMSGF	   453#
PNT1	   406#
PNT11	   420#
PNT11F	   421#
PNT1F	   407#
PNT2	   408#
PNT2F	   409#
PNT3	   410#
PNT3F	   411#
PNT4	   412#
PNT4F	   413#
PNT5	   414#
PNT5F	   415#
PNT6	   416#
PNT6F	   417#
PNT7	   418#                                                                                                            SEQ 0337
PNT7F	   419#
PNTA	   392#
PNTADF	   423#
PNTADR	   422#
PNTAF	   393#
PNTAL	   394#
PNTALF	   395#
PNTCHF	   405#
PNTCHR	   404#
PNTCI	   402#
PNTCIF	   403#
PNTCW	   438#
PNTCWF	   439#
PNTDCF	   431#
PNTDEC	   430#
PNTDS	   432#
PNTDSF	   433#
PNTHW	   426#
PNTHWF	   427#
PNTMSF	   399#
PNTMSG	   398#
PNTNM	   434#
PNTOCF	   429#
PNTOCS	   428#
PNTOCT	   424#	 11291	 11295	 11302	 11306	 11312	 11315	 11328	 11332	 11339	 11343	 11349	 11352	 11365
	 11369	 11376	 11380	 11386	 11389	 11392	 11395	 11408	 11412	 11416	 11420	 11427	 11431	 11437
	 11440	 11445	 11448
PNTOTF	   425#
PNTSIX	   435#
PNTSXF	   436#
PSIXL	   396#
PSIXLF	   397#
PSIXM	   400#	 11287	 11298	 11309	 11324	 11335	 11346	 11361	 11372	 11383	 11404	 11423	 11434	 11442
PSIXMF	   401#
PSP	   442#
PSPF	   443#
PUT	   353#
RDAPR	   554#
RDCSB	   554#
RDCSTM	   554#
RDEBR	   554#
RDHSB	   554#
RDINT	   554#
RDIO	   554#
RDIOB	   554#
RDPI	   554#
RDPUR	   554#
RDSPB	   554#
RDTIM	   554#
RDUBR	   554#
REPTUO	   527#
RTN	   352#	   644	 11145	 11193	 11264	 11318	 11355	 11398	 11451
S	   282#                                                                                                            SEQ 0338
SIXBTZ	   459#	   924	  4145	  6008	  8481
SWITCH	   465#
TFLAG	    88#	  1797	  1842	  1887	  1932	  1977	  2022	  2141	  2189	  2237	  2285	  2333	  2381	  2446
	  2491	  2536	  2581	  2626	  2671	  2736	  2781	  2826	  2871	  2916	  2961	  3026	  3071	  3116
	  3161	  3206	  3251	  3316	  3361	  3406	  3451	  3496	  3541	  3760	  3805	  3850	  3895	  3940
	  3985	  4030	  4075	  4420	  5618	  5666	  5714	  5762	  5810	  5858	  5906	  5954
TIOE	   554#
TIOEB	   554#
TION	   554#
TIONB	   554#
TTALTM	   386#
TTICHR	   379#
TTICLR	   389#
TTICNV	   384#
TTIDEC	   383#
TTINO	   381#
TTIOCT	   382#
TTIYES	   380#
TTLOOK	   385#
TTSIXB	   387#
TTYINP	   388#
WRAPR	   554#
WRCSB	   554#
WRCSTM	   554#
WREBR	   554#
WRHSB	   554#
WRINT	   554#
WRIO	   554#
WRIOB	   554#
WRPI	   554#
WRPUR	   554#
WRSPB	   554#
WRTIM	   554#
WRUBR	   554#
