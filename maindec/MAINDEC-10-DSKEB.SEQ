;DSKEB
                                                                                                                           SEQ 0001






				IDENTIFICATION
				--------------

	PRODUCT CODE:		AH-E602A-DD

	DIAGNOSTIC CODE:	DSKEB

	PRODUCT NAME:	 	DSKEBA0 KS10 - CACHE DIAGNOSTIC

	VERSION:		0.1

	DATE RELEASED:		OCTOBER 1978

	MAINTAINED BY:		DIAGNOSTIC ENGINEERING

	AUTHOR:			EDWARD G. PRENTICE

		        COPYRIGHT (C) 1978

	        DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.

	THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR  USE  ONLY  ON  A
	SINGLE COMPUTER SYSTEM AND MAY BE COPIED ONLY WITH THE INCLUSION
	OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE,  OR  ANY  OTHER
	COPIES  THEREOF, MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE
	TO ANY OTHER PERSON EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO
	AGREES  TO  THESE  LICENSE TERMS.  TITLE TO AND OWNERSHIP OF THE
	SOFTWARE  SHALL  AT   ALL  TIMES  REMAIN  IN  DIGITAL  EQUIPMENT
	CORPORATION.

	THE INFORMATION IN THIS DOCUMENT IS SUBJECT  TO  CHANGE  WITHOUT
	NOTICE  AND  SHOULD  NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
	EQUIPMENT CORPORATION.

	DIGITAL EQUIPMENT CORPORATION ASSUMES NO  RESPONSIBILITY FOR THE
	USE  OR  RELIABILITY  OF  ITS SOFTWARE IN EQUIPMENT WHICH IS NOT
	SUPPLIED BY DIGITAL EQUIPMENT CORPORATION.

			TABLE OF CONTENTS                                                                                  SEQ 0002
			-----------------

1.0	ABSTRACT

2.0	REQUIREMENTS

2.1	EQUIPMENT

2.2	STORAGE

2.3	PRELIMINARY PROGRAMS

3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURE

3.2	STARTING PROCEDURE

3.3	OPERATING PROCEDURE

4.0	DATA SWITCH FUNCTIONS

5.0	ERRORS

6.0	ITERATION COUNTER

7.0	CYCLE TIME

8.0	OPERATIONAL VARIATIONS

9.0	MISCELLANEOUS

10.0	LISTING

                                                                                                                           SEQ 0003
1.0	ABSTRACT

OVERVIEW - THIS IS A SHORT OVERVIEW OF THE KS10 CACHE DIAGNOSTIC.
	THIS PROGRAM WAS WRITTEN TO RECOGNIZE AND REPORT ANY
ERRORS CAUSED BY A FAULT IN THE CACHE LOGIC.  THE DIAGNOSTIC
CONSISTS OF SEVEN TESTS, THE FIRST OF WHICH IS AN
ACCUMULATOR TEST BECAUSE THE ACCUMULATORS AND THE CACHE
RESIDE IN THE SAME RAM MEMORY.  THEN THERE ARE SIX INTENSIVE
CACHE TESTS THAT ARE DESCRIBED BELOW.  THIS DIAGNOSTIC
REQUIRES THAT THE MAIN CPU DIAGNOSTICS RUN SUCCESSFULLY
FIRST.

ACCHK - THIS TEST INSURE THAT THE ACCUMULATORS ARE WORKING.
	THIS TEST VERIFIES THAT ALL 8 AC BLOCKS ARE WORKING
CORRECTLY.   FIRST, EACH AC IN EACH BLOCK IS LOADED WITH THE
BLOCK NUMBER IN THE LEFT HALF, AND THE AC NUMBER IN THE
RIGHT HALF, THUS A UNIQUE NUMBER IS LOADED INTO EACH AC.
THEN THE AC'S ARE CHECKED TO INSURE THAT EACH AC CONTAINS
THE PROPER NUMBER.
	NEXT, AC 17 IS CHECK TO INSURE THAT IT CAN HOLD ALL
ZEROS, AND THEN TO INSURE THAT IT CAN HOLD ALL ONES.  THEN
THAT ENTIRE BLOCK IS TESTED TO INSURE THAT ALL THE ACS IN IT
CAN HOLD BOTH ZEROS AND ONES.  THEN THE TEST IS REPEATED FOR
EACH OF THE OTHER BLOCKS.

PHYCHK - PHYSICAL ADDRESS CHECK.
	THIS TEST INSURES THAT THE SIGNAL 'NOT PHYSICAL' IS
WORKING CORRECTLY.  A PAGE IS LOADED AND TIMED WITH PAGING
TURNED OFF, WHICH YIELD REFERENCES THAT ARE PHYSICAL.  IF
ANY CACHE HITS ARE FOUND, THE SIGNAL IS BAD.  WHEN USED IN
CONJUNCTION WITH THE OTHER TESTS THAT CHECK FOR CACHE HITS,
THE OPPOSITE STATE OF THE 'NOT PHYSICAL' IS CHECKED FOR
VALIDITY.  HOWEVER, IF ALL THE OTHER TIMING TESTS FAIL, THIS
SIGNAL IS A GOOD PLACE TO LOOK FOR THE TROUBLE.

CACCHK - CACHEABLE/UNCACHEABLE CHECK.
	THIS TEST MAKES SURE THAT THE PAGE CACHEABLE SIGNAL
IS WORKING CORRECTLY.  THE TEST CHECKS FOR BOTH STATES OF
CACHEABLE/UNCACHEABLE, AND PERFORMS THE TEST ON BOTH
EXEC/USER ADDRESS SPACE.

LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST.
	THIS TEST PERFORMS THE LOW ORDER ADDRESS
INTERFERENCE CHECKING.  THE ADDRESS LINES RUNNING INTO THE
CACHE (ONE PAGE) ARE TESTED FOR INTERFERENCE, WHILE AT THE
SAME TIME PERFORMING A RAM TEST ON THE CACHE RAMS (TREATING
THE CACHE AS A MEMORY) THIS TEST ALSO ALLOWS THE CHECKING OF
THE WRITE THRU, BECAUSE THE MEMORY SHOULD END UP WITH
DIFFERENT DATA THAN WHAT IT STARTED WITH (EVEN THOUGH THE
CACHE RAM TEST SUCCEEDED).

HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST.                                                                        SEQ 0004
	THIS TEST CHECKS THE HIGH ORDER ADDRESS LINES OF THE
VIRTUAL ADDRESS AND PERFORMS AN INTERFERENCE CHECK ON THOSE
LINES.  A PAGE IS LOADED INTO THE CACHE BY EXECUTING IT.
THEN THE PAGE NUMBER IS CHANGED BY ONE BIT AND EXECUTED
AGAIN, WHILE BEING TIMED.  IF THE TEST RUNS FASTER THAN THE
THRESHOLD, CACHE HITS WERE ENCOUNTERED WHEN THEY SHOULDN'T
HAVE, WITH THE PROBLEM BEING ON THE ADDRESS BIT THAT
CHANGED.  IF CACHE MISSES ARE ENCOUNTERED, THEN THE ADDRESS
LINES HAVE NO INTERFERENCE WITH EACH OTHER.

UECHEK - USER TO EXEC CACHE CHECK.
	THIS PROGRAM CHECKS THE TRANSITION OF THE EXEC/USER
SIGNAL IN THE CACHE CONTROL LOGIC FROM THE USER STATE TO THE
EXEC STATE.  THIS TEST IS USED IN CONJUCTION WITH EUCHEK, TO
CHECK THE OPPOSITE TRANSITION OF THE SIGNAL.  THE TEST LOADS
A PAGE OF MEMORY INTO THE CACHE BY EXECUTING IT IN USER
MODE.  THEN THE PROGRAM IS PUT INTO EXEC MODE, AND THE SAME
PAGE IS EXECUTED, WHILE BEING TIMED.  IF THE TEST RAN FASTER
THAN THE THRESHOLD (500 NSEC/JRST), THEN THE REFERENCES GOT
CACHE HITS WHEN THEY WEREN'T SUPPOSED TO.  IF HOWEVER THE
TEST RAN SLOWER THAN THE THRESHOLD, THEN THE REFERENCES GOT
CACHE MISSES, AND THE STATE OF THE EXEC/USER SIGNAL IS
CORRECT.

EUCHEK - EXEC TO USER CACHE CHECK.
	THIS PROGRAM CHECKS THE TRANSITION OF THE EXEC/USER
SIGNAL IN THE CACHE CONTROL LOGIC FROM THE EXEC STATE TO THE
USER STATE.  THIS TEST IS USED IN CONJUCTION WITH UECHEK, TO
CHECK THE OPPOSITE TRANSITION OF THE SIGNAL.  IF BOTH TESTS
SUCCEED, THAT IMPLIES THAT THE SIGNAL IS WORKING CORRECTLY.

2.0	REQUIREMENTS                                                                                                       SEQ 0005

2.1	EQUIPMENT

	A DECSYSTEM 2020 WITH 32K OF MEMORY.
	DIAGNOSTIC CONSOLE
	CONSOLE TELETYPE
	LOAD DEVICE

2.2	STORAGE

	THE PROGRAM USES ALL OF THE FIRST 32K OF MEMORY

2.3	PRELIMINARY PROGRAMS

	ALL PRECEDING CENTRAL PROCESSOR DIAGNOSTICS.

3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURES

	THIS DIAGNOSTIC REQUIRES THAT THE DECSYSTEM 2020 SUBROUTINE
	PROGRAM BE RESIDENT IN THE DECSYSTEM 2020.
	LOAD VIA CONSOLE PROCESSOR OR WITH "SMMON".

3.2	STARTING PROCEDURE

	STAND-ALONE STARTING ADDRESS IS 30000.

3.3	OPERATING PROCEDURE


4.0	DATA SWITCH FUNCTIONS                                                                                              SEQ 0006

	SWITCH		STATE	FUNCTION
	------		-----	--------

	0    ABORT	0	NORMAL OPERATION
			1	ABORT AT END OF PASS

	1    RSTART		NOT USED

	2    TOTALS		NOT USED

	3    NOPNT	0	NORMAL TYPEOUT
			1	INHIBIT ALL PRINT/TYPEOUT
				(EXCEPT FORCED)

	4    PNTLPT	0	NORMAL OUTPUT TO TTY
			1	PRINT ALL DATA ON LPT
				(LOGICAL DEVICE, USER MODE)

	5    DING	0	NO FUNCTION
			1	RING TTY BELL ON ERROR

	6    LOOPER	0	PROCEED TO NEXT TEST
			1	ENTER SCOPE LOOP ON TEST ERROR

	7    ERSTOP	0	NO FUNCTION
			1	HALT ON TEST ERROR

	8    PALERS	0	PRINT ONLY FIRST ERROR WHEN LOOPING
			1	PRINT ALL ERRORS, EVEN IF SAME ERROR

	9    RELIAB	0	QUICK VERIFY OPERATION
			1	RELIABILITY MODE OPERATION

	10   TXTINH	0	PRINT FULL ERROR MESSAGES.
			1	INHIBIT COMMENT PORTION OF 
				ERROR MESSAGES.

                                                                                                                           SEQ 0007
5.0	ERRORS

	ERRORS ARE PRINTED ON THE TTY OR LINE PRINTER.  THE ERROR
	PRINTOUT CONTAINS THE TEST TITLE, TEST PASS COUNT, PC OF THE
	FAILURE, SUBTEST TITLE, SUBTEST FUNCTION, CORRECT WORD, ACTUAL
	RESULTS, DISCREPANCY WORD, AND A DIAGNOSTIC COMMENT.

	THE FOLLOWING IS AN EXAMPLE ERROR MESSAGE:

	PC=  NNNNNN
	SWITCHES = 000000 000000
	ERROR IN DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0.1 - (SUBTEST NAME)
	CORRECT: XXXXXX XXXXXX
	ACTUAL:  YYYYYY YYYYYY
	DISCREP: ZZZZZZ ZZZZZZ
	(DIAGNOSTIC COMMENT)

	THE SUBTEST NAME AND DIAGNOSTIC COMMENT	PORTION OF THE ERROR
	TYPEOUT MAY BE INHIBITED BY SETTING THE	'TXTINH' SWITCH.
	THIS ALLOWS FOR SHORTER PRINTOUTS ON REPETITIVE FAILURES.

	THE TEST TITLE IS ONLY PRINTED WHEN STARTING THE PROGRAM OR ON
	THE FIRST FAILURE IF IT HAS NOT BEEN PRINTED YET.

	THE TEST PASS COUNT IS ONLY PRINTED ON ERRORS WHICH OCCUR ON
	PASSES AFTER THE FIRST PASS.

	IF AN AUDIO INDICATION OF A CONTINUING ERROR IS DESIRED THE
	'DING' SWITCH MAY BE SET.

6.0	ITERATION COUNTER                                                                                                  SEQ 0008

	THE ITERATION COUNT OF THE PROGRAM IS PRINTED ON THE CONSOLE
	TTY.

7.0	CYCLE TIME

	THE PROGRAM CYCLE TIME IS A UNDER A MINUTE AND IS THEREFORE
	SUITABLE FOR MARGINING, VIBRATION TESTS, ETC.

8.0	OPERATIONAL VARIATIONS

9.0	MISCELLANEOUS

	THE 'INHCSH' SWITCH IS NOT USED IN THIS DIAGNOSTIC.

10.0	LISTING
;PS:<PRENTICE.DSKEB>DSKEBH.HST.5, 21-Sep-78 14:25:56, Edit by PRENTICE
;HISTORY FILE FOR DSKEB.............EDITNO==^D5                                                                            SEQ 0009
************************************************************************
	PRODUCT CODE:		AH-E602A-DD
	DIAGNOSTIC CODE:	DSKEB
	PRODUCT NAME:	 	DSKEBA0 KS10 - CACHE DIAGNOSTIC
	VERSION:		0.1
	DATE RELEASED:		SEPTEMBER 1978
	MAINTAINED BY:		DIAGNOSTIC ENGINEERING
	AUTHOR:			EDWARD G. PRENTICE
************************************************************************
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 1             
                                                                                                                           SEQ 0010




















				   DOCUMENT
				**************
                DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1     
				**************

















		    COPYRIGHT 1978
		    DIGITAL EQUIPMENT CORPORATION
		    MAYNARD, MASS. 01754

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 2             
                                                                                                                           SEQ 0011

				 TABLE OF CONTENTS
				*******************


	20	DIAGNOSTIC PARAMETERS

	96	CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978

	131	PROGRAM/SUBROUTINE PARAMETERS

	333	ERROR HANDLING UUO DEFINITIONS

	371	STANDARD PROGRAM ASSIGNMENTS

	831	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978

	1159	STARTUP CODE

	1206	ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST

	2223	PHYCHK - PHYSICAL ADDRESS CHECK

	2300	CACCHK - CACHEABLE/UNCACHEABLE CHECK

	2577	LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST

	2950	HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST

	3084	UECHEK - USER TO EXEC CACHE CHECK

	3172	EUCHEK - EXEC TO USER CACHE CHECK

	3260	SUPPORT ROUTINES

	3463	.STORAGE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 3             
                                                                                                                           SEQ 0012
		7		TITLE	DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1					
			.

		13	ASSEMBLE AS: @R MACRO
			DSKEB,DSKEB/C=DSKEBT,PARAM.KSM,FIXED.KSM,DSKEBM,STOR.KSM

		*****************************************************************
	20	DIAGNOSTIC PARAMETERS
		*****************************************************************

		47	AC DEFINITIONS

		58	OPDEFS

		64	MACROS

		91	MISC DEFINITIONS

		*****************************************************************
	96	CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978
		*****************************************************************

		101	DATA SWITCHES
			LEFT HALF SWITCHES ARE PRE-ASSIGNED FOR SUBROUTINE PACKAGE USE
			AND CONTROL LOOPING, PRINTING (TTY OR OTHER DEVICE) AND MISC. FUNCTIONS

		*****************************************************************
	131	PROGRAM/SUBROUTINE PARAMETERS
		*****************************************************************

		134	SPECIAL SUBPROGRAM LINKAGES

		145	SPECIAL SUBROUTINE FATAL HALTS
			USED TO REPORT ERRORS THAT CAUSE THE SUBROUTINES TO BE UNUSABLE

		177	SUBROUTINE INITIALIZATION CALL

		183	HALTING UUO'S (A MORE GRACEFUL HALT THAN SIMPLY USING THE HALT INSTRUCTION).

		190	TERMINAL INPUT UUO'S
			ALWAYS COME FROM THE CONSOLE TERMINAL IN EXEC MODE OR THE
			CONTROLLING TERMINAL (REAL TERMINAL OR PTY) IN USER MODE.

		206	TERMINAL OUTPUT UUO'S.

		272	SIXBTZ -- MACRO TO GENERATE SIXBIT DATA FOR PRINTING
				CONSERVES CORE OVER ASCIZ

		277	CONSOLE SWITCH INPUT UUO.
			READS CONSOLE SWITCHES IF IN EXEC MODE OR ASKS FOR THEM IF
			 USER MODE.

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 4             
                                                                                                                           SEQ 0013
		283	CLOCK INITIALIZATION UUO - TO SET DESIRED CLOCK OPERATION
			EITHER IGNORE CLOCK, ONLY LET IT TICK OR CAUSE INTERRUPT TO OCCUR.

		289	KS-10 CACHE OPERATION UUO'S

		294	END OF PASS/PROGRAM UUOS

		297	DECREMENT ITERATION COUNT, CHECK IF FINISHED WITH THIS PROGRAM ETC.

		302	MEMORY MANAGEMENT UUO'S
			UUO'S TO PERFORM VARIOUS MEMORY FUNCTIONS. MAPPING, ZEROING, PAGING,
			ADDRESS CONVERSION, ETC...

		314	DEVICE CODE MODIFICATION UUO
			ALLOWS THE MODIFICATION OF IOT'S TO ONE DEVICE TO BE CHANGED TO
			IOT'S TO A DIFFERENT DEVICE CODE.

		324	"DIAMON" FILE SELECTION AND READ UUOS

		*****************************************************************
	333	ERROR HANDLING UUO DEFINITIONS
		*****************************************************************

		336	ERROR HANDLER PARAMETERS

		345	THE ERROR HANDLER MACROS

		347	A MACRO TO REPORT AN ERROR AND LOOP

		358	A MACRO TO REPORT AN ERROR AND NOT LOOP

		*****************************************************************
	371	STANDARD PROGRAM ASSIGNMENTS
		*****************************************************************

		374	ACCUMULATORS

		382	PDP-10 STANDARD PC CONTROL FLAGS (SAVED ON PUSHJ, JSR, ETC..)

		398	PDP-10 STANDARD ADDRESS ASSIGNMENTS

		405	JOB DATA AREA EXTERNALS (OLD DEFINITIONS)

		423	JOB DATA AREA EXTERNALS (NEW DEFINITIONS)

		442	USER MODE APR ASSIGNMENTS (FOR "APRENB" CALL)

		454	USER MODE PRINT OUTPUT CHANNEL ASSIGNMENTS (FOR SUBROUTINE PACKAGE)
			THE USER SHOULD BE CAUTIONED NOT TO USE THESE CHANNELS WHEN
			USING THE SUBROUTINE PACKAGE AND CODING USER MODE PROGRAMS.

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 5             
                                                                                                                           SEQ 0014
		462	PDP-10 SPECIAL COMPATABILITY ASSIGNMENTS

		469	PDP-10 STANDARD APR CONO ASSIGNMENTS

		475	PDP-10 STANDARD PI CONO ASSIGNMENTS

		486	PDP-10 STANDARD PI CONI ASSIGNMENTS

		492	PDP-10 STANDARD PI CHANNEL ASSIGNMENTS

		504	KS10 CONO APR 000 ASSIGMENTS

		542	KS10 CONI APR 000 ASSIGMENTS (LEFT HALF)

		552	KS10 CONI APR 000 ASSIGMENTS (RIGHT HALF)

		569	KS10 DATAO APR 000 ASSIGMENTS (LEFT HALF)

		579	KS10 DATAO APR 000 ASSIGMENTS (RIGHT HALF)

		584	KS10 DATAI APR 000 ASSIGMENTS (LEFT HALF)

		594	KS10 DATAI APR 000 ASSIGMENTS (RIGHT HALF)

		600	KS10 BLKO APR 000 ASSIGMENTS (IMMEDIATE MODE)

		607	KS10 BLKI APR 000 ASSIGMENTS

		615	KS10 CONO PI 004 ASSIGMENTS

		635	KS10 CONI PI 004 ASSIGMENTS (LEFT HALF)

		647	KS10 CONI PI 004 ASSIGMENTS (RIGHT HALF)

		666	KS10 DATAO PAG 010 ASSIGMENTS (LEFT HALF)

		675	KS10 DATAO PAG 010 ASSIGMENTS (RIGHT HALF)

		681	KS10 DATAI PAG 010 ASSIGMENTS (LEFT HALF)

		690	KS10 DATAI PAG 010 ASSIGMENTS (RIGHT HALF)

		696	KS10 CONO PAG 010 ASSIGMENTS

		705	KS10 CONI PAG 010 ASSIGMENTS

		714	KS10 BLKO PAG 010 ASSIGMENTS (IMMEDIATE MODE)

		718	KS10 EXEC PAGE MAP PAGE ASSIGNMENTS

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 6             
                                                                                                                           SEQ 0015
		733	KS10 USER PAGE MAP PAGE ASSIGNMENTS

		762	KS10 I/O INSTRUCTIONS

		793	KS10 UNIBUS I/O INSTRUCTIONS

		810	KS10 UNIBUS BIT NUMBERS

		*****************************************************************
	831	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978
		*****************************************************************

		836	PROGRAM STARTING ADDRESSES
			THESE ADDRESSES CALL VARIOUS SPECIAL START ROUTINES AND OR OPTIONS
			NORMAL START ADDRESS IS 30000 ALL OTHERS ARE SPECIAL. INVOKED BECAUSE
			OF END OF PASS, POWER FAILURE, DDT START, RE-ENTERING(TYPICALLY USER
			MODE), OR ANY NUMBER OF SPECIAL FEATURE TESTS.

		869	PROGRAM FIXED PARAMETER AREA

		889	PROGRAM VARIABLE PARAMETER AREA

		909	SPECIAL PROGRAM DISPATCH ADDRESSES

		940	PROCESSOR CONTROL STORAGE

		960	UUO DISPATCH TABLE

		980	MEMORY MANAGMENT STORAGE

		990	PRINT CONTROL STORAGE

		1013	THE FOLLOWING MISCELLANEOUS PRINT CHARACTERS ARE INCLUDED
			TO FACILITATE PRINTING AND ARE CALLED AS FOLLOWS:
				MOVEI	NAME
				PNTA		;OR PNTAF

		1044	USER MODE OUTPUT FILE INFORMATION

		1053	DISK UPDATE MODE FILE INFORMATION

		1061	PUSHDOWN LIST CONTROL INFORMATION

		1069	POWER LINE CLOCK FREQUENCY FLAG

		1075	KL10 CACHE CONTROL FLAGS

		1082	NUMBER INPUT DIGIT FLAG

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 7             
                                                                                                                           SEQ 0016
		1088	KL10 & KI10 "INHPAG" SWITCH PAGING PREVENTION

		1094	ERROR REPORTING ROUTINE ADDITIONAL USERS CONTROL INSTRUCTIONS

		1102	SPECIAL USERS UUO INTERCEPT INSTRUCTION

		1107	USER MODE MONITOR TYPE FLAG

		1113	SPECIAL USERS MUUO INTERCEPT INSTRUCTION

		1119	SPECIAL USERS USER MODE OUTPUT ERROR INTERCEPT INSTUCTION

		1125	"SWITCH" CALL USAGE CONTROL

		1131	SPECIAL USERS ALTMODE SWITCH CALL INTERCEPT INSTRUCTIONS

		1138	SM10 (KS-10) PROCESSOR TYPE FLAG

		1144	RIGHT HALF SWITCHES PROMPT TABLE ADDRESS

		1150	SPECIAL FUTURE EXPANSION ROOM

		1154	END OF FIXED STORAGE

		*****************************************************************
	1159	STARTUP CODE
		*****************************************************************

		*****************************************************************
	1206	ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST
		*****************************************************************

		1208	ACCHK - ACCUMULATOR BLOCK CHECK
			
			THIS TEST VERIFIES THAT ALL 8 AC BLOCKS ARE WORKING CORRECTLY.
			FIRST, EACH AC IN EACH BLOCK IS LOADED WITH THE BLOCK NUMBER IN
			THE LEFT HALF, AND THE AC NUMBER IN THE RIGHT HALF. THUS A UNIQUE
			NUMBER IS LOADED INTO EACH AC. THEN THE AC'S ARE CHECKED TO INSURE
			THAT EACH AC CONTAINS THE PROPER NUMBER.
			NEXT, AC 17 IS CHECKED TO INSURE THAT IT CAN HOLD ALL ZEROS, AND THEN
			TO INSURE THAT IT CAN HOLD ALL ONES. THEN THAT ENTIRE BLOCK IS TESTED
			TO INSURE THAT ALL THE ACS IN IT CAN HOLD BOTH ZEROS AND ONES. THEN
			THE TEST IS REPEATED FOR EACH OF THE OTHER BLOCKS.

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 8             
                                                                                                                           SEQ 0017
		*****************************************************************
	2223	PHYCHK - PHYSICAL ADDRESS CHECK
		*****************************************************************

		2226	PHYCHK - PHYSICAL ADDRESS CHECK
			
			THIS TEST IS DESIGNED TO INSURE THAT NO CACHE HITS ARE RECEIVED WHEN
			THE CACHE IS TURNED OFF.  OPERATION IS AS FOLLOWS: FIRST A PAGE OF
			JFCLS IS LOADED INTO THE CACHE BY EXECUTING IT.  THEN THE SAME PAGE IS
			EXECUTED AGAIN, WITH RDTIME'S BEFORE AND AFTER TO CHECK ON THE ELAPSED
			TIME.  IF THE ELAPSED TIME IS GREATER THAN THE THRESHOLD, THEN CACHE
			MISSES ARE INDICATED, AND IS THE EXPECTED RESULT.  IF, HOWEVER, THE
			TIME IS BELOW THE THRESHOLD, IT INDICATES CACHE HITS, WHICH SHOULD NOT
			HAPPEN WITH PAGING TURNED OFF (PHYSICAL ADDRESSES).

		2278	PHYPGM - AC PGM FOR PHYSICAL CACHE CHECK
			
			THIS AC PGM FIRST LOADS CACHE BY EXECUTING A PAGE OF JFCLS.  THEN THE
			PAGE IS EXECUTED AGAIN WITH RDTIME'S BEFORE AND AFTER TO CHECK ELASPED
			TIME.  CONTROL IS THEN RETURNED TO THE MAIN PROGRAM TO CHECK RESULTS.

		*****************************************************************
	2300	CACCHK - CACHEABLE/UNCACHEABLE CHECK
		*****************************************************************

		2302	CACCHK - CACHEABLE/UNCACHEABLE CHECK
			
			THIS TEST MAKES SURE THAT ALL EXEC MODE PAGES CAN BE MADE UNCACHEABLE
			BY SETTING THE APPROPRIATE BIT IN THE PAGE MAP ENTRY.  THEN, THE TEST
			INSURES THAT EACH PAGE CAN BE MADE CACHEABLE.  THEN THE ABOVE IS
			REPEATED FOR USER MODE REFERENCES.  A FIVE AC BLOCK AC PROGRAM IS
			USED, ONE OF THEM ACTUALLY DOES THE CACHE HIT/MISS TIMING, WHILE
			ANOTHER CHECKS THE RESULTS, COUNTS THRU ALL ADDRESS, AND RESETS THE
			FIRST BLOCK FOR ANOTHER PASS.  ONE BLOCK IS USED TO TURN ON PAGING AND
			START THE TEST, ANOTHER IS THE ERROR EXIT BLOCK AND THE LAST IS THE
			NORMAL EXIT BLOCK.  NOTE THAT BOTH THE TWO EXIT AC BLOCKS (ERROR AND
			NORMAL) ARE NEEDED, BECAUSE PAGING MUST BE TURNED OFF BEFORE RETURNING
			TO THE MAIN PROGRAM AS THE VIRTUAL PAGES ARE ALL MAPPED TO THE SAME
			PHYSICAL PAGE, THAT BEING THE JFCL PAGE.

		2337	CHKMSG - PRINT MESSAGE TO CHECK CACHE ENABLE FROM 8080.

		2343	CACER1 - HERE WHEN EXEC UNCACHED PAGED GOT CACHE HITS

		2359	CACER2 - HERE WHEN USER UNCACHED PAGE GOT CACHE HITS

		2375	CACER3 - HERE WHEN EXEC CACHED PAGE GOT CACHE MISSES

		2391	CACER4 - HERE WHEN USER CACHED PAGE GOT CACHE MISSES

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 9             
                                                                                                                           SEQ 0018
		2411	CACSET - SETUP AC BLK PROGRAM IN ALL THE NECESSARY BLOCKS.

		2461	CACPG1 - CACCHK'S AC PROGRAM NUMBER ONE.
			
				THIS AC BLOCK DOES THE ACTUAL TIMING TEST OF A GIVEN PAGE, TO
			DETERMINE IF THAT PAGE HAD CACHE HITS OR CACHE MISSES.  FIRST, THE
			JFCL PAGE IS EXECUTED TO LOAD THE CACHE.  NOTE THAT THE JRSTF THAT
			EXITS THE AC BLOCK WILL GO INTO USER MODE IF THE BIT IS SET IN THE
			DISPATCH ADDRESS.  THAT BIT WILL BE SET BY THE OTHER AC BLOCK PGM IF
			THE USER ADDRESS SPACE IS BEING TESTED, AND WILL BE CLEAR IF EXEC ADDR
			SPACE IS BEING TESTED.  THEN UPON RETURN FROM THE JFCL PAGE, THE MUUO
			TRAP ADDR IS SET TO POINT TO THE RDTIME INSTR WHICH WILL CAUSE A MUUO
			TRAP IF EXECUTED IN USER MODE.  THE MUUO TRAP CAUSES THE MACHINE TO GO
			INTO EXEC MODE, THUS THE RDTIME INSTR SERVES THE DUAL PURPOSE OF BEING
			A 'GO-EXEC' OPCODE, AS WELL AS ITS NORMAL USE.  THEN, THE RETURN
			ADDRESS IS SETUP AGAIN TO A DIFFERENT PLACE.  THE CURRENT TIME IS
			NOTED, AND THE JFCL PAGE IS EXECUTED AGAIN.  UPON RETURN, THE MUUO
			TRAP ADDR IS AGAIN SET TO POINT TO THE RDTIME, THE TIME IS NOTED, AND
			THE PREVIOUS TIME IS SUBTRACTED FROM THE CURRENT TIME.  AFTER THAT,
			THE OTHER AC PROGRAM IS CALLED TO ANALYZE THE RESULT, AND TO SETUP FOR
			NEXT TIME.
			
			ENTER WITH <WRUBR [401000,,0]>	FROM BLOCK 5,BLOCK 2

		2504	CACPG2 - CACCHK'S AC PROGRAM NUMBER TWO
			
			THIS AC PGM IS RESPONSIBLE FOR CHECKING THE RESULTS OF THE TIMING TEST
			DONE BY THE OTHER AC BLOCK.  FIRST, THE AC PGM INCREMENTS THE PAGE
			NUMBER TO BE TESTED, AND CHECKS FOR DONE.  IF THE AC PGM IS DONE, THE
			EXIT ADDRESS IS MODIFIED TO GO TO A AC BLOCK THAT WILL TURN OFF PAGING
			AND RETURN TO THE MAIN PROGRAM FOR CLEANUP.  THEN THE TWO WORDS OF THE
			RESULT OF THE TIMING TEST ARE OBTAINED FROM THE OTHER BLOCK.  THEN THE
			FIRST WORD IS CHECKED FOR ZERO, AND THE SECOND WORD IS CHECKED AGAINST
			THE THRESHOLD.  IF EITHER FAILS, THE EXIT ADDRESS IS MODIFIED TO GO TO
			AN AC BLOCK THAT WILL TURN OFF PAGING, AND RETURN TO THE MAIN PROGRAM
			TO REPORT THE ERROR.  NOTE THAT THE FIRST DISPATCH TO THE JFCL PAGE IS
			A JRSTF.  THE DISPATCH ADDRESS WILL CONTAIN THE USER FLAG IF THAT TEST
			IS BEING RUN (AS OPPOSED TO EXEC ADDR SPACE).  THEN THE DISPATCH ADDR
			IS PUT INTO THE OTHER AC BLOCK WHICH IS THEN CALLED TO DO ITS FUNCION.
			
			ENTER WITH <WRUBR [402100,,0]>	FROM OTHER AC BLOCK

		2543	CACPG3 - THIS AC BLK PGM GETS LOADED INTO AC BLKS 3,4 AS AN EXIT PGM

		2552	CACPG5 - THIS AC BLK PGM IS THE STARTUP BLK FOR THIS TEST
			
			THIS AC BLK TURNS ON PAGING AND THEN GOES TO START THE TEST.

		2565	CACPG6 - THIS AC BLK PGM RESETS AC BLK1 FOR THE NEXT PASS
			
			THIS AC BLK PUTS A JRST INSTRUCTION IN CRETAC IN BLK1

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 10            
                                                                                                                           SEQ 0019
		*****************************************************************
	2577	LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST
		*****************************************************************

		2579	LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST
			
			THIS TEST DOES ADDRESS LINE INTERFERENCE CHECKING ON THE LOW ORDER
			ADDRESS BITS (27-35).  ANY ERRORS ENCOUNTERED WILL BE REPORTED AND THE
			TEST ABORTED.  SEE THE DESCRIPTION NEXT TO ACBLK1 FOR HOW THE TEST
			WORKS.  THE TEST IS CALLED BY SETTING UP THE PAGE MAP FOR THE TEST,
			LOADING THE SIX AC BLOCKS USED, AND JUMPING TO AC BLOCK 0.  THE TEST
			WILL RETURN TO ONE OF THREE PLACES: %EOT FOR A SUCCESSFUL RETURN,
			%ERR1 IF A READ ON THE OLD DATA FAILED, OR %ERR2 IF A READ ON THE NEW
			DATA FAILED.  AFTER RETURN TO THE MAIN PROGRAM, THE WRITE THROUGH TEST
			IS PERFORMED.  SINCE THE MEMORY SHOULD HAVE DIFFERENT INFORMATION IN
			IT AS A RESULT OF THE WRITES TO CACHE AND WRITE THROUGHS TO MEMORY, IF
			THE MEMORY CONTAINS THE EXPECTED DATA, THEN THE WRITE THROUGH FUNCTION
			IS WORKING CORRECTLY.

		2655	%ERRW - HERE ON ERROR ON WRITE THRU, TO PRINT EXTRA INFO

		2666	%ERR1 - HERE IF FAILURE ON READ OF OLD DATA IN CURRENT LOCATION

		2674	%ERR2 - HERE IF FAILURE ON READ OF NEW DATA IN CURRENT LOCATION

		2720	%ERR3 - HERE TO PRINT EXTRA DATA ON THE ERROR

		2731	ACBLK0 - THIS BLOCK IS THE STARTUP BLOCK FOR THE WHOLE TEST
			
			THIS BLK TURNS ON PAGING, THEN INITIALIZES PAGE 400 TO ALL ONES.
			BLOCK 1 WILL BE INITIALIZED FOR THE FIRST PASS ALEADY.
			
			ENTER WITH <WRUBR [B0GO,,0]>, JRST B0R16 (FROM MAIN PGM)

		2762	ACBLK1 - MAIN LOOP THAT TESTS THE CACHE FOR ADDR INTERFERENCE
			
			FIRST THE OLD CONTENTS OF THE CURRENT ADDRESS ARE READ AND VERIFIED.
			THEN, A NEW PATTERN IS WRITTEN, READ, AND VERIFIED.  THEN THE ADDRESS
			IS INCREMENTED AND THE TEST IS REPEATED.  AFTER ALL ADDRESSES HAVE
			BEEN READ AND VERIFIED, WRITTEN, READ AND VERIFIED, THE PATTERN BEING
			WRITTEN IS CHANGED BY BLK2 AND BLK3 AND THE TEST IS REPEATED.
			PATTERNS USED ARE: ALL ONES TO ALL ZEROS, ALL ZEROS TO ALL ONES, ALL
			ONES TO A SINGLE ONE, AND A SINGLE ONE TO ALL ONES.  (IN SHORTER FORM:
			-1 => 0, 0 => -1, -1 => 1, 1 => -1).  THE 4 PATTERN CHANGES SELECTED
			GIVE THE PARITY NET BOTH EVEN AND ODD WORDS TO CHECK FOR PARITY ERRORS
			ON.  AFTER ALL PATTERNS HAVE BEEN DONE, THE ADDRESS INCREMENT IS
			CHANGED BY BLK4, SO THAT A DIFFERENT BIT IS INCREMENTED THE FASTEST,
			WITH AN END-AROUND-CARRY.  THEN THE TEST IS REPEATED AGAIN, THRU ALL
			PATTERNS.  AFTER EACH BIT HAS BEEN INCREMENTED THE FASTEST, THE TEST
			IS CHANGED BY BLK 5, SO THAT ALL ADDRESS INCREMENTS BECOME ADDRESS
			DECREMENTS AND THE ENTIRE TEST IS REPEATED AGAIN.  AFTER TEST IS
			FINISHED, IT EXITS BACK TO THE MAIN PROGRAM.  IF ANY ERRORS ARE
			ENCOUNTERED DURING THE TEST, THE TEST IS ABORTED, AND EXITS BACK TO
			THE MAIN PROGRAM TO REPORT THE ERROR.

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 11            
                                                                                                                           SEQ 0020
			
			ENTER WITH <WRUBR [B1GO,,0]>	(FROM BLK0, BLK3)

		2807	ACBLK2 - THIS BLK CHGS THE MEMORY WRITE PATTERN INSTR IN BLK1
			
			THIS AC BLK CHECKS A LOOP CNT, AND EITHER GOES TO BLK4 FOR RESET OF
			LOOP COUNT AND CHANGE OF INCREMENT, OR CHANGES A MEMORY WRITE
			INSTRUCTION IN B1R6 AND JUMPS TO BLK3 TO CHG THE TEST INSTRUCTIONS IN
			BLK1.
			
			ENTER WITH <WRUBR [B2GO,,0]>	(FROM BLK1)

		2838	ACBLK3 - THIS BLK CHGS THE MEMORY TEST PATTERN INSTRS IN BLK1
			
			THIS AC BLK CHANGES TWO TEST INSTRUCTIONS IN B1R5,B1R10 TO TEST
			DIFFERENT PATTERNS.  THEN THE AC BLK JUMPS BACK TO THE TEST IN BLK1.
			
			ENTER WITH <WRUBR [B3GO,,0]>	(FROM BLK2)

		2867	ACBLK4 - THIS AC BLK DOUBLES THE INCREMENT INSTR IN BLK1
			
			RESETS LOOP COUNT IN BLK2 FOR ANOTHER PASS THRU THE PATTERNS, AND SETS
			UP A NEW ADDRESS INCREMENT IN BLK1.  THEN A RETURN IS MADE TO BLK2 IF
			MORE TO DO, OR TO BLK5.  AFTER THE ASCENDING TEST IS DONE, BLK5
			MODIFIES THIS BLOCK TO GO TO BLK7 INSTEAD OF BLK5, TO STOP THE TEST.
			
			ENTER WITH <WRUBR [B4GO,,0]>	(FROM BLK1,BLK2)

		2899	ACBLK5 - THIS AC BLK SETUPS THE TEST FOR DESCENDING ADDRESSES
			
			THIS AC BLK CHGS THE ADDI INSTRS TO SUBI INSTRS IN B1R11, B1R13, B4R1
			TO SETUP FOR DESCENDING ADDRESS TEST.  THEN JUMPS TO BLK6.
			
			ENTER WITH <WRUBR [B5GO,,0]>	(FROM BLK4)

		2929	ACBLK6 - THIS AC BLK RESETS THE LOOP COUNT IN BLK2, THEN JUMPS TO IT.
			
			ENTER WITH <WRUBR [B6GO,,0]>	(FROM BLK5)

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 12            
                                                                                                                           SEQ 0021
		*****************************************************************
	2950	HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST
		*****************************************************************

		2952	HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST
			
			THIS TEST DOES ADDRESS LINE INTERFERENCE CHECKING ON THE HIGH ORDER
			ADDRESS BITS (18-26).  ANY ERRORS ENCOUNTERED WILL BE REPORTED AND THE
			TEST ABORTED. 
			
			TEST OPERATION IS AS FOLLOWS: FIRST, THE CACHE IS LOADED WITH A PAGE
			OF JFCLS FOR A GIVEN VIRTUAL PAGE NUMBER.  THEN, A DIFFERENT VIRTUAL
			PAGE CONTAINING IDENTICAL DATA (JFCLS) IS EXECUTED, WITH RDTIME'S
			BEFORE AND AFTER TO RECORD THE ELAPSED TIME FOR THE SECOND PASS.  THE
			INTENTION IS THAT IF THERE IS A BAD ADDRESS LINE, THE SECOND PAGE WILL
			LOOK THE SAME AS THE FIRST AND WILL GET CACHE HITS INSTEAD OF CACHE
			MISSES.  THIS WILL SHOW UP IN THE TIMING OF THE EXECUTION OF THE
			JFCLS.  IF THE TEST IS SUCCESSFUL, THE SECOND PAGE WILL TAKE LONGER
			THAN THE THRESHOLD, WHICH SAYS THAT THE PAGE DID NOT GET ANY CACHE
			HITS.  A TABLE IS USED TO DETERMINE WHICH PAGE NUMBERS TO TRY AGAINST
			WHICH OTHER PAGE NUMBERS FOR OPTIMUM TESTING FOR BAD ADDRESS LINES.
			ALSO INCLUDED IN THE TABLE ON PURPOSE ARE ENTRIES WHERE THE FIRST PAGE
			NUMBER IS THE SAME AS THE SECOND.  IN THIS CASE THE TEST IS EXPECTED
			TO GET CACHE HITS, AND THE RESULTS ARE INTERPRETED ACCORDINGLY.  IF
			CACHE MISSES ARE ENCOUNTERED, IT IS AN ERROR BECAUSE THE CACHE
			CONTAINS VALID DATA, AND SHOULD HAVE RESULTED IN CACHE HITS.

		3036	%ERR4 - PRINT OUT CURRENT STATE IF HI ORDER ADDRESS LINE TEST FAILS

		3058	HOALPG - AC PGM TO TEST HI ORD ADDR LINES
			
			THIS AC BLK TURNS ON PAGING, RUNS THRU THE JFCL PAGE TO LOAD THE
			CACHE, AND THEN SETS UP THE RETURN ADDR AGAIN.  THEN THE PGM READS THE
			TIME, RUNS THE JFCL PAGE AGAIN, AND READS THE TIME AGAIN ON RETURN.
			THEN PAGING IS TURNED OFF, AND CONTROL IS RETURNED TO THE MAIN PGM.

		*****************************************************************
	3084	UECHEK - USER TO EXEC CACHE CHECK
		*****************************************************************

		3086	UECHEK - USER TO EXEC CACHE CHECK
			
			THIS TEST IS DESIGNED TO CHECK THE USER TO EXEC TRANSITION OF THE
			USER/EXEC SIGNAL IN THE CACHE HIT LOGIC.  IF THE TEST IS SUCCESSFUL,
			THE SECOND TIME THE PAGE IS EXECUTED (IN EXEC MODE), CACHE MISSES ARE
			EXPECTED.  IF THE TEST FAILS, AND CACHE HITS ARE FOUND, THE USER/EXEC
			SIGNAL DID NOT MAKE THE PROPER TRANSITION FROM USER TO EXEC.  THIS
			TEST IS DESIGNED TO BE USED IN CONJUNCTION WITH THE TEST CALLED
			'EUCHEK' WHICH CHECKS THE OPPOSITE TRANSITION OF THE USER/EXEC SIGNAL.

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 13            
                                                                                                                           SEQ 0022
		3140	UEPGM - AC BLOCK PROGRAM TO CHECK THE USER TO EXEC TRANSITION
			
			THIS PROGRAM STARTS OFF BY TURNING ON PAGING, AND THEN EXECUTING A
			JRSTF INSTRUCTION THAT CHANGES TO USER MODE AND GOES OFF TO THE PAGE
			OF JFCLS.  THE RETURN ADDRESS HAVING ALREADY BEEN SETUP, THE CONTROL
			NOW RETURNS TO THE AC PGM.  UPON RETURN, THE NEW RETURN ADDRESS IS
			SETUP, AND THEN AN ILLEGAL OPCODE (0) IS SETUP.  BECAUSE THE MUUO TRAP
			LOCATIONS WERE PREVIOUSLY SETUP TO POINT TO THE NEXT INSTRUCTION,
			RESULT IS A 'GO-EXEC' OPCODE.  NEXT THE TIME IS NOTED, AND THE JFCL
			PAGE IS AGAIN CALLED.  UPON RETURN, THE PGM NOTES THE TIME, CALCULATES
			THE DIFFERENCE BETWEEN THE STOP TIME AND THE START TIME, TURNS OFF
			PAGING, AND THEN RETURNS TO THE MAIN PROGRAM FOR ANALYSIS.

		*****************************************************************
	3172	EUCHEK - EXEC TO USER CACHE CHECK
		*****************************************************************

		3174	EUCHEK - EXEC TO USER CACHE CHECK
			
			THIS TEST IS DESIGNED TO CHECK THE EXEC TO USER TRANSITION OF THE
			USER/EXEC SIGNAL IN THE CACHE HIT LOGIC.  IF THE TEST IS SUCCESSFUL,
			THE SECOND TIME THE PAGE IS EXECUTED (IN USER MODE), CACHE MISSES ARE
			EXPECTED.  IF THE TEST FAILS, AND CACHE HITS ARE FOUND, THE USER/EXEC
			SIGNAL DID NOT MAKE THE PROPER TRANSITION FROM EXEC TO USER.  THIS
			TEST IS DESIGNED TO BE USED IN CONJUNCTION WITH THE TEST CALLED
			'UECHEK' WHICH CHECKS THE OPPOSITE TRANSITION OF THE USER/EXEC SIGNAL.

		3228	EUPGM - AC BLOCK PROGRAM TO CHECK THE EXEC TO USER TRANSITION
			
			THIS PROGRAM STARTS BY TURNING ON PAGING, AND THEN GOING OFF TO THE
			PAGE OF JFCLS.  THE RETURN ADDRESS HAS BEEN SETUP ALREADY.  UPON
			RETURN, A NEW RETURN ADDRESS IS SETUP, THE TIME IS NOTED, AND A JRSTF
			IS EXECUTED TO GO INTO USER MODE AND TO GO TO THE JFCL PAGE.  UPON
			RETURN, THE TIME IS AGAIN NOTED, AND THE DIFFERENCE BETWEEN THE STOP
			AND START TIMES IS CALCULATED.  THEN AN ILLEGAL OPCODE (0) IS EXECUTED
			TO CAUSE AN MUUO TRAP TO THE EXEC.  HAVING PREVIOUSLY SETUP THE MUUO
			TRAP LOCATIONS TO POINT TO THE NEXT INSTRUCTION IN THE AC PGM
			EFFECTIVELY CREATES A 'GO-EXEC' OPCODE.  THEN PAGING IS TURNED OFF,
			AND CONTROL IS RETURNED TO THE MAIN PROGRAM FOR ANALYSIS.

DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1                               DECDOC VER  00.24   17-OCT-78 14:34:32   PAGE 14            
                                                                                                                           SEQ 0023
		*****************************************************************
	3260	SUPPORT ROUTINES
		*****************************************************************

		3262	MUUOST - SETUP MUUO HANDLER LOCATIONS

		3292	PMAPRT - DOES USER/EXEC CACHEABLE/UNCACHEABLE VIRTUAL TO PHYS MAPPING.
			
				ENTER WITH A=PHYS PAGE NUMBER (11 BITS, 0-3777)
					   B=VIRTUAL PAGE NUMBER (9 BITS, 0-777)
					   C=CACHEABLE/UNCACHEABLE (0=UNCACHEABLE)
					   D=USER/EXEC  (0=EXEC)

		3354	FATALP - PRINT OUT PC AND MSG UPON FATAL ERROR

		3375	.GODDT - ROUTINE TO GO TO DDT ENTRY POINT

		3386	SETLOP - SETUP PAGE OF JFCLS FOR CACHE TIMING TEST

		3397	PFH - PAGE FAIL HANDLER

		3418	SAVREG - SAVE ALL ACS IN AREA CALLED SAVACS...CALLED WITH JSR SAVREG

		3432	RESREG - RESTORE ALL ACS FROM AREA CALLED SAVACS, CALL WITH JSR RESREG

		3444	XRSREG - RESTORE REGS WITHOUT CLEARING FLAG

		3452	SETPAG - SETUP VIRTUAL PAGES FROM 0 TO END: TO MAP TO PHYSICAL

		*****************************************************************
	3463	.STORAGE
		*****************************************************************

		3474	TSTTAB - THIS TABLE CONTAINS THE ADDRESSES OF THE TESTS TO BE RUN

		3508	CONSTANTS
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1
DSKEBT	MAC	17-Oct-78 14:31		CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978                                        SEQ 0024

     1					;PS:<PRENTICE.DSKEB>DSKEBT.MAC.38, 17-Oct-78 14:31:18, Edit by PRENTICE
     2			000000		MCNVER==0				;PATCH LEVEL
     3			000001		DECVER==1				;PGM VERSION
     4						XLIST
     5						LIST
     6						COMMENT %
     7						TITLE	DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1					
     8					.
     9					%
    10					XALL^
    11						NOSYM
    12
    13					;*ASSEMBLE AS: @R MACRO
    14					;*DSKEB,DSKEB/C=DSKEBT,PARAM.KSM,FIXED.KSM,DSKEBM,STOR.KSM
    15
    16						SEARCH MONSYM,MACSYM
    17
    18	000137					LOC	137			;VERSION LOCATION
    19	000137	000000	000001			MCNVER,,DECVER			;STORE VERSION INFO
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2
DSKEBT	MAC	17-Oct-78 14:31		DIAGNOSTIC PARAMETERS                                                              SEQ 0025

    20					SUBTTL DIAGNOSTIC PARAMETERS
    21
    22			000001		$PAPER==1			;SHOW DEFINITIONS FOR KS10
    23			000001		EXCASB==1			;EXEC MODE ONLY
    24			000001		PGMEND==1			;SUPPLY END STATEMENT
    25			000001		KS10==1				;PGM TO RUN ON KS10 ONLY
    26			000200		DEBUG==200			;ENUF ROOM TO DEBUG WITH
    27			001000		ITERAT==1000			;RUN A FEW TIMES
    28
    29			030000		SADR1==BEGIN
    30			030000		SADR2==BEGIN
    31			030000		SADR3==BEGIN
    32			030000		SADR4==BEGIN
    33			030061		SADR5==$BEND2			;CTRL-C XFER BACK TO DIAG MONITOR
    34			030000		SADR6==BEGIN
    35		254000	030000		SADR7==JRST BEGIN
    36		254000	030000		SADR8==JRST BEGIN
    37		254000	030000		SADR9==JRST BEGIN
    38		254000	030000		SADR10==JRST BEGIN
    39		254000	030000		SADR11==JRST BEGIN
    40		137526	402651		PAREA1==137526,,402651		;RANDOM SEED
    41			000000		PAREA2==0
    42		446353	454200		PAREA3==SIXBIT\DSKEB\
    43		605664	000000		PAREA4==SIXBIT\PNT\		;PGM NAME
    44			000000		PAREA5==0
    45			000000		PAREA6==0
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 3
DSKEBT	MAC	17-Oct-78 14:31		DIAGNOSTIC PARAMETERS                                                              SEQ 0026

    46
    47					;*AC DEFINITIONS
    48
    49			000001		A=1
    50			000002		B=2
    51			000003		C=3
    52			000004		D=4
    53			000005		E=5
    54			000006		F=6
    55			000016		TN=16
    56
    57
    58					;*OPDEFS
    59
    60		702200	000000			OPDEF	RDTIME	[702200,,0]	;READS TIME BASE TO E,E+1 (4MHZ)
    61		704000	000000			OPDEF	UMOVE	[704000,,0]	;UMOVE A,B => PXCT 4,[MOVE A,B]
    62		705000	000000			OPDEF	UMOVEM	[705000,,0]	;UMOVEM A,B=> PXCT 4,[MOVEM A,B]
    63
    64					;*MACROS
    65
    66						DEFINE	.PGE	(ARG),<	LOC	<.!777>+1
    67					ARG:
    68					ARG'PN==<ARG_-^D9>
    69					>
    70
    71						DEFINE	DS	(ARG),<IRP ARG,<ARG==.
    72						LOC	ARG+1>>
    73						DEFINE	DB	(ARGN,ARGS),<ARGN==.
    74						LOC	ARGN+ARGS>
    75						DEFINE	FATALE	(ARG),< JSP 0,[ JRST FATALP
    76							ASCIZ\ARG\]>
    77			000000		TSTCNT==0
    78					DEFINE BEGTST,<TSTCNT==TSTCNT+1
    79						HRRZ TN,SAVETN
    80						CAIE TN,TSTCNT-1
    81						JSP 0,BEGERR
    82						SETZM ERFLG
    83						MOVEI	0,.+2
    84						MOVEM	0,TESTPC>
    85
    86					DEFINE ENDTST,<	HRRZ TN,SAVETN
    87						CAIE TN,TSTCNT-1
    88						JSP 0,ENDERR
    89						RTN>
    90
    91					;*MISC DEFINITIONS
    92		500000	000036		XWRUBR==1B0!1B2!0B8!UPTPN	;VALUE TO INIT UBR
    93			010000		THLD==10000			;TIMING THRESHOLD (ABOUT 2 USEC/JFCL)
    94			020000		PON==LTRPEN!EPTPN		;VALUE TO TURN ON PAGING AND SET EBR
    95			000000		POFF==EPTPN			;VALUE TO TURN OFF PAGING AND SET EBR
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1
PARAM	KSM	28-Mar-78 11:27		CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978                                        SEQ 0027

    96					 SUBTTL	CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978
    97
    98					DEFINE	S,<;*********************************************************************>
    99
   100					S^;*********************************************************************^
   101					;*DATA SWITCHES
   102					;*LEFT HALF SWITCHES ARE PRE-ASSIGNED FOR SUBROUTINE PACKAGE USE
   103					;*AND CONTROL LOOPING, PRINTING (TTY OR OTHER DEVICE) AND MISC. FUNCTIONS
   104					S^;*********************************************************************^
   105
   106			400000		ABORT==	400000			;ABORT PROGRAM ON PASS COMPLETION
   107			200000		RSTART==200000			;RESTART TEST, PRINT TOTALS
   108			100000		TOTALS==100000			;PRINT TOTALS, CONTINUE
   109
   110			040000		NOPNT==	040000			;INHIBIT ALL PRINT/TYPE OUT (EXCEPT FORCED)
   111			020000		PNTLPT==020000			;PRINT ALL DATA ON LPT (LOGICAL DEVICE, USER MODE)
   112			010000		DING==	010000			;RING BELL ON ERROR
   113
   114			004000		LOOPER==004000			;ENTER EXERCISE/CHECK LOOP ON ERROR
   115			002000		ERSTOP==002000			;HALT ON TEST ERROR
   116			001000		PALERS==001000			;PRINT ALL ERRORS
   117
   118			000400		RELIAB==000400			;RELIABILITY MODE
   119			000200		TXTINH==000200			;INHIBIT ERROR TEXT
   120			000100		INHPAG==000100			;INHIBIT PAGING
   121
   122			000040		MODDVC==000040			;MODIFY DEVICE CODE
   123			000020		INHCSH==000020			;INHIBIT CACHE
   124			000010		OPRSEL==000010			;OPERATOR SELECTION
   125
   126			000004		CHAIN==	000004			;CHAIN CONTROL SWITCH
   127
   128									;SWITCH 16 RESERVED
   129
   130									;SWITCH 17 RESERVED !!!
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0028

   131					SUBTTL	PROGRAM/SUBROUTINE PARAMETERS
   132
   133					S^;*********************************************************************^
   134					;*SPECIAL SUBPROGRAM LINKAGES
   135					S^;*********************************************************************^
   136
   137			027772		FSELNK=	27772	;FILE SELECT LINK
   138			027773		FRDLNK=	27773	;FILE READ LINK
   139			027774		LDLNK=	27774	;LOAD LINKAGE ADDRESS
   140			027775		DDTLNK=	27775	;DDT LINKAGE ADDRESS
   141			027776		MODLNK=	27776	;OPERATIONAL MODE CHECK LINKAGE ADDRESS
   142			027777		SUBLNK=	27777	;SUBROUTINE LINKAGE ADDRESS
   143
   144					S^;*********************************************************************^
   145					;*SPECIAL SUBROUTINE FATAL HALTS
   146					;*USED TO REPORT ERRORS THAT CAUSE THE SUBROUTINES TO BE UNUSABLE
   147					S^;*********************************************************************^
   148
   149					;ADDRESS   TAG	REASON
   150					;---------------------
   151
   152					; 1010 	NOEXEC	;PROGRAM NOT CODED FOR EXEC MODE OPERATION
   153					; 1011  PLERR	;FATAL PUSH LIST POINTER ERROR
   154					; 1012  PLERR1	;INITIAL PUSH LIST POINTER ERROR
   155					; 1013  MUOERR	;MUUO WITH LUUO HANDLER WIPED OUT
   156					; 1014  SMBER	;KS-10 INTERRUPT WITHOUT DOORBELL
   157					; 1015  SMCER	;KS-10 CLOCK INTERRUPT WITHOUT FLAG SET
   158					; 1016  CPIERR	;CPU INITIALIZATION ERROR
   159					; 1017  EOPERR	;END OF PROGRAM ERROR
   160					; 1020  LUOERR	;INTERRUPT WITH LUUO HANDLER WIPED OUT
   161
   162					S^;*********************************************************************^
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 3
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0029

   163					S^;*********************************************************************^
   164					;OPERATOR DEFINITIONS (NON-UUO'S)
   165					S^;*********************************************************************^
   166
   167		260740	000000		OPDEF	GO	[PUSHJ	P,]	;SUBROUTINE CALL
   168		263740	000000		OPDEF	RTN	[POPJ	P,]	;SUBROUTINE RETURN 
   169		261740	000000		OPDEF	PUT	[PUSH	P,]	;PUT DATA ON PUSH LIST
   170		262740	000000		OPDEF	GET	[POP	P,]	;GET DATA FROM PUSH LIST 
   171		254000	000000		OPDEF	PJRST	[JRST	]	;JRST TO ROUTINE THAT RTN'S
   172		254200	000000		OPDEF	HALT	[JRST	4,]	;DEFINITION FOR DDT
   173		254100	000000		OPDEF	JRSTF	[JRST	2,]	;DEFINITION FOR DDT
   174		254500	000000		OPDEF	JEN	[JRST	12,]	;DEFINITION FOR DDT
   175
   176					S^;*********************************************************************^
   177					;*SUBROUTINE INITIALIZATION CALL
   178					S^;*********************************************************************^
   179
   180		265000	030011		OPDEF	PGMINT	[JSP	0,SBINIT]	;SUBROUTINE INITIALIZATION
   181
   182					S^;*********************************************************************^
   183					;*HALTING UUO'S (A MORE GRACEFUL HALT THAN SIMPLY USING THE HALT INSTRUCTION).
   184					S^;*********************************************************************^
   185
   186		037640	000004		OPDEF	FATAL	[37B8!15B12!4]	;FATAL PROGRAMMING HALT
   187		037600	000004		OPDEF	ERRHLT	[37B8!14B12!4]	;PROGRAM ERROR HALT
   188
   189					S^;*********************************************************************^
   190					;*TERMINAL INPUT UUO'S
   191					;*ALWAYS COME FROM THE CONSOLE TERMINAL IN EXEC MODE OR THE
   192					;*CONTROLLING TERMINAL (REAL TERMINAL OR PTY) IN USER MODE.
   193					S^;*********************************************************************^
   194
   195		037000	000003		OPDEF	TTICHR 	[37B8!0B12!3]	;TTY, INPUT ANY CHARACTER
   196		037040	000003		OPDEF	TTIYES	[37B8!1B12!3]	;TTY, NORMAL RETURN Y
   197		037100	000003		OPDEF	TTINO	[37B8!2B12!3]	;TTY, NORMAL RETURN N
   198		037140	000003		OPDEF	TTIOCT	[37B8!3B12!3]	;TTY, INPUT OCTAL WORD
   199		037200	000003		OPDEF	TTIDEC	[37B8!4B12!3]	;TTY, INPUT DECIMAL WORD
   200		037240	000003		OPDEF	TTICNV	[37B8!5B12!3]	;TTY, INPUT CONVERTABLE WORD
   201		037300	000003		OPDEF	TTLOOK	[37B8!6B12!3]	;TTY, KEYBOARD CHECK
   202		037340	000003		OPDEF	TTALTM	[37B8!7B12!3]	;TTY, ALT-MODE CHECK
   203		037400	000003		OPDEF	TTSIXB	[37B8!10B12!3]	;TTY, INPUT SIXBIT WORD
   204		037440	000003		OPDEF	TTYINP	[37B8!11B12!3]	;TTY, IMAGE MODE INPUT
   205		037500	000003		OPDEF	TTICLR	[37B8!12B12!3]	;TTY, CLEAR INPUT
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 4
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0030

   206					;*TERMINAL OUTPUT UUO'S.
   207
   208		037000	000000		OPDEF	PNTA	[37B8!0B12!0]	;PRINT ASCII WORD
   209		037000	000001		OPDEF	PNTAF	[37B8!0B12!1]	;PRINT ASCII WORD FORCED
   210		037740	000000		OPDEF	PNTAL	[37B8!17B12!0]	;PRINT ASCIZ LINE
   211		037740	000001		OPDEF	PNTALF	[37B8!17B12!1]	;PRINT ASCIZ LINE FORCED
   212		037600	000003		OPDEF	PSIXL	[37B8!14B12!3]	;PRINT SIXBIT'Z LINE
   213		037640	000003		OPDEF	PSIXLF	[37B8!15B12!3]	;PRINT SIXBIT'Z LINE FORCED
   214		037000	000000		OPDEF	PNTMSG	[37B8!0B12!0]	;PRINT MESSAGE IMMEDIATE
   215		037040	000000		OPDEF	PNTMSF	[37B8!1B12!0]	;PRINT MESSAGE IMMEDIATE FORCED
   216		037100	000000		OPDEF	PSIXM	[37B8!2B12!0]	;PRINT SIXBIT'Z MSG IMMEDIATE
   217		037200	000000		OPDEF	PSIXMF	[37B8!4B12!0]	;PRINT SIXBIT'Z MSG IMM FORCED
   218		037000	000000		OPDEF	PNTCI	[37B8!0B12!0]	;PRINT CHARACTER IMMEDIATE
   219		037040	000000		OPDEF	PNTCIF	[37B8!1B12!0]	;PRINT CHARACTER IMMEDIATE FORCED
   220		037500	000000		OPDEF	PNTCHR	[37B8!12B12!0]	;PRINT CHARACTER
   221		037500	000001		OPDEF	PNTCHF	[37B8!12B12!1]	;PRINT CHARACTER FORCED
   222		037040	000000		OPDEF	PNT1	[37B8!1B12!0]	;PRINT ONE OCTAL DIGIT
   223		037040	000001		OPDEF	PNT1F	[37B8!1B12!1]	;PRINT 1 OCTAL DIGIT FORCED	
   224		037100	000000		OPDEF	PNT2	[37B8!2B12!0]	;PRINT TWO OCTAL DIGITS
   225		037100	000001		OPDEF	PNT2F	[37B8!2B12!1]	;PRINT 2 OCTAL DIGITS FORCED	
   226		037140	000000		OPDEF	PNT3	[37B8!3B12!0]	;PRINT THREE OCTAL DIGITS
   227		037140	000001		OPDEF	PNT3F	[37B8!3B12!1]	;PRINT THREE OCTAL DIGITS FORCED	
   228		037200	000000		OPDEF	PNT4	[37B8!4B12!0]	;PRINT FOUR OCTAL DIGITS
   229		037200	000001		OPDEF	PNT4F	[37B8!4B12!1]	;PRINT FOUR OCTAL DIGITS FORCED
   230		037240	000000		OPDEF	PNT5	[37B8!5B12!0]	;PRINT FIVE OCTAL DIGITS
   231		037240	000001		OPDEF	PNT5F	[37B8!5B12!1]	;PRINT FIVE OCTAL DIGITS FORCED
   232		037300	000000		OPDEF	PNT6	[37B8!6B12!0]	;PRINT SIX OCTAL DIGITS
   233		037300	000001		OPDEF	PNT6F	[37B8!6B12!1]	;PRINT SIX OCTAL DIGITS FORCED
   234		037340	000000		OPDEF	PNT7	[37B8!7B12!0]	;PRINT 7 OCTAL DIGITS
   235		037340	000001		OPDEF	PNT7F	[37B8!7B12!1]	;PRINT 7 OCTAL DIGITS FORCED
   236		037440	000000		OPDEF	PNT11	[37B8!11B12!0]	;PRINT 11 OCTAL DIGITS
   237		037440	000001		OPDEF	PNT11F	[37B8!11B12!1]	;PRINT 11 OCTAL DIGITS FORCED.
   238		037400	000000		OPDEF	PNTADR	[37B8!10B12!0]	;PRINT PHYSICAL ADDRESS
   239		037400	000001		OPDEF	PNTADF	[37B8!10B12!1]	;PRINT PHYSICAL ADDRESS FORCED
   240		037600	000000		OPDEF	PNTOCT  [37B8!14B12!0]	;PRINT FULL WORD OCTAL
   241		037600	000001		OPDEF	PNTOTF	[37B8!14B12!1]	;PRINT FULL WORD OCTAL FORCED
   242		037540	000000		OPDEF	PNTHW	[37B8!13B12!0]	;PRINT OCTAL HALF WORDS, 6 SP 6
   243		037540	000001		OPDEF	PNTHWF	[37B8!13B12!1]	;PRINT OCTAL HALF WORDS, 6 SP 6 FORCED
   244		037700	000003		OPDEF	PNTOCS	[37B8!16B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S
   245		037740	000003		OPDEF	PNTOCF	[37B8!17B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S FORCED
   246		037640	000000		OPDEF	PNTDEC	[37B8!15B12!0]	;PRINT DECIMAL, SUPRESS LEADING 0'S
   247		037640	000001		OPDEF	PNTDCF	[37B8!15B12!1]	;PRINT DECIMAL, SUPRESS LEADING 0'S FORCED
   248		037700	000000		OPDEF	PNTDS	[37B8!16B12!0]	;PRINT DECIMAL, SPACES FOR LD 0'S
   249		037700	000001		OPDEF	PNTDSF	[37B8!16B12!1]	;PRINT DECIMAL, SPACES FOR LD 0'S FORCED
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 5
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0031

   250		037200	000002		OPDEF	PNTNM	[37B8!4B12!2]	;PRINT PROGRAM NAME
   251		037000	000002		OPDEF	PNTSIX	[37B8!0B12!2]	;PRINT SIXBIT WORD
   252		037040	000002		OPDEF	PNTSXF	[37B8!1B12!2]	;PRINT SIXBIT WORD FORCED
   253		037240	000002		OPDEF	DROPDV	[37B8!5B12!2]	;CLOSE LOGICAL FILE, USER MODE
   254		037100	000002		OPDEF	PNTCW	[37B8!2B12!2]	;PRINT DF10 CONTROL WORD
   255		037140	000002		OPDEF	PNTCWF	[37B8!3B12!2]	;PRINT DF10 CONTROL WORD FORCED
   256		037000	030242		OPDEF	PCRL	[37B8!0B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED
   257		037040	030242		OPDEF	PCRLF	[37B8!1B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED FORCED
   258		037000	000040		OPDEF	PSP	[37B8!0B12!40]	;PRINT SPACE
   259		037040	000040		OPDEF	PSPF	[37B8!1B12!40]	;PRINT SPACE FORCED
   260		037000	030243		OPDEF	PCRL2	[37B8!0B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE)
   261		037040	030243		OPDEF	PCRL2F	[37B8!1B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE) FORCED
   262		037040	000007		OPDEF	PBELL	[37B8!1B12!7]	;PRINT TTY BELL
   263
   264		037040	000026		OPDEF	PFORCE	[37B8!1B12!26]	;PRINT FORCE, CONTROL O OVERRIDE
   265
   266					DEFINE	PMSG	(ARG),<
   267						PSIXM	[SIXBIT\ARG'_\]>
   268
   269					DEFINE	PMSGF	(ARG),<
   270						PSIXMF	[SIXBIT\ARG'_\]>
   271
   272					;*SIXBTZ -- MACRO TO GENERATE SIXBIT DATA FOR PRINTING
   273					;*	CONSERVES CORE OVER ASCIZ
   274
   275					DEFINE	SIXBTZ	(ARG),<	[SIXBIT\ARG'_\]>
   276
   277					;*CONSOLE SWITCH INPUT UUO.
   278					;*READS CONSOLE SWITCHES IF IN EXEC MODE OR ASKS FOR THEM IF
   279					;* USER MODE.
   280
   281		037400	000002		OPDEF	SWITCH	[37B8!10B12!2]	;INPUT CONSOLE SWITCHES
   282
   283					;*CLOCK INITIALIZATION UUO - TO SET DESIRED CLOCK OPERATION
   284					;*EITHER IGNORE CLOCK, ONLY LET IT TICK OR CAUSE INTERRUPT TO OCCUR.
   285
   286		037540	000004		OPDEF	CLOKOP	[37B8!13B12!4]	;CLOCK OPERATION UUO - CLOCK
   287		037200	000004		OPDEF	MTROP	[37B8!4B12!4]	;CLOCK OPERATION UUO - METER
   288
   289					;*KS-10 CACHE OPERATION UUO'S
   290
   291		037040	000004		OPDEF	CINVAL	[37B8!1B12!4]	;CACHE INVALIDATE
   292		037100	000004		OPDEF	CFLUSH	[37B8!2B12!4]	;CACHE FLUSH
   293		037140	000004		OPDEF	CWRTBI	[37B8!3B12!4]	;CACHE WRITE-BACK & INVALIDATE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 6
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0032

   294					;*END OF PASS/PROGRAM UUOS
   295
   296					;PERFORMS THE END OF PASS FUNCTIONS. INCREMENT PASS COUNT,
   297					;*DECREMENT ITERATION COUNT, CHECK IF FINISHED WITH THIS PROGRAM ETC.
   298
   299		037500	000004		OPDEF	ENDUUO	[37B8!12B12!4]	;UUO TO DISPLAY LIGHTS
   300		037700	000004		OPDEF	EOPUUO	[37B8!16B12!4]	;END OF PROGRAM UUO
   301
   302					;*MEMORY MANAGEMENT UUO'S
   303					;*UUO'S TO PERFORM VARIOUS MEMORY FUNCTIONS. MAPPING, ZEROING, PAGING,
   304					;*ADDRESS CONVERSION, ETC...
   305
   306		037000	000004		OPDEF	MAPMEM	[37B8!0B12!4]	;MAP MEMORY
   307		037500	000002		OPDEF	MEMZRO	[37B8!12B12!2]	;ZERO MEMORY
   308		037440	000002		OPDEF	MEMSEG	[37B8!11B12!2]	;SETUP MEMORY SEGMENT
   309		037540	000002		OPDEF	MAPADR	[37B8!13B12!2]	;VIRTUAL TO PHYSICAL ADR CONVERT
   310		037640	000002		OPDEF	MAPCNK	[37B8!15B12!2]	;MAP MEMORY CHUNK
   311		037600	000002		OPDEF	MAPSET	[37B8!14B12!2]	;SET KI10 EXEC PAGE MAP
   312		037740	000002		OPDEF	MAPPNT	[37B8!17B12!2]	;PRINT MEMORY MAP
   313
   314					;*DEVICE CODE MODIFICATION UUO
   315					;*ALLOWS THE MODIFICATION OF IOT'S TO ONE DEVICE TO BE CHANGED TO
   316					;*IOT'S TO A DIFFERENT DEVICE CODE.
   317
   318		037340	000002		OPDEF	MODPCU	[37B8!7B12!2]	;MODIFY PERHIPERAL CODE, USER
   319		037300	000002		OPDEF	MODPCP	[37B8!6B12!2]	;MODIFY PERHIPERAL CODE, PROGRAM
   320
   321			030000			IFNDEF	MODDVL,<MODDVL==BEGIN>
   322			030000			IFNDEF	MODDVU,<MODDVU==BEGIN>
   323
   324					;*"DIAMON" FILE SELECTION AND READ UUOS
   325
   326		037240	000004		OPDEF	FSELECT	[37B8!5B12!4]	;FILE SELECTION
   327		037300	000004		OPDEF	FREAD	[37B8!6B12!4]	;FILE READ - ASCII DATA
   328		037340	000004		OPDEF	FRD36	[37B8!7B12!4]	;FILE READ - 36 BIT DATA
   329		037400	000004		OPDEF	FRD8	[37B8!10B12!4]	;FILE READ - 8 BIT DATA
   330
   331						XLIST
   332					IFNDEF	EROLD,<LIST
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 7
PARAM	KSM	28-Mar-78 11:27		ERROR HANDLING UUO DEFINITIONS                                                     SEQ 0033

   333					SUBTTL	ERROR HANDLING UUO DEFINITIONS
   334
   335					S^;*********************************************************************^
   336					;*ERROR HANDLER PARAMETERS
   337					S^;*********************************************************************^
   338
   339		036000	000000		OPDEF	ERUUO	[36B8]		;ERROR CALL UUO
   340		035000	000000		OPDEF	ERLOOP	[35B8]		;ERROR LOOP, CHECKS PC,REPT,REPT1,ERROR
   341		035040	000000		OPDEF	ERLP1	[35B8!1B12]	;ERROR LOOP IF PC'S MATCH
   342		035100	000000		OPDEF	ERLP2	[35B8!2B12]	;ERROR LOOP IF ANY ERROR
   343		034000	000000		OPDEF	REPTUO	[34B8]		;REPEAT LOOP UUO
   344
   345					;*THE ERROR HANDLER MACROS
   346
   347					;*A MACRO TO REPORT AN ERROR AND LOOP
   348
   349						DEFINE	ERROR	(ADR,FORMAT,CORECT,ACTUAL,F,D,ERR)<
   350												SALL
   351						ERUUO	FORMAT,[T,,[SIXBIT\F'_\]
   352							   CORECT,,ACTUAL
   353							   [SIXBIT\D'_\],,ERR]
   354												XALL
   355						ERLOOP	ADR		;IF ERROR, LOOP TO ADR
   356					>
   357
   358					;*A MACRO TO REPORT AN ERROR AND NOT LOOP
   359
   360						DEFINE	ERROR1	(FORMAT,CORECT,ACTUAL,F,D,ERR)<
   361												SALL
   362						ERUUO	FORMAT,[T,,[SIXBIT\F'_\]
   363							   CORECT,,ACTUAL
   364							   [SIXBIT\D'_\],,ERR]
   365												XALL>
   366
   367					>;END OF EROLD CONDITIONAL
   368
   369						XLIST
   370					IFDEF	$PAPER,<LIST>
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 8
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0034

   371					SUBTTL	STANDARD PROGRAM ASSIGNMENTS
   372
   373					S^;*********************************************************************^
   374					;*ACCUMULATORS
   375					S^;*********************************************************************^
   376
   377			000017		P=	17			;PUSHDOWN POINTER AC (IF PUSH LIST USED)
   378			000015		REPT==	15			;ERROR HANDLER REPEAT AC
   379			000016		REPT1==	16			; "
   380
   381					S^;*********************************************************************^
   382					;*PDP-10 STANDARD PC CONTROL FLAGS (SAVED ON PUSHJ, JSR, ETC..)
   383					S^;*********************************************************************^
   384
   385			400000		AROV==	400000			;ARITHMETIC OVERFLOW
   386			200000		CRY0==	200000			;CARRY 0
   387			100000		CRY1==	100000			;CARRY 1
   388			040000		FOV==	40000			;FLOATING POINT OVERFLOW
   389			020000		BIS==	20000			;BYTE INTERRUPT
   390			010000		USERF==	10000			;USER MODE
   391			004000		EXIOT==	4000			;USER PRIV I/O
   392			000400		TN0==	400			;TRAP NUMBER BIT 0
   393			000200		TN1==	200			;TRAP NUMBER BIT 1
   394			000100		FXU==	100			;FLOATING POINT UNDERFLOW
   395			000040		DCK==	40			;DIVIDE CHECK
   396
   397					S^;*********************************************************************^
   398					;*PDP-10 STANDARD ADDRESS ASSIGNMENTS
   399					S^;*********************************************************************^
   400
   401			000040		LUUO==	40			;UUO STORAGE, UUO 1-37
   402			000041		LUUOI==	41			;UUO SERVICE INSTRUCTION
   403
   404					S^;*********************************************************************^
   405					;*JOB DATA AREA EXTERNALS (OLD DEFINITIONS)
   406					S^;*********************************************************************^
   407
   408			000040		JOBUUO==40
   409			000041		JOB41==	41
   410			000044		JOBREL==44
   411			000074		JOBDDT==74
   412			000116		JOBSYM==116
   413			000117		JOBUSY==117
   414			000120		JOBSA==	120
   415			000121		JOBFF==	121
   416			000124		JOBREN==124
   417			000125		JOBAPR==125
   418			000126		JOBCNI==126
   419			000127		JOBTPC==127
   420			000130		JOBOPC==130
   421			000137		JOBVER==137
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 9
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0035

   422					S^;*********************************************************************^
   423					;*JOB DATA AREA EXTERNALS (NEW DEFINITIONS)
   424					S^;*********************************************************************^
   425
   426			000040		.JBUUO==40
   427			000041		.JB41==	41
   428			000044		.JBREL==44
   429			000074		.JBDDT==74
   430			000116		.JBSYM==116
   431			000117		.JBUSY==117
   432			000120		.JBSA==	120
   433			000121		.JBFF==	121
   434			000124		.JBREN==124
   435			000125		.JBAPR==125
   436			000126		.JBCNI==126
   437			000127		.JBTPC==127
   438			000130		.JBOPC==130
   439			000137		.JBVER==137
   440
   441					S^;*********************************************************************^
   442					;*USER MODE APR ASSIGNMENTS (FOR "APRENB" CALL)
   443					S^;*********************************************************************^
   444
   445			200000		PDLOVU==200000			;PUSHDOWN LIST OVERFLOW
   446			020000		MPVU==	20000			;MEMORY PROTECTION VIOLATION
   447			010000		NXMU==	10000			;NON-X-MEMORY
   448			004000		PARU==	4000			;PARITY ERROR
   449			001000		CLKU==	1000			;CLOCK
   450			000100		FOVU==	100			;FLOATING OVERFLOW
   451			000010		AROVU==	10			;ARITHMETIC OVERFLOW
   452
   453					S^;*********************************************************************^
   454					;*USER MODE PRINT OUTPUT CHANNEL ASSIGNMENTS (FOR SUBROUTINE PACKAGE)
   455					;*THE USER SHOULD BE CAUTIONED NOT TO USE THESE CHANNELS WHEN
   456					;*USING THE SUBROUTINE PACKAGE AND CODING USER MODE PROGRAMS.
   457					S^;*********************************************************************^
   458
   459			000017		$DEVCH==17			;LOGICAL DEVICE CHANNEL
   460
   461					S^;*********************************************************************^
   462					;*PDP-10 SPECIAL COMPATABILITY ASSIGNMENTS
   463					S^;*********************************************************************^
   464
   465			000010		PAG==	010		;PAGING I/O DEVICE CODE
   466
   467			000014		CCA==	014		;CACHE I/O DEVICE CODE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 10
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0036

   468					S^;*********************************************************************^
   469					;*PDP-10 STANDARD APR CONO ASSIGNMENTS
   470					S^;*********************************************************************^
   471
   472			200000		IOCLR==	200000			;CLEAR ALL I/O DEVICES
   473
   474					S^;*********************************************************************^
   475					;*PDP-10 STANDARD PI CONO ASSIGNMENTS
   476					S^;*********************************************************************^
   477
   478			010000		PICLR==	10000			;CLEAR PI SYSTEM
   479			004000		REQSET==4000			;SET PROGRAM PI REQUEST
   480			002000		CHNON==	2000			;TURN ON CHANNEL
   481			001000		CHNOFF==1000			;TURN OFF CHANNEL
   482			000400		PIOFF==	400			;TURN OFF PI SYSTEM
   483			000200		PION==	200			;TURN ON PI SYSTEM
   484
   485					S^;*********************************************************************^
   486					;*PDP-10 STANDARD PI CONI ASSIGNMENTS
   487					S^;*********************************************************************^
   488
   489			000200		PION==	200			;PI SYSTEM ON
   490
   491					S^;*********************************************************************^
   492					;*PDP-10 STANDARD PI CHANNEL ASSIGNMENTS
   493					S^;*********************************************************************^
   494
   495			000100		PICHN1==100			;PI CHANNEL 1
   496			000040		PICHN2==40			;PI CHANNEL 2
   497			000020		PICHN3==20			;PI CHANNEL 3
   498			000010		PICHN4==10			;PI CHANNEL 4
   499			000004		PICHN5==4			;PI CHANNEL 5
   500			000002		PICHN6==2			;PI CHANNEL 6
   501			000001		PICHN7==1			;PI CHANNEL 7
   502			000177		PICHNA==177			;ALL PI CHANNELS, 1 THRU 7
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 11
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0037

   503					S^;*********************************************************************^
   504					;*KS10 CONO APR 000 ASSIGMENTS
   505					S^;*********************************************************************^
   506
   507			200000		LIOCLR==200000			;CLEAR ALL I/O DEVICES
   508			100000		LFLGEN==100000			;ENABLE SELECTED FLAG
   509			040000		LFLGDS==40000			;DISABLE SELECTED FLAG
   510			020000		LFLGCL==20000			;CLEAR SELECTED FLAG
   511			010000		LFLGST==10000			;SET SELECTED FLAG
   512			001000		LPWRFL==1000			;POWER FAIL FLAG
   513			000400		LNXMER==400			;NON-EXISTENT MEMORY FLAG
   514			000200		LPARER==200			;MB PARITY ERROR FLAG
   515			000100		LPSFT==	100			;SOFT MEMORY ERROR
   516			000040		LACLK==	40			;INTERVAL TIMER
   517			000007		LAPRP7==7			;APR PI CHANNEL 7
   518			000006		LAPRP6==6			;APR PI CHANNEL 6
   519			000005		LAPRP5==5			;APR PI CHANNEL 5
   520			000004		LAPRP4==4			;APR PI CHANNEL 4
   521			000003		LAPRP3==3			;APR PI CHANNEL 3
   522			000002		LAPRP2==2			;APR PI CHANNEL 2
   523			000001		LAPRP1==1			;APR PI CHANNEL 1
   524			101000		LEPWRF==101000			;ENABLE POWER FAIL
   525			041000		LDPWRF==041000			;DISABLE POWER FAIL
   526			021000		LCPWRF==021000			;CLR POWER FAIL
   527			011000		LSPWRF==011000			;SET POWER FAIL
   528			100400		LENXER==100400			;ENABLE NON-EXISTENT MEMORY
   529			040400		LDNXER==040400			;DISABLE NON-EXISTENT MEORY
   530			020400		LCNXER==020400			;CLR NON-EXISTENT MEMORY
   531			010400		LSNXER==010400			;SET NON-EXISTENT MEMORY
   532			100200		LEPAER==100200			;ENABLE PARITY ERRORS
   533			040200		LDPAER==040200			;DISABLE PARITY ERRORS
   534			020200		LCPAER==020200			;CLR PARITY ERROR
   535			010200		LSPAER==010200			;SET PARITY ERROR
   536			100100		LEPSFT==100100			;ENABLE SOFT MEMORY ERROR
   537			040100		LDPSFT==040100			;DISABLE SOFT MEMORY ERROR
   538			020100		LCPSFT==020100			;CLR SOFT MEMORY ERROR
   539			010100		LSPSFT==010100			;SET SOFT MEMORY ERROR
   540			121600		LAPRAL==121600			;CLR ALL ERROR FLAGS & ENABLE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 12
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0038

   541					S^;*********************************************************************^
   542					;*KS10 CONI APR 000 ASSIGMENTS (LEFT HALF)
   543					S^;*********************************************************************^
   544
   545			001000		LPWRFE==1000			;POWER FAILURES ENABLED
   546			000400		LNXMEN==400			;NON-EXISTENT MEMORY ERRORS ENABLED
   547			000200		LPAREN==200			;PARITY ERRORS ENABLED
   548			000100		LPSFTE==100			;SOFT MEMORY ERROR ENABLED
   549			000040		LACLKE==40			;INTERVAL TIMER ENABLED
   550
   551					S^;*********************************************************************^
   552					;*KS10 CONI APR 000 ASSIGMENTS (RIGHT HALF)
   553					S^;*********************************************************************^
   554
   555			001000		LPWRFL==1000			;POWER FAIL FLAG
   556			000400		LNXMER==400			;NON-EXISTENT MEMORY FLAG
   557			000200		LPARER==200			;PARITY ERROR FLAG
   558			000100		LPSFTER==100			;SOFT MEMORY ERROR FLAG
   559			000007		LAPRP7==7			;APR PI CHANNEL 7
   560			000006		LAPRP6==6			;APR PI CHANNEL 6
   561			000005		LAPRP5==5			;APR PI CHANNEL 5
   562			000004		LAPRP4==4			;APR PI CHANNEL 4
   563			000003		LAPRP3==3			;APR PI CHANNEL 3
   564			000002		LAPRP2==2			;APR PI CHANNEL 2
   565			000001		LAPRP1==1			;APR PI CHANNEL 1
   566			000010		LINT==10			;APR INTERRUPT
   567
   568					S^;*********************************************************************^
   569					;*KS10 DATAO APR 000 ASSIGMENTS (LEFT HALF)
   570					S^;*********************************************************************^
   571
   572			000400		LINSTF==400			;ADDRESS BREAK REQUEST FOR INST. FETCH
   573			000200		LDATAF==200			;ADDRESS BREAK REQUEST FOR DATA FETCH
   574			000100		LWRITE==100			;ADDRESS BREAK REQUEST FOR DATA WRITE
   575			000040		LUSCMP==40			;USER ADDRESS COMPARE
   576			000000		LEXCMP==0			;EXEC ADDRESS COMPARE
   577
   578					S^;*********************************************************************^
   579					;*KS10 DATAO APR 000 ASSIGMENTS (RIGHT HALF)
   580					S^;*********************************************************************^
   581
   582					;DATAO APR,ADDRESS SWITCHES=13-35
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 13
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0039

   583					S^;*********************************************************************^
   584					;*KS10 DATAI APR 000 ASSIGMENTS (LEFT HALF)
   585					S^;*********************************************************************^
   586
   587			000400		LINSTF==400			;ADDRESS BREAK REQUEST FOR INST. FETCH
   588			000200		LDATAF==200			;ADDRESS BREAK REQUEST FOR DATA FETCH
   589			000100		LWRITE==100			;ADDRESS BREAK REQUEST FOR DATA WRITE
   590			000040		LUSCMP==40			;USER ADDRESS COMPARE
   591			000000		LEXCMP==0			;EXEC ADDRESS COMPARE
   592
   593					S^;*********************************************************************^
   594					;*KS10 DATAI APR 000 ASSIGMENTS (RIGHT HALF)
   595					S^;*********************************************************************^
   596
   597					;DATAI APR,ADDRESS SWITCHES=13-35
   598
   599					S^;*********************************************************************^
   600					;*KS10 BLKO APR 000 ASSIGMENTS (IMMEDIATE MODE)
   601					S^;*********************************************************************^
   602
   603					;REFILL ALGORITHM BITS 18-20
   604					;REFILL ALGORITHM ADDRESS 27-33
   605
   606					S^;*********************************************************************^
   607					;*KS10 BLKI APR 000 ASSIGMENTS
   608					S^;*********************************************************************^
   609
   610					;MICRO-CODE OPTIONS = 0-8
   611					;MICRO-CODE VERSION NUMBER = 9-17
   612					;HARDWARE OPTIONS =18-20
   613					;PROCESSOR SERIAL NUMBER = 21-35
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 14
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0040

   614					S^;*********************************************************************^
   615					;*KS10 CONO PI 004 ASSIGMENTS
   616					S^;*********************************************************************^
   617
   618			020000		LRQCLR==20000			;DROP INTERRUPT ON SELECTED CHANNEL
   619			010000		LPICLR==10000			;CLEAR PI SYSTEM
   620			004000		LREQSE==4000			;REQUEST INTERRUPT ON SELECTED CHANNEL
   621			002000		LCHNON=2000			;TURN ON SELECTED CHANNEL
   622			001000		LCHNOF==1000			;TURN OFF SELECTED CHANNEL
   623			000400		LPIOFF==400			;TURN PI SYSTEM OFF
   624			000200		LPION==200			;TURN PI SYSTEM ON
   625			000100		LPICH1==100			;PI CHANNEL 1
   626			000040		LPICH2==40			;PI CHANNEL 2
   627			000020		LPICH3==20			;PI CHANNEL 3
   628			000010		LPICH4==10			;PI CHANNEL 4
   629			000004		LPICH5==4			;PI CHANNEL 5
   630			000002		LPICH6==2			;PI CHANNEL 6
   631			000001		LPICH7==1			;PI CHANNEL 7
   632			000177		LPICHA==177			;ALL PI CHANNELS
   633
   634					S^;*********************************************************************^
   635					;*KS10 CONI PI 004 ASSIGMENTS (LEFT HALF)
   636					S^;*********************************************************************^
   637
   638			000100		LPRCH1==100			;PROGRAM REQUEST ON CHANNEL 1
   639			000040		LPRCH2==40			;PROGRAM REQUEST ON CHANNEL 2
   640			000020		LPRCH3==20			;PROGRAM REQUEST ON CHANNEL 3
   641			000010		LPRCH4==10			;PROGRAM REQUEST ON CHANNEL 4
   642			000004		LPRCH5==4			;PROGRAM REQUEST ON CHANNEL 5
   643			000002		LPRCH6==2			;PROGRAM REQUEST ON CHANNEL 6
   644			000001		LPRCH7==1			;PROGRAM REQUEST ON CHANNEL 7
   645
   646					S^;*********************************************************************^
   647					;*KS10 CONI PI 004 ASSIGMENTS (RIGHT HALF)
   648					S^;*********************************************************************^
   649
   650			040000		LPIIP1==40000			;PI IN PROGRESS ON CHANNEL 1
   651			020000		LPIIP2==20000			;PI IN PROGRESS ON CHANNEL 2
   652			010000		LPIIP3==10000			;PI IN PROGRESS ON CHANNEL 3
   653			004000		LPIIP4==4000			;PI IN PROGRESS ON CHANNEL 4
   654			002000		LPIIP5==2000			;PI IN PROGRESS ON CHANNEL 5
   655			001000		LPIIP6==1000			;PI IN PROGRESS ON CHANNEL 6
   656			000400		LPIIP7==400			;PI IN PROGRESS ON CHANNEL 7
   657			000200		LPION==200			;PI SYSTEM ON
   658			000100		LPICH1==100			;PI CHANNEL 1 ON
   659			000040		LPICH2==40			;PI CHANNEL 2 ON
   660			000020		LPICH3==20			;PI CHANNEL 3 ON
   661			000010		LPICH4==10			;PI CHANNEL 4 ON
   662			000004		LPICH5==4			;PI CHANNEL 5 ON
   663			000002		LPICH6==2			;PI CHANNEL 6 ON
   664			000001		LPICH7==1			;PI CHANNEL 7 ON
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 15
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0041

   665					S^;*********************************************************************^
   666					;*KS10 DATAO PAG 010 ASSIGMENTS (LEFT HALF)
   667					S^;*********************************************************************^
   668
   669			400000		LLACBL==400000			;LOAD AC BLOCKS
   670			100000		LLDUSB==100000			;LOAD USER BASE REGISTER
   671					;CURRENT AC BLOCKS BITS 6 - 8
   672					;PREVIOUS AC BLOCKS BITS 9 - 11
   673
   674					S^;*********************************************************************^
   675					;*KS10 DATAO PAG 010 ASSIGMENTS (RIGHT HALF)
   676					S^;*********************************************************************^
   677
   678					;USER BASE REGISTER BITS 23 - 35
   679
   680					S^;*********************************************************************^
   681					;*KS10 DATAI PAG 010 ASSIGMENTS (LEFT HALF)
   682					S^;*********************************************************************^
   683
   684			400000		LLACBL==400000			;LOAD AC BLOCKS
   685			100000		LLDUSB==100000			;LOAD USER BASE REGISTER
   686					;CURRENT AC BLOCKS BITS 6 - 8
   687					;PREVIOUS AC BLOCKS BITS 9 - 11
   688
   689					S^;*********************************************************************^
   690					;*KS10 DATAI PAG 010 ASSIGMENTS (RIGHT HALF)
   691					S^;*********************************************************************^
   692
   693					;USER BASE REGISTER BITS 25 - 35
   694
   695					S^;*********************************************************************^
   696					;*KS10 CONO PAG 010 ASSIGMENTS
   697					S^;*********************************************************************^
   698
   699			040000		LSMODE==40000			;SECTION MODE
   700			020000		LTRPEN==20000			;TRAP AND PAGE CACHE ENABLE
   701
   702					;EXEC BASE REGISTER = 25-35
   703
   704					S^;*********************************************************************^
   705					;*KS10 CONI PAG 010 ASSIGMENTS
   706					S^;*********************************************************************^
   707
   708			040000		LSECMO==40000			;SECTION MODE
   709			020000		LTRPAE==20000			;TRAP AND PAGE CACHE ENABLE
   710
   711					;EXEC BASE REGISTER = 25-35
   712
   713					S^;*********************************************************************^
   714					;*KS10 BLKO PAG 010 ASSIGMENTS (IMMEDIATE MODE)
   715					S^;*********************************************************************^
   716
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 16
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0042

   717					S^;*********************************************************************^
   718					;*KS10 EXEC PAGE MAP PAGE ASSIGNMENTS
   719					S^;*********************************************************************^
   720
   721			000100		UBAVEC==100			;UNIBUS VECTOR TABLE ADDRESS
   722
   723			000421		AROVTP==421			;ARITHMETIC TRAP
   724			000422		PDOVTP==422			;PUSHDOWN OVERFLOW TRAP
   725			000423		TRP3TP==423			;TRAP 3 TRAP
   726
   727			000510		LTBASH==510			;TIME-BASE, HI
   728			000511		LTBASL==511			;TIME-BASE, LO
   729			000512		LPRFMH==512			;PERFORMANCE ANAYLYSIS, HI
   730			000513		LPRFML==513			;PERFORMANCE ANAYLYSIS, LO
   731
   732					S^;*********************************************************************^
   733					;*KS10 USER PAGE MAP PAGE ASSIGNMENTS
   734					S^;*********************************************************************^
   735
   736			000421		AROVTP==421			;ARITHMETIC TRAP
   737			000422		PDOVTP==422			;PUSHDOWN OVERFLOW TRAP
   738			000423		TRP3TP==423			;TRAP 3 TRAP
   739
   740			000424		MUUO==	424			;MUUO STORAGE
   741			000425		MUUOPC==425			;C(PC) OF MUUO STORAGE
   742			000426		LCNTXT==426			;PROCESS CONTEXT WORD
   743
   744			000430		KNTRP==430			;KERNAL	 	NO TRAP - NEW PC'S-
   745			000431		KTRP==	431			;"	 	TRAP
   746			000432		SNTRP==432			;SUPERVISOR	NO TRAP
   747			000433		STRP==	433			;"		TRAP
   748			000434		CNTRP==434			;CONCEAL 	NO TRAP
   749			000435		CTRP==	435			;"		TRAP
   750			000436		PNTRP==436			;PUBLIC		NO TRAP
   751			000437		PTRP==	437			;"		TRAP
   752
   753			000500		LEUPFW==500			;EXEC & USER PAGE FAIL WORD
   754			000501		LPFWPC==501			;C(PC) OF PAGE FAIL WORD
   755			000502		LPGFTR==502			;PAGE FAIL NEW PC
   756
   757			000504		LEBXMH==504			;E-BOX CLOCK TICK METER, HI
   758			000505		LEBXML==505			;E-BOX CLOCK TICK METER, LO
   759			000506		LMBXMH==506			;M-BOX CYCLE METER, HI
   760			000507		LMBXML==507			;M-BOX CYCLE METER, LO
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 17
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0043

   761					S^;*********************************************************************^
   762					;*KS10 I/O INSTRUCTIONS
   763					S^;*********************************************************************^
   764
   765		700000	000000		OPDEF	APRID	[700B8+0B12]	;READ PROCESSOR ID
   766		700200	000000		OPDEF	WRAPR	[700B8+4B12]	;WRITE APR
   767		700240	000000		OPDEF	RDAPR	[700B8+5B12]	;READ APR
   768		700600	000000		OPDEF	WRPI	[700B8+14B12]	;WRITE PI
   769		700640	000000		OPDEF	RDPI	[700B8+15B12]	;READ PI
   770
   771		701040	000000		OPDEF	RDUBR	[701B8+1B12]	;READ USER BASE REGISTER
   772		701100	000000		OPDEF	CLRPT	[701B8+2B12]	;CLEAR HARDWARE PAGE TABLE
   773		701140	000000		OPDEF	WRUBR	[701B8+3B12]	;WRITE USER BASE REGISTER
   774		701240	000000		OPDEF	RDEBR	[701B8+5B12]	;READ EXEC BASE REGISTER
   775		701200	000000		OPDEF	WREBR	[701B8+4B12]	;WRITE EXEC BASE REGISTER
   776
   777		702000	000000		OPDEF	RDSPB	[702B8+0B12]	;READ SPT BASE REGISTER
   778		702040	000000		OPDEF	RDCSB	[702B8+1B12]	;READ CORE STATUS TABLE BASE REGISTER
   779		702100	000000		OPDEF	RDPUR	[702B8+2B12]	;READ PROCESS USE REGISTER
   780		702140	000000		OPDEF	RDCSTM	[702B8+3B12]	;READ CST MASK REGISTER
   781		702200	000000		OPDEF	RDTIM	[702B8+4B12]	;READ TIME BASE
   782		702240	000000		OPDEF	RDINT	[702B8+5B12]	;READ INTERVAL TIMER
   783		702300	000000		OPDEF	RDHSB	[702B8+6B12]	;READ HALT STATUS BLOCK ADDRESS
   784
   785		702400	000000		OPDEF	WRSPB	[702B8+10B12]	;WRITE SPT BASE REGISTER
   786		702440	000000		OPDEF	WRCSB	[702B8+11B12]	;WRITE CORE STATUS TABLE BASE REGISTER
   787		702500	000000		OPDEF	WRPUR	[702B8+12B12]	;WRITE PROCESS USE REGISTER
   788		702540	000000		OPDEF	WRCSTM	[702B8+13B12]	;WRITE CST MASK REGISTER
   789		702600	000000		OPDEF	WRTIM	[702B8+14B12]	;WRITE TIME BASE
   790		702640	000000		OPDEF	WRINT	[702B8+15B12]	;WRITE INTERVAL TIMER
   791		702700	000000		OPDEF	WRHSB	[702B8+16B12]	;WRITE HALT STATUS BLOCK ADDRESS
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 18
PARAM	KSM	28-Mar-78 11:27		STANDARD PROGRAM ASSIGNMENTS                                                       SEQ 0044

   792					S^;*********************************************************************^
   793					;*KS10 UNIBUS I/O INSTRUCTIONS
   794					S^;*********************************************************************^
   795
   796		710000	000000		OPDEF	TIOE	[710B8]		;TEST I/O, SKIP IF ZERO
   797		711000	000000		OPDEF	TION	[711B8]		;TEST I/O, SKIP IF NON-ZERO
   798		712000	000000		OPDEF	RDIO	[712B8]		;READ I/O
   799		713000	000000		OPDEF	WRIO	[713B8]		;WRITE I/O
   800		714000	000000		OPDEF	BSIO	[714B8]		;BIT SET I/O
   801		715000	000000		OPDEF	BCIO	[715B8]		;BIT CLEAR I/O
   802		720000	000000		OPDEF	TIOEB	[720B8]		;	BYTE MODE
   803		721000	000000		OPDEF	TIONB	[721B8]
   804		722000	000000		OPDEF	RDIOB	[722B8]
   805		723000	000000		OPDEF	WRIOB	[723B8]
   806		724000	000000		OPDEF	BSIOB	[724B8]
   807		725000	000000		OPDEF	BCIOB	[725B8]
   808
   809					S^;*********************************************************************^
   810					;*KS10 UNIBUS BIT NUMBERS
   811					S^;*********************************************************************^
   812
   813			000001		EBIT0==1
   814			000002		EBIT1==2
   815			000004		EBIT2==4
   816			000010		EBIT3==10
   817			000020		EBIT4==20
   818			000040		EBIT5==40
   819			000100		EBIT6==100
   820			000200		EBIT7==200
   821			000400		EBIT8==400
   822			001000		EBIT9==1000
   823			002000		EBIT10==2000
   824			004000		EBIT11==4000
   825			010000		EBIT12==10000
   826			020000		EBIT13==20000
   827			040000		EBIT14==40000
   828			100000		EBIT15==100000
   829
   830						LIST
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0045

   831					SUBTTL	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978
   832
   833	030000					LOC	30000
   834
   835					S^;*********************************************************************^
   836					;*PROGRAM STARTING ADDRESSES
   837					;*THESE ADDRESSES CALL VARIOUS SPECIAL START ROUTINES AND OR OPTIONS
   838					;*NORMAL START ADDRESS IS 30000 ALL OTHERS ARE SPECIAL. INVOKED BECAUSE
   839					;*OF END OF PASS, POWER FAILURE, DDT START, RE-ENTERING(TYPICALLY USER
   840					;*MODE), OR ANY NUMBER OF SPECIAL FEATURE TESTS.
   841					S^;*********************************************************************^
   842
   843	030000	254 00 1 00 027776 	BEGIN:	JRST	@MODLNK		;STAND-ALONE START
   844	030001	254 00 0 00 030600 	$START:	JRST	START		;MODE CHECK STARTING ADDRESS
   845
   846	030002	254 00 1 00 027774 	DIAGMN:	JRST	@LDLNK		;DIAGNOSTIC MONITOR START
   847
   848	030003	254 00 1 00 027774 	SYSEXR:	JRST	@LDLNK		;SYSTEM EXERCISER START
   849
   850	030004	254 00 0 00 030000 	SFSTRT:	JRST	SADR1		;SPECIAL FEATURE START
   851
   852	030005	254 00 0 00 030000 	PFSTRT:	JRST	SADR2		;POWER FAIL RESTART
   853
   854	030006	254 00 0 00 030000 	REENTR:	JRST	SADR3		;REENTER START(USUALLY USER MODE ONLY)
   855
   856	030007				SRTDDT:				;COMMONLY MISTAKEN NAME FOR "DDTSRT"
   857	030007	254 00 1 00 027775 	DDTSRT:	JRST	@DDTLNK		;DDT START
   858
   859	030010	254 00 0 00 030603 	BEGIN1:	JRST	STARTA		;LOOP START(END OF PASS COMES HERE)
   860	030011	254 00 1 00 027777 	SBINIT:	JRST	@SUBLNK		;PMGINT LINKAGE
   861	030012	000000	000000		RETURN:	0			;RETURN ADDRESS STORAGE
   862
   863	030013	254000	030000		START1:	SADR7			;OPTIONAL STARTING ADR/INSTRUCTIONS
   864	030014	254000	030000		START2:	SADR8			; "
   865	030015	254000	030000		START3:	SADR9			; "
   866	030016	254000	030000		START4:	SADR10			; "
   867	030017	254000	030000		START5:	SADR11			; "
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0046

   868					S^;*********************************************************************^
   869					;*PROGRAM FIXED PARAMETER AREA
   870					S^;*********************************************************************^
   871
   872	030020	446353	454200		PNTNAM:	PAREA3		;SIXBIT PROGRAM NAME
   873	030021	605664	000000		PNTEXT:	PAREA4		;SIXBIT PROGRAM EXTENSION
   874	030022	137526	402651		RANDBS:	PAREA1		;RANDOM BASE NUMBER
   875	030023	000000	000000		SWTEXR:	PAREA2		;SYSTEM EXERCISER SWITCHES
   876	030024	000000	001000		ITRCNT:	ITERAT		;PROGRAM ITERATIONS
   877	030025	000000	033732		$PNAME:	PGMNAM		;POINTER TO PROGRAMS NAME
   878	030026	000000	000001		$PVER:	MCNVER,,DECVER	;MCN & DEC VERSION LEVEL
   879	030027	000000	030000		$MODVL:	MODDVL		;DEVICE CODE CHANGE LOWER LIMIT
   880	030030	000000	030000		$MODVU:	MODDVU		;DEVICE CODE CHANGE UPPER LIMIT
   881	030031	777777	777777		$EMODE:	IFNDEF EXCASB,<0> IFDEF EXCASB,<-1>	;EXEC ALLOWED
   882	030032	000000	000000		$UMODE:	IFNDEF USRASB,<0> IFDEF USRASB,<-1>	;USER ALLOWED
   883	030033	000000	000000		$DSKUP:	IFNDEF DSKUPD,<0> IFDEF DSKUPD,<-1>	;DISK UPDATE MODE
   884	030034	000000	000000		$MMAP:	IFNDEF MEMMAP,<0> IFDEF MEMMAP,<-1>	;ALLOW MEMORY RTNS
   885	030035	000000	000000		PAREA7:	PAREA5		;OPTIONAL PARAMETER
   886	030036	000000	000000		PAREA8:	PAREA6		;OPTIONAL PARAMETER
   887
   888					S^;*********************************************************************^
   889					;*PROGRAM VARIABLE PARAMETER AREA
   890					S^;*********************************************************************^
   891
   892	030037	000000	000000		USER:	0		; 0 = EXEC, -1 = USER MODE FLAG
   893	030040	000000	000000		KAIFLG:	0		;PROCESSOR TYPE, 0 = KA10, -1 = KI10
   894	030041	000000	000000		KLFLG:	0		;PROCESSOR TYPE, 0 = KA/KI, -1 = KL10
   895	030042	777777	777777		MONFLG:	-1		;DIAG MONITOR SPECIAL USER FLAG
   896	030043	000000	000000		MONCTL:	0		;DIAG MON/SYS EXR FLAG
   897	030044	000000	000000		MONTEN:	0		;-1= LOADED BY 10
   898	030045	000000	000000		CLOCKF:	0		;CLOCK TICKED FLAG
   899	030046	000000	000000		CONSW:	0		;CONSOLE SWITCH SETTINGS
   900	030047	000000	000000		PASCNT:	0		;PROGRAM PASS COUNT
   901	030050	000000	000000		RUNFLG:	0		;PROGRAM RUN FLAG
   902	030051	000000	000000		TESTPC:	0		;SUBTEST PC
   903	030052	000000	000000		ERRPC:	0		;ERROR PC
   904	030053	000000	000000		ERRTLS:	0		;ERROR TOTALS
   905	030054	000000	000000		TICKS:	0		;PROGRAM RUNNING TIME
   906	030055	000000	000000		MARGIN:	0		;KI10 MARGIN WORD VALUE
   907	030056	000000	000000		$ONETM:	0		;SUBROUTINE INITIALIZATION FLAG
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 3
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0047

   908					S^;*********************************************************************^
   909					;*SPECIAL PROGRAM DISPATCH ADDRESSES
   910					S^;*********************************************************************^
   911
   912	030057	037 12 0 00 000004 	BEGEND:	ENDUUO		;END OF PASS
   913	030060	254 00 0 00 030010 	$BEND1:	JRST	BEGIN1	;KEEP RUNNING PROGRAM
   914	030061	037 16 0 00 000004 	$BEND2:	EOPUUO		;END OF PROGRAM - NO RETURN
   915	030062	000000	030061		CNTLC:	SADR5		;CONTROL C XFER ADDRESS
   916	030063	000000	030000		ALTMGO:	SADR6		;ALTMODE XFER ADDRESS
   917	030064				CPOPJ1:			;SKIP RETURN
   918	030064	350 00 0 17 000000 	UUOSKP:	AOS	(P)	;SKIP RETURN FROM UUO
   919	030065				CPOPJ:			;NON-SKIP REGULAR RETURN
   920	030065	263 17 0 00 000000 	UUOEXT:	RTN		;UUO RETURN
   921	030066	255 00 0 00 000000 	UUORTN:	JFCL		;ADDITIONAL USERS UUO ROUTINE
   922	030067	255 00 0 00 000000 	$UORTX:	JFCL		;ADDITIONAL UUO LINKAGE
   923	030070	255 00 0 00 000000 	$UUOER:	JFCL		;INITED AS (JRST $UOERX)
   924	030071	255 00 0 00 000000 	$ITRHL:	JFCL		;ADDITIONAL INTERRUPT LINKAGE
   925	030072	255 00 0 00 000000 	$ITRX1:	JFCL		; "
   926	030073	255 00 0 00 000000 	$USRHL:	JFCL		; "
   927	030074	255 00 0 00 000000 	$RSRTX:	JFCL		;ADDITIONAL POWER FAIL LINKAGE
   928	030075	255 00 0 00 000000 	$RSRTY:	JFCL		; "
   929	030076	255 00 0 00 000000 	RESRT1:	JFCL		; INITED AS (JRST RESRTX)
   930	030077	255 00 0 00 000000 	RESRT2:	JFCL		; "
   931	030100	255 00 0 00 000000 	$PARER:	JFCL		;ADDITIONAL PARITY ERROR LINKAGE
   932	030101	255 00 0 00 000000 	ERMORE:	JFCL		;ADDITIONAL ERROR HANDLER LINKAGE
   933	030102	254 04 0 00 030102 		HALT	.	;IMPROPER TRANSFER HALT
   934
   935	030103	000000	000000		$PSHER:	0		;INITED AS (JRST PSHERR)
   936	030104	000000	000000		ITRCH1:	0		;PC & FLAGS OF CURRENT INTERRUPT
   937	030105	000000	000000			0		;INITED AS (JRST $ITRC1)
   938
   939					S^;*********************************************************************^
   940					;*PROCESSOR CONTROL STORAGE
   941					S^;*********************************************************************^
   942
   943	030106	000000	000000		$ACC0:	0		;INTERRUPT SAVED AC0
   944	030107	000000	000000		$SVPI:	0		;INTERRUPT SAVED PI
   945	030110	000000	000000		$SVAPR:	0		;INTERRUPT SAVED APR
   946	030111	000000	000000		$SVPAG:	0		;INTERRUPT SAVED PAG (DATAI)
   947	030112	000000	000000		$SPAG1:	0		;INTERRUPT SAVED PAG (CONI)
   948
   949	030113	000000	000000		$SVUUO:	0		;CURRENT USERS UUO
   950	030114	000000	000000		$SVUPC:	0		;PC OF CURRENT USERS UUO
   951
   952	030115	000000	000000		REPTU:	0		;REPEAT UUO ITERATIONS
   953	030116	000000	000000		SCOPE:	0		;ERROR HANDLER SCOPE LOOP FLAG
   954	030117	000000	000000		%CORFLG:0		; " CORRECT FLAG
   955	030120	000000	000000		%COREC:	0		; " CORRECT DATA
   956	030121	000000	000000		%ACTFL:	0		; " ACTUAL FLAG
   957	030122	000000	000000		%ACTUL:	0		; " ACTUAL DATA
   958	030123	000000	000000		%DISCR:	0		; " DISCREPENCY DATA
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 4
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0048

   959					S^;*********************************************************************^
   960					;*UUO DISPATCH TABLE
   961					S^;*********************************************************************^
   962						XLIST
   963						LIST
   964	030124	030070	030070		UUODIS:	LUUO1,,$UUOER
   965	030125	030070	030070			LUUO3,,LUUO2
   966	030126	030070	030070			LUUO5,,LUUO4
   967	030127	030070	030070			LUUO7,,LUUO6
   968	030130	030070	030070			LUUO11,,LUUO10
   969	030131	030070	030070			LUUO13,,LUUO12
   970	030132	030070	030070			LUUO15,,LUUO14
   971	030133	030070	030070			LUUO17,,LUUO16
   972	030134	030070	030070			LUUO21,,LUUO20
   973	030135	030070	030070			LUUO23,,LUUO22
   974	030136	030070	030070			LUUO25,,LUUO24
   975	030137	030070	030070			LUUO27,,LUUO26
   976	030140	030070	030070			LUUO31,,LUUO30
   977	030141	030070	030070			LUUO33,,LUUO32
   978
   979					S^;*********************************************************************^
   980					;*MEMORY MANAGMENT STORAGE
   981					S^;*********************************************************************^
   982
   983	030142	000000	000000		DF22F:	0		;DF10 CONTROL FLAG, 0 = 18, -1 = 22 BIT
   984	030143	000000	000000		MAPNEW:	0		;MEMORY MAPPING CONTROL FLAG, -1 = 4096K MAPPING
   985	030144	000000	000000		MEMTOT:	0		;TOTAL MEMORY SIZE IN K (1024.)
   986	030145	000000	000000		MEMLOW:	0		;LOWEST USABLE MEMORY
   987	030146				MEMSIZ:	BLOCK ^D41	;MEMORY SEGMENT POINTER TABLE
   988
   989					S^;*********************************************************************^
   990					;*PRINT CONTROL STORAGE
   991					S^;*********************************************************************^
   992
   993	030217	000000	000000		PNTFLG:	0		;PRINT FLAG, -1 WHILE IN PRINT ROUTINE
   994	030220	000000	000000		PNTENB:	0		;PRINT ENABLE
   995	030221	000000	000000		PDISF:	0		;PRINT DISABLED FLAG
   996	030222	000000	000000		PNTINH:	0		;INHIBIT PRINT INPUT CHECKS
   997	030223	000000	000000		PNTSPC:	0		;PRINT SPACE CONTROL
   998	030224	000000	000000		OPTIME:	0		;TYPE-IN WAIT TIME
   999	030225	000000	000000		$TWCNT:	0		;TIME WAITED
  1000	030226	000000	000000		$DVOFF:	0		;LOGICAL DEVICE INITED FLAG
  1001	030227	000000	000000		TTYFIL:	0		;TTY EXEC FILLERS FLAG
  1002	030230	000000	000000		TTYSPD:	0		;TTY EXEC BAUD RATE
  1003	030231	000000	000000		$TTCHR:	0		;ACTUAL TYPED IN CHAR
  1004	030232	000000	000000		$CHRIN:	0		;UPPER CASED & PARITY STRIPPED CHAR
  1005	030233	000000	000000		$TYPNB:	0		;TYPED IN NUMBER
  1006	030234	000000	000000		$CRLF:	0		;FREE CR/LF FLAG
  1007	030235	000000	000000		$TABF:	0		;TAB CONVERSION FLAG
  1008	030236	000000	000000		$FFF:	0		;FORM FEED CONVERSION FLAG
  1009	030237	000000	000000		$VTF:	0		;VERTICAL TAB CONVERSION FLAG
  1010	030240	000000	000000		USRLFF:	0		;USER LF FILLERS
  1011	030241	000000	000000		USRCRF:	0		;USER CR FILLERS
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 5
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0049

  1012					S^;*********************************************************************^
  1013					;*THE FOLLOWING MISCELLANEOUS PRINT CHARACTERS ARE INCLUDED
  1014					;*TO FACILITATE PRINTING AND ARE CALLED AS FOLLOWS:
  1015					;*	MOVEI	NAME
  1016					;*	PNTA		;OR PNTAF
  1017					S^;*********************************************************************^
  1018
  1019	030242				CRLF:	ASCII/
  1020	030242	015 012 000 000 000 	/
  1021	030243				CRLF2:	ASCII/
  1022
  1023	030243	015 012 015 012 000 	/
  1024	030244	054 000 000 000 000 	COMMA:	ASCII/,/
  1025	030245	056 000 000 000 000 	PERIOD:	ASCII/./
  1026	030246	040 000 000 000 000 	SPACE:	ASCII/ /
  1027	030247	011 000 000 000 000 	TAB:	ASCII/	/
  1028	030250				MINUS:
  1029	030250	055 000 000 000 000 	HYPEN:	ASCII/-/
  1030	030251	053 000 000 000 000 	PLUS:	ASCII/+/
  1031	030252	052 000 000 000 000 	AST:	ASCII/*/
  1032	030253	100 000 000 000 000 	ATSIN:	ASCII/@/
  1033	030254	050 000 000 000 000 	LFP:	ASCII/(/
  1034	030255	051 000 000 000 000 	RTP:	ASCII/)/
  1035	030256	007 0000000000 		BELL:	BYTE (7) 007
  1036	030257	077 000 000 000 000 	QUEST:	ASCII/?/
  1037	030260	057 000 000 000 000 	SLASH:	ASCII!/!
  1038	030261	044 000 000 000 000 	DOLLAR:	ASCII/$/
  1039	030262	000000	000012		RADIX:	^D10			;DECIMAL PRINT RADIX
  1040	030263	000000	000040		RADLSP:	40			;DECIMAL PRINT LEADING CHAR
  1041	030264	000000	000012		RADLSC:	^D10			;DECIMAL PRINT LEADING CHAR COUNT
  1042
  1043					S^;*********************************************************************^
  1044					;*USER MODE OUTPUT FILE INFORMATION
  1045					S^;*********************************************************************^
  1046
  1047	030265				$OBUF:	BLOCK	3		;LOGICAL FILE OUTPUT BUFFER HEADER
  1048	030270	60 62 51 56 64 00 	$OUTNM:	SIXBIT	/PRINT/		;FILE NAME
  1049	030271	60 56 64 00 00 00 	$OUTEX:	SIXBIT	/PNT/		;FILE NAME EXTENSION
  1050	030272					BLOCK	2
  1051
  1052					S^;*********************************************************************^
  1053					;*DISK UPDATE MODE FILE INFORMATION
  1054					S^;*********************************************************************^
  1055
  1056	030274				$IBUF:	BLOCK	3
  1057	030277	60 62 51 56 64 00 	$INNM:	SIXBIT	/PRINT/
  1058	030300	60 56 64 00 00 00 	$INEXT:	SIXBIT	/PNT/
  1059	030301					BLOCK	2
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 6
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0050

  1060					S^;*********************************************************************^
  1061					;*PUSHDOWN LIST CONTROL INFORMATION
  1062					S^;*********************************************************************^
  1063
  1064	030303	777577	030303		PLIST:	PLIST-PLISTE,,PLIST
  1065	030304				PLISTS:	BLOCK	200
  1066	030504	000000	000000		PLISTE:	0		;END OF PUSHDOWN LIST
  1067
  1068					S^;*********************************************************************^
  1069					;*POWER LINE CLOCK FREQUENCY FLAG
  1070					S^;*********************************************************************^
  1071
  1072	030505	000000	000000		CYCL60:	0	;0 = 60, -1 = 50 CYCLE
  1073
  1074					S^;*********************************************************************^
  1075					;*KL10 CACHE CONTROL FLAGS
  1076					S^;*********************************************************************^
  1077
  1078	030506	000000	000000		CSHFLG:	0	;ALLOW CACHE IF 0
  1079	030507	000000	000000		CSHMEM:	0	;CACHE MEMORY SEGMENTS IF 0
  1080
  1081					S^;*********************************************************************^
  1082					;*NUMBER INPUT DIGIT FLAG
  1083					S^;*********************************************************************^
  1084
  1085	030510	000000	000000		TTNBRF:	0	;-1 IF ANY DIGIT TYPED
  1086
  1087					S^;*********************************************************************^
  1088					;*KL10 & KI10 "INHPAG" SWITCH PAGING PREVENTION
  1089					S^;*********************************************************************^
  1090
  1091	030511	000000	000000		PVPAGI:	0	;IF NON-ZERO, OVERRIDE "INHPAG" SWITCH ACTION
  1092
  1093					S^;*********************************************************************^
  1094					;*ERROR REPORTING ROUTINE ADDITIONAL USERS CONTROL INSTRUCTIONS
  1095					S^;*********************************************************************^
  1096
  1097	030512	000000	000000		%ERHI1:	0	;IF NON-ZERO, XCT'D AT START OF %ERUUO
  1098	030513	000000	000000		%ERHI2:	0	;IF NON-ZERO, XCT'D AT END OF %ERUUO
  1099	030514	000000	000000		%ERHI3:	0	;IF NON-ZERO, XCT'D AFTER "PC" OF %ERUUO
  1100
  1101					S^;*********************************************************************^
  1102					;*SPECIAL USERS UUO INTERCEPT INSTRUCTION
  1103					S^;*********************************************************************^
  1104
  1105	030515	000000	000000		$$UUO:	0	;IF NON-ZERO, XCT'D AT START OF $UORTN
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 7
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0051

  1106					S^;*********************************************************************^
  1107					;*USER MODE MONITOR TYPE FLAG
  1108					S^;*********************************************************************^
  1109
  1110	030516	000000	000000		MONTYP:	0	;0 = TOPS10, -1 = TOPS20
  1111
  1112					S^;*********************************************************************^
  1113					;*SPECIAL USERS MUUO INTERCEPT INSTRUCTION
  1114					S^;*********************************************************************^
  1115
  1116	030517	000000	000000		$$MUUO:	0	;IF NON-ZERO, XCT'D AT START OF MUUOER
  1117
  1118					S^;*********************************************************************^
  1119					;*SPECIAL USERS USER MODE OUTPUT ERROR INTERCEPT INSTUCTION
  1120					S^;*********************************************************************^
  1121
  1122	030520	000000	000000		$$OUTER:0	;IF NON-ZERO, XCT'D AT END OF USER MODE ERROR
  1123
  1124					S^;*********************************************************************^
  1125					;*"SWITCH" CALL USAGE CONTROL
  1126					S^;*********************************************************************^
  1127
  1128	030521	000000	000000		$$TOGGLE:0	;IF NON-ZERO, USE C(CONSW) FOR SWITCHES
  1129
  1130					S^;*********************************************************************^
  1131					;*SPECIAL USERS ALTMODE SWITCH CALL INTERCEPT INSTRUCTIONS
  1132					S^;*********************************************************************^
  1133
  1134	030522	000000	000000		$$TAX1:	0	;IF NON-ZERO, XCT'D AT START OF ALTMODE SWITCH CALL
  1135	030523	000000	000000		$$TAX2:	0	;IF NON-ZERO, XCT'D AT END OF ALTMODE SWITCH CALL
  1136
  1137					S^;*********************************************************************^
  1138					;*SM10 (KS-10) PROCESSOR TYPE FLAG
  1139					S^;*********************************************************************^
  1140
  1141	030524	000000	000000		SM10:	0	;IF -1 THIS IS AN KS-10
  1142
  1143					S^;*********************************************************************^
  1144					;*RIGHT HALF SWITCHES PROMPT TABLE ADDRESS
  1145					S^;*********************************************************************^
  1146
  1147	030525	000000	000000		SWPTAB:	0	;0 = NO PROMPT, ADR = ADR OF SIXBIT PROMPT TABLE
  1148
  1149					S^;*********************************************************************^
  1150					;*SPECIAL FUTURE EXPANSION ROOM
  1151					S^;*********************************************************************^
  1152
  1153					S^;*********************************************************************^
  1154					;*END OF FIXED STORAGE
  1155					S^;*********************************************************************^
  1156
  1157	030577					LOC	30577
  1158	030577	000000	000000		ENDFIX:	0		;END OF FIXED STORAGE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1
DSKEBM	MAC	10-Oct-78 10:37		STARTUP CODE                                                                       SEQ 0052

  1159					SUBTTL STARTUP CODE
  1160						XLIST			;DON'T SHOW EDIT INFORMATION
  1161						LIST
  1162	030600	265 00 0 00 030011 	START:	PGMINT			;INIT SUBRTN PACKAGE
  1163	030601	202 17 0 00 034024 		MOVEM	P,GOODP		;SAVE A COPY OF THE GOOD STK PTR
  1164	030602	402 00 0 00 030047 		SETZM	PASCNT		;CLEAR PASS COUNT
  1165	030603	701 04 0 00 000000 	STARTA:	WREBR	POFF		;LOAD EBR, INSURE PAGING IS OFF
  1166	030604	701 03 0 00 037007 		WRUBR	[XWRUBR]	;LOAD USER BASE REGISTER AND SET ACBLK#
  1167	030605	200 17 0 00 034024 		MOVE	P,GOODP		;NOW GET A COPY OF THE GOOD STK PTR
  1168	030606	402 00 0 00 034006 		SETZM	SAVFLG		;CLR FLAG
  1169	030607	402 00 0 00 034014 		SETZM	PMFLG		;CLR FLAG
  1170	030610	200 00 0 00 037010 		MOVE	0,[EPT,,UPT]	;GET BLT PTR
  1171	030611	251 00 0 00 036777 		BLT	0,UPT+777	;MAKE A COPY OF EPT IN UPT
  1172	030612	201 00 0 00 033656 		MOVEI	0,PFH		;GET ADDR OF PAGE FAIL HANDLER
  1173	030613	202 00 0 00 036502 		MOVEM	0,UPT+LPGFTR	;SAVE FOR HDW TO FIND
  1174	030614	260 17 0 00 033524 		GO	MUUOST		;RESET MUUO LOCATIONS
  1175
  1176	030615	205 16 0 00 777771 		MOVSI	TN,-NTESTS	;GET NEGATIVE COUNT OF TESTS TO LH
  1177	030616	202 16 0 00 034013 	MLOOP:	MOVEM	TN,SAVETN	;SAVE CURRENT VALUE OF TEST COUNTER
  1178	030617	260 17 0 16 033741 		GO	TSTTAB(TN)	;RUN CURRENT TEST
  1179	030620	200 16 0 00 034013 		MOVE	TN,SAVETN	;RESTORE TEST COUNTER
  1180	030621	253 16 0 00 030616 		AOBJN	TN,MLOOP	;LOOP TILL DONE
  1181	030622	254 00 0 00 030057 		JRST	BEGEND		;ITERATE ENTIRE TEST
  1182
  1183	030623	254 00 0 00 033622 	BEGERR:	JRST	FATALP		;GO REPORT FATAL ERROR
  1184	030624	124 105 123 124 040 		ASCIZ\TEST NOT ENTERED CORRECTLY, PROBABLY A WILD JUMP\
  1185	030625	116 117 124 040 105 
  1186	030626	116 124 105 122 105 
  1187	030627	104 040 103 117 122 
  1188	030630	122 105 103 124 114 
  1189	030631	131 054 040 120 122 
  1190	030632	117 102 101 102 114 
  1191	030633	131 040 101 040 127 
  1192	030634	111 114 104 040 112 
  1193	030635	125 115 120 000 000 
  1194	030636	254 00 0 00 033622 	ENDERR:	JRST	FATALP		;GO REPORT FATAL ERROR
  1195	030637	124 105 123 124 040 		ASCIZ\TEST NOT ENDED CORRECTLY, PROBABLY A WILD JUMP\
  1196	030640	116 117 124 040 105 
  1197	030641	116 104 105 104 040 
  1198	030642	103 117 122 122 105 
  1199	030643	103 124 114 131 054 
  1200	030644	040 120 122 117 102 
  1201	030645	101 102 114 131 040 
  1202	030646	101 040 127 111 114 
  1203	030647	104 040 112 125 115 
  1204	030650	120 000 000 000 000 
  1205
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0053

  1206					SUBTTL ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST
  1207					S^;*********************************************************************^
  1208					;*ACCHK - ACCUMULATOR BLOCK CHECK
  1209					;*
  1210					;*THIS TEST VERIFIES THAT ALL 8 AC BLOCKS ARE WORKING CORRECTLY.
  1211					;*FIRST, EACH AC IN EACH BLOCK IS LOADED WITH THE BLOCK NUMBER IN
  1212					;*THE LEFT HALF, AND THE AC NUMBER IN THE RIGHT HALF. THUS A UNIQUE
  1213					;*NUMBER IS LOADED INTO EACH AC. THEN THE AC'S ARE CHECKED TO INSURE
  1214					;*THAT EACH AC CONTAINS THE PROPER NUMBER.
  1215					;*NEXT, AC 17 IS CHECKED TO INSURE THAT IT CAN HOLD ALL ZEROS, AND THEN
  1216					;*TO INSURE THAT IT CAN HOLD ALL ONES. THEN THAT ENTIRE BLOCK IS TESTED
  1217					;*TO INSURE THAT ALL THE ACS IN IT CAN HOLD BOTH ZEROS AND ONES. THEN
  1218					;*THE TEST IS REPEATED FOR EACH OF THE OTHER BLOCKS.
  1219
  1220			030651		ELOOP==.
  1221	030651				ACCHK:	BEGTST	^		;TEST STARTUP
  1222	030651	550 16 0 00 034013 		HRRZ TN,SAVETN
  1223	030652	302 16 0 00 000000 		CAIE TN,TSTCNT-1
  1224	030653	265 00 0 00 030623 		JSP 0,BEGERR
  1225	030654	402 00 0 00 034026 		SETZM ERFLG
  1226	030655	201 00 0 00 030657 		MOVEI	0,.+2
  1227	030656	202 00 0 00 030051 		MOVEM	0,TESTPC
  1228	030657	264 00 0 00 033676 		JSR	SAVREG		;SAVE THE GOOD ACS
  1229			000000		BX==0
  1230						REPEAT 8,
  1231					<ACX==0
  1232						WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1233						REPEAT ^D16,		;LOAD EACH AC WITH ITS BLOCK#,,AC#
  1234					<	MOVE ACX,[BX,,ACX]
  1235					ACX==ACX+1>
  1236					BX==BX+1>
  1237			000000		ACX==0
  1238	030660	701 03 0 00 037011 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1239						REPEAT ^D16,
  1240	030661	200 00 0 00 037012 		MOVE ACX,[BX,,ACX]
  1241			000001		ACX==ACX+1
  1242	030662	200 01 0 00 037013 		MOVE ACX,[BX,,ACX]
  1243			000002		ACX==ACX+1
  1244	030663	200 02 0 00 037014 		MOVE ACX,[BX,,ACX]
  1245			000003		ACX==ACX+1
  1246	030664	200 03 0 00 037015 		MOVE ACX,[BX,,ACX]
  1247			000004		ACX==ACX+1
  1248	030665	200 04 0 00 037016 		MOVE ACX,[BX,,ACX]
  1249			000005		ACX==ACX+1
  1250	030666	200 05 0 00 037017 		MOVE ACX,[BX,,ACX]
  1251			000006		ACX==ACX+1
  1252	030667	200 06 0 00 037020 		MOVE ACX,[BX,,ACX]
  1253			000007		ACX==ACX+1
  1254	030670	200 07 0 00 037021 		MOVE ACX,[BX,,ACX]
  1255			000010		ACX==ACX+1
  1256	030671	200 10 0 00 037022 		MOVE ACX,[BX,,ACX]
  1257			000011		ACX==ACX+1
  1258	030672	200 11 0 00 037023 		MOVE ACX,[BX,,ACX]
  1259			000012		ACX==ACX+1
  1260	030673	200 12 0 00 037024 		MOVE ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-1
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0054

  1261			000013		ACX==ACX+1
  1262	030674	200 13 0 00 037025 		MOVE ACX,[BX,,ACX]
  1263			000014		ACX==ACX+1
  1264	030675	200 14 0 00 037026 		MOVE ACX,[BX,,ACX]
  1265			000015		ACX==ACX+1
  1266	030676	200 15 0 00 037027 		MOVE ACX,[BX,,ACX]
  1267			000016		ACX==ACX+1
  1268	030677	200 16 0 00 037030 		MOVE ACX,[BX,,ACX]
  1269			000017		ACX==ACX+1
  1270	030700	200 17 0 00 037031 		MOVE ACX,[BX,,ACX]
  1271			000020		ACX==ACX+1
  1272			000001		BX==BX+1
  1273			000000		ACX==0
  1274	030701	701 03 0 00 037032 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1275						REPEAT ^D16,
  1276	030702	200 00 0 00 037033 		MOVE ACX,[BX,,ACX]
  1277			000001		ACX==ACX+1
  1278	030703	200 01 0 00 037034 		MOVE ACX,[BX,,ACX]
  1279			000002		ACX==ACX+1
  1280	030704	200 02 0 00 037035 		MOVE ACX,[BX,,ACX]
  1281			000003		ACX==ACX+1
  1282	030705	200 03 0 00 037036 		MOVE ACX,[BX,,ACX]
  1283			000004		ACX==ACX+1
  1284	030706	200 04 0 00 037037 		MOVE ACX,[BX,,ACX]
  1285			000005		ACX==ACX+1
  1286	030707	200 05 0 00 037040 		MOVE ACX,[BX,,ACX]
  1287			000006		ACX==ACX+1
  1288	030710	200 06 0 00 037041 		MOVE ACX,[BX,,ACX]
  1289			000007		ACX==ACX+1
  1290	030711	200 07 0 00 037042 		MOVE ACX,[BX,,ACX]
  1291			000010		ACX==ACX+1
  1292	030712	200 10 0 00 037043 		MOVE ACX,[BX,,ACX]
  1293			000011		ACX==ACX+1
  1294	030713	200 11 0 00 037044 		MOVE ACX,[BX,,ACX]
  1295			000012		ACX==ACX+1
  1296	030714	200 12 0 00 037045 		MOVE ACX,[BX,,ACX]
  1297			000013		ACX==ACX+1
  1298	030715	200 13 0 00 037046 		MOVE ACX,[BX,,ACX]
  1299			000014		ACX==ACX+1
  1300	030716	200 14 0 00 037047 		MOVE ACX,[BX,,ACX]
  1301			000015		ACX==ACX+1
  1302	030717	200 15 0 00 037050 		MOVE ACX,[BX,,ACX]
  1303			000016		ACX==ACX+1
  1304	030720	200 16 0 00 037051 		MOVE ACX,[BX,,ACX]
  1305			000017		ACX==ACX+1
  1306	030721	200 17 0 00 037052 		MOVE ACX,[BX,,ACX]
  1307			000020		ACX==ACX+1
  1308			000002		BX==BX+1
  1309			000000		ACX==0
  1310	030722	701 03 0 00 037053 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1311						REPEAT ^D16,
  1312	030723	200 00 0 00 037054 		MOVE ACX,[BX,,ACX]
  1313			000001		ACX==ACX+1
  1314	030724	200 01 0 00 037055 		MOVE ACX,[BX,,ACX]
  1315			000002		ACX==ACX+1
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-2
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0055

  1316	030725	200 02 0 00 037056 		MOVE ACX,[BX,,ACX]
  1317			000003		ACX==ACX+1
  1318	030726	200 03 0 00 037057 		MOVE ACX,[BX,,ACX]
  1319			000004		ACX==ACX+1
  1320	030727	200 04 0 00 037060 		MOVE ACX,[BX,,ACX]
  1321			000005		ACX==ACX+1
  1322	030730	200 05 0 00 037061 		MOVE ACX,[BX,,ACX]
  1323			000006		ACX==ACX+1
  1324	030731	200 06 0 00 037062 		MOVE ACX,[BX,,ACX]
  1325			000007		ACX==ACX+1
  1326	030732	200 07 0 00 037063 		MOVE ACX,[BX,,ACX]
  1327			000010		ACX==ACX+1
  1328	030733	200 10 0 00 037064 		MOVE ACX,[BX,,ACX]
  1329			000011		ACX==ACX+1
  1330	030734	200 11 0 00 037065 		MOVE ACX,[BX,,ACX]
  1331			000012		ACX==ACX+1
  1332	030735	200 12 0 00 037066 		MOVE ACX,[BX,,ACX]
  1333			000013		ACX==ACX+1
  1334	030736	200 13 0 00 037067 		MOVE ACX,[BX,,ACX]
  1335			000014		ACX==ACX+1
  1336	030737	200 14 0 00 037070 		MOVE ACX,[BX,,ACX]
  1337			000015		ACX==ACX+1
  1338	030740	200 15 0 00 037071 		MOVE ACX,[BX,,ACX]
  1339			000016		ACX==ACX+1
  1340	030741	200 16 0 00 037072 		MOVE ACX,[BX,,ACX]
  1341			000017		ACX==ACX+1
  1342	030742	200 17 0 00 037073 		MOVE ACX,[BX,,ACX]
  1343			000020		ACX==ACX+1
  1344			000003		BX==BX+1
  1345			000000		ACX==0
  1346	030743	701 03 0 00 037074 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1347						REPEAT ^D16,
  1348	030744	200 00 0 00 037075 		MOVE ACX,[BX,,ACX]
  1349			000001		ACX==ACX+1
  1350	030745	200 01 0 00 037076 		MOVE ACX,[BX,,ACX]
  1351			000002		ACX==ACX+1
  1352	030746	200 02 0 00 037077 		MOVE ACX,[BX,,ACX]
  1353			000003		ACX==ACX+1
  1354	030747	200 03 0 00 037100 		MOVE ACX,[BX,,ACX]
  1355			000004		ACX==ACX+1
  1356	030750	200 04 0 00 037101 		MOVE ACX,[BX,,ACX]
  1357			000005		ACX==ACX+1
  1358	030751	200 05 0 00 037102 		MOVE ACX,[BX,,ACX]
  1359			000006		ACX==ACX+1
  1360	030752	200 06 0 00 037103 		MOVE ACX,[BX,,ACX]
  1361			000007		ACX==ACX+1
  1362	030753	200 07 0 00 037104 		MOVE ACX,[BX,,ACX]
  1363			000010		ACX==ACX+1
  1364	030754	200 10 0 00 037105 		MOVE ACX,[BX,,ACX]
  1365			000011		ACX==ACX+1
  1366	030755	200 11 0 00 037106 		MOVE ACX,[BX,,ACX]
  1367			000012		ACX==ACX+1
  1368	030756	200 12 0 00 037107 		MOVE ACX,[BX,,ACX]
  1369			000013		ACX==ACX+1
  1370	030757	200 13 0 00 037110 		MOVE ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-3
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0056

  1371			000014		ACX==ACX+1
  1372	030760	200 14 0 00 037111 		MOVE ACX,[BX,,ACX]
  1373			000015		ACX==ACX+1
  1374	030761	200 15 0 00 037112 		MOVE ACX,[BX,,ACX]
  1375			000016		ACX==ACX+1
  1376	030762	200 16 0 00 037113 		MOVE ACX,[BX,,ACX]
  1377			000017		ACX==ACX+1
  1378	030763	200 17 0 00 037114 		MOVE ACX,[BX,,ACX]
  1379			000020		ACX==ACX+1
  1380			000004		BX==BX+1
  1381			000000		ACX==0
  1382	030764	701 03 0 00 037115 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1383						REPEAT ^D16,
  1384	030765	200 00 0 00 037116 		MOVE ACX,[BX,,ACX]
  1385			000001		ACX==ACX+1
  1386	030766	200 01 0 00 037117 		MOVE ACX,[BX,,ACX]
  1387			000002		ACX==ACX+1
  1388	030767	200 02 0 00 037120 		MOVE ACX,[BX,,ACX]
  1389			000003		ACX==ACX+1
  1390	030770	200 03 0 00 037121 		MOVE ACX,[BX,,ACX]
  1391			000004		ACX==ACX+1
  1392	030771	200 04 0 00 037122 		MOVE ACX,[BX,,ACX]
  1393			000005		ACX==ACX+1
  1394	030772	200 05 0 00 037123 		MOVE ACX,[BX,,ACX]
  1395			000006		ACX==ACX+1
  1396	030773	200 06 0 00 037124 		MOVE ACX,[BX,,ACX]
  1397			000007		ACX==ACX+1
  1398	030774	200 07 0 00 037125 		MOVE ACX,[BX,,ACX]
  1399			000010		ACX==ACX+1
  1400	030775	200 10 0 00 037126 		MOVE ACX,[BX,,ACX]
  1401			000011		ACX==ACX+1
  1402	030776	200 11 0 00 037127 		MOVE ACX,[BX,,ACX]
  1403			000012		ACX==ACX+1
  1404	030777	200 12 0 00 037130 		MOVE ACX,[BX,,ACX]
  1405			000013		ACX==ACX+1
  1406	031000	200 13 0 00 037131 		MOVE ACX,[BX,,ACX]
  1407			000014		ACX==ACX+1
  1408	031001	200 14 0 00 037132 		MOVE ACX,[BX,,ACX]
  1409			000015		ACX==ACX+1
  1410	031002	200 15 0 00 037133 		MOVE ACX,[BX,,ACX]
  1411			000016		ACX==ACX+1
  1412	031003	200 16 0 00 037134 		MOVE ACX,[BX,,ACX]
  1413			000017		ACX==ACX+1
  1414	031004	200 17 0 00 037135 		MOVE ACX,[BX,,ACX]
  1415			000020		ACX==ACX+1
  1416			000005		BX==BX+1
  1417			000000		ACX==0
  1418	031005	701 03 0 00 037136 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1419						REPEAT ^D16,
  1420	031006	200 00 0 00 037137 		MOVE ACX,[BX,,ACX]
  1421			000001		ACX==ACX+1
  1422	031007	200 01 0 00 037140 		MOVE ACX,[BX,,ACX]
  1423			000002		ACX==ACX+1
  1424	031010	200 02 0 00 037141 		MOVE ACX,[BX,,ACX]
  1425			000003		ACX==ACX+1
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-4
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0057

  1426	031011	200 03 0 00 037142 		MOVE ACX,[BX,,ACX]
  1427			000004		ACX==ACX+1
  1428	031012	200 04 0 00 037143 		MOVE ACX,[BX,,ACX]
  1429			000005		ACX==ACX+1
  1430	031013	200 05 0 00 037144 		MOVE ACX,[BX,,ACX]
  1431			000006		ACX==ACX+1
  1432	031014	200 06 0 00 037145 		MOVE ACX,[BX,,ACX]
  1433			000007		ACX==ACX+1
  1434	031015	200 07 0 00 037146 		MOVE ACX,[BX,,ACX]
  1435			000010		ACX==ACX+1
  1436	031016	200 10 0 00 037147 		MOVE ACX,[BX,,ACX]
  1437			000011		ACX==ACX+1
  1438	031017	200 11 0 00 037150 		MOVE ACX,[BX,,ACX]
  1439			000012		ACX==ACX+1
  1440	031020	200 12 0 00 037151 		MOVE ACX,[BX,,ACX]
  1441			000013		ACX==ACX+1
  1442	031021	200 13 0 00 037152 		MOVE ACX,[BX,,ACX]
  1443			000014		ACX==ACX+1
  1444	031022	200 14 0 00 037153 		MOVE ACX,[BX,,ACX]
  1445			000015		ACX==ACX+1
  1446	031023	200 15 0 00 037154 		MOVE ACX,[BX,,ACX]
  1447			000016		ACX==ACX+1
  1448	031024	200 16 0 00 037155 		MOVE ACX,[BX,,ACX]
  1449			000017		ACX==ACX+1
  1450	031025	200 17 0 00 037156 		MOVE ACX,[BX,,ACX]
  1451			000020		ACX==ACX+1
  1452			000006		BX==BX+1
  1453			000000		ACX==0
  1454	031026	701 03 0 00 037157 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1455						REPEAT ^D16,
  1456	031027	200 00 0 00 037160 		MOVE ACX,[BX,,ACX]
  1457			000001		ACX==ACX+1
  1458	031030	200 01 0 00 037161 		MOVE ACX,[BX,,ACX]
  1459			000002		ACX==ACX+1
  1460	031031	200 02 0 00 037162 		MOVE ACX,[BX,,ACX]
  1461			000003		ACX==ACX+1
  1462	031032	200 03 0 00 037163 		MOVE ACX,[BX,,ACX]
  1463			000004		ACX==ACX+1
  1464	031033	200 04 0 00 037164 		MOVE ACX,[BX,,ACX]
  1465			000005		ACX==ACX+1
  1466	031034	200 05 0 00 037165 		MOVE ACX,[BX,,ACX]
  1467			000006		ACX==ACX+1
  1468	031035	200 06 0 00 037166 		MOVE ACX,[BX,,ACX]
  1469			000007		ACX==ACX+1
  1470	031036	200 07 0 00 037167 		MOVE ACX,[BX,,ACX]
  1471			000010		ACX==ACX+1
  1472	031037	200 10 0 00 037170 		MOVE ACX,[BX,,ACX]
  1473			000011		ACX==ACX+1
  1474	031040	200 11 0 00 037171 		MOVE ACX,[BX,,ACX]
  1475			000012		ACX==ACX+1
  1476	031041	200 12 0 00 037172 		MOVE ACX,[BX,,ACX]
  1477			000013		ACX==ACX+1
  1478	031042	200 13 0 00 037173 		MOVE ACX,[BX,,ACX]
  1479			000014		ACX==ACX+1
  1480	031043	200 14 0 00 037174 		MOVE ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-5
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0058

  1481			000015		ACX==ACX+1
  1482	031044	200 15 0 00 037175 		MOVE ACX,[BX,,ACX]
  1483			000016		ACX==ACX+1
  1484	031045	200 16 0 00 037176 		MOVE ACX,[BX,,ACX]
  1485			000017		ACX==ACX+1
  1486	031046	200 17 0 00 037177 		MOVE ACX,[BX,,ACX]
  1487			000020		ACX==ACX+1
  1488			000007		BX==BX+1
  1489			000000		ACX==0
  1490	031047	701 03 0 00 037200 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1491						REPEAT ^D16,
  1492	031050	200 00 0 00 037201 		MOVE ACX,[BX,,ACX]
  1493			000001		ACX==ACX+1
  1494	031051	200 01 0 00 037202 		MOVE ACX,[BX,,ACX]
  1495			000002		ACX==ACX+1
  1496	031052	200 02 0 00 037203 		MOVE ACX,[BX,,ACX]
  1497			000003		ACX==ACX+1
  1498	031053	200 03 0 00 037204 		MOVE ACX,[BX,,ACX]
  1499			000004		ACX==ACX+1
  1500	031054	200 04 0 00 037205 		MOVE ACX,[BX,,ACX]
  1501			000005		ACX==ACX+1
  1502	031055	200 05 0 00 037206 		MOVE ACX,[BX,,ACX]
  1503			000006		ACX==ACX+1
  1504	031056	200 06 0 00 037207 		MOVE ACX,[BX,,ACX]
  1505			000007		ACX==ACX+1
  1506	031057	200 07 0 00 037210 		MOVE ACX,[BX,,ACX]
  1507			000010		ACX==ACX+1
  1508	031060	200 10 0 00 037211 		MOVE ACX,[BX,,ACX]
  1509			000011		ACX==ACX+1
  1510	031061	200 11 0 00 037212 		MOVE ACX,[BX,,ACX]
  1511			000012		ACX==ACX+1
  1512	031062	200 12 0 00 037213 		MOVE ACX,[BX,,ACX]
  1513			000013		ACX==ACX+1
  1514	031063	200 13 0 00 037214 		MOVE ACX,[BX,,ACX]
  1515			000014		ACX==ACX+1
  1516	031064	200 14 0 00 037215 		MOVE ACX,[BX,,ACX]
  1517			000015		ACX==ACX+1
  1518	031065	200 15 0 00 037216 		MOVE ACX,[BX,,ACX]
  1519			000016		ACX==ACX+1
  1520	031066	200 16 0 00 037217 		MOVE ACX,[BX,,ACX]
  1521			000017		ACX==ACX+1
  1522	031067	200 17 0 00 037220 		MOVE ACX,[BX,,ACX]
  1523			000020		ACX==ACX+1
  1524			000010		BX==BX+1
  1525
  1526			000000		BX==0
  1527						REPEAT 8,
  1528					<ACX==0
  1529						WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1530						REPEAT ^D16,		;VERIFY EACH AC'S CONTENTS
  1531					<	CAME ACX,[BX,,ACX]
  1532						JSR	ACX,AC1ERR
  1533					ACX==ACX+1>
  1534					BX==BX+1>
  1535			000000		ACX==0
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-6
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0059

  1536	031070	701 03 0 00 037011 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1537						REPEAT ^D16,
  1538	031071	312 00 0 00 037012 		CAME ACX,[BX,,ACX]
  1539	031072	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1540			000001		ACX==ACX+1
  1541	031073	312 01 0 00 037013 		CAME ACX,[BX,,ACX]
  1542	031074	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1543			000002		ACX==ACX+1
  1544	031075	312 02 0 00 037014 		CAME ACX,[BX,,ACX]
  1545	031076	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1546			000003		ACX==ACX+1
  1547	031077	312 03 0 00 037015 		CAME ACX,[BX,,ACX]
  1548	031100	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1549			000004		ACX==ACX+1
  1550	031101	312 04 0 00 037016 		CAME ACX,[BX,,ACX]
  1551	031102	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1552			000005		ACX==ACX+1
  1553	031103	312 05 0 00 037017 		CAME ACX,[BX,,ACX]
  1554	031104	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1555			000006		ACX==ACX+1
  1556	031105	312 06 0 00 037020 		CAME ACX,[BX,,ACX]
  1557	031106	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1558			000007		ACX==ACX+1
  1559	031107	312 07 0 00 037021 		CAME ACX,[BX,,ACX]
  1560	031110	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1561			000010		ACX==ACX+1
  1562	031111	312 10 0 00 037022 		CAME ACX,[BX,,ACX]
  1563	031112	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1564			000011		ACX==ACX+1
  1565	031113	312 11 0 00 037023 		CAME ACX,[BX,,ACX]
  1566	031114	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1567			000012		ACX==ACX+1
  1568	031115	312 12 0 00 037024 		CAME ACX,[BX,,ACX]
  1569	031116	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1570			000013		ACX==ACX+1
  1571	031117	312 13 0 00 037025 		CAME ACX,[BX,,ACX]
  1572	031120	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1573			000014		ACX==ACX+1
  1574	031121	312 14 0 00 037026 		CAME ACX,[BX,,ACX]
  1575	031122	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1576			000015		ACX==ACX+1
  1577	031123	312 15 0 00 037027 		CAME ACX,[BX,,ACX]
  1578	031124	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1579			000016		ACX==ACX+1
  1580	031125	312 16 0 00 037030 		CAME ACX,[BX,,ACX]
  1581	031126	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1582			000017		ACX==ACX+1
  1583	031127	312 17 0 00 037031 		CAME ACX,[BX,,ACX]
  1584	031130	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1585			000020		ACX==ACX+1
  1586			000001		BX==BX+1
  1587			000000		ACX==0
  1588	031131	701 03 0 00 037032 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1589						REPEAT ^D16,
  1590	031132	312 00 0 00 037033 		CAME ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-7
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0060

  1591	031133	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1592			000001		ACX==ACX+1
  1593	031134	312 01 0 00 037034 		CAME ACX,[BX,,ACX]
  1594	031135	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1595			000002		ACX==ACX+1
  1596	031136	312 02 0 00 037035 		CAME ACX,[BX,,ACX]
  1597	031137	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1598			000003		ACX==ACX+1
  1599	031140	312 03 0 00 037036 		CAME ACX,[BX,,ACX]
  1600	031141	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1601			000004		ACX==ACX+1
  1602	031142	312 04 0 00 037037 		CAME ACX,[BX,,ACX]
  1603	031143	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1604			000005		ACX==ACX+1
  1605	031144	312 05 0 00 037040 		CAME ACX,[BX,,ACX]
  1606	031145	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1607			000006		ACX==ACX+1
  1608	031146	312 06 0 00 037041 		CAME ACX,[BX,,ACX]
  1609	031147	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1610			000007		ACX==ACX+1
  1611	031150	312 07 0 00 037042 		CAME ACX,[BX,,ACX]
  1612	031151	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1613			000010		ACX==ACX+1
  1614	031152	312 10 0 00 037043 		CAME ACX,[BX,,ACX]
  1615	031153	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1616			000011		ACX==ACX+1
  1617	031154	312 11 0 00 037044 		CAME ACX,[BX,,ACX]
  1618	031155	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1619			000012		ACX==ACX+1
  1620	031156	312 12 0 00 037045 		CAME ACX,[BX,,ACX]
  1621	031157	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1622			000013		ACX==ACX+1
  1623	031160	312 13 0 00 037046 		CAME ACX,[BX,,ACX]
  1624	031161	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1625			000014		ACX==ACX+1
  1626	031162	312 14 0 00 037047 		CAME ACX,[BX,,ACX]
  1627	031163	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1628			000015		ACX==ACX+1
  1629	031164	312 15 0 00 037050 		CAME ACX,[BX,,ACX]
  1630	031165	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1631			000016		ACX==ACX+1
  1632	031166	312 16 0 00 037051 		CAME ACX,[BX,,ACX]
  1633	031167	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1634			000017		ACX==ACX+1
  1635	031170	312 17 0 00 037052 		CAME ACX,[BX,,ACX]
  1636	031171	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1637			000020		ACX==ACX+1
  1638			000002		BX==BX+1
  1639			000000		ACX==0
  1640	031172	701 03 0 00 037053 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1641						REPEAT ^D16,
  1642	031173	312 00 0 00 037054 		CAME ACX,[BX,,ACX]
  1643	031174	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1644			000001		ACX==ACX+1
  1645	031175	312 01 0 00 037055 		CAME ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-8
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0061

  1646	031176	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1647			000002		ACX==ACX+1
  1648	031177	312 02 0 00 037056 		CAME ACX,[BX,,ACX]
  1649	031200	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1650			000003		ACX==ACX+1
  1651	031201	312 03 0 00 037057 		CAME ACX,[BX,,ACX]
  1652	031202	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1653			000004		ACX==ACX+1
  1654	031203	312 04 0 00 037060 		CAME ACX,[BX,,ACX]
  1655	031204	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1656			000005		ACX==ACX+1
  1657	031205	312 05 0 00 037061 		CAME ACX,[BX,,ACX]
  1658	031206	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1659			000006		ACX==ACX+1
  1660	031207	312 06 0 00 037062 		CAME ACX,[BX,,ACX]
  1661	031210	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1662			000007		ACX==ACX+1
  1663	031211	312 07 0 00 037063 		CAME ACX,[BX,,ACX]
  1664	031212	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1665			000010		ACX==ACX+1
  1666	031213	312 10 0 00 037064 		CAME ACX,[BX,,ACX]
  1667	031214	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1668			000011		ACX==ACX+1
  1669	031215	312 11 0 00 037065 		CAME ACX,[BX,,ACX]
  1670	031216	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1671			000012		ACX==ACX+1
  1672	031217	312 12 0 00 037066 		CAME ACX,[BX,,ACX]
  1673	031220	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1674			000013		ACX==ACX+1
  1675	031221	312 13 0 00 037067 		CAME ACX,[BX,,ACX]
  1676	031222	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1677			000014		ACX==ACX+1
  1678	031223	312 14 0 00 037070 		CAME ACX,[BX,,ACX]
  1679	031224	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1680			000015		ACX==ACX+1
  1681	031225	312 15 0 00 037071 		CAME ACX,[BX,,ACX]
  1682	031226	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1683			000016		ACX==ACX+1
  1684	031227	312 16 0 00 037072 		CAME ACX,[BX,,ACX]
  1685	031230	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1686			000017		ACX==ACX+1
  1687	031231	312 17 0 00 037073 		CAME ACX,[BX,,ACX]
  1688	031232	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1689			000020		ACX==ACX+1
  1690			000003		BX==BX+1
  1691			000000		ACX==0
  1692	031233	701 03 0 00 037074 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1693						REPEAT ^D16,
  1694	031234	312 00 0 00 037075 		CAME ACX,[BX,,ACX]
  1695	031235	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1696			000001		ACX==ACX+1
  1697	031236	312 01 0 00 037076 		CAME ACX,[BX,,ACX]
  1698	031237	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1699			000002		ACX==ACX+1
  1700	031240	312 02 0 00 037077 		CAME ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-9
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0062

  1701	031241	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1702			000003		ACX==ACX+1
  1703	031242	312 03 0 00 037100 		CAME ACX,[BX,,ACX]
  1704	031243	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1705			000004		ACX==ACX+1
  1706	031244	312 04 0 00 037101 		CAME ACX,[BX,,ACX]
  1707	031245	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1708			000005		ACX==ACX+1
  1709	031246	312 05 0 00 037102 		CAME ACX,[BX,,ACX]
  1710	031247	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1711			000006		ACX==ACX+1
  1712	031250	312 06 0 00 037103 		CAME ACX,[BX,,ACX]
  1713	031251	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1714			000007		ACX==ACX+1
  1715	031252	312 07 0 00 037104 		CAME ACX,[BX,,ACX]
  1716	031253	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1717			000010		ACX==ACX+1
  1718	031254	312 10 0 00 037105 		CAME ACX,[BX,,ACX]
  1719	031255	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1720			000011		ACX==ACX+1
  1721	031256	312 11 0 00 037106 		CAME ACX,[BX,,ACX]
  1722	031257	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1723			000012		ACX==ACX+1
  1724	031260	312 12 0 00 037107 		CAME ACX,[BX,,ACX]
  1725	031261	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1726			000013		ACX==ACX+1
  1727	031262	312 13 0 00 037110 		CAME ACX,[BX,,ACX]
  1728	031263	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1729			000014		ACX==ACX+1
  1730	031264	312 14 0 00 037111 		CAME ACX,[BX,,ACX]
  1731	031265	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1732			000015		ACX==ACX+1
  1733	031266	312 15 0 00 037112 		CAME ACX,[BX,,ACX]
  1734	031267	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1735			000016		ACX==ACX+1
  1736	031270	312 16 0 00 037113 		CAME ACX,[BX,,ACX]
  1737	031271	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1738			000017		ACX==ACX+1
  1739	031272	312 17 0 00 037114 		CAME ACX,[BX,,ACX]
  1740	031273	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1741			000020		ACX==ACX+1
  1742			000004		BX==BX+1
  1743			000000		ACX==0
  1744	031274	701 03 0 00 037115 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1745						REPEAT ^D16,
  1746	031275	312 00 0 00 037116 		CAME ACX,[BX,,ACX]
  1747	031276	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1748			000001		ACX==ACX+1
  1749	031277	312 01 0 00 037117 		CAME ACX,[BX,,ACX]
  1750	031300	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1751			000002		ACX==ACX+1
  1752	031301	312 02 0 00 037120 		CAME ACX,[BX,,ACX]
  1753	031302	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1754			000003		ACX==ACX+1
  1755	031303	312 03 0 00 037121 		CAME ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-10
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0063

  1756	031304	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1757			000004		ACX==ACX+1
  1758	031305	312 04 0 00 037122 		CAME ACX,[BX,,ACX]
  1759	031306	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1760			000005		ACX==ACX+1
  1761	031307	312 05 0 00 037123 		CAME ACX,[BX,,ACX]
  1762	031310	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1763			000006		ACX==ACX+1
  1764	031311	312 06 0 00 037124 		CAME ACX,[BX,,ACX]
  1765	031312	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1766			000007		ACX==ACX+1
  1767	031313	312 07 0 00 037125 		CAME ACX,[BX,,ACX]
  1768	031314	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1769			000010		ACX==ACX+1
  1770	031315	312 10 0 00 037126 		CAME ACX,[BX,,ACX]
  1771	031316	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1772			000011		ACX==ACX+1
  1773	031317	312 11 0 00 037127 		CAME ACX,[BX,,ACX]
  1774	031320	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1775			000012		ACX==ACX+1
  1776	031321	312 12 0 00 037130 		CAME ACX,[BX,,ACX]
  1777	031322	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1778			000013		ACX==ACX+1
  1779	031323	312 13 0 00 037131 		CAME ACX,[BX,,ACX]
  1780	031324	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1781			000014		ACX==ACX+1
  1782	031325	312 14 0 00 037132 		CAME ACX,[BX,,ACX]
  1783	031326	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1784			000015		ACX==ACX+1
  1785	031327	312 15 0 00 037133 		CAME ACX,[BX,,ACX]
  1786	031330	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1787			000016		ACX==ACX+1
  1788	031331	312 16 0 00 037134 		CAME ACX,[BX,,ACX]
  1789	031332	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1790			000017		ACX==ACX+1
  1791	031333	312 17 0 00 037135 		CAME ACX,[BX,,ACX]
  1792	031334	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1793			000020		ACX==ACX+1
  1794			000005		BX==BX+1
  1795			000000		ACX==0
  1796	031335	701 03 0 00 037136 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1797						REPEAT ^D16,
  1798	031336	312 00 0 00 037137 		CAME ACX,[BX,,ACX]
  1799	031337	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1800			000001		ACX==ACX+1
  1801	031340	312 01 0 00 037140 		CAME ACX,[BX,,ACX]
  1802	031341	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1803			000002		ACX==ACX+1
  1804	031342	312 02 0 00 037141 		CAME ACX,[BX,,ACX]
  1805	031343	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1806			000003		ACX==ACX+1
  1807	031344	312 03 0 00 037142 		CAME ACX,[BX,,ACX]
  1808	031345	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1809			000004		ACX==ACX+1
  1810	031346	312 04 0 00 037143 		CAME ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-11
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0064

  1811	031347	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1812			000005		ACX==ACX+1
  1813	031350	312 05 0 00 037144 		CAME ACX,[BX,,ACX]
  1814	031351	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1815			000006		ACX==ACX+1
  1816	031352	312 06 0 00 037145 		CAME ACX,[BX,,ACX]
  1817	031353	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1818			000007		ACX==ACX+1
  1819	031354	312 07 0 00 037146 		CAME ACX,[BX,,ACX]
  1820	031355	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1821			000010		ACX==ACX+1
  1822	031356	312 10 0 00 037147 		CAME ACX,[BX,,ACX]
  1823	031357	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1824			000011		ACX==ACX+1
  1825	031360	312 11 0 00 037150 		CAME ACX,[BX,,ACX]
  1826	031361	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1827			000012		ACX==ACX+1
  1828	031362	312 12 0 00 037151 		CAME ACX,[BX,,ACX]
  1829	031363	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1830			000013		ACX==ACX+1
  1831	031364	312 13 0 00 037152 		CAME ACX,[BX,,ACX]
  1832	031365	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1833			000014		ACX==ACX+1
  1834	031366	312 14 0 00 037153 		CAME ACX,[BX,,ACX]
  1835	031367	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1836			000015		ACX==ACX+1
  1837	031370	312 15 0 00 037154 		CAME ACX,[BX,,ACX]
  1838	031371	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1839			000016		ACX==ACX+1
  1840	031372	312 16 0 00 037155 		CAME ACX,[BX,,ACX]
  1841	031373	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1842			000017		ACX==ACX+1
  1843	031374	312 17 0 00 037156 		CAME ACX,[BX,,ACX]
  1844	031375	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1845			000020		ACX==ACX+1
  1846			000006		BX==BX+1
  1847			000000		ACX==0
  1848	031376	701 03 0 00 037157 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1849						REPEAT ^D16,
  1850	031377	312 00 0 00 037160 		CAME ACX,[BX,,ACX]
  1851	031400	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1852			000001		ACX==ACX+1
  1853	031401	312 01 0 00 037161 		CAME ACX,[BX,,ACX]
  1854	031402	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1855			000002		ACX==ACX+1
  1856	031403	312 02 0 00 037162 		CAME ACX,[BX,,ACX]
  1857	031404	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1858			000003		ACX==ACX+1
  1859	031405	312 03 0 00 037163 		CAME ACX,[BX,,ACX]
  1860	031406	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1861			000004		ACX==ACX+1
  1862	031407	312 04 0 00 037164 		CAME ACX,[BX,,ACX]
  1863	031410	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1864			000005		ACX==ACX+1
  1865	031411	312 05 0 00 037165 		CAME ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-12
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0065

  1866	031412	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1867			000006		ACX==ACX+1
  1868	031413	312 06 0 00 037166 		CAME ACX,[BX,,ACX]
  1869	031414	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1870			000007		ACX==ACX+1
  1871	031415	312 07 0 00 037167 		CAME ACX,[BX,,ACX]
  1872	031416	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1873			000010		ACX==ACX+1
  1874	031417	312 10 0 00 037170 		CAME ACX,[BX,,ACX]
  1875	031420	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1876			000011		ACX==ACX+1
  1877	031421	312 11 0 00 037171 		CAME ACX,[BX,,ACX]
  1878	031422	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1879			000012		ACX==ACX+1
  1880	031423	312 12 0 00 037172 		CAME ACX,[BX,,ACX]
  1881	031424	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1882			000013		ACX==ACX+1
  1883	031425	312 13 0 00 037173 		CAME ACX,[BX,,ACX]
  1884	031426	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1885			000014		ACX==ACX+1
  1886	031427	312 14 0 00 037174 		CAME ACX,[BX,,ACX]
  1887	031430	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1888			000015		ACX==ACX+1
  1889	031431	312 15 0 00 037175 		CAME ACX,[BX,,ACX]
  1890	031432	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1891			000016		ACX==ACX+1
  1892	031433	312 16 0 00 037176 		CAME ACX,[BX,,ACX]
  1893	031434	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1894			000017		ACX==ACX+1
  1895	031435	312 17 0 00 037177 		CAME ACX,[BX,,ACX]
  1896	031436	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1897			000020		ACX==ACX+1
  1898			000007		BX==BX+1
  1899			000000		ACX==0
  1900	031437	701 03 0 00 037200 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1901						REPEAT ^D16,
  1902	031440	312 00 0 00 037201 		CAME ACX,[BX,,ACX]
  1903	031441	264 00 0 00 031711 		JSR	ACX,AC1ERR
  1904			000001		ACX==ACX+1
  1905	031442	312 01 0 00 037202 		CAME ACX,[BX,,ACX]
  1906	031443	264 01 0 00 031711 		JSR	ACX,AC1ERR
  1907			000002		ACX==ACX+1
  1908	031444	312 02 0 00 037203 		CAME ACX,[BX,,ACX]
  1909	031445	264 02 0 00 031711 		JSR	ACX,AC1ERR
  1910			000003		ACX==ACX+1
  1911	031446	312 03 0 00 037204 		CAME ACX,[BX,,ACX]
  1912	031447	264 03 0 00 031711 		JSR	ACX,AC1ERR
  1913			000004		ACX==ACX+1
  1914	031450	312 04 0 00 037205 		CAME ACX,[BX,,ACX]
  1915	031451	264 04 0 00 031711 		JSR	ACX,AC1ERR
  1916			000005		ACX==ACX+1
  1917	031452	312 05 0 00 037206 		CAME ACX,[BX,,ACX]
  1918	031453	264 05 0 00 031711 		JSR	ACX,AC1ERR
  1919			000006		ACX==ACX+1
  1920	031454	312 06 0 00 037207 		CAME ACX,[BX,,ACX]
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-13
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0066

  1921	031455	264 06 0 00 031711 		JSR	ACX,AC1ERR
  1922			000007		ACX==ACX+1
  1923	031456	312 07 0 00 037210 		CAME ACX,[BX,,ACX]
  1924	031457	264 07 0 00 031711 		JSR	ACX,AC1ERR
  1925			000010		ACX==ACX+1
  1926	031460	312 10 0 00 037211 		CAME ACX,[BX,,ACX]
  1927	031461	264 10 0 00 031711 		JSR	ACX,AC1ERR
  1928			000011		ACX==ACX+1
  1929	031462	312 11 0 00 037212 		CAME ACX,[BX,,ACX]
  1930	031463	264 11 0 00 031711 		JSR	ACX,AC1ERR
  1931			000012		ACX==ACX+1
  1932	031464	312 12 0 00 037213 		CAME ACX,[BX,,ACX]
  1933	031465	264 12 0 00 031711 		JSR	ACX,AC1ERR
  1934			000013		ACX==ACX+1
  1935	031466	312 13 0 00 037214 		CAME ACX,[BX,,ACX]
  1936	031467	264 13 0 00 031711 		JSR	ACX,AC1ERR
  1937			000014		ACX==ACX+1
  1938	031470	312 14 0 00 037215 		CAME ACX,[BX,,ACX]
  1939	031471	264 14 0 00 031711 		JSR	ACX,AC1ERR
  1940			000015		ACX==ACX+1
  1941	031472	312 15 0 00 037216 		CAME ACX,[BX,,ACX]
  1942	031473	264 15 0 00 031711 		JSR	ACX,AC1ERR
  1943			000016		ACX==ACX+1
  1944	031474	312 16 0 00 037217 		CAME ACX,[BX,,ACX]
  1945	031475	264 16 0 00 031711 		JSR	ACX,AC1ERR
  1946			000017		ACX==ACX+1
  1947	031476	312 17 0 00 037220 		CAME ACX,[BX,,ACX]
  1948	031477	264 17 0 00 031711 		JSR	ACX,AC1ERR
  1949			000020		ACX==ACX+1
  1950			000010		BX==BX+1
  1951
  1952			000000		BX==0
  1953						REPEAT 8,
  1954					<	WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1955						SETO	17,		;SET AC 17 TO ALL ONES
  1956						CAME	17,[-1]		;VERIFY
  1957						JRST	AC2ERR		;GO REPORT ERROR
  1958						SETZ	17,		;SET AC 17 TO ALL ZEROS
  1959						SKIPE	17		;SKIP IF OK
  1960						JRST	AC3ERR		;GO REPORT ERROR
  1961						MOVSI	17,-17		;LOAD AOBJN PTR
  1962						CAME	17,[-17,,0]	;VERIFY LOAD
  1963						JRST	AC4ERR		;GO REPORT ERROR
  1964					
  1965						SETOM	0(17)		;SET AC TO ALL ONES
  1966						AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  1967					
  1968						MOVSI	17,-17		;LOAD AOBJN PTR
  1969						SETCMM	0(17)		;COMPLEMENT AC
  1970						SKIPE	0(17)		;VERIFY THAT IT WORKED
  1971						JRST	AC5ERR		;GO REPORT ERROR
  1972						AOBJN	17,.-3		;LOOP
  1973					BX==BX+1>
  1974	031500	701 03 0 00 037011 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1975	031501	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-14
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0067

  1976	031502	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  1977	031503	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  1978	031504	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  1979	031505	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  1980	031506	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  1981	031507	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  1982	031510	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  1983	031511	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  1984
  1985	031512	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
  1986	031513	253 17 0 00 031512 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  1987
  1988	031514	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  1989	031515	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  1990	031516	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
  1991	031517	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  1992	031520	253 17 0 00 031515 		AOBJN	17,.-3		;LOOP
  1993			000001		BX==BX+1
  1994	031521	701 03 0 00 037032 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  1995	031522	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
  1996	031523	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  1997	031524	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  1998	031525	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  1999	031526	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  2000	031527	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  2001	031530	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2002	031531	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  2003	031532	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  2004
  2005	031533	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
  2006	031534	253 17 0 00 031533 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  2007
  2008	031535	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2009	031536	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  2010	031537	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
  2011	031540	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  2012	031541	253 17 0 00 031536 		AOBJN	17,.-3		;LOOP
  2013			000002		BX==BX+1
  2014	031542	701 03 0 00 037053 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  2015	031543	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
  2016	031544	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  2017	031545	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  2018	031546	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  2019	031547	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  2020	031550	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  2021	031551	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2022	031552	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  2023	031553	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  2024
  2025	031554	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
  2026	031555	253 17 0 00 031554 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  2027
  2028	031556	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2029	031557	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  2030	031560	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-15
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0068

  2031	031561	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  2032	031562	253 17 0 00 031557 		AOBJN	17,.-3		;LOOP
  2033			000003		BX==BX+1
  2034	031563	701 03 0 00 037074 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  2035	031564	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
  2036	031565	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  2037	031566	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  2038	031567	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  2039	031570	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  2040	031571	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  2041	031572	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2042	031573	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  2043	031574	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  2044
  2045	031575	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
  2046	031576	253 17 0 00 031575 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  2047
  2048	031577	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2049	031600	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  2050	031601	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
  2051	031602	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  2052	031603	253 17 0 00 031600 		AOBJN	17,.-3		;LOOP
  2053			000004		BX==BX+1
  2054	031604	701 03 0 00 037115 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  2055	031605	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
  2056	031606	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  2057	031607	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  2058	031610	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  2059	031611	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  2060	031612	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  2061	031613	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2062	031614	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  2063	031615	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  2064
  2065	031616	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
  2066	031617	253 17 0 00 031616 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  2067
  2068	031620	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2069	031621	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  2070	031622	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
  2071	031623	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  2072	031624	253 17 0 00 031621 		AOBJN	17,.-3		;LOOP
  2073			000005		BX==BX+1
  2074	031625	701 03 0 00 037136 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  2075	031626	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
  2076	031627	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  2077	031630	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  2078	031631	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  2079	031632	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  2080	031633	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  2081	031634	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2082	031635	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  2083	031636	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  2084
  2085	031637	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 2-16
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0069

  2086	031640	253 17 0 00 031637 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  2087
  2088	031641	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2089	031642	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  2090	031643	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
  2091	031644	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  2092	031645	253 17 0 00 031642 		AOBJN	17,.-3		;LOOP
  2093			000006		BX==BX+1
  2094	031646	701 03 0 00 037157 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  2095	031647	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
  2096	031650	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  2097	031651	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  2098	031652	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  2099	031653	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  2100	031654	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  2101	031655	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2102	031656	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  2103	031657	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  2104
  2105	031660	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
  2106	031661	253 17 0 00 031660 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  2107
  2108	031662	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2109	031663	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  2110	031664	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
  2111	031665	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  2112	031666	253 17 0 00 031663 		AOBJN	17,.-3		;LOOP
  2113			000007		BX==BX+1
  2114	031667	701 03 0 00 037200 		WRUBR	[1B0!<BX>B8]	;SET BLOCK NUMBER
  2115	031670	474 17 0 00 000000 		SETO	17,		;SET AC 17 TO ALL ONES
  2116	031671	312 17 0 00 037221 		CAME	17,[-1]		;VERIFY
  2117	031672	254 00 0 00 031730 		JRST	AC2ERR		;GO REPORT ERROR
  2118	031673	400 17 0 00 000000 		SETZ	17,		;SET AC 17 TO ALL ZEROS
  2119	031674	332 00 0 00 000017 		SKIPE	17		;SKIP IF OK
  2120	031675	254 00 0 00 031735 		JRST	AC3ERR		;GO REPORT ERROR
  2121	031676	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2122	031677	312 17 0 00 037222 		CAME	17,[-17,,0]	;VERIFY LOAD
  2123	031700	254 00 0 00 031742 		JRST	AC4ERR		;GO REPORT ERROR
  2124
  2125	031701	476 00 0 17 000000 		SETOM	0(17)		;SET AC TO ALL ONES
  2126	031702	253 17 0 00 031701 		AOBJN	17,.-1		;SET 0 THRU 16 TO ALL ONES
  2127
  2128	031703	205 17 0 00 777761 		MOVSI	17,-17		;LOAD AOBJN PTR
  2129	031704	462 00 0 17 000000 		SETCMM	0(17)		;COMPLEMENT AC
  2130	031705	332 00 0 17 000000 		SKIPE	0(17)		;VERIFY THAT IT WORKED
  2131	031706	254 00 0 00 031747 		JRST	AC5ERR		;GO REPORT ERROR
  2132	031707	253 17 0 00 031704 		AOBJN	17,.-3		;LOOP
  2133			000010		BX==BX+1
  2134	031710	254 00 0 00 031717 		JRST	ACEND		;FINISHED SUCCESSFULLY
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 3
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0070

  2135
  2136	031711	000000	000000		AC1ERR:	0
  2137	031712	476 00 0 00 034026 		SETOM	ERFLG		;NOTE WE HAD AN ERROR
  2138	031713	701 01 0 00 034027 		RDUBR	DEADAC		;READ WHICH AC BLOCK WE'RE IN
  2139	031714	701 03 0 00 037011 		WRUBR	[1B0]		;GO TO BLOCK 0
  2140	031715	201 17 0 00 000001 		MOVEI	17,1		;NOTE TYPE OF ERROR
  2141	031716	202 17 0 00 034026 		MOVEM	17,ERFLG	;REMEMBER IT
  2142	031717	701 03 0 00 037011 	ACEND:	WRUBR	[1B0]		;GO TO BLOCK 0
  2143	031720	264 00 0 00 033707 		JSR	RESREG		;RESTORE THE GOOD ACS
  2144	031721	332 00 0 00 034026 		SKIPE	ERFLG		;SKIP IF NO ERROR
  2145						ERROR	(ELOOP,13,0,0,ACCUMULATOR TEST,,ACPNT)^
  2146	031722	036 13 0 00 037227 
  2147	031723	035 00 0 00 030651 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2148	031724	550 16 0 00 034013 		ENDTST^	HRRZ TN,SAVETN
  2149	031725	302 16 0 00 000000 		CAIE TN,TSTCNT-1
  2150	031726	265 00 0 00 030636 		JSP 0,ENDERR
  2151	031727	263 17 0 00 000000 		RTN^
  2152
  2153	031730	701 01 0 00 034027 	AC2ERR:	RDUBR	DEADAC		;READ WHICH AC BLK HAD ERROR
  2154	031731	701 03 0 00 037011 		WRUBR	[1B0]		;GO TO BLOCK 0
  2155	031732	201 17 0 00 000002 		MOVEI	17,2		;NOTE TYPE OF ERROR
  2156	031733	202 17 0 00 034026 		MOVEM	17,ERFLG	;REMEMBER TYPE
  2157	031734	254 00 0 00 031717 		JRST	ACEND		;GO SHOW ERROR
  2158
  2159	031735	701 01 0 00 034027 	AC3ERR:	RDUBR	DEADAC		;READ AC BLOCK WE'RE IN
  2160	031736	701 03 0 00 037011 		WRUBR	[1B0]		;GO TO BLK 0
  2161	031737	201 17 0 00 000003 		MOVEI	17,3		;REMEMBER TYPE
  2162	031740	202 17 0 00 034026 		MOVEM	17,ERFLG	;SAVE IT
  2163	031741	254 00 0 00 031717 		JRST	ACEND		;GO SHOW ERROR
  2164
  2165	031742	701 01 0 00 034027 	AC4ERR:	RDUBR	DEADAC		;READ AC BLK WE'RE IN
  2166	031743	701 03 0 00 037011 		WRUBR	[1B0]		;GO TO BLK 0
  2167	031744	201 17 0 00 000004 		MOVEI	17,4		;REMEMBER TYPE
  2168	031745	202 17 0 00 034026 		MOVEM	17,ERFLG	;SAVE IT
  2169	031746	254 00 0 00 031717 		JRST	ACEND		;GO SHOW ERROR
  2170
  2171	031747	701 01 0 00 034027 	AC5ERR:	RDUBR	DEADAC		;READ AC BLK #
  2172	031750	701 03 0 00 037011 		WRUBR	[1B0]		;TO BLK 0
  2173	031751	202 17 0 00 034030 		MOVEM	17,BADAC	;REMEMBER BAD AC #
  2174	031752	201 17 0 00 000005 		MOVEI	17,5		;REMEMBER TYPE
  2175	031753	202 17 0 00 034026 		MOVEM	17,ERFLG	;SAVE IT
  2176	031754	254 00 0 00 031717 		JRST	ACEND		;GO SHOW ERROR
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 4
DSKEBM	MAC	10-Oct-78 10:37		ACCHK - CHECK THAT ALL AC BLOCKS ARE WORKING FIRST                                 SEQ 0071

  2177
  2178	031755				ACPNT:	PMSG	<^ERROR OCCURED IN AC BLOCK >^
  2179	031755	037 02 0 00 037232 		PSIXM	[SIXBIT\^ERROR OCCURED IN AC BLOCK _\]^
  2180	031756	135 00 0 00 037237 		LDB	0,[POINT 3,DEADAC,8]	;GET BLOCK NUMBER
  2181	031757	037 16 0 00 000003 		PNTOCS			;SHOW IT
  2182	031760	200 01 0 00 034026 		MOVE	1,ERFLG		;GET ERROR TYPE
  2183	031761	254 00 0 01 031762 		JRST	ERJTB(1)	;GO PRINT EXTRA INFO ON ERROR
  2184
  2185					ERJTB:	FATALE	<UNEXPECTED ERROR OCCURED IN ACCUMULATOR TEST>^ JSP 0,[ JRST FATALP
  2186	031762	265 00 0 00 037240 			ASCIZ\UNEXPECTED ERROR OCCURED IN ACCUMULATOR TEST\]^
  2187	031763	254 00 0 00 031770 		JRST	P1ERR		;PRINT ERROR FOR TYPE 1
  2188	031764	254 00 0 00 031776 		JRST	P2ERR
  2189	031765	254 00 0 00 032000 		JRST	P3ERR
  2190	031766	254 00 0 00 032002 		JRST	P4ERR
  2191	031767	254 00 0 00 032004 		JRST	P5ERR
  2192
  2193	031770				P1ERR:	PMSG	<, AC >^
  2194	031770	037 02 0 00 037252 		PSIXM	[SIXBIT\, AC _\]^
  2195	031771	200 01 0 00 031711 		MOVE	1,AC1ERR	;GET ADDRESS OF ERROR
  2196	031772	135 00 0 00 037253 		LDB	0,[POINT 4,-1(1),13]	;GET AC THAT FAILED
  2197	031773	037 16 0 00 000003 		PNTOCS			;SHOW AC NUMBER
  2198						PMSG	<, ADDRESSING FAILED.^>^
  2199	031774	037 02 0 00 037254 		PSIXM	[SIXBIT\, ADDRESSING FAILED.^_\]^
  2200	031775	263 17 0 00 000000 		RTN			;DONE
  2201
  2202	031776				P2ERR:	PMSG	<, AC 17 FAILED TO SET TO -1^>^
  2203	031776	037 02 0 00 037260 		PSIXM	[SIXBIT\, AC 17 FAILED TO SET TO -1^_\]^
  2204	031777	263 17 0 00 000000 		RTN			;DONE
  2205
  2206	032000				P3ERR:	PMSG	<, AC 17 FAILED TO SET TO 0^>^
  2207	032000	037 02 0 00 037265 		PSIXM	[SIXBIT\, AC 17 FAILED TO SET TO 0^_\]^
  2208	032001	263 17 0 00 000000 		RTN			;DONE
  2209
  2210	032002				P4ERR:	PMSG	<, AC 17 FAILED TO SET TO -17,,0^>^
  2211	032002	037 02 0 00 037272 		PSIXM	[SIXBIT\, AC 17 FAILED TO SET TO -17,,0^_\]^
  2212	032003	263 17 0 00 000000 		RTN			;DONE
  2213
  2214	032004				P5ERR:	PMSG	<, AC >^
  2215	032004	037 02 0 00 037252 		PSIXM	[SIXBIT\, AC _\]^
  2216	032005	550 01 0 00 034030 		HRRZ	1,BADAC		;GET NUMBER OF AC THAT FAILED
  2217	032006	200 00 0 00 000001 		MOVE	0,1		;COPY TO 0 TO PRINT
  2218	032007	037 16 0 00 000003 		PNTOCS			;SHOW IT
  2219						PMSG	<, AC SHOULD HAVE BEEN ZERO, BUT WASN'T^>^
  2220	032010	037 02 0 00 037300 		PSIXM	[SIXBIT\, AC SHOULD HAVE BEEN ZERO, BUT WASN'T^_\]^
  2221	032011	263 17 0 00 000000 		RTN			;DONE
  2222
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 5
DSKEBM	MAC	10-Oct-78 10:37		PHYCHK - PHYSICAL ADDRESS CHECK                                                    SEQ 0072

  2223					SUBTTL PHYCHK - PHYSICAL ADDRESS CHECK
  2224
  2225					S^;*********************************************************************^
  2226					;*PHYCHK - PHYSICAL ADDRESS CHECK
  2227					;*
  2228					;*THIS TEST IS DESIGNED TO INSURE THAT NO CACHE HITS ARE RECEIVED WHEN
  2229					;*THE CACHE IS TURNED OFF.  OPERATION IS AS FOLLOWS: FIRST A PAGE OF
  2230					;*JFCLS IS LOADED INTO THE CACHE BY EXECUTING IT.  THEN THE SAME PAGE IS
  2231					;*EXECUTED AGAIN, WITH RDTIME'S BEFORE AND AFTER TO CHECK ON THE ELAPSED
  2232					;*TIME.  IF THE ELAPSED TIME IS GREATER THAN THE THRESHOLD, THEN CACHE
  2233					;*MISSES ARE INDICATED, AND IS THE EXPECTED RESULT.  IF, HOWEVER, THE
  2234					;*TIME IS BELOW THE THRESHOLD, IT INDICATES CACHE HITS, WHICH SHOULD NOT
  2235					;*HAPPEN WITH PAGING TURNED OFF (PHYSICAL ADDRESSES).
  2236
  2237			032012		ELOOP==.			;ERRORS LOOP BACK TO HERE
  2238	032012				PHYCHK:	BEGTST	^		;INITIATE TEST
  2239	032012	550 16 0 00 034013 		HRRZ TN,SAVETN
  2240	032013	302 16 0 00 000001 		CAIE TN,TSTCNT-1
  2241	032014	265 00 0 00 030623 		JSP 0,BEGERR
  2242	032015	402 00 0 00 034026 		SETZM ERFLG
  2243	032016	201 00 0 00 032020 		MOVEI	0,.+2
  2244	032017	202 00 0 00 030051 		MOVEM	0,TESTPC
  2245	032020	260 17 0 00 033647 		GO	SETLOP		;FILL TPAG WITH JFCLS
  2246	032021	201 01 0 00 000035 		MOVEI	A,TPAGPN	;GET PHYS PAGE NUMBER
  2247	032022	201 02 0 00 000035 		MOVEI	B,TPAGPN	;GET VIRTUAL PAGE NUMBER
  2248	032023	474 03 0 00 000000 		SETO	C,		;CACHEABLE
  2249	032024	400 04 0 00 000000 		SETZ	D,		;EXEC ADDR SPACE
  2250	032025	260 17 0 00 033553 		GO	PMAPRT		;MAP IN PHYS=VIRT PAGE
  2251	032026	474 04 0 00 000000 		SETO	D,		;USER ADDR SPACE
  2252	032027	260 17 0 00 033553 		GO	PMAPRT		;MAP PHYS=VIRTUAL
  2253	032030	264 00 0 00 033676 		JSR	SAVREG		;SAVE ALL OUR REGISTERS
  2254	032031	515 17 0 00 032052 		HRLZI	17,PHYPGM	;SETUP BLT PTR=PHYPGM,,0
  2255	032032	251 17 0 00 000017 		BLT	17,17		;LOAD ALL ACS
  2256	032033	254 00 0 00 000011 		JRST	PHYC1		;GO GET TIME FOR EXEC TEST
  2257
  2258	032034	115 03 0 00 000000 	PHYC4:	DSUB	PHYR3,PHYR0	;GET ELAPSED TIME TO PHYR3,PHYR3+1
  2259	032035	124 03 0 00 034051 		DMOVEM	PHYR3,TIM1	;SAVE FOR LATER
  2260	032036	264 00 0 00 033707 		JSR	RESREG		;RESTORE OUR RESGISTERS
  2261	032037	260 17 0 00 033524 		GO	MUUOST		;GO RESET MUUO LOCATIONS
  2262	032040	120 01 0 00 034051 		DMOVE	A,TIM1		;GET RESULTS TO A,B
  2263	032041	332 00 0 00 000001 		SKIPE	A		;HI WD SHOULD BE ZERO
  2264						FATALE<UNREALISTIC RDTIME RESULT>^ JSP 0,[ JRST FATALP
  2265	032042	265 00 0 00 037307 			ASCIZ\UNREALISTIC RDTIME RESULT\]^
  2266	032043	317 02 0 00 033775 		CAMG	B,MTHLD		;THRESHOLD (IN TICKS) WITH 4MHZ CLK
  2267						ERROR	(ELOOP,13,0,B,PHYSICAL EXEC CACHE CHECK,^_
  2268					CACHE HITS WHEN MISSES EXPECTED)^
  2269	032044	036 13 0 00 037331 
  2270	032045	035 00 0 00 032012 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2271						ENDTST	^		;TEST DONE
  2272	032046	550 16 0 00 034013 		HRRZ TN,SAVETN
  2273	032047	302 16 0 00 000001 		CAIE TN,TSTCNT-1
  2274	032050	265 00 0 00 030636 		JSP 0,ENDERR
  2275	032051	263 17 0 00 000000 		RTN
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 6
DSKEBM	MAC	10-Oct-78 10:37		PHYCHK - PHYSICAL ADDRESS CHECK                                                    SEQ 0073

  2276
  2277					S^;*********************************************************************^
  2278					;*PHYPGM - AC PGM FOR PHYSICAL CACHE CHECK
  2279					;*
  2280					;*THIS AC PGM FIRST LOADS CACHE BY EXECUTING A PAGE OF JFCLS.  THEN THE
  2281					;*PAGE IS EXECUTED AGAIN WITH RDTIME'S BEFORE AND AFTER TO CHECK ELASPED
  2282					;*TIME.  CONTROL IS THEN RETURNED TO THE MAIN PROGRAM TO CHECK RESULTS.
  2283
  2284	000000				PHYPGM:	PHASE	0		;ASSEMBLE FOR ACS
  2285
  2286	000000	000000	000000		PHYR0:	0			;00 RDTIME RESULT GOES HERE
  2287	000001	000000	000000			0			;01 LO ORDER RDTIME RESULT
  2288	000002	000000	000013		XRETAC:	0,,PHYC2		;02 (RETAC) RETURN ADDRESS
  2289	000003	000000	000000		PHYR3:	0			;03 RDTIME RESULT
  2290	000004	000000	000000			0			;04 LO ORDER RESULT
  2291	000005					BLOCK	4		;05=>10 *UNUSED*
  2292	000011	701 04 0 00 000000 	PHYC1:	WREBR	POFF		;11 (ENTRY) INSURE PAGING OFF
  2293	000012	254 00 0 00 035000 		JRST	TPAG		;12 GO LOAD CACHE
  2294	000013	201 02 0 00 000016 	PHYC2:	MOVEI	RETAC,PHYC3	;13 READY RETURN ADDRESS
  2295	000014	702 04 0 00 000000 		RDTIME	PHYR0		;14 GET START TIME
  2296	000015	254 00 0 00 035000 		JRST	TPAG		;15 GO TIME CACHE
  2297	000016	702 04 0 00 000003 	PHYC3:	RDTIME	PHYR3		;16 GET STOP TIME
  2298	000017	254 00 0 00 032034 		JRST	PHYC4		;17 (EXIT) BACK TO MAIN PROGRAM
  2299	032072					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 7
DSKEBM	MAC	10-Oct-78 10:37		CACCHK - CACHEABLE/UNCACHEABLE CHECK                                               SEQ 0074

  2300					SUBTTL CACCHK - CACHEABLE/UNCACHEABLE CHECK
  2301					S^;*********************************************************************^
  2302					;*CACCHK - CACHEABLE/UNCACHEABLE CHECK
  2303					;*
  2304					;*THIS TEST MAKES SURE THAT ALL EXEC MODE PAGES CAN BE MADE UNCACHEABLE
  2305					;*BY SETTING THE APPROPRIATE BIT IN THE PAGE MAP ENTRY.  THEN, THE TEST
  2306					;*INSURES THAT EACH PAGE CAN BE MADE CACHEABLE.  THEN THE ABOVE IS
  2307					;*REPEATED FOR USER MODE REFERENCES.  A FIVE AC BLOCK AC PROGRAM IS
  2308					;*USED, ONE OF THEM ACTUALLY DOES THE CACHE HIT/MISS TIMING, WHILE
  2309					;*ANOTHER CHECKS THE RESULTS, COUNTS THRU ALL ADDRESS, AND RESETS THE
  2310					;*FIRST BLOCK FOR ANOTHER PASS.  ONE BLOCK IS USED TO TURN ON PAGING AND
  2311					;*START THE TEST, ANOTHER IS THE ERROR EXIT BLOCK AND THE LAST IS THE
  2312					;*NORMAL EXIT BLOCK.  NOTE THAT BOTH THE TWO EXIT AC BLOCKS (ERROR AND
  2313					;*NORMAL) ARE NEEDED, BECAUSE PAGING MUST BE TURNED OFF BEFORE RETURNING
  2314					;*TO THE MAIN PROGRAM AS THE VIRTUAL PAGES ARE ALL MAPPED TO THE SAME
  2315					;*PHYSICAL PAGE, THAT BEING THE JFCL PAGE.
  2316
  2317			032072		ELOOP==.			;ERRORS LOOP BACK TO HERE
  2318	032072				CACCHK:	BEGTST	^		;INITIATE TEST
  2319	032072	550 16 0 00 034013 		HRRZ TN,SAVETN
  2320	032073	302 16 0 00 000002 		CAIE TN,TSTCNT-1
  2321	032074	265 00 0 00 030623 		JSP 0,BEGERR
  2322	032075	402 00 0 00 034026 		SETZM ERFLG
  2323	032076	201 00 0 00 032100 		MOVEI	0,.+2
  2324	032077	202 00 0 00 030051 		MOVEM	0,TESTPC
  2325	032100	476 00 0 00 034020 		SETOM	CACPAS		;INIT FLAG
  2326	032101	260 17 0 00 033647 		GO	SETLOP		;FILL TPAG WITH JFCLS
  2327	032102	264 00 0 00 033676 		JSR	SAVREG		;SAVE ALL OUR REGISTERS FOR NOW
  2328	032103	201 01 0 00 000002 		MOVEI	A,CRETAC	;GET ADDR TO GO TO ON MUUO
  2329	032104	202 01 0 00 036430 		MOVEM	A,UPT+KNTRP	;SETUP 1ST MUUO LOC
  2330	032105	200 01 0 00 037334 		MOVE	A,[UPT+KNTRP,,UPT+KTRP]	;SETUP BLT PTR
  2331	032106	251 01 0 00 036437 		BLT	A,UPT+PTRP	;SETUP ALL MUUO LOCS
  2332	032107	400 03 0 00 000000 		SETZ	C,		;UNCACHEABLE
  2333	032110	400 04 0 00 000000 		SETZ	D,		;EXEC ADDR SPACE
  2334	032111	200 00 0 00 037335 		MOVE	0,[CACOK1,,CACER1] ;GET ARG FOR SETUP ROUTINE
  2335	032112	254 00 0 00 032173 		JRST	CACSET		;GO DO TEST
  2336
  2337					;*CHKMSG - PRINT MESSAGE TO CHECK CACHE ENABLE FROM 8080.
  2338
  2339	032113				CHKMSG:	PMSG	<PLEASE INSURE THAT THE CACHE IS ENABLED FROM THE 8080^>^
  2340	032113	037 02 0 00 037336 		PSIXM	[SIXBIT\PLEASE INSURE THAT THE CACHE IS ENABLED FROM THE 8080^_\]^
  2341	032114	263 17 0 00 000000 		RTN			;DONE.
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 8
DSKEBM	MAC	10-Oct-78 10:37		CACCHK - CACHEABLE/UNCACHEABLE CHECK                                               SEQ 0075

  2342
  2343					;*CACER1 - HERE WHEN EXEC UNCACHED PAGED GOT CACHE HITS
  2344
  2345	032115	476 00 0 00 034026 	CACER1:	SETOM	ERFLG		;NOTE WE HAD AN ERROR
  2346	032116	701 03 0 00 037350 		WRUBR	[402100,,0]	;SET TO AC BLOCK CONTAINING ERR DATA
  2347	032117	202 02 0 00 034025 		MOVEM	CAC2LO,SVERDT	;SAVE ERROR DATA
  2348	032120	264 00 0 00 033707 	CACOK1:	JSR	RESREG		;RESTORE THE ACS
  2349	032121	332 00 0 00 034026 		SKIPE	ERFLG		;SKIP IF NO ERROR
  2350						ERROR	(ELOOP,13,0,SVERDT,USER/EXEC CACHEABLE/UNCACHEABLE TEST,^_
  2351					EXEC UNCACHED PAGE GOT CACHE HITS)^
  2352	032122	036 13 0 00 037366 
  2353	032123	035 00 0 00 032072 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2354	032124	400 03 0 00 000000 		SETZ	C,		;UNCACHEABLE
  2355	032125	474 04 0 00 000000 		SETO	D,		;USER ADDR SPACE
  2356	032126	200 00 0 00 037371 		MOVE	0,[CACOK2,,CACER2] ;GET ARG FOR SETUP ROUTINE
  2357	032127	254 00 0 00 032173 		JRST	CACSET		;GO DO TEST
  2358
  2359					;*CACER2 - HERE WHEN USER UNCACHED PAGE GOT CACHE HITS
  2360
  2361	032130	476 00 0 00 034026 	CACER2:	SETOM	ERFLG		;NOTE WE HAD AN ERROR
  2362	032131	701 03 0 00 037350 		WRUBR	[402100,,0]	;SET TO AC BLOCK CONTAINING ERR DATA
  2363	032132	202 02 0 00 034025 		MOVEM	CAC2LO,SVERDT	;SAVE ERROR DATA
  2364	032133	264 00 0 00 033716 	CACOK2:	JSR	XRSREG		;RESTORE THE ACS
  2365	032134	332 00 0 00 034026 		SKIPE	ERFLG		;SKIP IF NO ERROR
  2366						ERROR	(ELOOP,13,0,SVERDT,USER/EXEC CACHEABLE/UNCACHEABLE TEST,^_
  2367					USER UNCACHED PAGE GOT CACHE HITS)^
  2368	032135	036 13 0 00 037400 
  2369	032136	035 00 0 00 032072 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2370	032137	474 03 0 00 000000 		SETO	C,		;CACHEABLE
  2371	032140	400 04 0 00 000000 		SETZ	D,		;EXEC ADDR SPACE
  2372	032141	200 00 0 00 037403 		MOVE	0,[CACOK3,,CACER3] ;GET ARG FOR SETUP ROUTINE
  2373	032142	254 00 0 00 032173 		JRST	CACSET		;GO DO TEST
  2374
  2375					;*CACER3 - HERE WHEN EXEC CACHED PAGE GOT CACHE MISSES
  2376
  2377	032143	476 00 0 00 034026 	CACER3:	SETOM	ERFLG		;NOTE WE HAD AN ERROR
  2378	032144	701 03 0 00 037350 		WRUBR	[402100,,0]	;SET TO AC BLOCK CONTAINING ERR DATA
  2379	032145	202 02 0 00 034025 		MOVEM	CAC2LO,SVERDT	;SAVE ERROR DATA
  2380	032146	264 00 0 00 033716 	CACOK3:	JSR	XRSREG		;RESTORE THE ACS
  2381	032147	332 00 0 00 034026 		SKIPE	ERFLG		;SKIP IF NO ERROR
  2382						ERROR	(ELOOP,13,0,SVERDT,USER/EXEC CACHEABLE/UNCACHEABLE TEST,^_
  2383					EXEC CACHED PAGE GOT CACHE MISSES,CHKMSG)^
  2384	032150	036 13 0 00 037412 
  2385	032151	035 00 0 00 032072 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2386	032152	474 03 0 00 000000 		SETO	C,		;CACHEABLE
  2387	032153	474 04 0 00 000000 		SETO	D,		;USER ADDR SPACE
  2388	032154	200 00 0 00 037415 		MOVE	0,[CACOK4,,CACER4] ;GET ARG FOR SETUP ROUTINE
  2389	032155	254 00 0 00 032173 		JRST	CACSET		;GO DO TEST
  2390
  2391					;*CACER4 - HERE WHEN USER CACHED PAGE GOT CACHE MISSES
  2392
  2393	032156	476 00 0 00 034026 	CACER4:	SETOM	ERFLG		;NOTE WE HAD AN ERROR
  2394	032157	701 03 0 00 037350 		WRUBR	[402100,,0]	;SET TO AC BLOCK CONTAINING ERR DATA
  2395	032160	202 02 0 00 034025 		MOVEM	CAC2LO,SVERDT	;SAVE ERROR DATA
  2396	032161	264 00 0 00 033716 	CACOK4:	JSR	XRSREG		;RESTORE THE ACS
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 8-1
DSKEBM	MAC	10-Oct-78 10:37		CACCHK - CACHEABLE/UNCACHEABLE CHECK                                               SEQ 0076

  2397	032162	332 00 0 00 034026 		SKIPE	ERFLG		;SKIP IF NO ERROR
  2398						ERROR	(ELOOP,13,0,SVERDT,USER/EXEC CACHEABLE/UNCACHEABLE TEST,^_
  2399					USER CACHED PAGE GOT CACHE MISSES,CHKMSG)^
  2400	032163	036 13 0 00 037424 
  2401	032164	035 00 0 00 032072 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2402	032165	264 00 0 00 033716 		JSR	XRSREG		;RESTORE THE ACS FOR LAST TIME
  2403	032166	260 17 0 00 033524 		GO	MUUOST		;RESTORE MUUO TRAP LOCATIONS
  2404						ENDTST	^		;DONE
  2405	032167	550 16 0 00 034013 		HRRZ TN,SAVETN
  2406	032170	302 16 0 00 000002 		CAIE TN,TSTCNT-1
  2407	032171	265 00 0 00 030636 		JSP 0,ENDERR
  2408	032172	263 17 0 00 000000 		RTN
  2409
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 9
DSKEBM	MAC	10-Oct-78 10:37		CACCHK - CACHEABLE/UNCACHEABLE CHECK                                               SEQ 0077

  2410
  2411					;*CACSET - SETUP AC BLK PROGRAM IN ALL THE NECESSARY BLOCKS.
  2412					;ENTER WITH AC0 CONTAINING GOOD RETURN ADDR IN LH, BAD IN RH
  2413					;NOTE: THIS ROUTINE MODIFIES CERTAIN INSTRUCTIONS IN THE AC PGM
  2414					;DEPENDING ON THE PASS. IE NO MOD IF 1ST PASS, USER MODE IF 2ND OR 4TH,
  2415					;AND EXPECT HITS INSTEAD OF MISSES IF 3RD OR 4TH PASS.
  2416
  2417	032173	202 00 0 00 034023 	CACSET:	MOVEM	0,SVARG		;SAVE GOOD AND BAD RETURN ADDRS
  2418	032174	205 05 0 00 777000 		MOVSI	E,-1000		;SETUP AOBJN POINTER
  2419	032175	201 01 0 00 000035 		MOVEI	A,TPAGPN	;PHYSICAL PAGE NUMBER IN A
  2420	032176	550 02 0 00 000005 	CLOOP1:	HRRZ	B,E		;GET A VIRTUAL PAGE NUMBER
  2421	032177	260 17 0 00 033553 		GO	PMAPRT		;MAP IT IN
  2422	032200	253 05 0 00 032176 		AOBJN	E,CLOOP1	;LOOP TILL DONE
  2423
  2424	032201	402 00 0 00 034021 		SETZM	P2OR4		;INIT FLAG
  2425	032202	402 00 0 00 034022 		SETZM	P3OR4		;INIT FLAG
  2426	032203	350 01 0 00 034020 		AOS	A,CACPAS	;GET PASS COUNT
  2427	032204	602 01 0 00 000001 		TRNE	A,1		;CHECK FOR PASS 2 OR 4 (BINARY 1 OR 3)
  2428	032205	476 00 0 00 034021 		SETOM	P2OR4		;YES, NOTE IT.
  2429	032206	602 01 0 00 000002 		TRNE	A,2		;CHECK FOR PASS 3 OR 4 (BINARY 2 OR 3)
  2430	032207	476 00 0 00 034022 		SETOM	P3OR4		;YES, NOTE IT.
  2431	032210	701 03 0 00 037032 		WRUBR	[401000,,0]	;SET TO AC BLK1
  2432	032211	515 17 0 00 032244 		HRLZI	17,CACPG1	;SETUP BLT PTR = CACPG1,,0
  2433	032212	251 17 0 00 000017 		BLT	17,17		;LOAD ALL ACS
  2434	032213	332 00 0 00 034021 		SKIPE	P2OR4		;SKIP IF NOT PASS 2 OR 4
  2435	032214	505 03 0 00 010000 		HRLI	CACGO,USERF	;ELSE SET USER BIT IN DISPATCH ADDR
  2436	032215	701 03 0 00 037053 		WRUBR	[402000,,0]	;SET TO AC BLK1
  2437	032216	515 17 0 00 032264 		HRLZI	17,CACPG2	;BLT PTR = CACPG2,,0
  2438	032217	251 17 0 00 000017 		BLT	17,17		;LOAD ALL ACS
  2439	032220	332 00 0 00 034021 		SKIPE	P2OR4		;SKIP IF NOT PASS 2 OR 4
  2440	032221	200 13 0 00 037427 		MOVE	CAC2UE,[HRLI CAC2AD,USERF] ;CHANGE TO RUN IN USER MODE
  2441	032222	332 00 0 00 034022 		SKIPE	P3OR4		;SKIP IF NOT PASS 3 OR 4
  2442	032223	200 11 0 00 037430 		MOVE	CAC2CU,[CAIL CAC2LO,THLD] ;CHANGE TO EXPECT CACHE HITS
  2443	032224	701 03 0 00 037074 		WRUBR	[403000,,0]	;AC BLK 3
  2444	032225	200 17 0 00 037431 		MOVE	17,[CACPG3,,16]	;SHORT PGM
  2445	032226	251 17 0 00 000017 		BLT	17,17		;LOAD 16,17
  2446	032227	544 17 0 00 034023 		HLR	17,SVARG	;GET GOOD RET ADDR FROM LH(ARG)
  2447	032230	701 03 0 00 037115 		WRUBR	[404000,,0]	;AC BLK 4
  2448	032231	200 17 0 00 037431 		MOVE	17,[CACPG3,,16]	;PUT SAME PGM IN AC BLK 4
  2449	032232	251 17 0 00 000017 		BLT	17,17		;LOAD 16,17
  2450	032233	540 17 0 00 034023 		HRR	17,SVARG	;GET BAD RET ADDR FROM RH(ARG)
  2451	032234	701 03 0 00 037157 		WRUBR	[406000,,0]	;AC BLK 6
  2452	032235	200 17 0 00 037432 		MOVE	17,[CACPG6,,13]	;SHORT PGM
  2453	032236	251 17 0 00 000017 		BLT	17,17		;LOAD 13 TO 17
  2454	032237	701 03 0 00 037136 		WRUBR	[405000,,0]	;AC BLK 5 (START BLOCK)
  2455	032240	200 17 0 00 037433 		MOVE	17,[CACPG5,,14]	;SHORT PGM
  2456	032241	251 17 0 00 000017 		BLT	17,17		;LOAD 14,15,16,17
  2457	032242	402 00 0 00 034026 		SETZM	ERFLG		;NOTE NO ERROR ON THIS TEST YET
  2458	032243	254 00 0 00 000014 		JRST	CACST1		;GO START TEST
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 10
DSKEBM	MAC	10-Oct-78 10:37		CACCHK - CACHEABLE/UNCACHEABLE CHECK                                               SEQ 0078

  2459
  2460					S^;*********************************************************************^
  2461					;*CACPG1 - CACCHK'S AC PROGRAM NUMBER ONE.
  2462					;*
  2463					;*	THIS AC BLOCK DOES THE ACTUAL TIMING TEST OF A GIVEN PAGE, TO
  2464					;*DETERMINE IF THAT PAGE HAD CACHE HITS OR CACHE MISSES.  FIRST, THE
  2465					;*JFCL PAGE IS EXECUTED TO LOAD THE CACHE.  NOTE THAT THE JRSTF THAT
  2466					;*EXITS THE AC BLOCK WILL GO INTO USER MODE IF THE BIT IS SET IN THE
  2467					;*DISPATCH ADDRESS.  THAT BIT WILL BE SET BY THE OTHER AC BLOCK PGM IF
  2468					;*THE USER ADDRESS SPACE IS BEING TESTED, AND WILL BE CLEAR IF EXEC ADDR
  2469					;*SPACE IS BEING TESTED.  THEN UPON RETURN FROM THE JFCL PAGE, THE MUUO
  2470					;*TRAP ADDR IS SET TO POINT TO THE RDTIME INSTR WHICH WILL CAUSE A MUUO
  2471					;*TRAP IF EXECUTED IN USER MODE.  THE MUUO TRAP CAUSES THE MACHINE TO GO
  2472					;*INTO EXEC MODE, THUS THE RDTIME INSTR SERVES THE DUAL PURPOSE OF BEING
  2473					;*A 'GO-EXEC' OPCODE, AS WELL AS ITS NORMAL USE.  THEN, THE RETURN
  2474					;*ADDRESS IS SETUP AGAIN TO A DIFFERENT PLACE.  THE CURRENT TIME IS
  2475					;*NOTED, AND THE JFCL PAGE IS EXECUTED AGAIN.  UPON RETURN, THE MUUO
  2476					;*TRAP ADDR IS AGAIN SET TO POINT TO THE RDTIME, THE TIME IS NOTED, AND
  2477					;*THE PREVIOUS TIME IS SUBTRACTED FROM THE CURRENT TIME.  AFTER THAT,
  2478					;*THE OTHER AC PROGRAM IS CALLED TO ANALYZE THE RESULT, AND TO SETUP FOR
  2479					;*NEXT TIME.
  2480					;*
  2481					;*ENTER WITH <WRUBR [401000,,0]>	FROM BLOCK 5,BLOCK 2
  2482
  2483	000000				CACPG1:	PHASE	0		;ASSEMBLE FOR ACS
  2484
  2485	000000	000000	000000		CACR0:	0			;00 1ST RDTIME GOES HERE
  2486	000001	000000	000000			0			;01 2ND WD OF 1ST RDTIME HERE
  2487	000002	254 00 0 00 000006 	CRETAC:	JRST	CACP1A		;02 (RETAC) RET ADDR, 1ST WD 2ND RDTIME
  2488	000003	000000	001000		CACGO:	1000			;03 DISPATCH ADDR, 2ND WD OF 2ND RDTIME
  2489	000004	000000	000000			0			;04 *UNUSED*
  2490	000005	000000	000000			0			;05 *UNUSED*
  2491	000006	541 02 0 00 000007 	CACP1A:	HRRI	CRETAC,CACP1B	;06 SETUP MUUO RETURN
  2492	000007	702 04 0 00 000000 	CACP1B:	RDTIME	CACR0		;07 GET START TIME
  2493	000010	541 02 0 00 000012 		HRRI	CRETAC,CACP1C	;10 SETUP RETURN FROM JFCL'S
  2494	000011	254 02 0 03 000000 		JRSTF	(CACGO)		;11 GO TIME JFCL'S
  2495	000012	541 02 0 00 000013 	CACP1C:	HRRI	CRETAC,CACP1D	;12 SETUP MUUO RETURN
  2496	000013	702 04 0 00 000002 	CACP1D:	RDTIME	CRETAC		;13 GET STOP TIME
  2497	000014	115 02 0 00 000000 		DSUB	CRETAC,CACR0	;14 GET ELAPSED TIME
  2498	000015	701 03 0 00 000017 		WRUBR	CACP1E		;15 (EXIT) TO OTHER BLOCK
  2499	000016	254 02 0 03 000000 		JRSTF	(CACGO)		;16 (ENTRY) FROM MAIN PGM, OTHER BLK
  2500	000017	402100	000000		CACP1E:	402100,,0		;17 WRUBR DATA
  2501	032264					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 11
DSKEBM	MAC	10-Oct-78 10:37		CACCHK - CACHEABLE/UNCACHEABLE CHECK                                               SEQ 0079

  2502
  2503					S^;*********************************************************************^
  2504					;*CACPG2 - CACCHK'S AC PROGRAM NUMBER TWO
  2505					;*
  2506					;*THIS AC PGM IS RESPONSIBLE FOR CHECKING THE RESULTS OF THE TIMING TEST
  2507					;*DONE BY THE OTHER AC BLOCK.  FIRST, THE AC PGM INCREMENTS THE PAGE
  2508					;*NUMBER TO BE TESTED, AND CHECKS FOR DONE.  IF THE AC PGM IS DONE, THE
  2509					;*EXIT ADDRESS IS MODIFIED TO GO TO A AC BLOCK THAT WILL TURN OFF PAGING
  2510					;*AND RETURN TO THE MAIN PROGRAM FOR CLEANUP.  THEN THE TWO WORDS OF THE
  2511					;*RESULT OF THE TIMING TEST ARE OBTAINED FROM THE OTHER BLOCK.  THEN THE
  2512					;*FIRST WORD IS CHECKED FOR ZERO, AND THE SECOND WORD IS CHECKED AGAINST
  2513					;*THE THRESHOLD.  IF EITHER FAILS, THE EXIT ADDRESS IS MODIFIED TO GO TO
  2514					;*AN AC BLOCK THAT WILL TURN OFF PAGING, AND RETURN TO THE MAIN PROGRAM
  2515					;*TO REPORT THE ERROR.  NOTE THAT THE FIRST DISPATCH TO THE JFCL PAGE IS
  2516					;*A JRSTF.  THE DISPATCH ADDRESS WILL CONTAIN THE USER FLAG IF THAT TEST
  2517					;*IS BEING RUN (AS OPPOSED TO EXEC ADDR SPACE).  THEN THE DISPATCH ADDR
  2518					;*IS PUT INTO THE OTHER AC BLOCK WHICH IS THEN CALLED TO DO ITS FUNCION.
  2519					;*
  2520					;*ENTER WITH <WRUBR [402100,,0]>	FROM OTHER AC BLOCK
  2521
  2522	000000				CACPG2:	PHASE	0		;ASSEMBLE FOR ACS
  2523
  2524	000000	000000	001000		CAC2AD:	1000			;00 INITIAL ADDRESS TO TEST
  2525	000001	000000	000000		CAC2HI:	0			;01 GETS HI ORDER TIME DIFFERENCE
  2526	000002	000000	000000		CAC2LO:	0			;02 GETS LO ORDER TIME DIFF
  2527	000003	271 00 0 00 001000 	CAC2ST:	ADDI	CAC2AD,1000	;03 READY NEXT PAGE NUMBER
  2528	000004	603 00 0 00 000001 		TLNE	CAC2AD,1	;04 SKIP IF NO OVERFLOW
  2529	000005	515 17 0 00 403000 		HRLZI	CAC2EX,403000	;05 ELSE DONE, CHANGE EXIT INFO
  2530	000006	704 01 0 00 000002 		UMOVE	CAC2HI,CRETAC	;06 GET HI ORDER TIM DIFF TO CAC2HI
  2531	000007	704 02 0 00 000003 		UMOVE	CAC2LO,CRETAC+1	;07 GET LO ORDER
  2532	000010	336 00 0 00 000001 		SKIPN	CAC2HI		;10 SKIP IF BAD, SHOULD BE EMPTY
  2533	000011	307 02 0 00 010000 	CAC2CU:	CAIG	CAC2LO,THLD	;11 SKIP IF GOOD (CHANGED TO CAIL LATER)
  2534	000012	515 17 0 00 404000 		HRLZI	CAC2EX,404000	;12 BAD, CHG EXIT INFO
  2535	000013	505 00 0 00 000000 	CAC2UE:	HRLI	CAC2AD,0	;13 SET USERF IF USER TEST (CHG'D LATER)
  2536	000014	705 00 0 00 000003 		UMOVEM	CAC2AD,CACGO	;14 SET DISPATCH ADDR IN OTHER BLOCK
  2537	000015	701 03 0 00 000017 		WRUBR	CAC2EX		;15 (EXIT) TO BLK 6,4,3
  2538	000016	254 00 0 00 000003 		JRST	CAC2ST		;16 (ENTRY) FROM MAIN PGM, OTHER BLK
  2539	000017	406100	000000		CAC2EX:	406100,,0		;17 WRUBR WD
  2540	032304					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 12
DSKEBM	MAC	10-Oct-78 10:37		CACCHK - CACHEABLE/UNCACHEABLE CHECK                                               SEQ 0080

  2541
  2542					S^;*********************************************************************^
  2543					;*CACPG3 - THIS AC BLK PGM GETS LOADED INTO AC BLKS 3,4 AS AN EXIT PGM
  2544
  2545	000016				CACPG3:	PHASE	16		;SHORT AC PGM
  2546
  2547	000016	701 04 0 00 000000 		WREBR	POFF		;16 TURN OFF PAGING
  2548	000017	254 00 0 00 000017 		JRST	.		;17 GETS EXIT ADDR WHEN LOADED
  2549	032306					DEPHASE
  2550
  2551					S^;*********************************************************************^
  2552					;*CACPG5 - THIS AC BLK PGM IS THE STARTUP BLK FOR THIS TEST
  2553					;*
  2554					;*THIS AC BLK TURNS ON PAGING AND THEN GOES TO START THE TEST.
  2555
  2556	000014				CACPG5:	PHASE	14		;ASSEMBLE FOR AC 14
  2557
  2558	000014	701 04 0 00 020000 	CACST1:	WREBR	PON		;14 (ENTRY FROM MAIN PGM) TURN ON PAGING
  2559	000015	701 03 0 00 000017 		WRUBR	CACUB1		;15 (EXIT TO BLOCK 1) CHG AC BLOCK NUM
  2560	000016	000000	000000			0			;16 *UNUSED*
  2561	000017	401100	000000		CACUB1:	401100,,0		;17 WRUBR WD TO CHANGE TO BLOCK 1
  2562	032312					DEPHASE
  2563
  2564					S^;*********************************************************************^
  2565					;*CACPG6 - THIS AC BLK PGM RESETS AC BLK1 FOR THE NEXT PASS
  2566					;*
  2567					;*THIS AC BLK PUTS A JRST INSTRUCTION IN CRETAC IN BLK1
  2568
  2569	000013				CACPG6:	PHASE	13		;ASSEMBLE FOR AC 13
  2570
  2571	000013	254 00 0 00 000006 	CAC6IN:	JRST	CACP1A		;13 FIRST RETURN INSTRUCTION
  2572	000014	705 13 0 00 000002 	CAC6ST:	UMOVEM	CAC6IN,CRETAC	;14 PLACE RETURN INSTRUCTION IN BLK1
  2573	000015	701 03 0 00 000017 		WRUBR	CAC6ND		;15 (EXIT) TO BLK1
  2574	000016	254 00 0 00 000014 		JRST	CAC6ST		;16 (ENTRY) FROM BLK 2
  2575	000017	401100	000000		CAC6ND:	401100,,0		;17 WRUBR DATA
  2576	032317					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 13
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0081

  2577					SUBTTL LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST
  2578					S^;*********************************************************************^
  2579					;*LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST
  2580					;*
  2581					;*THIS TEST DOES ADDRESS LINE INTERFERENCE CHECKING ON THE LOW ORDER
  2582					;*ADDRESS BITS (27-35).  ANY ERRORS ENCOUNTERED WILL BE REPORTED AND THE
  2583					;*TEST ABORTED.  SEE THE DESCRIPTION NEXT TO ACBLK1 FOR HOW THE TEST
  2584					;*WORKS.  THE TEST IS CALLED BY SETTING UP THE PAGE MAP FOR THE TEST,
  2585					;*LOADING THE SIX AC BLOCKS USED, AND JUMPING TO AC BLOCK 0.  THE TEST
  2586					;*WILL RETURN TO ONE OF THREE PLACES: %EOT FOR A SUCCESSFUL RETURN,
  2587					;*%ERR1 IF A READ ON THE OLD DATA FAILED, OR %ERR2 IF A READ ON THE NEW
  2588					;*DATA FAILED.  AFTER RETURN TO THE MAIN PROGRAM, THE WRITE THROUGH TEST
  2589					;*IS PERFORMED.  SINCE THE MEMORY SHOULD HAVE DIFFERENT INFORMATION IN
  2590					;*IT AS A RESULT OF THE WRITES TO CACHE AND WRITE THROUGHS TO MEMORY, IF
  2591					;*THE MEMORY CONTAINS THE EXPECTED DATA, THEN THE WRITE THROUGH FUNCTION
  2592					;*IS WORKING CORRECTLY.
  2593
  2594			032317		ELOOP==.			;ERROR LOOPS BACK TO HERE
  2595	032317				LOALIT:	BEGTST	^		;STARTUP TEST
  2596	032317	550 16 0 00 034013 		HRRZ TN,SAVETN
  2597	032320	302 16 0 00 000003 		CAIE TN,TSTCNT-1
  2598	032321	265 00 0 00 030623 		JSP 0,BEGERR
  2599	032322	402 00 0 00 034026 		SETZM ERFLG
  2600	032323	201 00 0 00 032325 		MOVEI	0,.+2
  2601	032324	202 00 0 00 030051 		MOVEM	0,TESTPC
  2602	032325	260 17 0 00 033722 		GO	SETPAG		;GO SETUP PAGE MAPS
  2603	032326	201 01 0 00 000035 		MOVEI	A,TPAGPN	;GET PHYSICAL PAGE NUMBER
  2604	032327	201 02 0 00 000400 		MOVEI	B,400		;VIRTUAL PAGE NUMBER
  2605	032330	476 00 0 00 000003 		SETOM	C		;CACHEABLE
  2606	032331	402 00 0 00 000004 		SETZM	D		;EXEC ADDRESS SPACE
  2607	032332	260 17 0 00 033553 		GO	PMAPRT		;MAP IN THE PAGE FOR THE TEST
  2608	032333	201 01 0 00 000033 		MOVEI	A,ERRRPN	;PHYSICAL PAGE NUMBER
  2609	032334	201 02 0 00 000033 		MOVEI	B,ERRRPN	;VIRTUAL PAGE NUMBER
  2610	032335	402 00 0 00 000003 		SETZM	C		;NOT CACHEABLE
  2611	032336	402 00 0 00 000004 		SETZM	D		;EXEC ADDRESS SPACE
  2612	032337	260 17 0 00 033553 		GO	PMAPRT		;GO MAP IN ERROR RETURN PAGE
  2613	032340	260 17 0 00 033647 		GO	SETLOP		;FILL TPAG WITH KNOWN DATA
  2614	032341	264 00 0 00 033676 		JSR	SAVREG		;GO SAVE OUR REGS
  2615	032342	701 03 0 00 037011 		WRUBR	[B0GO,,0]	;MAKE SURE WE'RE USING BLOCK 0
  2616	032343	515 17 0 00 033052 		HRLZI	17,ACBLK0	;SETUP ACBLK0,,0 AS BLT PTR
  2617	032344	251 17 0 00 000017 		BLT	17,17		;LOAD ALL 17 ACS
  2618	032345	701 03 0 00 037032 		WRUBR	[B1GO,,0]	;SET CURRENT AC BLK = 1
  2619	032346	515 17 0 00 033072 		HRLZI	17,ACBLK1	;SETUP ACBLK1,,0 AS BLT PTR
  2620	032347	251 17 0 00 000017 		BLT	17,17		;LOAD ALL 17 ACS
  2621	032350	701 03 0 00 037350 		WRUBR	[B2GO,,0]	;SET CURRENT=2
  2622	032351	515 17 0 00 033112 		HRLZI	17,ACBLK2	;SETUP BLT PTR
  2623	032352	251 17 0 00 000017 		BLT	17,17		;LOAD ALL 17 ACS
  2624	032353	701 03 0 00 037434 		WRUBR	[B3GO,,0]	;CURRENT=3
  2625	032354	515 17 0 00 033132 		HRLZI	17,ACBLK3	;BLT PTR
  2626	032355	251 17 0 00 000017 		BLT	17,17		;LOAD ALL 17
  2627	032356	701 03 0 00 037435 		WRUBR	[B4GO,,0]	;CURRENT=4
  2628	032357	515 17 0 00 033152 		HRLZI	17,ACBLK4	;BLT PTR
  2629	032360	251 17 0 00 000017 		BLT	17,17		;LOAD ALL 17
  2630	032361	701 03 0 00 037436 		WRUBR	[B5GO,,0]	;CURRENT=5
  2631	032362	515 17 0 00 033172 		HRLZI	17,ACBLK5	;BLT PTR
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 13-1
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0082

  2632	032363	251 17 0 00 000017 		BLT	17,17		;LOAD ALL 17
  2633	032364	701 03 0 00 037437 		WRUBR	[B6GO,,0]	;CURRENT=6
  2634	032365	515 17 0 00 033212 		HRLZI	17,ACBLK6	;BLT PTR
  2635	032366	251 17 0 00 000017 		BLT	17,17		;LOAD ALL 17
  2636	032367	701 03 0 00 037011 		WRUBR	[B0GO,,0]	;READY TO GO START TEST
  2637	032370	402 00 0 00 034026 		SETZM	ERFLG		;NOTE NO ERROR ON THIS TEST YET
  2638	032371	254 00 0 00 000016 		JRST	B0R16		;GO START TEST...
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 14
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0083

  2639
  2640					;HERE ON SUCCESSFUL COMPLETION OF TEST.
  2641
  2642	032372	701 03 0 00 037011 	%EOT:	WRUBR	[B0GO,,0]	;SETUP TO USE AC BLK 0
  2643	032373	264 00 0 00 033707 		JSR	RESREG		;GO RESTORE OUR REGS
  2644	032374	205 02 0 00 777000 		MOVSI	B,-1000		;SETUP AOBJN PTR TO CHECK A FULL PAGE
  2645	032375	200 01 0 02 035000 	EOTLP:	MOVE	A,TPAG(B)	;GET A WORD OF THE PAGE
  2646	032376	312 01 0 00 037221 		CAME	A,[-1]		;SKIP IF ONES AS EXPECTED
  2647						ERROR	(ELOOP,13,[-1],A,CACHE WRITE THROUGH TEST,^_
  2648					ONES NOT WRITTEN TO MEMORY,%ERRW)^
  2649	032377	036 13 0 00 037452 
  2650	032400	035 00 0 00 032317 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2651	032401	402 00 0 00 030052 		SETZM	ERRPC		;PRINT ALL ERRORS
  2652	032402	253 02 0 00 032375 		AOBJN	B,EOTLP		;LOOP TILL DONE
  2653	032403	254 00 0 00 033027 		JRST	NOTSOJ		;GO LOOP ON ERROR IF WE HAD ONE
  2654
  2655					;*%ERRW - HERE ON ERROR ON WRITE THRU, TO PRINT EXTRA INFO
  2656
  2657	032404	261 17 0 00 000000 	%ERRW:	PUT	0		;SAVE AC0
  2658						PMSG<WORD ADDRESS OF WORD THAT DIDN'T GET WRITTEN TO MEMORY: >^
  2659	032405	037 02 0 00 037455 		PSIXM	[SIXBIT\WORD ADDRESS OF WORD THAT DIDN'T GET WRITTEN TO MEMORY: _\]^
  2660	032406	550 00 0 00 000002 		HRRZ	0,B		;GET ADDRESS
  2661	032407	037 16 0 00 000003 		PNTOCS			;SHOW THE ADDRESS
  2662	032410	037 00 0 00 030242 		PCRL
  2663	032411	262 17 0 00 000000 		GET	0		;RESTORE AC
  2664	032412	263 17 0 00 000000 		RTN			;DONE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 15
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0084

  2665
  2666					;*%ERR1 - HERE IF FAILURE ON READ OF OLD DATA IN CURRENT LOCATION
  2667
  2668						.PGE	ERRR		^;PAGE ALIGN SO WE CAN MAP IT IN
  2669	033000	701 04 0 00 000000 	%ERR1:	WREBR	POFF		;TURN OFF PAGING
  2670	033001	402 00 0 00 034004 		SETZM	%ERRFL		;CLEAR ERR FLAG TO NOTE READ FAILED
  2671	033002	202 05 0 00 034003 		MOVEM	B1R5,SVTSTI	;REMEMBER TEST INSTR THAT FAILED
  2672	033003	254 00 0 00 033007 		JRST	%ERR		;GO TO COMMON PRINT ROUTINE
  2673
  2674					;*%ERR2 - HERE IF FAILURE ON READ OF NEW DATA IN CURRENT LOCATION
  2675
  2676	033004	701 04 0 00 000000 	%ERR2:	WREBR	POFF		;TURN OFF PAGING
  2677	033005	476 00 0 00 034004 		SETOM	%ERRFL		;SET ERR FLAG TO NOTE WRITE FAILED.
  2678	033006	202 10 0 00 034003 		MOVEM	B1R10,SVTSTI	;REMEMBER TEST INSTR THAT FAILED
  2679
  2680					;HERE TO PRINT ERROR
  2681
  2682	033007	476 00 0 00 034026 	%ERR:	SETOM	ERFLG		;NOTE WE HAD AN ERROR
  2683	033010	202 02 0 00 034001 		MOVEM	ADDR,SVADDR	;REMEMBER LOCATION THAT FAILED
  2684	033011	202 01 0 00 034002 		MOVEM	ERR,SVERR	;REMEMBER DATA THAT FAILED
  2685	033012	264 00 0 00 033707 		JSR	RESREG		;RESTORE OUR REGS
  2686	033013	554 01 0 00 034003 		HLRZ	A,SVTSTI	;GET THE TEST INSTR OPCODE THAT FAILED
  2687	033014	402 00 0 00 034000 		SETZM	SBDATA		;ASSUME CORRECT DATA WAS ALL ZEROS
  2688	033015	302 01 0 00 346040 		CAIE	A,(AOJN ERR,)	;WAS ALL ONES EXPECTED?
  2689	033016	254 00 0 00 033022 		JRST	NOTAOJ		;N, GO SEE IF A SINGLE ONE EXPECTED
  2690	033017	370 00 0 00 034002 		SOS	SVERR		;Y, DECR DATA BECAUSE TEST INCR'D IT
  2691	033020	476 00 0 00 034000 		SETOM	SBDATA		;SET CORRECT DATA TO ALL ONES
  2692	033021	254 00 0 00 033027 		JRST	NOTSOJ		;OK, GO PRINT ERROR
  2693	033022	302 01 0 00 366040 	NOTAOJ:	CAIE	A,(SOJN ERR,)	;WAS A SINGLE ONE EXPECTED?
  2694	033023	254 00 0 00 033027 		JRST	NOTSOJ		;N, GO PRINT ERROR
  2695	033024	350 00 0 00 034002 		AOS	SVERR		;Y, INCR DATA BECAUSE TEST DECR'D IT
  2696	033025	201 01 0 00 000001 		MOVEI	A,1		;GET A SINGLE ONE READY
  2697	033026	202 01 0 00 034000 		MOVEM	A,SBDATA	;SAVE CORRECT DATA
  2698	033027	332 00 0 00 034004 	NOTSOJ:	SKIPE	%ERRFL		;SKIP IF FAILURE WAS ON READ
  2699	033030	254 00 0 00 033040 		JRST	WRFAIL		;ELSE GO SAY THAT WRITE FAILED
  2700	033031	332 00 0 00 034026 		SKIPE	ERFLG		;SKIP IF WE REALLY HAD NO ERROR
  2701						ERROR	(ELOOP,13,SBDATA,SVERR,^_
  2702					LO ORDER ADDRESS LINE INTERFERENCE TEST,READ FAILED,%ERR3)^
  2703	033032	036 13 0 00 037500 
  2704	033033	035 00 0 00 032317 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2705	033034				ELOALT:	ENDTST	^		;FINISH TEST
  2706	033034	550 16 0 00 034013 		HRRZ TN,SAVETN
  2707	033035	302 16 0 00 000003 		CAIE TN,TSTCNT-1
  2708	033036	265 00 0 00 030636 		JSP 0,ENDERR
  2709	033037	263 17 0 00 000000 		RTN
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 16
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0085

  2710
  2711					;HERE IF WRITE TO CACHE LOCATION FAILED
  2712
  2713	033040	332 00 0 00 034026 	WRFAIL:	SKIPE	ERFLG		;SKIP IF REALLY HAD NO ERROR
  2714						ERROR	(ELOOP,13,SBDATA,SVERR,^_
  2715					LO ORDER ADDRESS LINE INTERFERENCE TEST,WRITE FAILED,%ERR3)^
  2716	033041	036 13 0 00 037506 
  2717	033042	035 00 0 00 032317 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  2718	033043	254 00 0 00 033034 		JRST	ELOALT		;GO FINISH TEST
  2719
  2720					;*%ERR3 - HERE TO PRINT EXTRA DATA ON THE ERROR
  2721
  2722	033044				%ERR3:	PMSG	<ADDRESS WITHIN PAGE: >^
  2723	033044	037 02 0 00 037511 		PSIXM	[SIXBIT\ADDRESS WITHIN PAGE: _\]^
  2724	033045	550 00 0 00 034001 		HRRZ	0,SVADDR	;GET ADDRESS
  2725	033046	405 00 0 00 000777 		ANDI	0,777		;SHOW ONLY ADDR WITHIN PAGE
  2726	033047	037 16 0 00 000003 		PNTOCS			;SHOW THE PAGE ADDR
  2727	033050	037 00 0 00 030242 		PCRL			;<CRLF>
  2728	033051	263 17 0 00 000000 		RTN			;DONE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 17
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0086

  2729
  2730					S^;*********************************************************************^
  2731					;*ACBLK0 - THIS BLOCK IS THE STARTUP BLOCK FOR THE WHOLE TEST
  2732					;*
  2733					;*THIS BLK TURNS ON PAGING, THEN INITIALIZES PAGE 400 TO ALL ONES.
  2734					;*BLOCK 1 WILL BE INITIALIZED FOR THE FIRST PASS ALEADY.
  2735					;*
  2736					;*ENTER WITH <WRUBR [B0GO,,0]>, JRST B0R16 (FROM MAIN PGM)
  2737
  2738			400000		B0GO==400000			;LH OF WRUBR WD TO ENTER THIS BLOCK
  2739			400700		B0GO2==400700			;WRUBR WD TO CHG PREV AC BLK ONLY
  2740			407700		B7GO==407700			;WRUBR WD TO ENTER BLOCK 7
  2741	000000				ACBLK0:	PHASE	0		;ASSEMBLE FOR ACS
  2742
  2743	000000	000000	000000		B0R0:	0			;00 *UNUSED*
  2744	000001	777000	400000		B0R1:	-1000,,400000		;01 AOBJN PTR FOR INIT'G MEMORY
  2745	000002	400700	000000		B0R2:	B0GO2,,0		;02 WRUBR DATA
  2746	000003	701 04 0 00 000000 	B0R3:	WREBR	POFF		;03 INSTR TO TURN OFF PAGING
  2747	000004	000000	000000		B0R4:	0			;04 ZERO TO BE SENT TO B7R0
  2748	000005	254 00 0 00 032372 	B0R5:	JRST	%EOT		;05 EXIT INSTR FROM TEST FOR BLK7
  2749	000006	701 03 0 00 000002 	B0R6:	WRUBR	B0R2		;06 SET PREV AC BLK
  2750	000007	705 03 0 00 000016 		UMOVEM	B0R3,B7R16	;07 INSTR TO TURN OFF PAGING INTO B7R16
  2751	000010	255 00 0 00 000000 		JFCL			;10 *UNUSED*
  2752	000011	705 05 0 00 000017 		UMOVEM	B0R5,B7R17	;11 PUT EXIT INSTR IN B7R17
  2753	000012	701 04 0 00 020000 		WREBR	PON		;12 TURN ON PAGING
  2754	000013	476 00 0 01 000000 	B0R13:	SETOM	(B0R1)		;13 INIT A MEMORY LOCATION
  2755	000014	253 01 0 00 000013 		AOBJN	B0R1,B0R13	;14 LOOP TILL DONE
  2756	000015	701 03 0 00 000017 		WRUBR	B0R17		;15 (EXIT) TO BLK2
  2757	000016	254 00 0 00 000006 	B0R16:	JRST	B0R6		;16 (ENTRY) FROM MAIN PROGRAM
  2758	000017	402100	000000		B0R17:	B2GO,,0			;17 WRUBR DATA
  2759	033072					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 18
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0087

  2760
  2761					S^;*********************************************************************^
  2762					;*ACBLK1 - MAIN LOOP THAT TESTS THE CACHE FOR ADDR INTERFERENCE
  2763					;*
  2764					;*FIRST THE OLD CONTENTS OF THE CURRENT ADDRESS ARE READ AND VERIFIED.
  2765					;*THEN, A NEW PATTERN IS WRITTEN, READ, AND VERIFIED.  THEN THE ADDRESS
  2766					;*IS INCREMENTED AND THE TEST IS REPEATED.  AFTER ALL ADDRESSES HAVE
  2767					;*BEEN READ AND VERIFIED, WRITTEN, READ AND VERIFIED, THE PATTERN BEING
  2768					;*WRITTEN IS CHANGED BY BLK2 AND BLK3 AND THE TEST IS REPEATED.
  2769					;*PATTERNS USED ARE: ALL ONES TO ALL ZEROS, ALL ZEROS TO ALL ONES, ALL
  2770					;*ONES TO A SINGLE ONE, AND A SINGLE ONE TO ALL ONES.  (IN SHORTER FORM:
  2771					;*-1 => 0, 0 => -1, -1 => 1, 1 => -1).  THE 4 PATTERN CHANGES SELECTED
  2772					;*GIVE THE PARITY NET BOTH EVEN AND ODD WORDS TO CHECK FOR PARITY ERRORS
  2773					;*ON.  AFTER ALL PATTERNS HAVE BEEN DONE, THE ADDRESS INCREMENT IS
  2774					;*CHANGED BY BLK4, SO THAT A DIFFERENT BIT IS INCREMENTED THE FASTEST,
  2775					;*WITH AN END-AROUND-CARRY.  THEN THE TEST IS REPEATED AGAIN, THRU ALL
  2776					;*PATTERNS.  AFTER EACH BIT HAS BEEN INCREMENTED THE FASTEST, THE TEST
  2777					;*IS CHANGED BY BLK 5, SO THAT ALL ADDRESS INCREMENTS BECOME ADDRESS
  2778					;*DECREMENTS AND THE ENTIRE TEST IS REPEATED AGAIN.  AFTER TEST IS
  2779					;*FINISHED, IT EXITS BACK TO THE MAIN PROGRAM.  IF ANY ERRORS ARE
  2780					;*ENCOUNTERED DURING THE TEST, THE TEST IS ABORTED, AND EXITS BACK TO
  2781					;*THE MAIN PROGRAM TO REPORT THE ERROR.
  2782					;*
  2783					;*ENTER WITH <WRUBR [B1GO,,0]>	(FROM BLK0, BLK3)
  2784
  2785			401000		B1GO==401000			;WRUBR WD TO ENTER THIS BLOCK
  2786	000000				ACBLK1:	PHASE	0		;ASSEMBLE FOR ACS
  2787
  2788	000000	000000	000000		CNT:	0			;00 LOOP COUNT
  2789	000001	000000	000000		ERR:	0			;01 FAILED DATA (MAYBE CHANGED)
  2790	000002	000000	400000		ADDR:	400000			;02 CURRENT ADDR BEING TESTED
  2791	000003	201 00 0 00 001000 	B1R3:	MOVEI	CNT,1000	;03 INIT LOOP COUNT
  2792	000004	200 01 0 02 000000 	B1R4:	MOVE	ERR,(ADDR)	;04 READ ORIG CONTENTS
  2793	000005	346 01 0 00 033000 	B1R5:	AOJN	ERR,%ERR1	;05* VERIFY OLD DATA. SET BY BLK3.
  2794	000006	402 00 0 02 000000 	B1R6:	SETZM	(ADDR)		;06* WRITE NEW DATA. SET BY BLK2.
  2795	000007	200 01 0 02 000000 		MOVE	ERR,(ADDR)	;07 READ NEW CONTENTS
  2796	000010	326 01 0 00 033004 	B1R10:	JUMPN	ERR,%ERR2	;10* VERIFY NEW DATA. SET BY BLK3.
  2797	000011	271 02 0 00 000001 	B1R11:	ADDI	ADDR,1		;11* INCREMENT ADDRESS. SET BY BLK4.
  2798	000012	622 02 0 00 377000 	B1R12:	TRZE	ADDR,377000	;12 CHK FOR AND CLR ANY OVERFLOW
  2799	000013	271 02 0 00 000001 	B1R13:	ADDI	ADDR,1		;13* END-AROUND-CARRY. SET BY BLK5.
  2800	000014	367 00 0 00 000004 		SOJG	CNT,B1R4	;14 LOOP TILL DONE
  2801	000015	701 03 0 00 000017 		WRUBR	B1R17		;15 (EXIT) TO BLK2
  2802	000016	254 00 0 00 000003 		JRST	B1R3		;16 (ENTRY) FROM BLK0,BLK3
  2803	000017	402100	000001		B1R17:	B2GO,,1			;17 WRUBR DATA, AND RH=1 FOR HRRZM
  2804	033112					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 19
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0088

  2805
  2806					S^;*********************************************************************^
  2807					;*ACBLK2 - THIS BLK CHGS THE MEMORY WRITE PATTERN INSTR IN BLK1
  2808					;*
  2809					;*THIS AC BLK CHECKS A LOOP CNT, AND EITHER GOES TO BLK4 FOR RESET OF
  2810					;*LOOP COUNT AND CHANGE OF INCREMENT, OR CHANGES A MEMORY WRITE
  2811					;*INSTRUCTION IN B1R6 AND JUMPS TO BLK3 TO CHG THE TEST INSTRUCTIONS IN
  2812					;*BLK1.
  2813					;*
  2814					;*ENTER WITH <WRUBR [B2GO,,0]>	(FROM BLK1)
  2815
  2816			402100		B2GO==402100			;WRUBR WD TO ENTER THIS BLOCK
  2817	000000				ACBLK2:	PHASE	0		;ASSEMBLE FOR ACS
  2818
  2819	000000	476552	476402		B2R0:	476552,,476402		;00 <SETOM><HRRZM><SETOM><SETZM>
  2820	000001	000 17 0 02 000000 	B2R1:	Z	B1R17,(ADDR)	;01 TEMPLATE FOR B1R6
  2821	000002	000000	400000		B2R2:	400000			;02 NEW START ADDR FOR BLK1
  2822	000003	33 11 0 00 000001 	B2R3:	POINT	9,B2R1,8	;03 BYTE PTR FOR TEMPLATE OPCODE
  2823	000004	000000	000004		B2R4:	4			;04 INITIAL LOOP CNT,RESET LATER
  2824	000005	705 02 0 00 000002 	B2R5:	UMOVEM	B2R2,ADDR	;05 RESET START ADDR IN BLK1
  2825	000006	515 17 0 00 403100 		HRLZI	B2R17,B3GO	;06 SETUP NORMAL LOOP EXIT
  2826	000007	365 04 0 00 000012 		SOJGE	B2R4,B2R12	;07 CHK LOOP CNT, JMP IF MORE
  2827	000010	515 17 0 00 404200 		HRLZI	B2R17,B4GO	;10 SETUP ALTERNATE EXIT
  2828	000011	254 00 0 00 000015 		JRST	B2R15		;11 GO EXIT
  2829	000012	137 00 0 00 000003 	B2R12:	DPB	B2R0,B2R3	;12 PUT OPCODE IN TEMPLATE
  2830	000013	241 00 0 00 000011 		ROT	B2R0,^D9	;13 READY NEXT OPCODE
  2831	000014	705 01 0 00 000006 		UMOVEM	B2R1,B1R6	;14 PUT INSTR IN PREV AC BLK
  2832	000015	701 03 0 00 000017 	B2R15:	WRUBR	B2R17		;15 (EXIT) TO BLK3,BLK4
  2833	000016	254 00 0 00 000005 		JRST	B2R5		;16 (ENTRY) FROM BLK1,BLK4
  2834	000017	000000	000000		B2R17:	0			;17 GETS WRUBR DATA
  2835	033132					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 20
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0089

  2836
  2837					S^;*********************************************************************^
  2838					;*ACBLK3 - THIS BLK CHGS THE MEMORY TEST PATTERN INSTRS IN BLK1
  2839					;*
  2840					;*THIS AC BLK CHANGES TWO TEST INSTRUCTIONS IN B1R5,B1R10 TO TEST
  2841					;*DIFFERENT PATTERNS.  THEN THE AC BLK JUMPS BACK TO THE TEST IN BLK1.
  2842					;*
  2843					;*ENTER WITH <WRUBR [B3GO,,0]>	(FROM BLK2)
  2844
  2845			403100		B3GO==403100			;WRUBR WD TO ENTER THIS BLOCK
  2846	000000				ACBLK3:	PHASE	0		;ASSEMBLE FOR ACS
  2847
  2848	000000	326346	366346		B3R0:	326346,,366346		;00 <JUMPN><AOJN><SOJN><AOJN> OPCODES
  2849	000001	000 01 0 00 033000 	B3R1:	Z	ERR,%ERR1	;01 TEMPLATE FOR B1R5
  2850	000002	000 01 0 00 033004 	B3R2:	Z	ERR,%ERR2	;02 TEMPLATE FOR B1R10
  2851	000003	000000	000000			0			;03 *UNUSED*
  2852	000004	000000	000000			0			;04 *UNUSED*
  2853	000005	33 11 0 00 000001 	B3R5:	POINT	9,B3R1,8	;05 BYTE PTR FOR TEMPLATE OPCODE
  2854	000006	33 11 0 00 000002 	B3R6:	POINT	9,B3R2,8	;06 BYTE PTR FOR TEMPLATE OPCODE
  2855	000007	000000	000000			0			;07 *UNUSED*
  2856	000010	137 00 0 00 000005 	B3R10:	DPB	B3R0,B3R5	;10 PUT OPCODE IN TEMPLATE
  2857	000011	705 01 0 00 000005 		UMOVEM	B3R1,B1R5	;11 PUT INSTR IN PREV AC BLK
  2858	000012	241 00 0 00 000011 		ROT	B3R0,^D9	;12 READY NEXT OPCODE
  2859	000013	137 00 0 00 000006 		DPB	B3R0,B3R6	;13 PUT OPCODE IN TEMPLATE
  2860	000014	705 02 0 00 000010 		UMOVEM	B3R2,B1R10	;14 PUT INSTR IN PREV AC BLK
  2861	000015	701 03 0 00 000017 		WRUBR	B3R17		;15 (EXIT) TO BLK1
  2862	000016	254 00 0 00 000010 		JRST	B3R10		;16 (ENTRY) FROM BLK2
  2863	000017	401000	000000		B3R17:	B1GO,,0			;17 WRUBR DATA
  2864	033152					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 21
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0090

  2865
  2866					S^;*********************************************************************^
  2867					;*ACBLK4 - THIS AC BLK DOUBLES THE INCREMENT INSTR IN BLK1
  2868					;*
  2869					;*RESETS LOOP COUNT IN BLK2 FOR ANOTHER PASS THRU THE PATTERNS, AND SETS
  2870					;*UP A NEW ADDRESS INCREMENT IN BLK1.  THEN A RETURN IS MADE TO BLK2 IF
  2871					;*MORE TO DO, OR TO BLK5.  AFTER THE ASCENDING TEST IS DONE, BLK5
  2872					;*MODIFIES THIS BLOCK TO GO TO BLK7 INSTEAD OF BLK5, TO STOP THE TEST.
  2873					;*
  2874					;*ENTER WITH <WRUBR [B4GO,,0]>	(FROM BLK1,BLK2)
  2875
  2876			404200		B4GO==404200			;WRUBR WD TO ENTER THIS BLOCK
  2877			404100		B4GO2==404100			;WRUBR WD TO CHG PREV AC BLK ONLY
  2878	000000				ACBLK4:	PHASE	0		;ASSEMBLE FOR ACS
  2879
  2880	000000	000000	000000			0			;00 *UNUSED*
  2881	000001	271 02 0 00 000001 	B4R1:	ADDI	ADDR,1		;01 INCR INSTR FOR B1R11
  2882	000002	000000	000000			0			;02 *UNUSED*
  2883	000003	000000	000004		B4R3:	0,,4			;03 DATA FOR B2R4
  2884	000004	404100	000000		B4R4:	B4GO2,,0		;04 WRUBR DATA
  2885	000005	515 17 0 00 402100 	B4R5:	HRLZI	B4R17,B2GO	;05 SETUP NORMAL EXIT DATA
  2886	000006	705 03 0 00 000004 		UMOVEM	B4R3,B2R4	;06 PUT DATA IN B2R4
  2887	000007	701 03 0 00 000004 		WRUBR	B4R4		;07 SETUP NEW PREVIOUS AC BLK
  2888	000010	271 01 0 01 000000 		ADDI	B4R1,(B4R1)	;10 DOUBLE THE INCREMENT
  2889	000011	705 01 0 00 000011 		UMOVEM	B4R1,B1R11	;12 PUT NEW INCR IN B1R11
  2890	000012	622 01 0 00 777000 		TRZE	B4R1,777000	;12 CHK FOR FINISHED
  2891	000013	515 17 0 00 405100 	B4R13:	HRLZI	B4R17,B5GO	;13 DONE, CHG EXIT DATA
  2892	000014	255 00 0 00 000000 		JFCL			;14 *UNUSED*
  2893	000015	701 03 0 00 000017 		WRUBR	B4R17		;15 (EXIT) TO BLK2,BLK5,BLK7
  2894	000016	254 00 0 00 000005 		JRST	B4R5		;16 (ENTRY) FROM BLK1,BLK2
  2895	000017	000000	000000		B4R17:	0			;17 GETS WRUBR DATA
  2896	033172					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 22
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0091

  2897
  2898					S^;*********************************************************************^
  2899					;*ACBLK5 - THIS AC BLK SETUPS THE TEST FOR DESCENDING ADDRESSES
  2900					;*
  2901					;*THIS AC BLK CHGS THE ADDI INSTRS TO SUBI INSTRS IN B1R11, B1R13, B4R1
  2902					;*TO SETUP FOR DESCENDING ADDRESS TEST.  THEN JUMPS TO BLK6.
  2903					;*
  2904					;*ENTER WITH <WRUBR [B5GO,,0]>	(FROM BLK4)
  2905
  2906			405100		B5GO==405100			;WRUBR WD TO ENTER THIS BLOCK
  2907			405400		B5GO2==405400			;WRUBR WD TO CHG PREV AC BLK ONLY
  2908	000000				ACBLK5:	PHASE	0		;ASSEMBLE FOR ACS
  2909
  2910	000000	275 02 0 00 000001 	B5R0:	SUBI	ADDR,1		;00 INSTR FOR B1R11,B4R1
  2911	000001	000000	400777		B5R1:	0,,400777		;01 NEW ADDR TO START TEST AT
  2912	000002	515 17 0 00 407700 	B5R2:	HRLZI	B4R17,B7GO	;02 NEW EXIT INSTR FOR B4R13
  2913	000003	405400	000000		B5R3:	B5GO2,,0		;03 WRUBR DATA TO CHG PREV AC BLK
  2914	000004	271 02 0 00 000777 	B5R4:	ADDI	ADDR,777	;04 NEW INSTR FOR B1R13
  2915	000005	602 02 0 00 377000 	B5R5:	TRNE	ADDR,377000	;05 NEW TEST INSTR FOR B2R12
  2916	000006	705 00 0 00 000011 	B5R6:	UMOVEM	B5R0,B1R11	;06 PUT NEW INSTR IN B1R11
  2917	000007	705 04 0 00 000013 		UMOVEM	B5R4,B1R13	;07 PUT NEW INSTR IN B1R13
  2918	000010	705 01 0 00 000002 		UMOVEM	B5R1,ADDR	;10 PUT NEW START ADDR IN ADDR
  2919	000011	705 05 0 00 000012 		UMOVEM	B5R5,B1R12	;11 SETUP NEW TEST INSTR IN B2R12
  2920	000012	701 03 0 00 000003 		WRUBR	B5R3		;12 CHG PREV AC BLK
  2921	000013	705 00 0 00 000001 		UMOVEM	B5R0,B4R1	;13 PUT NEW INSTR IN B4R1
  2922	000014	705 02 0 00 000013 		UMOVEM	B5R2,B4R13	;14 PUT NEW EXIT INSTR IN B4R13
  2923	000015	701 03 0 00 000017 		WRUBR	B5R17		;15 (EXIT) TO BLK6
  2924	000016	254 00 0 00 000006 		JRST	B5R6		;16 (ENTRY) FROM BLK4
  2925	000017	406200	000000		B5R17:	B6GO,,0			;17 WRUBR DATA
  2926	033212					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 23
DSKEBM	MAC	10-Oct-78 10:37		LOALIT - LOW ORDER ADDRESS LINE INTERFERENCE TEST                                  SEQ 0092

  2927
  2928					S^;*********************************************************************^
  2929					;*ACBLK6 - THIS AC BLK RESETS THE LOOP COUNT IN BLK2, THEN JUMPS TO IT.
  2930					;*
  2931					;*ENTER WITH <WRUBR [B6GO,,0]>	(FROM BLK5)
  2932
  2933			406200		B6GO==406200			;WRUBR WD TO ENTER THIS BLOCK
  2934	000000				ACBLK6:	PHASE	0		;ASSEMBLE FOR ACS
  2935
  2936	000000	000000	000004		B6R0:	0,,4			;00 LOOP COUNT FOR B2R4
  2937	000001	000000	400777		B6R1:	0,,400777		;01 NEW START ADDR FOR B2R2
  2938	000002					BLOCK	11		;02-12 *UNUSED*
  2939	000013	705 00 0 00 000004 	B6R13:	UMOVEM	B6R0,B2R4	;13 RESET LOOP CNT IN B2R4
  2940	000014	705 01 0 00 000002 		UMOVEM	B6R1,B2R2	;14 NEW START ADDR FOR B2R2
  2941	000015	701 03 0 00 000017 		WRUBR	B6R17		;15 (EXIT) TO BLK2
  2942	000016	254 00 0 00 000013 		JRST	B6R13		;16 (ENTRY) FROM BLK5
  2943	000017	402100	000000		B6R17:	B2GO,,0			;17 WRUBR WD
  2944	033232					DEPHASE
  2945
  2946
  2947			000000		B7R0==0				;DEFINITIONS FOR BLK 7 (SETUP BY BLK0)
  2948			000016		B7R16==16
  2949			000017		B7R17==17
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 24
DSKEBM	MAC	10-Oct-78 10:37		HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST                                 SEQ 0093

  2950					SUBTTL HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST
  2951					S^;*********************************************************************^
  2952					;*HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST
  2953					;*
  2954					;*THIS TEST DOES ADDRESS LINE INTERFERENCE CHECKING ON THE HIGH ORDER
  2955					;*ADDRESS BITS (18-26).  ANY ERRORS ENCOUNTERED WILL BE REPORTED AND THE
  2956					;*TEST ABORTED. 
  2957					;*
  2958					;*TEST OPERATION IS AS FOLLOWS: FIRST, THE CACHE IS LOADED WITH A PAGE
  2959					;*OF JFCLS FOR A GIVEN VIRTUAL PAGE NUMBER.  THEN, A DIFFERENT VIRTUAL
  2960					;*PAGE CONTAINING IDENTICAL DATA (JFCLS) IS EXECUTED, WITH RDTIME'S
  2961					;*BEFORE AND AFTER TO RECORD THE ELAPSED TIME FOR THE SECOND PASS.  THE
  2962					;*INTENTION IS THAT IF THERE IS A BAD ADDRESS LINE, THE SECOND PAGE WILL
  2963					;*LOOK THE SAME AS THE FIRST AND WILL GET CACHE HITS INSTEAD OF CACHE
  2964					;*MISSES.  THIS WILL SHOW UP IN THE TIMING OF THE EXECUTION OF THE
  2965					;*JFCLS.  IF THE TEST IS SUCCESSFUL, THE SECOND PAGE WILL TAKE LONGER
  2966					;*THAN THE THRESHOLD, WHICH SAYS THAT THE PAGE DID NOT GET ANY CACHE
  2967					;*HITS.  A TABLE IS USED TO DETERMINE WHICH PAGE NUMBERS TO TRY AGAINST
  2968					;*WHICH OTHER PAGE NUMBERS FOR OPTIMUM TESTING FOR BAD ADDRESS LINES.
  2969					;*ALSO INCLUDED IN THE TABLE ON PURPOSE ARE ENTRIES WHERE THE FIRST PAGE
  2970					;*NUMBER IS THE SAME AS THE SECOND.  IN THIS CASE THE TEST IS EXPECTED
  2971					;*TO GET CACHE HITS, AND THE RESULTS ARE INTERPRETED ACCORDINGLY.  IF
  2972					;*CACHE MISSES ARE ENCOUNTERED, IT IS AN ERROR BECAUSE THE CACHE
  2973					;*CONTAINS VALID DATA, AND SHOULD HAVE RESULTED IN CACHE HITS.
  2974
  2975	033232				HOALIT:	BEGTST	^		;STARTUP TEST
  2976	033232	550 16 0 00 034013 		HRRZ TN,SAVETN
  2977	033233	302 16 0 00 000004 		CAIE TN,TSTCNT-1
  2978	033234	265 00 0 00 030623 		JSP 0,BEGERR
  2979	033235	402 00 0 00 034026 		SETZM ERFLG
  2980	033236	201 00 0 00 033240 		MOVEI	0,.+2
  2981	033237	202 00 0 00 030051 		MOVEM	0,TESTPC
  2982	033240	205 16 0 00 777753 		MOVSI	TN,-NPASSS	;SETUP AOBJN PTR FOR NUMBER OF PASSES
  2983			033241		ELOOP==.			;ERROR LOOPS BACK TO HERE
  2984	033241	260 17 0 00 033647 		GO	SETLOP		;GO FILL A PAGE WITH JFCL'S
  2985	033242	200 01 0 16 033750 	HOALOP:	MOVE	A,HOALTB(TN)	;GET ENTRY FROM TABLE
  2986	033243	202 01 0 00 034012 		MOVEM	A,CURPAS	;SAVE CURRENT PASS NUMBERS
  2987	033244	201 01 0 00 000035 		MOVEI	A,TPAGPN	;GET PHYS PAGE NUMBER
  2988	033245	554 02 0 00 034012 		HLRZ	B,CURPAS	;GET INITIAL VIRTUAL PAGE NUMBER
  2989	033246	474 03 0 00 000000 		SETO	C,		;CACHEABLE
  2990	033247	400 04 0 00 000000 		SETZ	D,		;EXEC ADDR SPACE
  2991	033250	260 17 0 00 033553 		GO	PMAPRT		;MAP IN INITIAL PAGE
  2992	033251	550 02 0 00 034012 		HRRZ	B,CURPAS	;SET SECONDARY VIRTUAL PAGE NUMBER
  2993	033252	260 17 0 00 033553 		GO	PMAPRT		;MAP IN SECONDARY PAGE
  2994	033253	264 00 0 00 033676 		JSR	SAVREG		;SAVE OUR ACS
  2995	033254	515 17 0 00 033334 		HRLZI	17,HOALPG	;SETUP BLT PTR = HOALPG,,0
  2996	033255	251 17 0 00 000017 		BLT	17,17		;LOAD ALL ACS WITH AC PGM
  2997	033256	554 03 0 00 034012 		HLRZ	RDT1W1,CURPAS	;GET PAGE NUMBER TO INITIAL PAGE
  2998	033257	550 05 0 00 034012 		HRRZ	RDT2W1,CURPAS	;GET PAGE NUMBER OF SECONDARY PAGE
  2999	033260	242 03 0 00 000011 		LSH	RDT1W1,9	;MAKE MEM ADDR INSTEAD OF PAGE NUMBER
  3000	033261	242 05 0 00 000011 		LSH	RDT2W1,9	;MAKE MEM ADDR
  3001	033262	254 00 0 00 000007 		JRST	HOAL1		;GO START TEST
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 25
DSKEBM	MAC	10-Oct-78 10:37		HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST                                 SEQ 0094

  3002
  3003	033263	124 03 0 00 034051 	HOALDN:	DMOVEM	RDT1W1,TIM1	;SAVE 1ST TIME READ IN MEMORY
  3004	033264	124 05 0 00 034053 		DMOVEM	RDT2W1,TIM2	;SAVE 2ND TIME READ IN MEMORY
  3005	033265	264 00 0 00 033707 		JSR	RESREG		;GET BACK OUR ACS
  3006	033266	120 01 0 00 034053 		DMOVE	A,TIM2		;GET LATER TIME (LARGER)
  3007	033267	115 01 0 00 034051 		DSUB	A,TIM1		;GET POSITIVE ELAPSED TIME
  3008	033270	332 00 0 00 000001 		SKIPE	A		;DIFF SHOULD BE LESS THAN 2^^36
  3009						FATALE<UNREALISTIC RDTIME RESULT>^ JSP 0,[ JRST FATALP
  3010	033271	265 00 0 00 037307 			ASCIZ\UNREALISTIC RDTIME RESULT\]^
  3011	033272	200 01 0 00 000002 		MOVE	A,B		;GET LO ORDER RESULT TO A
  3012	033273	554 02 0 00 034012 		HLRZ	B,CURPAS	;GET INITIAL PAGE NUMBER
  3013	033274	550 03 0 00 034012 		HRRZ	C,CURPAS	;GET SECONDARY PAGE NUMBER
  3014	033275	202 01 0 00 034011 		MOVEM	A,SAVTIM	;SAVE TIME
  3015	033276	317 01 0 00 033775 		CAMG	A,MTHLD		;THRESHOLD (IN TICKS) WITH 4MHZ CLK
  3016	033277	254 00 0 00 033304 		JRST	HOALUN		;UNDER THRESHOLD
  3017	033300	316 02 0 00 000003 		CAMN	B,C		;SAME PAGE NUMBER FOR 1ST AND 2ND PASS?
  3018						ERROR	(ELOOP,13,0,A,HI ORDER ADDRESS LINE INTERFERENCE TEST,^_
  3019					CACHE MISSES WHEN HITS EXPECTED,%ERR4)^
  3020	033301	036 13 0 00 037532 
  3021	033302	035 00 0 00 033241 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  3022	033303	254 00 0 00 033307 		JRST	HOALNX		;GO DO NEXT PASS
  3023	033304	312 02 0 00 000003 	HOALUN:	CAME	B,C		;SAME PAGE NUMBER?
  3024						ERROR	(ELOOP,13,0,A,HI ORDER ADDRESS LINE INTERFERENCE TEST,^_
  3025					CACHE HITS WHEN MISSES EXPECTED,%ERR4)^
  3026	033305	036 13 0 00 037535 
  3027	033306	035 00 0 00 033241 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  3028	033307	402 00 0 00 030052 	HOALNX:	SETZM	ERRPC		;INSURE ERROR GETS PRINTED NEXT TIME
  3029	033310	253 16 0 00 033242 		AOBJN	TN,HOALOP	;GO DO NEXT PASS TILL DONE
  3030						ENDTST	^		;FINISH TEST
  3031	033311	550 16 0 00 034013 		HRRZ TN,SAVETN
  3032	033312	302 16 0 00 000004 		CAIE TN,TSTCNT-1
  3033	033313	265 00 0 00 030636 		JSP 0,ENDERR
  3034	033314	263 17 0 00 000000 		RTN
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 26
DSKEBM	MAC	10-Oct-78 10:37		HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST                                 SEQ 0095

  3035
  3036					;*%ERR4 - PRINT OUT CURRENT STATE IF HI ORDER ADDRESS LINE TEST FAILS
  3037
  3038	033315	261 17 0 00 000000 	%ERR4:	PUT	0		;SAVE AC0
  3039						PMSG<INITIAL PAGE = >^
  3040	033316	037 02 0 00 037540 		PSIXM	[SIXBIT\INITIAL PAGE = _\]^
  3041	033317	554 00 0 00 034012 		HLRZ	0,CURPAS	;GET 1ST PAGE NUMBER
  3042	033320	037 16 0 00 000003 		PNTOCS			;SHOW IT
  3043						PMSG<, SECONDARY PAGE = >^
  3044	033321	037 02 0 00 037543 		PSIXM	[SIXBIT\, SECONDARY PAGE = _\]^
  3045	033322	550 00 0 00 034012 		HRRZ	0,CURPAS	;GET 2ND PAGE NUMBER
  3046	033323	037 16 0 00 000003 		PNTOCS			;SHOW IT TOO
  3047						PMSG<, NSEC/JFCL = >^
  3048	033324	037 02 0 00 037547 		PSIXM	[SIXBIT\, NSEC/JFCL = _\]^
  3049	033325	200 00 0 00 034011 		MOVE	0,SAVTIM	;GET TICKS/PAGE
  3050	033326	221 00 0 00 000364 		IMULI	0,^D244		;TIMES NSEC/TIC GETS NSEC/PAGE
  3051	033327	242 00 0 00 777767 		LSH	0,-9		;DIV BY 1000 = JFCLS/PAGE GETS NSEC/JFCL
  3052	033330	037 15 0 00 000000 		PNTDEC			;SHOW NSEC/JFCL
  3053	033331	262 17 0 00 000000 		GET	0		;RESTORE AC
  3054	033332	037 00 0 00 030242 		PCRL
  3055	033333	263 17 0 00 000000 		RTN			;DONE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 27
DSKEBM	MAC	10-Oct-78 10:37		HOALIT - HIGH ORDER ADDRESS LINE INTERFERENCE TEST                                 SEQ 0096

  3056
  3057					S^;*********************************************************************^
  3058					;*HOALPG - AC PGM TO TEST HI ORD ADDR LINES
  3059					;*
  3060					;*THIS AC BLK TURNS ON PAGING, RUNS THRU THE JFCL PAGE TO LOAD THE
  3061					;*CACHE, AND THEN SETS UP THE RETURN ADDR AGAIN.  THEN THE PGM READS THE
  3062					;*TIME, RUNS THE JFCL PAGE AGAIN, AND READS THE TIME AGAIN ON RETURN.
  3063					;*THEN PAGING IS TURNED OFF, AND CONTROL IS RETURNED TO THE MAIN PGM.
  3064
  3065	000000				HOALPG:	PHASE	0		;ASSEMBLE FOR ACS
  3066
  3067	000000	000000	000000			0			;00 *UNUSED*
  3068	000001	000000	000000			0			;01 *UNUSED*
  3069	000002	000000	000011		RETAC:	HOAL2			;02 GETS RETURN ADDR FROM JFCL PAGE
  3070	000003	000000	000000		RDT1W1:	0			;03 1ST WD OF 1ST RDTIME RESULT,ST ADDR
  3071	000004	000000	000000		RDT1W2:	0			;04 2ND WD OF 2ST RDTIME RESULT
  3072	000005	000000	000000		RDT2W1:	0			;05 1ST WD OF 2ND RDTIME RESULT,ST ADDR
  3073	000006	000000	000000		RDT2W2:	0			;06 2ND WD OF 2ND RDTIME RESULT
  3074	000007	701 04 0 00 020000 	HOAL1:	WREBR	PON		;07 TURN ON PAGING
  3075	000010	254 00 0 03 000000 		JRST	(RDT1W1)	;10 DO JFCL'S 1ST TIME TO LOAD CACHE
  3076	000011	201 02 0 00 000014 	HOAL2:	MOVEI	RETAC,HOAL3	;11 LOAD RETURN AC
  3077	000012	702 04 0 00 000003 		RDTIME	RDT1W1		;12 CHECK TIME BEFORE TEST
  3078	000013	254 00 0 05 000000 		JRST	(RDT2W1)	;13 GO CHK FOR CACHE HIT/MISS
  3079	000014	702 04 0 00 000005 	HOAL3:	RDTIME	RDT2W1		;14 CHECK TIME AFTER TEST
  3080	000015	701 04 0 00 000000 		WREBR	POFF		;15 TURN OFF PAGING
  3081	000016	254 00 0 00 033263 		JRST	HOALDN		;16 DONE, BACK TO PGM
  3082	000017	000000	000000			0			;17 *UNUSED*
  3083	033354					DEPHASE			;BACK TO NORMAL ASSEMBLY
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 28
DSKEBM	MAC	10-Oct-78 10:37		UECHEK - USER TO EXEC CACHE CHECK                                                  SEQ 0097

  3084					SUBTTL UECHEK - USER TO EXEC CACHE CHECK
  3085					S^;*********************************************************************^
  3086					;*UECHEK - USER TO EXEC CACHE CHECK
  3087					;*
  3088					;*THIS TEST IS DESIGNED TO CHECK THE USER TO EXEC TRANSITION OF THE
  3089					;*USER/EXEC SIGNAL IN THE CACHE HIT LOGIC.  IF THE TEST IS SUCCESSFUL,
  3090					;*THE SECOND TIME THE PAGE IS EXECUTED (IN EXEC MODE), CACHE MISSES ARE
  3091					;*EXPECTED.  IF THE TEST FAILS, AND CACHE HITS ARE FOUND, THE USER/EXEC
  3092					;*SIGNAL DID NOT MAKE THE PROPER TRANSITION FROM USER TO EXEC.  THIS
  3093					;*TEST IS DESIGNED TO BE USED IN CONJUNCTION WITH THE TEST CALLED
  3094					;*'EUCHEK' WHICH CHECKS THE OPPOSITE TRANSITION OF THE USER/EXEC SIGNAL.
  3095
  3096			033354		ELOOP==.			;ERROR LOOPS TO HERE
  3097	033354				UECHEK:	BEGTST	^		;STARTUP TEST
  3098	033354	550 16 0 00 034013 		HRRZ TN,SAVETN
  3099	033355	302 16 0 00 000005 		CAIE TN,TSTCNT-1
  3100	033356	265 00 0 00 030623 		JSP 0,BEGERR
  3101	033357	402 00 0 00 034026 		SETZM ERFLG
  3102	033360	201 00 0 00 033362 		MOVEI	0,.+2
  3103	033361	202 00 0 00 030051 		MOVEM	0,TESTPC
  3104	033362	260 17 0 00 033722 		GO	SETPAG		;SETUP PAGE MAPS
  3105	033363	260 17 0 00 033647 		GO	SETLOP		;FILL TPAG WITH JFCLS
  3106	033364	264 00 0 00 033676 		JSR	SAVREG		;SAVE OUR REGISTERS
  3107	033365	201 01 0 00 000012 		MOVEI	A,UEMUUO	;GET MUUO TRAP ADDR
  3108	033366	202 01 0 00 036430 		MOVEM	A,UPT+KNTRP	;SET IN 1ST MUUO TRAP LOC
  3109	033367	200 01 0 00 037334 		MOVE	A,[UPT+KNTRP,,UPT+KTRP]	;BLT PTR
  3110	033370	251 01 0 00 036437 		BLT	A,UPT+PTRP	;SETUP ALL MUUO TRAP LOCS
  3111	033371	201 01 0 00 000035 		MOVEI	A,TPAGPN	;PHYSICAL PAGE NUMBER
  3112	033372	201 02 0 00 000035 		MOVEI	B,TPAGPN	;VIRTUAL PAGE NUMBER
  3113	033373	474 03 0 00 000000 		SETO	C,		;CACHEABLE
  3114	033374	400 04 0 00 000000 		SETZ	D,		;EXEC MODE
  3115	033375	260 17 0 00 033553 		GO	PMAPRT		;MAP IN EXEC PAGE
  3116	033376	474 04 0 00 000000 		SETO	D,		;USER MODE
  3117	033377	260 17 0 00 033553 		GO	PMAPRT		;MAP IN USER PAGE
  3118	033400	515 17 0 00 033420 		HRLZI	17,UEPGM	;SETUP BLT PTR = UEPGM,,0
  3119	033401	251 17 0 00 000017 		BLT	17,17		;LOAD ALL ACS
  3120	033402	254 00 0 00 000006 		JRST	UEST		;GO RUN TEST
  3121
  3122	033403	124 03 0 00 034051 	UEDONE:	DMOVEM	UER3,TIM1	;MOVE ELAPSED TIME TO MEMORY
  3123	033404	264 00 0 00 033707 		JSR	RESREG		;RESTORE OUR REGISTERS
  3124	033405	332 00 0 00 034051 		SKIPE	TIM1		;SKIP IF 1ST WORD IS ZERO
  3125						FATALE<UNREALISTIC RDTIME RESULT>^ JSP 0,[ JRST FATALP
  3126	033406	265 00 0 00 037307 			ASCIZ\UNREALISTIC RDTIME RESULT\]^
  3127	033407	200 01 0 00 034052 		MOVE	A,TIM1+1	;LO ORDER WORD OF RESULT
  3128	033410	317 01 0 00 033775 		CAMG	A,MTHLD		;SHOULD BE OVER THRESHOLD
  3129						ERROR	(ELOOP,13,0,A,USER TO EXEC CHECK,TIME OVER THRESHOLD)^
  3130	033411	036 13 0 00 037562 
  3131	033412	035 00 0 00 033354 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  3132	033413	260 17 0 00 033524 		GO	MUUOST		;RESTORE MUUO TRAP LOCATIONS
  3133						ENDTST	^		;DONE
  3134	033414	550 16 0 00 034013 		HRRZ TN,SAVETN
  3135	033415	302 16 0 00 000005 		CAIE TN,TSTCNT-1
  3136	033416	265 00 0 00 030636 		JSP 0,ENDERR
  3137	033417	263 17 0 00 000000 		RTN
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 29
DSKEBM	MAC	10-Oct-78 10:37		UECHEK - USER TO EXEC CACHE CHECK                                                  SEQ 0098

  3138
  3139					S^;*********************************************************************^
  3140					;*UEPGM - AC BLOCK PROGRAM TO CHECK THE USER TO EXEC TRANSITION
  3141					;*
  3142					;*THIS PROGRAM STARTS OFF BY TURNING ON PAGING, AND THEN EXECUTING A
  3143					;*JRSTF INSTRUCTION THAT CHANGES TO USER MODE AND GOES OFF TO THE PAGE
  3144					;*OF JFCLS.  THE RETURN ADDRESS HAVING ALREADY BEEN SETUP, THE CONTROL
  3145					;*NOW RETURNS TO THE AC PGM.  UPON RETURN, THE NEW RETURN ADDRESS IS
  3146					;*SETUP, AND THEN AN ILLEGAL OPCODE (0) IS SETUP.  BECAUSE THE MUUO TRAP
  3147					;*LOCATIONS WERE PREVIOUSLY SETUP TO POINT TO THE NEXT INSTRUCTION,
  3148					;*RESULT IS A 'GO-EXEC' OPCODE.  NEXT THE TIME IS NOTED, AND THE JFCL
  3149					;*PAGE IS AGAIN CALLED.  UPON RETURN, THE PGM NOTES THE TIME, CALCULATES
  3150					;*THE DIFFERENCE BETWEEN THE STOP TIME AND THE START TIME, TURNS OFF
  3151					;*PAGING, AND THEN RETURNS TO THE MAIN PROGRAM FOR ANALYSIS.
  3152
  3153	000000				UEPGM:	PHASE	0		;ASSEMBLE FOR ACS
  3154
  3155	000000	000000	000000		UER0:	0			;00 1ST WD OF 1ST RDTIME
  3156	000001	000000	000000			0			;01 2ND WD OF 1ST RDTIME
  3157	000002	000000	000010		UERET:	UERET1			;02 1ST RETURN ADDRESS
  3158	000003	000000	000000		UER3:	0			;03 2ND RDTIME
  3159	000004	010000	035000		UEGO:	USERF,,TPAG		;04 RDTIME, FLAGS+ADDR FOR USER DISPATCH
  3160	000005	000000	000000			0			;05 *UNUSED*
  3161	000006	701 04 0 00 020000 	UEST:	WREBR	PON		;06 (ENTRY FROM MAIN PGM) TURN ON PAGING
  3162	000007	254 02 0 04 000000 		JRSTF	(UEGO)		;07 GO TO JFCLS IN USER MODE
  3163	000010	201 02 0 00 000014 	UERET1:	MOVEI	UERET,UERET2	;10 SETUP NEW RETURN ADDR
  3164	000011	000000	000000			0			;11 ILLEGAL OPCODE (MUUO) INTO EXEC MODE
  3165	000012	702 04 0 00 000000 	UEMUUO:	RDTIME	UER0		;12 NOTE START TIME
  3166	000013	254 00 0 00 035000 		JRST	TPAG		;13 GO RUN TIMING TEST
  3167	000014	702 04 0 00 000003 	UERET2:	RDTIME	UER3		;14 NOTE STOP TIME
  3168	000015	115 03 0 00 000000 		DSUB	UER3,UER0	;15 CALC ELAPSED TIME
  3169	000016	701 04 0 00 000000 		WREBR	POFF		;16 TURN OFF PAGING
  3170	000017	254 00 0 00 033403 		JRST	UEDONE		;17 (EXIT) TO MAIN PROGRAM
  3171	033440					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 30
DSKEBM	MAC	10-Oct-78 10:37		EUCHEK - EXEC TO USER CACHE CHECK                                                  SEQ 0099

  3172					SUBTTL EUCHEK - EXEC TO USER CACHE CHECK
  3173					S^;*********************************************************************^
  3174					;*EUCHEK - EXEC TO USER CACHE CHECK
  3175					;*
  3176					;*THIS TEST IS DESIGNED TO CHECK THE EXEC TO USER TRANSITION OF THE
  3177					;*USER/EXEC SIGNAL IN THE CACHE HIT LOGIC.  IF THE TEST IS SUCCESSFUL,
  3178					;*THE SECOND TIME THE PAGE IS EXECUTED (IN USER MODE), CACHE MISSES ARE
  3179					;*EXPECTED.  IF THE TEST FAILS, AND CACHE HITS ARE FOUND, THE USER/EXEC
  3180					;*SIGNAL DID NOT MAKE THE PROPER TRANSITION FROM EXEC TO USER.  THIS
  3181					;*TEST IS DESIGNED TO BE USED IN CONJUNCTION WITH THE TEST CALLED
  3182					;*'UECHEK' WHICH CHECKS THE OPPOSITE TRANSITION OF THE USER/EXEC SIGNAL.
  3183
  3184			033440		ELOOP==.			;ERROR LOOPS TO HERE
  3185	033440				EUCHEK:	BEGTST	^		;STARTUP TEST
  3186	033440	550 16 0 00 034013 		HRRZ TN,SAVETN
  3187	033441	302 16 0 00 000006 		CAIE TN,TSTCNT-1
  3188	033442	265 00 0 00 030623 		JSP 0,BEGERR
  3189	033443	402 00 0 00 034026 		SETZM ERFLG
  3190	033444	201 00 0 00 033446 		MOVEI	0,.+2
  3191	033445	202 00 0 00 030051 		MOVEM	0,TESTPC
  3192	033446	260 17 0 00 033722 		GO	SETPAG		;GO SETUP PAGE MAPS
  3193	033447	260 17 0 00 033647 		GO	SETLOP		;FILL TPAG WITH JFCLS
  3194	033450	264 00 0 00 033676 		JSR	SAVREG		;SAVE OUR REGISTERS
  3195	033451	201 01 0 00 000016 		MOVEI	A,EUMUUO	;GET MUUO TRAP ADDR
  3196	033452	202 01 0 00 036430 		MOVEM	A,UPT+KNTRP	;SET IN 1ST MUUO TRAP LOC
  3197	033453	200 01 0 00 037334 		MOVE	A,[UPT+KNTRP,,UPT+KTRP]	;BLT PTR
  3198	033454	251 01 0 00 036437 		BLT	A,UPT+PTRP	;SETUP ALL MUUO TRAP LOCS
  3199	033455	201 01 0 00 000035 		MOVEI	A,TPAGPN	;PHYSICAL PAGE NUMBER
  3200	033456	201 02 0 00 000035 		MOVEI	B,TPAGPN	;VIRTUAL PAGE NUMBER
  3201	033457	474 03 0 00 000000 		SETO	C,		;CACHEABLE
  3202	033460	400 04 0 00 000000 		SETZ	D,		;EXEC MODE
  3203	033461	260 17 0 00 033553 		GO	PMAPRT		;MAP IN EXEC PAGE
  3204	033462	474 04 0 00 000000 		SETO	D,		;USER MODE
  3205	033463	260 17 0 00 033553 		GO	PMAPRT		;MAP IN USER PAGE
  3206	033464	515 17 0 00 033504 		HRLZI	17,EUPGM	;SETUP BLT PTR = EUPGM,,0
  3207	033465	251 17 0 00 000017 		BLT	17,17		;LOAD ALL ACS
  3208	033466	254 00 0 00 000006 		JRST	EUST		;GO RUN TEST
  3209
  3210	033467	124 03 0 00 034051 	EUDONE:	DMOVEM	EUR3,TIM1	;MOVE ELAPSED TIME TO MEMORY
  3211	033470	264 00 0 00 033707 		JSR	RESREG		;RESTORE OUR REGISTERS
  3212	033471	332 00 0 00 034051 		SKIPE	TIM1		;SKIP IF 1ST WORD IS ZERO
  3213						FATALE<UNREALISTIC RDTIME RESULT>^ JSP 0,[ JRST FATALP
  3214	033472	265 00 0 00 037307 			ASCIZ\UNREALISTIC RDTIME RESULT\]^
  3215	033473	200 01 0 00 034052 		MOVE	A,TIM1+1	;LO ORDER WORD OF RESULT
  3216	033474	317 01 0 00 033775 		CAMG	A,MTHLD		;SHOULD BE OVER THRESHOLD
  3217						ERROR	(ELOOP,13,0,A,EXEC TO USER CHECK,TIME OVER THRESHOLD)^
  3218	033475	036 13 0 00 037571 
  3219	033476	035 00 0 00 033440 		ERLOOP	ELOOP		;IF ERROR, LOOP TO ELOOP
  3220	033477	260 17 0 00 033524 		GO	MUUOST		;RESTORE MUUO TRAP LOCATIONS
  3221						ENDTST	^		;DONE
  3222	033500	550 16 0 00 034013 		HRRZ TN,SAVETN
  3223	033501	302 16 0 00 000006 		CAIE TN,TSTCNT-1
  3224	033502	265 00 0 00 030636 		JSP 0,ENDERR
  3225	033503	263 17 0 00 000000 		RTN
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 31
DSKEBM	MAC	10-Oct-78 10:37		EUCHEK - EXEC TO USER CACHE CHECK                                                  SEQ 0100

  3226
  3227					S^;*********************************************************************^
  3228					;*EUPGM - AC BLOCK PROGRAM TO CHECK THE EXEC TO USER TRANSITION
  3229					;*
  3230					;*THIS PROGRAM STARTS BY TURNING ON PAGING, AND THEN GOING OFF TO THE
  3231					;*PAGE OF JFCLS.  THE RETURN ADDRESS HAS BEEN SETUP ALREADY.  UPON
  3232					;*RETURN, A NEW RETURN ADDRESS IS SETUP, THE TIME IS NOTED, AND A JRSTF
  3233					;*IS EXECUTED TO GO INTO USER MODE AND TO GO TO THE JFCL PAGE.  UPON
  3234					;*RETURN, THE TIME IS AGAIN NOTED, AND THE DIFFERENCE BETWEEN THE STOP
  3235					;*AND START TIMES IS CALCULATED.  THEN AN ILLEGAL OPCODE (0) IS EXECUTED
  3236					;*TO CAUSE AN MUUO TRAP TO THE EXEC.  HAVING PREVIOUSLY SETUP THE MUUO
  3237					;*TRAP LOCATIONS TO POINT TO THE NEXT INSTRUCTION IN THE AC PGM
  3238					;*EFFECTIVELY CREATES A 'GO-EXEC' OPCODE.  THEN PAGING IS TURNED OFF,
  3239					;*AND CONTROL IS RETURNED TO THE MAIN PROGRAM FOR ANALYSIS.
  3240
  3241	000000				EUPGM:	PHASE	0		;ASSEMBLE FOR ACS
  3242
  3243	000000	000000	000000		EUR0:	0			;00 1ST RDTIME
  3244	000001	000000	000000			0			;01 2ND WD OF 1ST RDTIME
  3245	000002	000000	000010		EURET:	EURET1			;02 RETURN AC
  3246	000003	000000	000000		EUR3:	0			;03 2ND RDTIME
  3247	000004	010000	035000		EUGO:	USERF,,TPAG		;04 DISPATCH TO JFCL PAGE IN USER MODE
  3248	000005	000000	000000			0			;05 *UNUSED*
  3249	000006	701 04 0 00 020000 	EUST:	WREBR	PON		;06 (ENTRY FROM MAIN PGM) TURN ON PAGING
  3250	000007	254 00 0 00 035000 		JRST	TPAG		;07 GO LOAD CACHE IN EXEC MODE
  3251	000010	201 02 0 00 000013 	EURET1:	MOVEI	EURET,EURET2	;10 SETUP NEW RETURN ADDR
  3252	000011	702 04 0 00 000000 		RDTIME	EUR0		;11 NOTE START TIME
  3253	000012	254 02 0 04 000000 		JRSTF	(EUGO)		;12 GO TO JFCL'S IN USER MODE
  3254	000013	702 04 0 00 000003 	EURET2:	RDTIME	EUR3		;13 NOTE STOP TIME
  3255	000014	115 03 0 00 000000 		DSUB	EUR3,EUR0	;14 CALC ELAPSED TIME
  3256	000015	000000	000000			0			;15 ILLEGAL OPCODE (MUUO) INTO EXEC MODE
  3257	000016	701 04 0 00 000000 	EUMUUO:	WREBR	POFF		;16 PAGING OFF
  3258	000017	254 00 0 00 033467 		JRST	EUDONE		;17 (EXIT) TO MAIN PROGRAM
  3259	033524					DEPHASE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 32
DSKEBM	MAC	10-Oct-78 10:37		SUPPORT ROUTINES                                                                   SEQ 0101

  3260					SUBTTL SUPPORT ROUTINES
  3261					S^;*********************************************************************^
  3262					;*MUUOST - SETUP MUUO HANDLER LOCATIONS
  3263
  3264	033524	261 17 0 00 000001 	MUUOST:	PUT	A		;SAVE AC
  3265	033525	201 01 0 00 033533 		MOVEI	A,MUUOH		;GET TRAP ADDR
  3266	033526	202 01 0 00 036430 		MOVEM	A,UPT+KNTRP	;SETUP MUUO TRAP LOC
  3267	033527	200 01 0 00 037334 		MOVE	A,[UPT+KNTRP,,UPT+KTRP]	;SETUP BLT PTR
  3268	033530	251 01 0 00 036437 		BLT	A,UPT+PTRP	;SET UPT+KNTRP-UPT+PTRP = A(MUUOH)
  3269	033531	262 17 0 00 000001 		GET	A		;RESTORE AC
  3270	033532	263 17 0 00 000000 		RTN			;DONE
  3271
  3272	033533	701 04 0 00 000000 	MUUOH:	WREBR	POFF		;MAKE SURE PAGING OFF
  3273	033534	202 17 0 00 034005 		MOVEM	P,MUOSVP	;SAVE CURRENT P
  3274	033535	336 00 0 00 034006 		SKIPN	SAVFLG		;SEE IF VALID P IN SAVACS+P
  3275	033536	037 14 0 00 000004 		ERRHLT			;LOSE...NO STACK PTR
  3276	033537	200 17 0 00 034050 		MOVE	P,SAVACS+P	;GET GOOD STK PTR
  3277	033540	261 17 0 00 000000 		PUT	0		;SAVE AC0
  3278						PMSGF<?^? UNEXPECTED MUUO: >^
  3279	033541	037 04 0 00 037574 		PSIXMF	[SIXBIT\?^? UNEXPECTED MUUO: _\]^
  3280	033542	200 00 0 00 000424 		MOVE	0,EPT+MUUO	;GET MUUO
  3281	033543	037 13 0 00 000001 		PNTHWF			;PRINT IT
  3282						PMSGF<, AT PC: >^
  3283	033544	037 04 0 00 037600 		PSIXMF	[SIXBIT\, AT PC: _\]^
  3284	033545	200 00 0 00 000425 		MOVE	0,EPT+MUUOPC	;GET PC OF MUUO
  3285	033546	037 13 0 00 000001 		PNTHWF			;SHOW IT
  3286	033547	037 00 0 00 030242 		PCRL			;<CRLF>
  3287	033550	262 17 0 00 000000 		GET	0		;RESTORE AC0
  3288	033551	200 17 0 00 034005 		MOVE	P,MUOSVP	;RESTORE P
  3289	033552	254 00 0 00 033641 		JRST	.GODDT		;GO DIE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 33
DSKEBM	MAC	10-Oct-78 10:37		SUPPORT ROUTINES                                                                   SEQ 0102

  3290
  3291					S^;*********************************************************************^
  3292					;*PMAPRT - DOES USER/EXEC CACHEABLE/UNCACHEABLE VIRTUAL TO PHYS MAPPING.
  3293					;*
  3294					;*	ENTER WITH A=PHYS PAGE NUMBER (11 BITS, 0-3777)
  3295					;*		   B=VIRTUAL PAGE NUMBER (9 BITS, 0-777)
  3296					;*		   C=CACHEABLE/UNCACHEABLE (0=UNCACHEABLE)
  3297					;*		   D=USER/EXEC  (0=EXEC)
  3298
  3299	033553	332 00 0 00 034014 	PMAPRT:	SKIPE	PMFLG		;ENTERED THIS ROUTINE WITHOUT EXITING?
  3300						FATALE<BAD EXIT FROM PMAPRT> ^;YES, LOSE
  3301					 JSP 0,[ JRST FATALP
  3302	033554	265 00 0 00 037602 			ASCIZ\BAD EXIT FROM PMAPRT\]
  3303	033555	476 00 0 00 034014 		SETOM	PMFLG		;NOTE WE ENTERED IT
  3304	033556	202 04 0 00 034017 		MOVEM	D,PMDTMP	;SAVE D TEMP
  3305	033557	202 03 0 00 034016 		MOVEM	C,PMCTMP	;SAVE C TEMP
  3306	033560	202 02 0 00 034015 		MOVEM	B,PMBTMP	;SAVE B TEMP
  3307	033561	303 02 0 00 000777 		CAILE	B,777		;LEGAL VIRTUAL PAGE NUMBER?
  3308						FATALE<INVALID VIRTUAL PAGE NUMBER>^ JSP 0,[ JRST FATALP
  3309	033562	265 00 0 00 037610 			ASCIZ\INVALID VIRTUAL PAGE NUMBER\]^
  3310	033563	551 04 0 00 500000 		HRRZI	D,500000	;MAPPING BITS (ACCESS,WRITEABLE)
  3311	033564	332 00 0 00 000003 		SKIPE	C		;IS PAGE SUPPOSED TO BE CACHEABLE?
  3312	033565	660 04 0 00 020000 		TRO	D,20000		;YES, ADD CACHEABLE BIT
  3313	033566	303 01 0 00 003777 		CAILE	A,3777		;VALID PHYSICAL PAGE NUMBER?
  3314						FATALE<INVALID PHYSICAL PAGE NUMBER>^ JSP 0,[ JRST FATALP
  3315	033567	265 00 0 00 037617 			ASCIZ\INVALID PHYSICAL PAGE NUMBER\]^
  3316	033570	434 04 0 00 000001 		OR	D,A		;PUT PHYS PAGE NUMBER IN TEMPLATE
  3317	033571	336 00 0 00 034017 		SKIPN	PMDTMP		;SKIP IF USER MAPPING
  3318	033572	254 00 0 00 033575 		JRST	EMAP		;ELSE SETUP FOR EXEC MAPPING
  3319	033573	201 03 0 00 036000 		MOVEI	C,UPT+0-<0/2>	;PUT ENTRIES AT START OF UPT
  3320	033574	254 00 0 00 033606 		JRST	MPMADD		;GO MAKE PAGE MAP ADDRESS
  3321
  3322	033575	305 02 0 00 000400 	EMAP:	CAIGE	B,400		;IS PAGE 400-777?
  3323	033576	254 00 0 00 033601 		JRST	EMAP2		;NO
  3324	033577	201 03 0 00 000000 		MOVEI	C,EPT+200-<400/2> ;SETUP BASE ADDR
  3325	033600	254 00 0 00 033606 		JRST	MPMADD		;GO MAKE PAGE MAP ADDR
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 34
DSKEBM	MAC	10-Oct-78 10:37		SUPPORT ROUTINES                                                                   SEQ 0103

  3326
  3327					;HERE IF PAGE IS 0-377
  3328
  3329	033601	305 02 0 00 000340 	EMAP2:	CAIGE	B,340		;IS PAGE 340-377?
  3330	033602	254 00 0 00 033605 		JRST	EMAP3		;NO
  3331	033603	201 03 0 00 036220 		MOVEI	C,UPT+400-<340/2> ;Y, SETUP BASE ADDR
  3332	033604	254 00 0 00 033606 		JRST MPMADD		;GO MAKE PAGE MAP ADDR
  3333
  3334					;HERE IF PAGE IS 0-337
  3335
  3336	033605	201 03 0 00 000600 	EMAP3:	MOVEI	C,EPT+600-<0/2>	;VIRTUAL PAGE=0-337, SETUP BASE ADDR
  3337
  3338					;HERE TO MAKE PAGE MAP ADDR
  3339
  3340	033606	242 02 0 00 777777 	MPMADD:	LSH	B,-1		;GET VIRT PAGE NUMBER/2
  3341	033607	270 03 0 00 000002 		ADD	C,B		;GET FINAL INDEX INTO EPT/UPT
  3342	033610	200 02 0 00 034015 		MOVE	B,PMBTMP	;RESTORE VIRTUAL ADDRESS
  3343	033611	602 02 0 00 000001 		TRNE	B,1		;SKIP IF EVEN ADDRESS
  3344	033612	254 00 0 00 033615 		JRST	ODDADD		;NO, ODD ADDR
  3345	033613	506 04 0 03 000000 		HRLM	D,(C)		;EVEN, SET LH OF PAGE TABLE LOC
  3346	033614	254 00 0 00 033616 		JRST	.+2		;SKIP ODD ENTRY
  3347	033615	542 04 0 03 000000 	ODDADD:	HRRM	D,(C)		;ODD, SET RH OF PAGE TABLE LOC
  3348	033616	200 03 0 00 034016 		MOVE	C,PMCTMP	;RESTORE C
  3349	033617	200 04 0 00 034017 		MOVE	D,PMDTMP	;RESTORE D
  3350	033620	402 00 0 00 034014 		SETZM	PMFLG		;NOTE WE EXITED THIS ROUTINE
  3351	033621	263 17 0 00 000000 		RTN			;DONE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 35
DSKEBM	MAC	10-Oct-78 10:37		SUPPORT ROUTINES                                                                   SEQ 0104

  3352
  3353					S^;*********************************************************************^
  3354					;*FATALP - PRINT OUT PC AND MSG UPON FATAL ERROR
  3355
  3356	033622	701 04 0 00 000000 	FATALP:	WREBR	POFF		;INSURE PAGING IS OFF
  3357	033623	202 00 0 00 034007 		MOVEM	0,FATAL0	;SAVE PC+1  OF ERROR
  3358	033624	370 00 0 00 034007 		SOS	FATAL0		;MAKE IT PC OF ERROR
  3359	033625	202 01 0 00 034010 		MOVEM	1,FATAL1	;SAVE AC1 DURING PRINT OUT ROUTINE
  3360						PMSG<?^? FATAL ERROR @ PC >^
  3361	033626	037 02 0 00 037626 		PSIXM	[SIXBIT\?^? FATAL ERROR @ PC _\]^
  3362	033627	200 00 0 00 034007 		MOVE	0,FATAL0	;GET PC OF ERROR
  3363	033630	037 13 0 00 000001 		PNTHWF			;PRINT IT
  3364						PMSG<: >^
  3365	033631	037 02 0 00 037466 		PSIXM	[SIXBIT\: _\]^
  3366	033632	200 01 0 00 034007 		MOVE	1,FATAL0	;GET PC OF ERROR
  3367	033633	200 01 0 01 000000 		MOVE	1,(1)		;GET ADDR OF LITERAL
  3368	033634	201 00 0 01 000001 		MOVEI	0,1(1)		;GET ADDR OF ASCIZ STRING
  3369	033635	037 17 0 00 000001 		PNTALF			;PRINT THE STRING
  3370	033636	037 00 0 00 030242 		PCRL
  3371	033637	200 01 0 00 034010 		MOVE	1,FATAL1	;RESTORE AC1
  3372	033640	254 00 0 00 033641 		JRST	.GODDT		;GO OFF TO DDT TO DEBUG...
  3373
  3374					S^;*********************************************************************^
  3375					;*.GODDT - ROUTINE TO GO TO DDT ENTRY POINT
  3376
  3377	033641	701 04 0 00 000000 	.GODDT:	WREBR	POFF		;INSURE PAGING OFF
  3378	033642	332 00 0 00 010000 		SKIPE	10000		;SKIP IF DDT NOT LOADED
  3379	033643	254 00 0 00 010000 		JRST	10000		;ELSE GO TO IT
  3380						PMSGF<?^?DDT NOT LOADED?^>^
  3381	033644	037 04 0 00 037632 		PSIXMF	[SIXBIT\?^?DDT NOT LOADED?^_\]^
  3382	033645	037 14 0 00 000004 	DEAD:	ERRHLT			;STOP THE WORLD.
  3383	033646	254 00 0 00 033645 		JRST	DEAD		;CAN'T GET HERE
  3384
  3385					S^;*********************************************************************^
  3386					;*SETLOP - SETUP PAGE OF JFCLS FOR CACHE TIMING TEST
  3387
  3388	033647	205 01 0 00 255000 	SETLOP:	MOVSI	A,(JFCL)	;GET JFCL OPCODE
  3389	033650	202 01 0 00 035000 		MOVEM	A,TPAG		;INIT 1ST LOC IN PAGE
  3390	033651	200 01 0 00 037636 		MOVE	A,[TPAG,,TPAG+1] ;SETUP BLT PTR
  3391	033652	251 01 0 00 035776 		BLT	A,TPAG+776	;SET ALL BUT LAST LOC TO JFCL
  3392	033653	200 01 0 00 037637 		MOVE	A,[JRST (RETAC)] ;GET LAST INSTR
  3393	033654	202 01 0 00 035777 		MOVEM	A,TPAG+777	;SETUP LAST INSTR IN PAGE
  3394	033655	263 17 0 00 000000 		RTN			;FINISHED
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 36
DSKEBM	MAC	10-Oct-78 10:37		SUPPORT ROUTINES                                                                   SEQ 0105

  3395
  3396					S^;*********************************************************************^
  3397					;*PFH - PAGE FAIL HANDLER
  3398
  3399	033656	701 04 0 00 000000 	PFH:	WREBR	POFF		;INSURE PAGING OFF
  3400	033657	202 17 0 00 033776 		MOVEM	P,PFHSVP	;SAVE AC P DURING PAGE FAIL
  3401	033660	336 00 0 00 034006 		SKIPN	SAVFLG		;SEE IF VALID P IN SAVACS+P
  3402	033661	037 14 0 00 000004 		ERRHLT			;LOSE...NO STACK PTR
  3403	033662	200 17 0 00 034050 		MOVE	P,SAVACS+P	;GET GOOD STK PTR
  3404	033663	261 17 0 00 000000 		PUT	0		;SAVE AC0
  3405						PMSG<?^? PFW = >^
  3406	033664	037 02 0 00 037640 		PSIXM	[SIXBIT\?^? PFW = _\]^
  3407	033665	200 00 0 00 036500 		MOVE	0,UPT+LEUPFW	;GET PAGE FAIL WORD
  3408	033666	037 13 0 00 000001 		PNTHWF			;SHOW PFW
  3409						PMSG<, @ PC: >^
  3410	033667	037 02 0 00 037642 		PSIXM	[SIXBIT\, @ PC: _\]^
  3411	033670	200 00 0 00 036501 		MOVE	0,UPT+LPFWPC	;GET PC OF PAGE FAIL
  3412	033671	037 13 0 00 000001 		PNTHWF			;SHOW PC
  3413	033672	037 00 0 00 030242 		PCRL			;<CRLF>
  3414	033673	262 17 0 00 000000 		GET	0		;RESTORE AC0
  3415	033674	200 17 0 00 033776 		MOVE	P,PFHSVP	;RESTORE AC P AFTER PAGE FAIL HANDLING
  3416	033675	254 00 0 00 033641 		JRST	.GODDT		;GO TO DDT
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 37
DSKEBM	MAC	10-Oct-78 10:37		SUPPORT ROUTINES                                                                   SEQ 0106

  3417					S^;*********************************************************************^
  3418					;*SAVREG - SAVE ALL ACS IN AREA CALLED SAVACS...CALLED WITH JSR SAVREG
  3419
  3420	033676	000000	000000		SAVREG:	0			;FOR JSR RESULT
  3421	033677	332 00 0 00 034006 		SKIPE	SAVFLG		;SKIP IF SAVACS EMPTY
  3422						FATALE<ATTEMPT TO SAVREG TWICE>^ JSP 0,[ JRST FATALP
  3423	033700	265 00 0 00 037644 			ASCIZ\ATTEMPT TO SAVREG TWICE\]^
  3424	033701	202 17 0 00 034050 		MOVEM	17,SAVACS+17	;SAVE AC 17
  3425	033702	201 17 0 00 034031 		MOVEI	17,SAVACS	;SETUP BLT PTR = 0,,SAVACS
  3426	033703	251 17 0 00 034047 		BLT	17,SAVACS+16	;SAVE 0=>16 
  3427	033704	200 17 0 00 034050 		MOVE	17,SAVACS+17	;RESTORE AC 17
  3428	033705	476 00 0 00 034006 		SETOM	SAVFLG		;NOTE SAVACS FULL
  3429	033706	254 00 1 00 033676 		JRST	@SAVREG		;RETURN TO CALLER
  3430
  3431					S^;*********************************************************************^
  3432					;*RESREG - RESTORE ALL ACS FROM AREA CALLED SAVACS, CALL WITH JSR RESREG
  3433
  3434	033707	000000	000000		RESREG:	0			;FOR JSR RESULT
  3435	033710	336 00 0 00 034006 		SKIPN	SAVFLG		;SKIP IF SAVACS FULL
  3436						FATALE<ATTEMPT TO RESTORE GARBAGE FROM SAVACS>^ JSP 0,[ JRST FATALP
  3437	033711	265 00 0 00 037652 			ASCIZ\ATTEMPT TO RESTORE GARBAGE FROM SAVACS\]^
  3438	033712	515 17 0 00 034031 		HRLZI	17,SAVACS	;SETUP BLT PTR = SAVACS,,0
  3439	033713	251 17 0 00 000017 		BLT	17,17		;RESTORE ALL 17 ACS
  3440	033714	402 00 0 00 034006 		SETZM	SAVFLG		;NOTE SAVACS EMPTY
  3441	033715	254 00 1 00 033707 		JRST	@RESREG		;RETURN TO CALLER
  3442
  3443					S^;*********************************************************************^
  3444					;*XRSREG - RESTORE REGS WITHOUT CLEARING FLAG
  3445
  3446	033716	000000	000000		XRSREG:	0			;FOR JSR RESULT
  3447	033717	515 17 0 00 034031 		HRLZI	17,SAVACS	;SETUP BLT PTR = SAVACS,,0
  3448	033720	251 17 0 00 000017 		BLT	17,17		;RESTORE ALL 17 ACS
  3449	033721	254 00 1 00 033716 		JRST	@XRSREG		;RETURN TO CALLER
  3450
  3451					S^;*********************************************************************^
  3452					;*SETPAG - SETUP VIRTUAL PAGES FROM 0 TO END: TO MAP TO PHYSICAL
  3453
  3454	033722	205 05 0 00 777740 	SETPAG:	MOVSI	E,-<END_-^D9>	;SETUP AOBJN PTR
  3455	033723	403 03 0 00 000004 		SETZB	C,D		;EXEC, UNCACHEABLE
  3456	033724	550 01 0 00 000005 	SPLOOP:	HRRZ	A,E		;GET PHYSICAL PAGE NUMBER
  3457	033725	550 02 0 00 000005 		HRRZ	B,E		;GET VIRTUAL PAGE NUMBER
  3458	033726	260 17 0 00 033553 		GO	PMAPRT		;MAP IN THE PAGE
  3459	033727	253 05 0 00 033724 		AOBJN	E,SPLOOP	;TILL DONE
  3460	033730	263 17 0 00 000000 		RTN			;ALL DONE
  3461
  3462					;.CODE ENDS HERE
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 38
DSKEBM	MAC	10-Oct-78 10:37		.STORAGE                                                                           SEQ 0107

  3463					SUBTTL .STORAGE
  3464						SALL
  3465	033731	000000	000326		EDITNO:	TEDITN+MEDITN		;ASSEMBLE EDIT NUMBER INTO PGM
  3466	033732	104 123 113 105 102 	PGMNAM:	ASCIZ\DSKEB - KS10 CACHE DIAGNOSTIC
  3467	033733	040 055 040 113 123 
  3468	033734	061 060 040 103 101 
  3469	033735	103 110 105 040 104 
  3470	033736	111 101 107 116 117 
  3471	033737	123 124 111 103 015 
  3472	033740	012 000 000 000 000 	\
  3473					S
  3474					;*TSTTAB - THIS TABLE CONTAINS THE ADDRESSES OF THE TESTS TO BE RUN
  3475
  3476	033741	254 00 0 00 030651 	TSTTAB:	JRST	ACCHK		;ACCUMULATOR CHECK
  3477	033742	254 00 0 00 032012 		JRST	PHYCHK		;PHYSICAL NON-CACHE CHECK
  3478	033743	254 00 0 00 032072 		JRST	CACCHK		;CHECK 'PAGE CACHEABLE' SIGNAL
  3479	033744	254 00 0 00 032317 		JRST	LOALIT		;LO ORDER ADDR LINE INTERFERENCE TEST
  3480	033745	254 00 0 00 033232 		JRST	HOALIT		;HI ORDER ADDR LINE INTERFERENCE TEST
  3481	033746	254 00 0 00 033354 		JRST	UECHEK		;USER TO EXEC TRANSITION
  3482	033747	254 00 0 00 033440 		JRST	EUCHEK		;EXEC TO USER TRANSITION
  3483			000007		NTESTS==.-TSTTAB		;NUMBER OF TESTS TO RUN
  3484
  3485	033750	000400	000400		HOALTB:	400,,400		;TABLE OF ADDRESS FOR INTERFERENCE CHK
  3486	033751	000400	000401			400,,401		;CHECK B23-26
  3487	033752	000400	000402			400,,402
  3488	033753	000400	000404			400,,404
  3489	033754	000400	000410			400,,410
  3490	033755	000417	000417			417,,417
  3491	033756	000417	000416			417,,416
  3492	033757	000417	000415			417,,415
  3493	033760	000417	000413			417,,413
  3494	033761	000417	000407			417,,407
  3495	033762	000400	000420			400,,420		;CHECK B19-B22
  3496	033763	000400	000440			400,,440
  3497	033764	000400	000500			400,,500
  3498	033765	000400	000600			400,,600
  3499	033766	000760	000760			760,,760
  3500	033767	000760	000740			760,,740
  3501	033770	000760	000720			760,,720
  3502	033771	000760	000660			760,,660
  3503	033772	000760	000560			760,,560
  3504	033773	000460	000460			460,,460		;CHECK B18
  3505	033774	000460	000060			460,,60
  3506			000025		NPASSS==.-HOALTB
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 39
DSKEBM	MAC	10-Oct-78 10:37		.STORAGE                                                                           SEQ 0108

  3507
  3508					;*CONSTANTS
  3509	033775	000000	010000		MTHLD:	THLD			;THRESHOLD FOR CACHED/UNCACHED
  3510					;SINGLE WORD STORAGE LOCATIONS ARE DEFINED HERE
  3511	034006					DS	<PFHSVP,PFHSV0,SBDATA,SVADDR,SVERR,SVTSTI,%ERRFL,MUOSVP>
  3512	034016					DS	<SAVFLG,FATAL0,FATAL1,SAVTIM,CURPAS,SAVETN,PMFLG,PMBTMP>
  3513	034026					DS	<PMCTMP,PMDTMP,CACPAS,P2OR4,P3OR4,SVARG,GOODP,SVERDT>
  3514	034031					DS	<ERFLG,DEADAC,BADAC>
  3515					;MULTIPLE WORD STORAGE BLOCKS ARE DEFINED HERE
  3516	034051					DB	SAVACS,20	;SAVES ACS DURING AC PGMS
  3517	034053					DB	TIM1,2		;A DOUBLE WORD LOC
  3518	034055					DB	TIM2,2		;ANOTHER DBL WD LOC
  3519	035000					.PGE	TPAG		;MAIN TEST PAGE
  3520			000000		EPT==0
  3521			000000		EPTPN==0			;PUT EPT AT PAGE 0
  3522	036000					.PGE	UPT		;USER PROCESS TABLE
  3523	037000					.PGE	LITS		;MAKE A PAGE FOR THE LITERALS
  3524						XLIST
  3525					IFNDEF	$LPAPER,<LIST>
  3526	037000					LIT
  3527	037000	44 63 53 45 42 00 
  3528	037001	15 00 53 63 21 20 
  3529	037002	00 43 41 43 50 45 
  3530	037003	00 44 51 41 47 56 
  3531	037004	57 63 64 51 43 00 
  3532	037005	66 45 62 63 51 57 
  3533	037006	56 00 20 14 21 77 
  3534	037007	500000	000036
  3535	037010	000000	036000
  3536	037011	400000	000000
  3537	037012	000000	000000
  3538	037013	000000	000001
  3539	037014	000000	000002
  3540	037015	000000	000003
  3541	037016	000000	000004
  3542	037017	000000	000005
  3543	037020	000000	000006
  3544	037021	000000	000007
  3545	037022	000000	000010
  3546	037023	000000	000011
  3547	037024	000000	000012
  3548	037025	000000	000013
  3549	037026	000000	000014
  3550	037027	000000	000015
  3551	037030	000000	000016
  3552	037031	000000	000017
  3553	037032	401000	000000
  3554	037033	000001	000000
  3555	037034	000001	000001
  3556	037035	000001	000002
  3557	037036	000001	000003
  3558	037037	000001	000004
  3559	037040	000001	000005
  3560	037041	000001	000006
  3561	037042	000001	000007
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0109

  3562	037043	000001	000010
  3563	037044	000001	000011
  3564	037045	000001	000012
  3565	037046	000001	000013
  3566	037047	000001	000014
  3567	037050	000001	000015
  3568	037051	000001	000016
  3569	037052	000001	000017
  3570	037053	402000	000000
  3571	037054	000002	000000
  3572	037055	000002	000001
  3573	037056	000002	000002
  3574	037057	000002	000003
  3575	037060	000002	000004
  3576	037061	000002	000005
  3577	037062	000002	000006
  3578	037063	000002	000007
  3579	037064	000002	000010
  3580	037065	000002	000011
  3581	037066	000002	000012
  3582	037067	000002	000013
  3583	037070	000002	000014
  3584	037071	000002	000015
  3585	037072	000002	000016
  3586	037073	000002	000017
  3587	037074	403000	000000
  3588	037075	000003	000000
  3589	037076	000003	000001
  3590	037077	000003	000002
  3591	037100	000003	000003
  3592	037101	000003	000004
  3593	037102	000003	000005
  3594	037103	000003	000006
  3595	037104	000003	000007
  3596	037105	000003	000010
  3597	037106	000003	000011
  3598	037107	000003	000012
  3599	037110	000003	000013
  3600	037111	000003	000014
  3601	037112	000003	000015
  3602	037113	000003	000016
  3603	037114	000003	000017
  3604	037115	404000	000000
  3605	037116	000004	000000
  3606	037117	000004	000001
  3607	037120	000004	000002
  3608	037121	000004	000003
  3609	037122	000004	000004
  3610	037123	000004	000005
  3611	037124	000004	000006
  3612	037125	000004	000007
  3613	037126	000004	000010
  3614	037127	000004	000011
  3615	037130	000004	000012
  3616	037131	000004	000013
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1-1
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0110

  3617	037132	000004	000014
  3618	037133	000004	000015
  3619	037134	000004	000016
  3620	037135	000004	000017
  3621	037136	405000	000000
  3622	037137	000005	000000
  3623	037140	000005	000001
  3624	037141	000005	000002
  3625	037142	000005	000003
  3626	037143	000005	000004
  3627	037144	000005	000005
  3628	037145	000005	000006
  3629	037146	000005	000007
  3630	037147	000005	000010
  3631	037150	000005	000011
  3632	037151	000005	000012
  3633	037152	000005	000013
  3634	037153	000005	000014
  3635	037154	000005	000015
  3636	037155	000005	000016
  3637	037156	000005	000017
  3638	037157	406000	000000
  3639	037160	000006	000000
  3640	037161	000006	000001
  3641	037162	000006	000002
  3642	037163	000006	000003
  3643	037164	000006	000004
  3644	037165	000006	000005
  3645	037166	000006	000006
  3646	037167	000006	000007
  3647	037170	000006	000010
  3648	037171	000006	000011
  3649	037172	000006	000012
  3650	037173	000006	000013
  3651	037174	000006	000014
  3652	037175	000006	000015
  3653	037176	000006	000016
  3654	037177	000006	000017
  3655	037200	407000	000000
  3656	037201	000007	000000
  3657	037202	000007	000001
  3658	037203	000007	000002
  3659	037204	000007	000003
  3660	037205	000007	000004
  3661	037206	000007	000005
  3662	037207	000007	000006
  3663	037210	000007	000007
  3664	037211	000007	000010
  3665	037212	000007	000011
  3666	037213	000007	000012
  3667	037214	000007	000013
  3668	037215	000007	000014
  3669	037216	000007	000015
  3670	037217	000007	000016
  3671	037220	000007	000017
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1-2
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0111

  3672	037221	777777	777777
  3673	037222	777761	000000
  3674	037223	41 43 43 65 55 65 
  3675	037224	54 41 64 57 62 00 
  3676	037225	64 45 63 64 77 00 
  3677	037226	77 00 00 00 00 00 
  3678	037227	037000	037223
  3679	037230	000000	000000
  3680	037231	037226	031755
  3681	037232	76 45 62 62 57 62 
  3682	037233	00 57 43 43 65 62 
  3683	037234	45 44 00 51 56 00 
  3684	037235	41 43 00 42 54 57 
  3685	037236	43 53 00 77 00 00 
  3686	037237	33 03 0 00 034027 
  3687	037240	254 00 0 00 033622 
  3688	037241	125 116 105 130 120 
  3689	037242	105 103 124 105 104 
  3690	037243	040 105 122 122 117 
  3691	037244	122 040 117 103 103 
  3692	037245	125 122 105 104 040 
  3693	037246	111 116 040 101 103 
  3694	037247	103 125 115 125 114 
  3695	037250	101 124 117 122 040 
  3696	037251	124 105 123 124 000 
  3697	037252	14 00 41 43 00 77 
  3698	037253	26 04 0 01 777777 
  3699	037254	14 00 41 44 44 62 
  3700	037255	45 63 63 51 56 47 
  3701	037256	00 46 41 51 54 45 
  3702	037257	44 16 76 77 00 00 
  3703	037260	14 00 41 43 00 21 
  3704	037261	27 00 46 41 51 54 
  3705	037262	45 44 00 64 57 00 
  3706	037263	63 45 64 00 64 57 
  3707	037264	00 15 21 76 77 00 
  3708	037265	14 00 41 43 00 21 
  3709	037266	27 00 46 41 51 54 
  3710	037267	45 44 00 64 57 00 
  3711	037270	63 45 64 00 64 57 
  3712	037271	00 20 76 77 00 00 
  3713	037272	14 00 41 43 00 21 
  3714	037273	27 00 46 41 51 54 
  3715	037274	45 44 00 64 57 00 
  3716	037275	63 45 64 00 64 57 
  3717	037276	00 15 21 27 14 14 
  3718	037277	20 76 77 00 00 00 
  3719	037300	14 00 41 43 00 63 
  3720	037301	50 57 65 54 44 00 
  3721	037302	50 41 66 45 00 42 
  3722	037303	45 45 56 00 72 45 
  3723	037304	62 57 14 00 42 65 
  3724	037305	64 00 67 41 63 56 
  3725	037306	07 64 76 77 00 00 
  3726	037307	254 00 0 00 033622 
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1-3
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0112

  3727	037310	125 116 122 105 101 
  3728	037311	114 111 123 124 111 
  3729	037312	103 040 122 104 124 
  3730	037313	111 115 105 040 122 
  3731	037314	105 123 125 114 124 
  3732	037315	000 000 000 000 000 
  3733	037316	60 50 71 63 51 43 
  3734	037317	41 54 00 45 70 45 
  3735	037320	43 00 43 41 43 50 
  3736	037321	45 00 43 50 45 43 
  3737	037322	53 77 00 00 00 00 
  3738	037323	43 41 43 50 45 00 
  3739	037324	50 51 64 63 00 67 
  3740	037325	50 45 56 00 55 51 
  3741	037326	63 63 45 63 00 45 
  3742	037327	70 60 45 43 64 45 
  3743	037330	44 77 00 00 00 00 
  3744	037331	037000	037316
  3745	037332	000000	000002
  3746	037333	037323	000000
  3747	037334	036430	036431
  3748	037335	032120	032115
  3749	037336	60 54 45 41 63 45 
  3750	037337	00 51 56 63 65 62 
  3751	037340	45 00 64 50 41 64 
  3752	037341	00 64 50 45 00 43 
  3753	037342	41 43 50 45 00 51 
  3754	037343	63 00 45 56 41 42 
  3755	037344	54 45 44 00 46 62 
  3756	037345	57 55 00 64 50 45 
  3757	037346	00 30 20 30 20 76 
  3758	037347	77 00 00 00 00 00 
  3759	037350	402100	000000
  3760	037351	65 63 45 62 17 45 
  3761	037352	70 45 43 00 43 41 
  3762	037353	43 50 45 41 42 54 
  3763	037354	45 17 65 56 43 41 
  3764	037355	43 50 45 41 42 54 
  3765	037356	45 00 64 45 63 64 
  3766	037357	77 00 00 00 00 00 
  3767	037360	45 70 45 43 00 65 
  3768	037361	56 43 41 43 50 45 
  3769	037362	44 00 60 41 47 45 
  3770	037363	00 47 57 64 00 43 
  3771	037364	41 43 50 45 00 50 
  3772	037365	51 64 63 77 00 00 
  3773	037366	037000	037351
  3774	037367	000000	034025
  3775	037370	037360	000000
  3776	037371	032133	032130
  3777	037372	65 63 45 62 00 65 
  3778	037373	56 43 41 43 50 45 
  3779	037374	44 00 60 41 47 45 
  3780	037375	00 47 57 64 00 43 
  3781	037376	41 43 50 45 00 50 
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1-4
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0113

  3782	037377	51 64 63 77 00 00 
  3783	037400	037000	037351
  3784	037401	000000	034025
  3785	037402	037372	000000
  3786	037403	032146	032143
  3787	037404	45 70 45 43 00 43 
  3788	037405	41 43 50 45 44 00 
  3789	037406	60 41 47 45 00 47 
  3790	037407	57 64 00 43 41 43 
  3791	037410	50 45 00 55 51 63 
  3792	037411	63 45 63 77 00 00 
  3793	037412	037000	037351
  3794	037413	000000	034025
  3795	037414	037404	032113
  3796	037415	032161	032156
  3797	037416	65 63 45 62 00 43 
  3798	037417	41 43 50 45 44 00 
  3799	037420	60 41 47 45 00 47 
  3800	037421	57 64 00 43 41 43 
  3801	037422	50 45 00 55 51 63 
  3802	037423	63 45 63 77 00 00 
  3803	037424	037000	037351
  3804	037425	000000	034025
  3805	037426	037416	032113
  3806	037427	505 00 0 00 010000 
  3807	037430	301 02 0 00 010000 
  3808	037431	032304	000016
  3809	037432	032312	000013
  3810	037433	032306	000014
  3811	037434	403100	000000
  3812	037435	404200	000000
  3813	037436	405100	000000
  3814	037437	406200	000000
  3815	037440	43 41 43 50 45 00 
  3816	037441	67 62 51 64 45 00 
  3817	037442	64 50 62 57 65 47 
  3818	037443	50 00 64 45 63 64 
  3819	037444	77 00 00 00 00 00 
  3820	037445	57 56 45 63 00 56 
  3821	037446	57 64 00 67 62 51 
  3822	037447	64 64 45 56 00 64 
  3823	037450	57 00 55 45 55 57 
  3824	037451	62 71 77 00 00 00 
  3825	037452	037000	037440
  3826	037453	037221	000001
  3827	037454	037445	032404
  3828	037455	67 57 62 44 00 41 
  3829	037456	44 44 62 45 63 63 
  3830	037457	00 57 46 00 67 57 
  3831	037460	62 44 00 64 50 41 
  3832	037461	64 00 44 51 44 56 
  3833	037462	07 64 00 47 45 64 
  3834	037463	00 67 62 51 64 64 
  3835	037464	45 56 00 64 57 00 
  3836	037465	55 45 55 57 62 71 
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1-5
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0114

  3837	037466	32 00 77 00 00 00 
  3838	037467	54 57 00 57 62 44 
  3839	037470	45 62 00 41 44 44 
  3840	037471	62 45 63 63 00 54 
  3841	037472	51 56 45 00 51 56 
  3842	037473	64 45 62 46 45 62 
  3843	037474	45 56 43 45 00 64 
  3844	037475	45 63 64 77 00 00 
  3845	037476	62 45 41 44 00 46 
  3846	037477	41 51 54 45 44 77 
  3847	037500	037000	037467
  3848	037501	034000	034002
  3849	037502	037476	033044
  3850	037503	67 62 51 64 45 00 
  3851	037504	46 41 51 54 45 44 
  3852	037505	77 00 00 00 00 00 
  3853	037506	037000	037467
  3854	037507	034000	034002
  3855	037510	037503	033044
  3856	037511	41 44 44 62 45 63 
  3857	037512	63 00 67 51 64 50 
  3858	037513	51 56 00 60 41 47 
  3859	037514	45 32 00 77 00 00 
  3860	037515	50 51 00 57 62 44 
  3861	037516	45 62 00 41 44 44 
  3862	037517	62 45 63 63 00 54 
  3863	037520	51 56 45 00 51 56 
  3864	037521	64 45 62 46 45 62 
  3865	037522	45 56 43 45 00 64 
  3866	037523	45 63 64 77 00 00 
  3867	037524	43 41 43 50 45 00 
  3868	037525	55 51 63 63 45 63 
  3869	037526	00 67 50 45 56 00 
  3870	037527	50 51 64 63 00 45 
  3871	037530	70 60 45 43 64 45 
  3872	037531	44 77 00 00 00 00 
  3873	037532	037000	037515
  3874	037533	000000	000001
  3875	037534	037524	033315
  3876	037535	037000	037515
  3877	037536	000000	000001
  3878	037537	037323	033315
  3879	037540	51 56 51 64 51 41 
  3880	037541	54 00 60 41 47 45 
  3881	037542	00 35 00 77 00 00 
  3882	037543	14 00 63 45 43 57 
  3883	037544	56 44 41 62 71 00 
  3884	037545	60 41 47 45 00 35 
  3885	037546	00 77 00 00 00 00 
  3886	037547	14 00 56 63 45 43 
  3887	037550	17 52 46 43 54 00 
  3888	037551	35 00 77 00 00 00 
  3889	037552	65 63 45 62 00 64 
  3890	037553	57 00 45 70 45 43 
  3891	037554	00 43 50 45 43 53 
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1-6
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0115

  3892	037555	77 00 00 00 00 00 
  3893	037556	64 51 55 45 00 57 
  3894	037557	66 45 62 00 64 50 
  3895	037560	62 45 63 50 57 54 
  3896	037561	44 77 00 00 00 00 
  3897	037562	037000	037552
  3898	037563	000000	000001
  3899	037564	037556	000000
  3900	037565	45 70 45 43 00 64 
  3901	037566	57 00 65 63 45 62 
  3902	037567	00 43 50 45 43 53 
  3903	037570	77 00 00 00 00 00 
  3904	037571	037000	037565
  3905	037572	000000	000001
  3906	037573	037556	000000
  3907	037574	37 76 37 00 65 56 
  3908	037575	45 70 60 45 43 64 
  3909	037576	45 44 00 55 65 65 
  3910	037577	57 32 00 77 00 00 
  3911	037600	14 00 41 64 00 60 
  3912	037601	43 32 00 77 00 00 
  3913	037602	254 00 0 00 033622 
  3914	037603	102 101 104 040 105 
  3915	037604	130 111 124 040 106 
  3916	037605	122 117 115 040 120 
  3917	037606	115 101 120 122 124 
  3918	037607	000 000 000 000 000 
  3919	037610	254 00 0 00 033622 
  3920	037611	111 116 126 101 114 
  3921	037612	111 104 040 126 111 
  3922	037613	122 124 125 101 114 
  3923	037614	040 120 101 107 105 
  3924	037615	040 116 125 115 102 
  3925	037616	105 122 000 000 000 
  3926	037617	254 00 0 00 033622 
  3927	037620	111 116 126 101 114 
  3928	037621	111 104 040 120 110 
  3929	037622	131 123 111 103 101 
  3930	037623	114 040 120 101 107 
  3931	037624	105 040 116 125 115 
  3932	037625	102 105 122 000 000 
  3933	037626	37 76 37 00 46 41 
  3934	037627	64 41 54 00 45 62 
  3935	037630	62 57 62 00 40 00 
  3936	037631	60 43 00 77 00 00 
  3937	037632	37 76 37 44 44 64 
  3938	037633	00 56 57 64 00 54 
  3939	037634	57 41 44 45 44 37 
  3940	037635	76 77 00 00 00 00 
  3941	037636	035000	035001
  3942	037637	254 00 0 02 000000 
  3943	037640	37 76 37 00 60 46 
  3944	037641	67 00 35 00 77 00 
  3945	037642	14 00 40 00 60 43 
  3946	037643	32 00 77 00 00 00 
DSKEB - KS10 CACHE DIAGNOSTIC VERSION 0,1				.	MACRO %53(1020) 14:31 17-Oct-78 Page 1-7
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0116

  3947	037644	254 00 0 00 033622 
  3948	037645	101 124 124 105 115 
  3949	037646	120 124 040 124 117 
  3950	037647	040 123 101 126 122 
  3951	037650	105 107 040 124 127 
  3952	037651	111 103 105 000 000 
  3953	037652	254 00 0 00 033622 
  3954	037653	101 124 124 105 115 
  3955	037654	120 124 040 124 117 
  3956	037655	040 122 105 123 124 
  3957	037656	117 122 105 040 107 
  3958	037657	101 122 102 101 107 
  3959	037660	105 040 106 122 117 
  3960	037661	115 040 123 101 126 
  3961	037662	101 103 123 000 000 
  3962						LIST
  3963	037764	000000	000000		ENDSLD:	0
  3964
  3965					IFDEF	DEBUG,<
  3966	037765				PATCH:	BLOCK DEBUG		;PATCHING AREA
  3967					>
  3968
  3969					;PROGRAM VARIABLES
  3970	040165					VAR
  3971
  3972					IFDEF	PGMEND,<
  3973	040165	000000	000000		END:	0
  3974			030000			END	BEGIN	>

NO ERRORS DETECTED

PROGRAM BREAK IS 000000
ABSOLUTE BREAK IS 040166
CPU TIME USED 00:18.323

64P CORE USED

A	    49#	  2246	  2262	  2263	  2328	  2329	  2330	  2331	  2419	  2426	  2427	  2429	  2603	  2608
	  2645	  2646	  2649	  2686	  2688	  2693	  2696	  2697	  2985	  2986	  2987	  3006	  3007	  3008     SEQ 0117
	  3011	  3014	  3015	  3020	  3026	  3107	  3108	  3109	  3110	  3111	  3127	  3128	  3130	  3195
	  3196	  3197	  3198	  3199	  3215	  3216	  3218	  3264	  3265	  3266	  3267	  3268	  3269	  3313
	  3316	  3388	  3389	  3390	  3391	  3392	  3393	  3456
ABORT	   106#
AC1ERR	  1539	  1542	  1545	  1548	  1551	  1554	  1557	  1560	  1563	  1566	  1569	  1572	  1575	  1578
	  1581	  1584	  1591	  1594	  1597	  1600	  1603	  1606	  1609	  1612	  1615	  1618	  1621	  1624
	  1627	  1630	  1633	  1636	  1643	  1646	  1649	  1652	  1655	  1658	  1661	  1664	  1667	  1670
	  1673	  1676	  1679	  1682	  1685	  1688	  1695	  1698	  1701	  1704	  1707	  1710	  1713	  1716
	  1719	  1722	  1725	  1728	  1731	  1734	  1737	  1740	  1747	  1750	  1753	  1756	  1759	  1762
	  1765	  1768	  1771	  1774	  1777	  1780	  1783	  1786	  1789	  1792	  1799	  1802	  1805	  1808
	  1811	  1814	  1817	  1820	  1823	  1826	  1829	  1832	  1835	  1838	  1841	  1844	  1851	  1854
	  1857	  1860	  1863	  1866	  1869	  1872	  1875	  1878	  1881	  1884	  1887	  1890	  1893	  1896
	  1903	  1906	  1909	  1912	  1915	  1918	  1921	  1924	  1927	  1930	  1933	  1936	  1939	  1942
	  1945	  1948	  2136#	  2195
AC2ERR	  1977	  1997	  2017	  2037	  2057	  2077	  2097	  2117	  2153#
AC3ERR	  1980	  2000	  2020	  2040	  2060	  2080	  2100	  2120	  2159#
AC4ERR	  1983	  2003	  2023	  2043	  2063	  2083	  2103	  2123	  2165#
AC5ERR	  1991	  2011	  2031	  2051	  2071	  2091	  2111	  2131	  2171#
ACBLK0	  2616	  2741#
ACBLK1	  2619	  2786#
ACBLK2	  2622	  2817#
ACBLK3	  2625	  2846#
ACBLK4	  2628	  2878#
ACBLK5	  2631	  2908#
ACBLK6	  2634	  2934#
ACCHK	  1221#	  3476
ACEND	  2134	  2142#	  2157	  2163	  2169	  2176
ACPNT	  2146	  2178#
ACX	  1237#	  1240	  1241	  1241#	  1242	  1243	  1243#	  1244	  1245	  1245#	  1246	  1247	  1247#	  1248
	  1249	  1249#	  1250	  1251	  1251#	  1252	  1253	  1253#	  1254	  1255	  1255#	  1256	  1257	  1257#
	  1258	  1259	  1259#	  1260	  1261	  1261#	  1262	  1263	  1263#	  1264	  1265	  1265#	  1266	  1267
	  1267#	  1268	  1269	  1269#	  1270	  1271	  1271#	  1273#	  1276	  1277	  1277#	  1278	  1279	  1279#
	  1280	  1281	  1281#	  1282	  1283	  1283#	  1284	  1285	  1285#	  1286	  1287	  1287#	  1288	  1289
	  1289#	  1290	  1291	  1291#	  1292	  1293	  1293#	  1294	  1295	  1295#	  1296	  1297	  1297#	  1298
	  1299	  1299#	  1300	  1301	  1301#	  1302	  1303	  1303#	  1304	  1305	  1305#	  1306	  1307	  1307#
	  1309#	  1312	  1313	  1313#	  1314	  1315	  1315#	  1316	  1317	  1317#	  1318	  1319	  1319#	  1320
	  1321	  1321#	  1322	  1323	  1323#	  1324	  1325	  1325#	  1326	  1327	  1327#	  1328	  1329	  1329#
	  1330	  1331	  1331#	  1332	  1333	  1333#	  1334	  1335	  1335#	  1336	  1337	  1337#	  1338	  1339
	  1339#	  1340	  1341	  1341#	  1342	  1343	  1343#	  1345#	  1348	  1349	  1349#	  1350	  1351	  1351#
	  1352	  1353	  1353#	  1354	  1355	  1355#	  1356	  1357	  1357#	  1358	  1359	  1359#	  1360	  1361
	  1361#	  1362	  1363	  1363#	  1364	  1365	  1365#	  1366	  1367	  1367#	  1368	  1369	  1369#	  1370
	  1371	  1371#	  1372	  1373	  1373#	  1374	  1375	  1375#	  1376	  1377	  1377#	  1378	  1379	  1379#
	  1381#	  1384	  1385	  1385#	  1386	  1387	  1387#	  1388	  1389	  1389#	  1390	  1391	  1391#	  1392
	  1393	  1393#	  1394	  1395	  1395#	  1396	  1397	  1397#	  1398	  1399	  1399#	  1400	  1401	  1401#
	  1402	  1403	  1403#	  1404	  1405	  1405#	  1406	  1407	  1407#	  1408	  1409	  1409#	  1410	  1411
	  1411#	  1412	  1413	  1413#	  1414	  1415	  1415#	  1417#	  1420	  1421	  1421#	  1422	  1423	  1423#
	  1424	  1425	  1425#	  1426	  1427	  1427#	  1428	  1429	  1429#	  1430	  1431	  1431#	  1432	  1433
	  1433#	  1434	  1435	  1435#	  1436	  1437	  1437#	  1438	  1439	  1439#	  1440	  1441	  1441#	  1442
	  1443	  1443#	  1444	  1445	  1445#	  1446	  1447	  1447#	  1448	  1449	  1449#	  1450	  1451	  1451#
	  1453#	  1456	  1457	  1457#	  1458	  1459	  1459#	  1460	  1461	  1461#	  1462	  1463	  1463#	  1464
	  1465	  1465#	  1466	  1467	  1467#	  1468	  1469	  1469#	  1470	  1471	  1471#	  1472	  1473	  1473#
	  1474	  1475	  1475#	  1476	  1477	  1477#	  1478	  1479	  1479#	  1480	  1481	  1481#	  1482	  1483
	  1483#	  1484	  1485	  1485#	  1486	  1487	  1487#	  1489#	  1492	  1493	  1493#	  1494	  1495	  1495#    SEQ 0118
	  1496	  1497	  1497#	  1498	  1499	  1499#	  1500	  1501	  1501#	  1502	  1503	  1503#	  1504	  1505
	  1505#	  1506	  1507	  1507#	  1508	  1509	  1509#	  1510	  1511	  1511#	  1512	  1513	  1513#	  1514
	  1515	  1515#	  1516	  1517	  1517#	  1518	  1519	  1519#	  1520	  1521	  1521#	  1522	  1523	  1523#
	  1535#	  1538	  1539	  1540	  1540#	  1541	  1542	  1543	  1543#	  1544	  1545	  1546	  1546#	  1547
	  1548	  1549	  1549#	  1550	  1551	  1552	  1552#	  1553	  1554	  1555	  1555#	  1556	  1557	  1558
	  1558#	  1559	  1560	  1561	  1561#	  1562	  1563	  1564	  1564#	  1565	  1566	  1567	  1567#	  1568
	  1569	  1570	  1570#	  1571	  1572	  1573	  1573#	  1574	  1575	  1576	  1576#	  1577	  1578	  1579
	  1579#	  1580	  1581	  1582	  1582#	  1583	  1584	  1585	  1585#	  1587#	  1590	  1591	  1592	  1592#
	  1593	  1594	  1595	  1595#	  1596	  1597	  1598	  1598#	  1599	  1600	  1601	  1601#	  1602	  1603
	  1604	  1604#	  1605	  1606	  1607	  1607#	  1608	  1609	  1610	  1610#	  1611	  1612	  1613	  1613#
	  1614	  1615	  1616	  1616#	  1617	  1618	  1619	  1619#	  1620	  1621	  1622	  1622#	  1623	  1624
	  1625	  1625#	  1626	  1627	  1628	  1628#	  1629	  1630	  1631	  1631#	  1632	  1633	  1634	  1634#
	  1635	  1636	  1637	  1637#	  1639#	  1642	  1643	  1644	  1644#	  1645	  1646	  1647	  1647#	  1648
	  1649	  1650	  1650#	  1651	  1652	  1653	  1653#	  1654	  1655	  1656	  1656#	  1657	  1658	  1659
	  1659#	  1660	  1661	  1662	  1662#	  1663	  1664	  1665	  1665#	  1666	  1667	  1668	  1668#	  1669
	  1670	  1671	  1671#	  1672	  1673	  1674	  1674#	  1675	  1676	  1677	  1677#	  1678	  1679	  1680
	  1680#	  1681	  1682	  1683	  1683#	  1684	  1685	  1686	  1686#	  1687	  1688	  1689	  1689#	  1691#
	  1694	  1695	  1696	  1696#	  1697	  1698	  1699	  1699#	  1700	  1701	  1702	  1702#	  1703	  1704
	  1705	  1705#	  1706	  1707	  1708	  1708#	  1709	  1710	  1711	  1711#	  1712	  1713	  1714	  1714#
	  1715	  1716	  1717	  1717#	  1718	  1719	  1720	  1720#	  1721	  1722	  1723	  1723#	  1724	  1725
	  1726	  1726#	  1727	  1728	  1729	  1729#	  1730	  1731	  1732	  1732#	  1733	  1734	  1735	  1735#
	  1736	  1737	  1738	  1738#	  1739	  1740	  1741	  1741#	  1743#	  1746	  1747	  1748	  1748#	  1749
	  1750	  1751	  1751#	  1752	  1753	  1754	  1754#	  1755	  1756	  1757	  1757#	  1758	  1759	  1760
	  1760#	  1761	  1762	  1763	  1763#	  1764	  1765	  1766	  1766#	  1767	  1768	  1769	  1769#	  1770
	  1771	  1772	  1772#	  1773	  1774	  1775	  1775#	  1776	  1777	  1778	  1778#	  1779	  1780	  1781
	  1781#	  1782	  1783	  1784	  1784#	  1785	  1786	  1787	  1787#	  1788	  1789	  1790	  1790#	  1791
	  1792	  1793	  1793#	  1795#	  1798	  1799	  1800	  1800#	  1801	  1802	  1803	  1803#	  1804	  1805
	  1806	  1806#	  1807	  1808	  1809	  1809#	  1810	  1811	  1812	  1812#	  1813	  1814	  1815	  1815#
	  1816	  1817	  1818	  1818#	  1819	  1820	  1821	  1821#	  1822	  1823	  1824	  1824#	  1825	  1826
	  1827	  1827#	  1828	  1829	  1830	  1830#	  1831	  1832	  1833	  1833#	  1834	  1835	  1836	  1836#
	  1837	  1838	  1839	  1839#	  1840	  1841	  1842	  1842#	  1843	  1844	  1845	  1845#	  1847#	  1850
	  1851	  1852	  1852#	  1853	  1854	  1855	  1855#	  1856	  1857	  1858	  1858#	  1859	  1860	  1861
	  1861#	  1862	  1863	  1864	  1864#	  1865	  1866	  1867	  1867#	  1868	  1869	  1870	  1870#	  1871
	  1872	  1873	  1873#	  1874	  1875	  1876	  1876#	  1877	  1878	  1879	  1879#	  1880	  1881	  1882
	  1882#	  1883	  1884	  1885	  1885#	  1886	  1887	  1888	  1888#	  1889	  1890	  1891	  1891#	  1892
	  1893	  1894	  1894#	  1895	  1896	  1897	  1897#	  1899#	  1902	  1903	  1904	  1904#	  1905	  1906
	  1907	  1907#	  1908	  1909	  1910	  1910#	  1911	  1912	  1913	  1913#	  1914	  1915	  1916	  1916#
	  1917	  1918	  1919	  1919#	  1920	  1921	  1922	  1922#	  1923	  1924	  1925	  1925#	  1926	  1927
	  1928	  1928#	  1929	  1930	  1931	  1931#	  1932	  1933	  1934	  1934#	  1935	  1936	  1937	  1937#
	  1938	  1939	  1940	  1940#	  1941	  1942	  1943	  1943#	  1944	  1945	  1946	  1946#	  1947	  1948
	  1949	  1949#
ADDR	  2683	  2790#	  2792	  2794	  2795	  2797	  2798	  2799	  2820	  2824	  2881	  2910	  2914	  2915
	  2918
ALTMGO	   916#
AROV	   385#
AROVTP	   723#	   736#
AROVU	   451#
AST	  1031#
ATSIN	  1032#
B	    50#	  2247	  2266	  2269	  2420	  2604	  2609	  2644	  2645	  2652	  2660	  2988	  2992	  3011
	  3012	  3017	  3023	  3112	  3200	  3306	  3307	  3322	  3329	  3340	  3341	  3342	  3343	  3457
B0GO	  2615	  2636	  2642	  2738#
B0GO2	  2739#	  2745                                                                                                     SEQ 0119
B0R0	  2743#
B0R1	  2744#	  2754	  2755
B0R13	  2754#	  2755
B0R16	  2638	  2757#
B0R17	  2756	  2758#
B0R2	  2745#	  2749
B0R3	  2746#	  2750
B0R4	  2747#
B0R5	  2748#	  2752
B0R6	  2749#	  2757
B1GO	  2618	  2785#	  2863
B1R10	  2678	  2796#	  2860
B1R11	  2797#	  2889	  2916
B1R12	  2798#	  2919
B1R13	  2799#	  2917
B1R17	  2801	  2803#	  2820
B1R3	  2791#	  2802
B1R4	  2792#	  2800
B1R5	  2671	  2793#	  2857
B1R6	  2794#	  2831
B2GO	  2621	  2758	  2803	  2816#	  2885	  2943
B2R0	  2819#	  2829	  2830
B2R1	  2820#	  2822	  2831
B2R12	  2826	  2829#
B2R15	  2828	  2832#
B2R17	  2825	  2827	  2832	  2834#
B2R2	  2821#	  2824	  2940
B2R3	  2822#	  2829
B2R4	  2823#	  2826	  2886	  2939
B2R5	  2824#	  2833
B3GO	  2624	  2825	  2845#
B3R0	  2848#	  2856	  2858	  2859
B3R1	  2849#	  2853	  2857
B3R10	  2856#	  2862
B3R17	  2861	  2863#
B3R2	  2850#	  2854	  2860
B3R5	  2853#	  2856
B3R6	  2854#	  2859
B4GO	  2627	  2827	  2876#
B4GO2	  2877#	  2884
B4R1	  2881#	  2888	  2889	  2890	  2921
B4R13	  2891#	  2922
B4R17	  2885	  2891	  2893	  2895#	  2912
B4R3	  2883#	  2886
B4R4	  2884#	  2887
B4R5	  2885#	  2894
B5GO	  2630	  2891	  2906#
B5GO2	  2907#	  2913
B5R0	  2910#	  2916	  2921
B5R1	  2911#	  2918
B5R17	  2923	  2925#
B5R2	  2912#	  2922
B5R3	  2913#	  2920                                                                                                     SEQ 0120
B5R4	  2914#	  2917
B5R5	  2915#	  2919
B5R6	  2916#	  2924
B6GO	  2633	  2925	  2933#
B6R0	  2936#	  2939
B6R1	  2937#	  2940
B6R13	  2939#	  2942
B6R17	  2941	  2943#
B7GO	  2740#	  2912
B7R0	  2947#
B7R16	  2750	  2948#
B7R17	  2752	  2949#
BADAC	  2173	  2216	  3514#	  3514
BEGEND	   912#	  1181
BEGERR	  1183#	  1224	  2241	  2321	  2598	  2978	  3100	  3188
BEGIN	    29	    30	    31	    32	    34	    35	    36	    37	    38	    39	   321	   322	   843#	  3974
BEGIN1	   859#	   913
BELL	  1035#
BIS	   389#
BX	  1229#	  1238	  1240	  1242	  1244	  1246	  1248	  1250	  1252	  1254	  1256	  1258	  1260	  1262
	  1264	  1266	  1268	  1270	  1272	  1272#	  1274	  1276	  1278	  1280	  1282	  1284	  1286	  1288
	  1290	  1292	  1294	  1296	  1298	  1300	  1302	  1304	  1306	  1308	  1308#	  1310	  1312	  1314
	  1316	  1318	  1320	  1322	  1324	  1326	  1328	  1330	  1332	  1334	  1336	  1338	  1340	  1342
	  1344	  1344#	  1346	  1348	  1350	  1352	  1354	  1356	  1358	  1360	  1362	  1364	  1366	  1368
	  1370	  1372	  1374	  1376	  1378	  1380	  1380#	  1382	  1384	  1386	  1388	  1390	  1392	  1394
	  1396	  1398	  1400	  1402	  1404	  1406	  1408	  1410	  1412	  1414	  1416	  1416#	  1418	  1420
	  1422	  1424	  1426	  1428	  1430	  1432	  1434	  1436	  1438	  1440	  1442	  1444	  1446	  1448
	  1450	  1452	  1452#	  1454	  1456	  1458	  1460	  1462	  1464	  1466	  1468	  1470	  1472	  1474
	  1476	  1478	  1480	  1482	  1484	  1486	  1488	  1488#	  1490	  1492	  1494	  1496	  1498	  1500
	  1502	  1504	  1506	  1508	  1510	  1512	  1514	  1516	  1518	  1520	  1522	  1524	  1524#	  1526#
	  1536	  1538	  1541	  1544	  1547	  1550	  1553	  1556	  1559	  1562	  1565	  1568	  1571	  1574
	  1577	  1580	  1583	  1586	  1586#	  1588	  1590	  1593	  1596	  1599	  1602	  1605	  1608	  1611
	  1614	  1617	  1620	  1623	  1626	  1629	  1632	  1635	  1638	  1638#	  1640	  1642	  1645	  1648
	  1651	  1654	  1657	  1660	  1663	  1666	  1669	  1672	  1675	  1678	  1681	  1684	  1687	  1690
	  1690#	  1692	  1694	  1697	  1700	  1703	  1706	  1709	  1712	  1715	  1718	  1721	  1724	  1727
	  1730	  1733	  1736	  1739	  1742	  1742#	  1744	  1746	  1749	  1752	  1755	  1758	  1761	  1764
	  1767	  1770	  1773	  1776	  1779	  1782	  1785	  1788	  1791	  1794	  1794#	  1796	  1798	  1801
	  1804	  1807	  1810	  1813	  1816	  1819	  1822	  1825	  1828	  1831	  1834	  1837	  1840	  1843
	  1846	  1846#	  1848	  1850	  1853	  1856	  1859	  1862	  1865	  1868	  1871	  1874	  1877	  1880
	  1883	  1886	  1889	  1892	  1895	  1898	  1898#	  1900	  1902	  1905	  1908	  1911	  1914	  1917
	  1920	  1923	  1926	  1929	  1932	  1935	  1938	  1941	  1944	  1947	  1950	  1950#	  1952#	  1974
	  1993	  1993#	  1994	  2013	  2013#	  2014	  2033	  2033#	  2034	  2053	  2053#	  2054	  2073	  2073#
	  2074	  2093	  2093#	  2094	  2113	  2113#	  2114	  2133	  2133#
C	    51#	  2248	  2332	  2354	  2370	  2386	  2605	  2610	  2989	  3013	  3017	  3023	  3113	  3201
	  3305	  3311	  3319	  3324	  3331	  3336	  3341	  3345	  3347	  3348	  3455
CAC2AD	  2440	  2524#	  2527	  2528	  2535	  2536
CAC2CU	  2442	  2533#
CAC2EX	  2529	  2534	  2537	  2539#
CAC2HI	  2525#	  2530	  2532
CAC2LO	  2347	  2363	  2379	  2395	  2442	  2526#	  2531	  2533
CAC2ST	  2527#	  2538
CAC2UE	  2440	  2535#
CAC6IN	  2571#	  2572                                                                                                     SEQ 0121
CAC6ND	  2573	  2575#
CAC6ST	  2572#	  2574
CACCHK	  2318#	  3478
CACER1	  2334	  2345#
CACER2	  2356	  2361#
CACER3	  2372	  2377#
CACER4	  2388	  2393#
CACGO	  2435	  2488#	  2494	  2499	  2536
CACOK1	  2334	  2348#
CACOK2	  2356	  2364#
CACOK3	  2372	  2380#
CACOK4	  2388	  2396#
CACP1A	  2487	  2491#	  2571
CACP1B	  2491	  2492#
CACP1C	  2493	  2495#
CACP1D	  2495	  2496#
CACP1E	  2498	  2500#
CACPAS	  2325	  2426	  3513#	  3513
CACPG1	  2432	  2483#
CACPG2	  2437	  2522#
CACPG3	  2444	  2448	  2545#
CACPG5	  2455	  2556#
CACPG6	  2452	  2569#
CACR0	  2485#	  2492	  2497
CACSET	  2335	  2357	  2373	  2389	  2417#
CACST1	  2458	  2558#
CACUB1	  2559	  2561#
CCA	   467#
CHAIN	   126#
CHKMSG	  2339#	  2384	  2400
CHNOFF	   481#
CHNON	   480#
CLKU	   449#
CLOCKF	   898#
CLOOP1	  2420#	  2422
CNT	  2788#	  2791	  2800
CNTLC	   915#
CNTRP	   748#
COMMA	  1024#
CONSW	   899#
CPOPJ	   919#
CPOPJ1	   917#
CRETAC	  2328	  2487#	  2491	  2493	  2495	  2496	  2497	  2530	  2531	  2572
CRLF	   256	   257	  1019#
CRLF2	   260	   261	  1021#
CRY0	   386#
CRY1	   387#
CSHFLG	  1078#
CSHMEM	  1079#
CTRP	   749#
CURPAS	  2986	  2988	  2992	  2997	  2998	  3012	  3013	  3041	  3045	  3512#	  3512
CYCL60	  1072#
D	    52#	  2249	  2251	  2333	  2355	  2371	  2387	  2606	  2611	  2990	  3114	  3116	  3202	  3204     SEQ 0122
	  3304	  3310	  3312	  3316	  3345	  3347	  3349	  3455
DCK	   395#
DDTLNK	   140#	   857
DDTSRT	   857#
DEAD	  3382#	  3383
DEADAC	  2138	  2153	  2159	  2165	  2171	  2180	  3514#	  3514
DEBUG	    26#	  3965	  3966
DECVER	     3#	     5	    19	   878	  1161
DF22F	   983#
DIAGMN	   846#
DING	   112#
DOLLAR	  1038#
DSKUPD	   883
E	    53#	  2418	  2420	  2422	  3454	  3456	  3457	  3459
EBIT0	   813#
EBIT1	   814#
EBIT10	   823#
EBIT11	   824#
EBIT12	   825#
EBIT13	   826#
EBIT14	   827#
EBIT15	   828#
EBIT2	   815#
EBIT3	   816#
EBIT4	   817#
EBIT5	   818#
EBIT6	   819#
EBIT7	   820#
EBIT8	   821#
EBIT9	   822#
EDITNO	  3465#
ELOALT	  2705#	  2718
ELOOP	  1220#	  2147	  2237#	  2270	  2317#	  2353	  2369	  2385	  2401	  2594#	  2650	  2704	  2717	  2983#
	  3021	  3027	  3096#	  3131	  3184#	  3219
EMAP	  3318	  3322#
EMAP2	  3323	  3329#
EMAP3	  3330	  3336#
END	  3454	  3973#
ENDERR	  1194#	  2150	  2274	  2407	  2708	  3033	  3136	  3224
ENDFIX	  1158#
ENDSLD	  3963#
EOTLP	  2645#	  2652
EPT	  1170	  3280	  3284	  3324	  3336	  3520#
EPTPN	    94	    95	  3521#
ERFLG	  1225	  2137	  2141	  2144	  2156	  2162	  2168	  2175	  2182	  2242	  2322	  2345	  2349	  2361
	  2365	  2377	  2381	  2393	  2397	  2457	  2599	  2637	  2682	  2700	  2713	  2979	  3101	  3189
	  3514#	  3514
ERJTB	  2183	  2185#
ERMORE	   932#
EROLD	   332
ERR	  2684	  2688	  2693	  2789#	  2792	  2793	  2795	  2796	  2849	  2850
ERRPC	   903#	  2651	  3028
ERRR	  2669#	  2669                                                                                                     SEQ 0123
ERRRPN	  2608	  2609	  2669#
ERRTLS	   904#
ERSTOP	   115#
EUCHEK	  3185#	  3482
EUDONE	  3210#	  3258
EUGO	  3247#	  3253
EUMUUO	  3195	  3257#
EUPGM	  3206	  3241#
EUR0	  3243#	  3252	  3255
EUR3	  3210	  3246#	  3254	  3255
EURET	  3245#	  3251
EURET1	  3245	  3251#
EURET2	  3251	  3254#
EUST	  3208	  3249#
EXCASB	    23#	   881
EXIOT	   391#
F	    54#
FATAL0	  3357	  3358	  3362	  3366	  3512#	  3512
FATAL1	  3359	  3371	  3512#	  3512
FATALP	  1183	  1194	  2185	  2264	  3009	  3125	  3213	  3301	  3308	  3314	  3356#	  3422	  3436
FOV	   388#
FOVU	   450#
FRDLNK	   138#
FSELNK	   137#
FXU	   394#
GOODP	  1163	  1167	  3513#	  3513
HOAL1	  3001	  3074#
HOAL2	  3069	  3076#
HOAL3	  3076	  3079#
HOALDN	  3003#	  3081
HOALIT	  2975#	  3480
HOALNX	  3022	  3028#
HOALOP	  2985#	  3029
HOALPG	  2995	  3065#
HOALTB	  2985	  3485#	  3506
HOALUN	  3016	  3023#
HYPEN	  1029#
INHCSH	   123#
INHPAG	   120#
IOCLR	   472#
ITERAT	    27#	   876
ITRCH1	   936#
ITRCNT	   876#
JOB41	   409#
JOBAPR	   417#
JOBCNI	   418#
JOBDDT	   411#
JOBFF	   415#
JOBOPC	   420#
JOBREL	   410#
JOBREN	   416#
JOBSA	   414#
JOBSYM	   412#                                                                                                            SEQ 0124
JOBTPC	   419#
JOBUSY	   413#
JOBUUO	   408#
JOBVER	   421#
KAIFLG	   893#
KLFLG	   894#
KNTRP	   744#	  2329	  2330	  3108	  3109	  3196	  3197	  3266	  3267
KS10	    25#
KTRP	   745#	  2330	  3109	  3197	  3267
LACLK	   516#
LACLKE	   549#
LAPRAL	   540#
LAPRP1	   523#	   565#
LAPRP2	   522#	   564#
LAPRP3	   521#	   563#
LAPRP4	   520#	   562#
LAPRP5	   519#	   561#
LAPRP6	   518#	   560#
LAPRP7	   517#	   559#
LCHNOF	   622#
LCHNON	   621#
LCNTXT	   742#
LCNXER	   530#
LCPAER	   534#
LCPSFT	   538#
LCPWRF	   526#
LDATAF	   573#	   588#
LDLNK	   139#	   846	   848
LDNXER	   529#
LDPAER	   533#
LDPSFT	   537#
LDPWRF	   525#
LEBXMH	   757#
LEBXML	   758#
LENXER	   528#
LEPAER	   532#
LEPSFT	   536#
LEPWRF	   524#
LEUPFW	   753#	  3407
LEXCMP	   576#	   591#
LFLGCL	   510#
LFLGDS	   509#
LFLGEN	   508#
LFLGST	   511#
LFP	  1033#
LINSTF	   572#	   587#
LINT	   566#
LIOCLR	   507#
LITS	  3523#	  3523
LITSPN	  3523#
LLACBL	   669#	   684#
LLDUSB	   670#	   685#
LMBXMH	   759#                                                                                                            SEQ 0125
LMBXML	   760#
LNXMEN	   546#
LNXMER	   513#	   556#
LOALIT	  2595#	  3479
LOOPER	   114#
LPAREN	   547#
LPARER	   514#	   557#
LPFWPC	   754#	  3411
LPGFTR	   755#	  1173
LPICH1	   625#	   658#
LPICH2	   626#	   659#
LPICH3	   627#	   660#
LPICH4	   628#	   661#
LPICH5	   629#	   662#
LPICH6	   630#	   663#
LPICH7	   631#	   664#
LPICHA	   632#
LPICLR	   619#
LPIIP1	   650#
LPIIP2	   651#
LPIIP3	   652#
LPIIP4	   653#
LPIIP5	   654#
LPIIP6	   655#
LPIIP7	   656#
LPIOFF	   623#
LPION	   624#	   657#
LPRCH1	   638#
LPRCH2	   639#
LPRCH3	   640#
LPRCH4	   641#
LPRCH5	   642#
LPRCH6	   643#
LPRCH7	   644#
LPRFMH	   729#
LPRFML	   730#
LPSFT	   515#
LPSFTE	   548#	   558#
LPWRFE	   545#
LPWRFL	   512#	   555#
LREQSE	   620#
LRQCLR	   618#
LSECMO	   708#
LSMODE	   699#
LSNXER	   531#
LSPAER	   535#
LSPSFT	   539#
LSPWRF	   527#
LTBASH	   727#
LTBASL	   728#
LTRPAE	   709#
LTRPEN	    94	   700#
LUSCMP	   575#	   590#                                                                                                    SEQ 0126
LUUO	   401#
LUUO1	   963	   964
LUUO10	   963	   968
LUUO11	   963	   968
LUUO12	   963	   969
LUUO13	   963	   969
LUUO14	   963	   970
LUUO15	   963	   970
LUUO16	   963	   971
LUUO17	   963	   971
LUUO2	   963	   965
LUUO20	   963	   972
LUUO21	   963	   972
LUUO22	   963	   973
LUUO23	   963	   973
LUUO24	   963	   974
LUUO25	   963	   974
LUUO26	   963	   975
LUUO27	   963	   975
LUUO3	   963	   965
LUUO30	   963	   976
LUUO31	   963	   976
LUUO32	   963	   977
LUUO33	   963	   977
LUUO4	   963	   966
LUUO5	   963	   966
LUUO6	   963	   967
LUUO7	   963	   967
LUUOI	   402#
LWRITE	   574#	   589#
MAPNEW	   984#
MARGIN	   906#
MCNVER	     2#	     5	    19	   878	  1161
MEDITN	  1161#	  3465
MEMLOW	   986#
MEMMAP	   884
MEMSIZ	   987#
MEMTOT	   985#
MINUS	  1028#
MLOOP	  1177#	  1180
MODDVC	   122#
MODDVL	   321	   321#	   879
MODDVU	   322	   322#	   880
MODLNK	   141#	   843
MONCTL	   896#
MONFLG	   895#
MONTEN	   897#
MONTYP	  1110#
MPMADD	  3320	  3325	  3332	  3340#
MPVU	   446#
MTHLD	  2266	  3015	  3128	  3216	  3509#
MUOSVP	  3273	  3288	  3511#	  3511
MUUO	   740#	  3280                                                                                                     SEQ 0127
MUUOH	  3265	  3272#
MUUOPC	   741#	  3284
MUUOST	  1174	  2261	  2403	  3132	  3220	  3264#
NOPNT	   110#
NOTAOJ	  2689	  2693#
NOTSOJ	  2653	  2692	  2694	  2698#
NPASSS	  2982	  3506#
NTESTS	  1176	  3483#
NXMU	   447#
ODDADD	  3344	  3347#
OPRSEL	   124#
OPTIME	   998#
P	   167	   168	   169	   170	   377#	   918	  1163	  1167	  3273	  3276	  3288	  3400	  3403	  3415
P1ERR	  2187	  2193#
P2ERR	  2188	  2202#
P2OR4	  2424	  2428	  2434	  2439	  3513#	  3513
P3ERR	  2189	  2206#
P3OR4	  2425	  2430	  2441	  3513#	  3513
P4ERR	  2190	  2210#
P5ERR	  2191	  2214#
PAG	   465#
PALERS	   116#
PAREA1	    40#	   874
PAREA2	    41#	   875
PAREA3	    42#	   872
PAREA4	    43#	   873
PAREA5	    44#	   885
PAREA6	    45#	   886
PAREA7	   885#
PAREA8	   886#
PARU	   448#
PASCNT	   900#	  1164
PATCH	  3966#
PDISF	   995#
PDLOVU	   445#
PDOVTP	   724#	   737#
PERIOD	  1025#
PFH	  1172	  3399#
PFHSV0	  3511#	  3511
PFHSVP	  3400	  3415	  3511#	  3511
PFSTRT	   852#
PGMEND	    24#	  3972
PGMNAM	   877	  3466#
PHYC1	  2256	  2292#
PHYC2	  2288	  2294#
PHYC3	  2294	  2297#
PHYC4	  2258#	  2298
PHYCHK	  2238#	  3477
PHYPGM	  2254	  2284#
PHYR0	  2258	  2286#	  2295
PHYR3	  2258	  2259	  2289#	  2297
PICHN1	   495#
PICHN2	   496#                                                                                                            SEQ 0128
PICHN3	   497#
PICHN4	   498#
PICHN5	   499#
PICHN6	   500#
PICHN7	   501#
PICHNA	   502#
PICLR	   478#
PIOFF	   482#
PION	   483#	   489#
PLIST	  1064#	  1064
PLISTE	  1064	  1066#
PLISTS	  1065#
PLUS	  1030#
PMAPRT	  2250	  2252	  2421	  2607	  2612	  2991	  2993	  3115	  3117	  3203	  3205	  3299#	  3458
PMBTMP	  3306	  3342	  3512#	  3512
PMCTMP	  3305	  3348	  3513#	  3513
PMDTMP	  3304	  3317	  3349	  3513#	  3513
PMFLG	  1169	  3299	  3303	  3350	  3512#	  3512
PNTENB	   994#
PNTEXT	   873#
PNTFLG	   993#
PNTINH	   996#
PNTLPT	   111#
PNTNAM	   872#
PNTRP	   750#
PNTSPC	   997#
POFF	    95#	  1165	  2292	  2547	  2669	  2676	  2746	  3080	  3169	  3257	  3272	  3356	  3377	  3399
PON	    94#	  2558	  2753	  3074	  3161	  3249
PTRP	   751#	  2331	  3110	  3198	  3268
PVPAGI	  1091#
QUEST	  1036#
RADIX	  1039#
RADLSC	  1041#
RADLSP	  1040#
RANDBS	   874#
RDT1W1	  2997	  2999	  3003	  3070#	  3075	  3077
RDT1W2	  3071#
RDT2W1	  2998	  3000	  3004	  3072#	  3078	  3079
RDT2W2	  3073#
REENTR	   854#
RELIAB	   118#
REPT	   378#
REPT1	   379#
REPTU	   952#
REQSET	   479#
RESREG	  2143	  2260	  2348	  2643	  2685	  3005	  3123	  3211	  3434#	  3441
RESRT1	   929#
RESRT2	   930#
RETAC	  2294	  3069#	  3076	  3392
RETURN	   861#
RSTART	   107#
RTP	  1034#
RUNFLG	   901#                                                                                                            SEQ 0129
SADR1	    29#	   850
SADR10	    38#	   866
SADR11	    39#	   867
SADR2	    30#	   852
SADR3	    31#	   854
SADR4	    32#
SADR5	    33#	   915
SADR6	    34#	   916
SADR7	    35#	   863
SADR8	    36#	   864
SADR9	    37#	   865
SAVACS	  3276	  3403	  3424	  3425	  3426	  3427	  3438	  3447	  3516#	  3516
SAVETN	  1177	  1179	  1222	  2148	  2239	  2272	  2319	  2405	  2596	  2706	  2976	  3031	  3098	  3134
	  3186	  3222	  3512#	  3512
SAVFLG	  1168	  3274	  3401	  3421	  3428	  3435	  3440	  3512#	  3512
SAVREG	  1228	  2253	  2327	  2614	  2994	  3106	  3194	  3420#	  3429
SAVTIM	  3014	  3049	  3512#	  3512
SBDATA	  2687	  2691	  2697	  2703	  2716	  3511#	  3511
SBINIT	   180	   860#
SCOPE	   953#
SETLOP	  2245	  2326	  2613	  2984	  3105	  3193	  3388#
SETPAG	  2602	  3104	  3192	  3454#
SFSTRT	   850#
SLASH	  1037#
SM10	  1141#
SNTRP	   746#
SPACE	  1026#
SPLOOP	  3456#	  3459
SRTDDT	   856#
START	   844	  1162#
START1	   863#
START2	   864#
START3	   865#
START4	   866#
START5	   867#
STARTA	   859	  1165#
STRP	   747#
SUBLNK	   142#	   860
SVADDR	  2683	  2724	  3511#	  3511
SVARG	  2417	  2446	  2450	  3513#	  3513
SVERDT	  2347	  2352	  2363	  2368	  2379	  2384	  2395	  2400	  3513#	  3513
SVERR	  2684	  2690	  2695	  2703	  2716	  3511#	  3511
SVTSTI	  2671	  2678	  2686	  3511#	  3511
SWPTAB	  1147#
SWTEXR	   875#
SYSEXR	   848#
T	  1161#	  2146	  2269	  2352	  2368	  2384	  2400	  2649	  2703	  2716	  3020	  3026	  3130	  3218
TAB	  1027#
TEDITN	     5#	  3465
TESTPC	   902#	  1227	  2244	  2324	  2601	  2981	  3103	  3191
THLD	    93#	  2442	  2533	  3509
TICKS	   905#
TIM1	  2259	  2262	  3003	  3007	  3122	  3124	  3127	  3210	  3212	  3215	  3517#	  3517                     SEQ 0130
TIM2	  3004	  3006	  3518#	  3518
TN	    55#	  1176	  1177	  1178	  1179	  1180	  1222	  1223	  2148	  2149	  2239	  2240	  2272	  2273
	  2319	  2320	  2405	  2406	  2596	  2597	  2706	  2707	  2976	  2977	  2982	  2985	  3029	  3031
	  3032	  3098	  3099	  3134	  3135	  3186	  3187	  3222	  3223
TN0	   392#
TN1	   393#
TOTALS	   108#
TPAG	  2293	  2296	  2645	  3159	  3166	  3247	  3250	  3389	  3390	  3391	  3393	  3519#	  3519
TPAGPN	  2246	  2247	  2419	  2603	  2987	  3111	  3112	  3199	  3200	  3519#
TRP3TP	   725#	   738#
TSTCNT	    77#	  1222	  1222#	  1223	  2149	  2239	  2239#	  2240	  2273	  2319	  2319#	  2320	  2406	  2596
	  2596#	  2597	  2707	  2976	  2976#	  2977	  3032	  3098	  3098#	  3099	  3135	  3186	  3186#	  3187
	  3223
TSTTAB	  1178	  3476#	  3483
TTNBRF	  1085#
TTYFIL	  1001#
TTYSPD	  1002#
TXTINH	   119#
UBAVEC	   721#
UECHEK	  3097#	  3481
UEDONE	  3122#	  3170
UEGO	  3159#	  3162
UEMUUO	  3107	  3165#
UEPGM	  3118	  3153#
UER0	  3155#	  3165	  3168
UER3	  3122	  3158#	  3167	  3168
UERET	  3157#	  3163
UERET1	  3157	  3163#
UERET2	  3163	  3167#
UEST	  3120	  3161#
UPT	  1170	  1171	  1173	  2329	  2330	  2331	  3108	  3109	  3110	  3196	  3197	  3198	  3266	  3267
	  3268	  3319	  3331	  3407	  3411	  3522#	  3522
UPTPN	    92	  3522#
USER	   892#
USERF	   390#	  2435	  2440	  3159	  3247
USRASB	   882
USRCRF	  1011#
USRLFF	  1010#
UUODIS	   964#
UUOEXT	   920#
UUORTN	   921#
UUOSKP	   918#
WRFAIL	  2699	  2713#
XRETAC	  2288#
XRSREG	  2364	  2380	  2396	  2402	  3446#	  3449
XWRUBR	    92#	  1166
$$MUUO	  1116#
$$OUTE	  1122#
$$TAX1	  1134#
$$TAX2	  1135#
$$TOGG	  1128#
$$UUO	  1105#
$ACC0	   943#                                                                                                            SEQ 0131
$BEND1	   913#
$BEND2	    33	   914#
$CHRIN	  1004#
$CRLF	  1006#
$DEVCH	   459#
$DSKUP	   883#
$DVOFF	  1000#
$EMODE	   881#
$FFF	  1008#
$IBUF	  1056#
$INEXT	  1058#
$INNM	  1057#
$ITRHL	   924#
$ITRX1	   925#
$LPAPE	  3525
$MMAP	   884#
$MODVL	   879#
$MODVU	   880#
$OBUF	  1047#
$ONETM	   907#
$OUTEX	  1049#
$OUTNM	  1048#
$PAPER	    22#	   370
$PARER	   931#
$PNAME	   877#
$PSHER	   935#
$PVER	   878#
$RSRTX	   927#
$RSRTY	   928#
$SPAG1	   947#
$START	   844#
$SVAPR	   945#
$SVPAG	   946#
$SVPI	   944#
$SVUPC	   950#
$SVUUO	   949#
$TABF	  1007#
$TTCHR	  1003#
$TWCNT	   999#
$TYPNB	  1005#
$UMODE	   882#
$UORTX	   922#
$USRHL	   926#
$UUOER	   923#	   964
$VTF	  1009#
%ACTFL	   956#
%ACTUL	   957#
%COREC	   955#
%CORFL	   954#
%DISCR	   958#
%EOT	  2642#	  2748
%ERHI1	  1097#
%ERHI2	  1098#                                                                                                            SEQ 0132
%ERHI3	  1099#
%ERR	  2672	  2682#
%ERR1	  2669#	  2793	  2849
%ERR2	  2676#	  2796	  2850
%ERR3	  2703	  2716	  2722#
%ERR4	  3020	  3026	  3038#
%ERRFL	  2670	  2677	  2698	  3511#	  3511
%ERRW	  2649	  2657#
.GODDT	  3289	  3372	  3377#	  3416
.JB41	   427#
.JBAPR	   435#
.JBCNI	   436#
.JBDDT	   429#
.JBFF	   433#
.JBOPC	   438#
.JBREL	   428#
.JBREN	   434#
.JBSA	   432#
.JBSYM	   430#
.JBTPC	   437#
.JBUSY	   431#
.JBUUO	   426#
.JBVER	   439#

APRID	   765#
BCIO	   801#                                                                                                            SEQ 0133
BCIOB	   807#
BEGTST	    78#	  1221	  2238	  2318	  2595	  2975	  3097	  3185
BSIO	   800#
BSIOB	   806#
CFLUSH	   292#
CINVAL	   291#
CLOKOP	   286#
CLRPT	   772#
CWRTBI	   293#
DB	    73#	  3516	  3517	  3518
DROPDV	   253#
DS	    71#	  3511	  3512	  3513	  3514
DSKEBM	     5#	  1161
DSKEBT	     5#	     5
ENDTST	    86#	  2148	  2271	  2404	  2705	  3030	  3133	  3221
ENDUUO	   299#	   912
EOPUUO	   300#	   914
ERLOOP	   340#	  2147	  2270	  2353	  2369	  2385	  2401	  2650	  2704	  2717	  3021	  3027	  3131	  3219
ERLP1	   341#
ERLP2	   342#
ERRHLT	   187#	  3275	  3382	  3402
ERROR	   349#	  2145	  2267	  2350	  2366	  2382	  2398	  2647	  2701	  2714	  3018	  3024	  3129	  3217
ERROR1	   360#
ERUUO	   339#	  2146	  2269	  2352	  2368	  2384	  2400	  2649	  2703	  2716	  3020	  3026	  3130	  3218
FATAL	   186#
FATALE	    75#	  2185	  2264	  3009	  3125	  3213	  3300	  3308	  3314	  3422	  3436
FRD36	   328#
FRD8	   329#
FREAD	   327#
FSELEC	   326#
GET	   170#	  2663	  3053	  3269	  3287	  3414
GO	   167#	  1174	  1178	  2245	  2250	  2252	  2261	  2326	  2403	  2421	  2602	  2607	  2612	  2613
	  2984	  2991	  2993	  3104	  3105	  3115	  3117	  3132	  3192	  3193	  3203	  3205	  3220	  3458
HALT	   172#	   933
JEN	   174#
JRSTF	   173#	  2494	  2499	  3162	  3253
MAPADR	   309#
MAPCNK	   310#
MAPMEM	   306#
MAPPNT	   312#
MAPSET	   311#
MEMSEG	   308#
MEMZRO	   307#
MODPCP	   319#
MODPCU	   318#
MTROP	   287#
PBELL	   262#
PCRL	   256#	  2662	  2727	  3054	  3286	  3370	  3413
PCRL2	   260#
PCRL2F	   261#
PCRLF	   257#
PFORCE	   264#
PGMINT	   180#	  1162                                                                                                     SEQ 0134
PJRST	   171#
PMSG	   266#	  2178	  2193	  2198	  2202	  2206	  2210	  2214	  2219	  2339	  2658	  2722	  3039	  3043
	  3047	  3360	  3364	  3405	  3409
PMSGF	   269#	  3278	  3282	  3380
PNT1	   222#
PNT11	   236#
PNT11F	   237#
PNT1F	   223#
PNT2	   224#
PNT2F	   225#
PNT3	   226#
PNT3F	   227#
PNT4	   228#
PNT4F	   229#
PNT5	   230#
PNT5F	   231#
PNT6	   232#
PNT6F	   233#
PNT7	   234#
PNT7F	   235#
PNTA	   208#
PNTADF	   239#
PNTADR	   238#
PNTAF	   209#
PNTAL	   210#
PNTALF	   211#	  3369
PNTCHF	   221#
PNTCHR	   220#
PNTCI	   218#
PNTCIF	   219#
PNTCW	   254#
PNTCWF	   255#
PNTDCF	   247#
PNTDEC	   246#	  3052
PNTDS	   248#
PNTDSF	   249#
PNTHW	   242#
PNTHWF	   243#	  3281	  3285	  3363	  3408	  3412
PNTMSF	   215#
PNTMSG	   214#
PNTNM	   250#
PNTOCF	   245#
PNTOCS	   244#	  2181	  2197	  2218	  2661	  2726	  3042	  3046
PNTOCT	   240#
PNTOTF	   241#
PNTSIX	   251#
PNTSXF	   252#
PSIXL	   212#
PSIXLF	   213#
PSIXM	   216#	  2179	  2194	  2199	  2203	  2207	  2211	  2215	  2220	  2340	  2659	  2723	  3040	  3044
	  3048	  3361	  3365	  3406	  3410
PSIXMF	   217#	  3279	  3283	  3381
PSP	   258#                                                                                                            SEQ 0135
PSPF	   259#
PUT	   169#	  2657	  3038	  3264	  3277	  3404
RDAPR	   767#
RDCSB	   778#
RDCSTM	   780#
RDEBR	   774#
RDHSB	   783#
RDINT	   782#
RDIO	   798#
RDIOB	   804#
RDPI	   769#
RDPUR	   779#
RDSPB	   777#
RDTIM	   781#
RDTIME	    60#	  2295	  2297	  2492	  2496	  3077	  3079	  3165	  3167	  3252	  3254
RDUBR	   771#	  2138	  2153	  2159	  2165	  2171
REPTUO	   343#
RTN	   168#	   920	  2151	  2200	  2204	  2208	  2212	  2221	  2275	  2341	  2408	  2664	  2709	  2728
	  3034	  3055	  3137	  3225	  3270	  3351	  3394	  3460
S	    98#	   100	   104	   133	   135	   144	   147	   162	   163	   165	   176	   178	   182	   184
	   189	   193	   335	   337	   373	   375	   381	   383	   397	   399	   404	   406	   422	   424
	   441	   443	   453	   457	   461	   463	   468	   470	   474	   476	   485	   487	   491	   493
	   503	   505	   541	   543	   551	   553	   568	   570	   578	   580	   583	   585	   593	   595
	   599	   601	   606	   608	   614	   616	   634	   636	   646	   648	   665	   667	   674	   676
	   680	   682	   689	   691	   695	   697	   704	   706	   713	   715	   717	   719	   732	   734
	   761	   763	   792	   794	   809	   811	   835	   841	   868	   870	   888	   890	   908	   910
	   939	   941	   959	   961	   979	   981	   989	   991	  1012	  1017	  1043	  1045	  1052	  1054
	  1060	  1062	  1068	  1070	  1074	  1076	  1081	  1083	  1087	  1089	  1093	  1095	  1101	  1103
	  1106	  1108	  1112	  1114	  1118	  1120	  1124	  1126	  1130	  1132	  1137	  1139	  1143	  1145
	  1149	  1151	  1153	  1155	  1207	  2225	  2277	  2301	  2460	  2503	  2542	  2551	  2564	  2578
	  2730	  2761	  2806	  2837	  2866	  2898	  2928	  2951	  3057	  3085	  3139	  3173	  3227	  3261
	  3291	  3353	  3374	  3385	  3396	  3417	  3431	  3443	  3451	  3473
SIXBTZ	   275#
SWITCH	   281#
TIOE	   796#
TIOEB	   802#
TION	   797#
TIONB	   803#
TTALTM	   202#
TTICHR	   195#
TTICLR	   205#
TTICNV	   200#
TTIDEC	   199#
TTINO	   197#
TTIOCT	   198#
TTIYES	   196#
TTLOOK	   201#
TTSIXB	   203#
TTYINP	   204#
UMOVE	    61#	  2530	  2531
UMOVEM	    62#	  2536	  2572	  2750	  2752	  2824	  2831	  2857	  2860	  2886	  2889	  2916	  2917	  2918
	  2919	  2921	  2922	  2939	  2940
WRAPR	   766#                                                                                                            SEQ 0136
WRCSB	   786#
WRCSTM	   788#
WREBR	   775#	  1165	  2292	  2547	  2558	  2669	  2676	  2746	  2753	  3074	  3080	  3161	  3169	  3249
	  3257	  3272	  3356	  3377	  3399
WRHSB	   791#
WRINT	   790#
WRIO	   799#
WRIOB	   805#
WRPI	   768#
WRPUR	   787#
WRSPB	   785#
WRTIM	   789#
WRUBR	   773#	  1166	  1238	  1274	  1310	  1346	  1382	  1418	  1454	  1490	  1536	  1588	  1640	  1692
	  1744	  1796	  1848	  1900	  1974	  1994	  2014	  2034	  2054	  2074	  2094	  2114	  2139	  2142
	  2154	  2160	  2166	  2172	  2346	  2362	  2378	  2394	  2431	  2436	  2443	  2447	  2451	  2454
	  2498	  2537	  2559	  2573	  2615	  2618	  2621	  2624	  2627	  2630	  2633	  2636	  2642	  2749
	  2756	  2801	  2832	  2861	  2887	  2893	  2920	  2923	  2941
.PGE	    66#	  2668	  3519	  3522	  3523