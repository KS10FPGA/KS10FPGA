;DSKAH







				IDENTIFICATION
				--------------

	PRODUCT CODE:		AH-E311A-DD

	DIAGNOSTIC CODE:	DSKAH

	PRODUCT NAME:	 	DSKAHA0 DECSYSTEM 2020 BASIC
				INSTRUCTION DIAGNOSTIC (8)

	VERSION:		0.1

	DATE RELEASED:		MARCH 1978

	MAINTAINED BY:		DIAGNOSTIC ENGINEERING

	AUTHOR:			JOHN R. KIRCHOFF

		        COPYRIGHT (C) 1978

	        DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.

	THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR  USE  ONLY  ON  A
	SINGLE COMPUTER SYSTEM AND MAY BE COPIED ONLY WITH THE INCLUSION
	OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE,  OR  ANY  OTHER
	COPIES  THEREOF, MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE
	TO ANY OTHER PERSON EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO
	AGREES  TO  THESE  LICENSE TERMS.  TITLE TO AND OWNERSHIP OF THE
	SOFTWARE  SHALL  AT   ALL  TIMES  REMAIN  IN  DIGITAL  EQUIPMENT
	CORPORATION.

	THE INFORMATION IN THIS DOCUMENT IS SUBJECT  TO  CHANGE  WITHOUT
	NOTICE  AND  SHOULD  NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
	EQUIPMENT CORPORATION.

	DIGITAL EQUIPMENT CORPORATION ASSUMES NO  RESPONSIBILITY FOR THE
	USE  OR  RELIABILITY  OF  ITS SOFTWARE IN EQUIPMENT WHICH IS NOT
	SUPPLIED BY DIGITAL EQUIPMENT CORPORATION.
							MAINDEC-10-DSKAH.TXT
							PAGE 2                                                             SEQ 0003


			TABLE OF CONTENTS
			-----------------

1.0	ABSTRACT

2.0	REQUIREMENTS

2.1	EQUIPMENT

2.2	STORAGE

2.3	PRELIMINARY PROGRAMS

3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURE

3.2	STARTING PROCEDURE

3.3	OPERATING PROCEDURE

4.0	ERRORS

5.0	ITERATION COUNTER

6.0	CYCLE TIME

7.0	OPERATIONAL VARIATIONS

8.0	MISCELLANEOUS

9.0	LISTING
							MAINDEC-10-DSKAH.TXT
							PAGE 3                                                             SEQ 0004


1.0	ABSTRACT

	THIS DECSYSTEM 2020 KS-10 BASIC INSTRUCTION DIAGNOSTIC IS
	THE EIGTH IN A SERIES OF DECSYSTEM 2020 KS-10 PROCESSOR
	DIAGNOSTICS.  THE DIAGNOSTIC TESTS THE PI SYSTEM,
	INTERRUPTS, LUUO'S AND INPUT/OUTPUT.

	THE DIAGNOSTIC TESTS THE BASIC FUNCTIONALITY OF THE PROCESSOR
	AND MICRO-CODE.

2.0	REQUIREMENTS

2.1	EQUIPMENT

	A PDP-10 SM10 WITH A MINIMUM OF 32K OF MEMORY

	CONSOLE PROCESSOR
	CONSOLE TELETYPE

2.2	STORAGE

	THE PROGRAM RUNS WITHIN 32K OF MEMORY.

2.3	PRELIMINARY PROGRAMS

	CONSOLE FUNCTIONS WORKING PROPERLY
	PREVIOUS PROCESSOR DIAGNOSTICS
							MAINDEC-10-DSKAH.TXT
							PAGE 4                                                             SEQ 0005


3.0	PROGRAM PROCEDURES

3.1	LOADING PROCEDURE

	LOAD VIA CONSOLE PROCESSOR

3.2	STARTING PROCEDURE

	STAND-ALONE STARTING ADDRESS IS 30000.

	IF THE DIAGNOSTIC FAILS TO START CORRECTLY TRY STARTING AT THE
	FIRST TEST INSTEAD OF AT THE BEGINNING OF THE CONTROL SEQUENCE.
	(SEE LISTING).

3.3	OPERATING PROCEDURE

	ONCE STARTED THE PROGRAM WILL CYCLE CONTINUALLY UNTIL STOPPED
	OR AN ERROR OCCURS.

4.0	ERRORS

	ERRORS ARE IN THE FORM OF HALT INSTRUCTIONS.  THE LISTING
	SHOULD BE CONSULTED TO DETERMINE THE CAUSE OF THE ERROR.  A
	NO OPERATION (JUMP) INSTRUCTION FOLLOWS EACH HALT.  THIS
	MAY BE USEFUL IN CONSTRUCTING A SCOPE LOOP TO CYCLE ON THE
	FAILING INSTRUCTION.

5.0	ITERATION COUNTER

	THE ITERATION COUNT OF THE PROGRAM CAN BE DETERMINED BY
	EXAMINING 30047 "PASCNT".

6.0	CYCLE TIME

	THE CYCLE TIME OF THE PROGRAM IS IN THE MILLISECOND RANGE AND
	IS THEREFORE SUITABLE FOR TAKING MARGINS, VIBRATION TESTS, ETC.

							MAINDEC-10-DSKAH.TXT
							PAGE 5                                                             SEQ 0006


7.0	OPERATIONAL VARIATIONS

	A.  DIAGNOSTIC MONITOR

	    THE PROGRAM IS USABLE WITH THE DIAGNOSTIC MONITOR TO PRO-
	    VIDE RELIABILITY TESTS, ACCEPTANCE TESTS, AND/OR TO PRO-
	    VIDE A QUICK METHOD OF ISOLATION OF A FAULT TO A PARTICULAR
	    AREA OF THE PROCESSOR.  CERTAIN PROCEDURES ARE USED WHEN
	    THE PROGRAM IS USED IN THIS MANNER.  THEY ARE:

	    1.  THE DIAGNOSTIC MONITOR TRANSFERS CONTROL TO THE PRO-
		GRAM AND STARTS IT AT LOCATION 30002.

	    2.  MONCTL - LOCATION 30043 IS USED AS THE DIAGNOSTIC MON-
		ITOR CONTROL FLAG WORD.

	B.  USER MODE

	    THE PROGRAM WILL OPERATE IN USER MODE AND AS SUCH PROVIDES
	    ASSURANCE THAT THE PROCESSOR IS PERFORMING ALL FUNCTIONS
	    CORRECTLY.  USER MODE STARTING ADDRESS IS 30000.

	C.  SYSTEM EXERCISER

	    STARTING ADDRESS IS 30003.  NO DATA SWITCHES ARE USED BY
	    THIS PROGRAM.

8.0	MISCELLANEOUS

	NONE

9.0	LISTING

		HISTORY FILE FOR DSKAH                                                                                     SEQ 0007
		----------------------

---------------------------------------------------------------

CODE:		MAINDEC-10-DSKAH

TITLE:		DECSYSTEM 2020 BASIC INSTRUCTION DIAGNOSTIC (8)

VERSION:	0.1

DATE:		MARCH 1978

REASON:		ORIGINAL RELEASE OF THIS PROGRAM FOR KS-10.
---------------------------------------------------------------
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1
DSKAHT	MAC	31-Mar-78 10:59		CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978                                        SEQ 0008

     1					;DSKAH
     2
     3
     4			000000		MCNVER==0
     5			000001		DECVER==1
     6
     7
     8						XLIST
     9						LIST
    10						LALL
    11
    12						NAME	\MCNVER,\DECVER^
    13
    14					TITLE	DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1
    15					^
    16
    17					;TEST DESIGNED FOR INITIAL DEBUGGING OF PROCESSOR HARDWARE
    18					;AND TO DETECT (SOLID) FAILURES IN THE FIELD.
    19
    20					;COPYRIGHT 1978
    21					;DIGITAL EQUIPMENT CORPORATION
    22					;MARLBORO, MASS. 01752
    23
    24					;JOHN R. KIRCHOFF
    25
    26	000137					LOC	137
    27	000137	000000	000001			MCNVER,,DECVER
    28
    29						NOSYM
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 2
DSKAHT	MAC	31-Mar-78 10:59		DIAGNOSTIC PARAMETERS                                                              SEQ 0009

    30					SUBTTL	DIAGNOSTIC PARAMETERS
    31
    32					;PARAMETER DEFINITIONS
    33
    34			000001		EXCASB==1
    35			000001		PGMEND==1
    36			000001		EROLD==1
    37
    38					;FLAG DEFINITIONS
    39
    40			010000		USERF=10000		;USER MODE FLAG
    41
    42
    43					;MACROS
    44
    45					; STOP - USED FOR SCOPE LOOP, IF INSTRUCTION FAILS, CHANGE (JUMPA .+1)
    46					;	 TO A (JUMPA .-X) TO CYCLE ON FAILING INSTRUCTION
    47
    48					DEFINE	STOP	(A)<
    49						HALT	.+1		;TEST FAILED IF PROGRAM HALTS HERE
    50						JUMPA	.+1		;IF TEST FAILS, CHANGE THIS INSTRUCTION (JUMPA .+1) TO
    51									;JUMPA X (X IS THE ADDRESS OF THE FIRST INSTRUCTION
    52									;IN THE SUBTEST) TO LOOP ON ERROR>
    53
    54					; SFLAG - USED TO CLEAR ALL FLAGS THEN TO SET SELECTED FLAG
    55
    56					DEFINE	SFLAG	(A)<
    57						MOVSI	1,A
    58						JFCL	17,.+1			;RESET ALL FLAGS
    59						JRST	2,.+1(1)		;SET A FLAG>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 3
DSKAHT	MAC	31-Mar-78 10:59		DIAGNOSTIC PARAMETERS                                                              SEQ 0010

    60					;SPECIAL FEATURE PARAMETERS
    61
    62			030660		SADR1=STARTA
    63			030660		SADR2=STARTA
    64			030660		SADR3=STARTA
    65			030660		SADR4=STARTA
    66		254000	030660		SADR5=JRST STARTA
    67		254000	030660		SADR6=JRST STARTA
    68		254000	030660		SADR7=JRST STARTA
    69		254000	030660		SADR8=JRST STARTA
    70		254000	030660		SADR9=JRST STARTA
    71		254000	030660		SADR10=JRST STARTA
    72		254000	030660		SADR11=JRST STARTA
    73
    74			000000		PAREA0=0
    75			000000		PAREA1=0
    76			000000		PAREA2=0
    77		446353	415000		PAREA3=SIXBIT/DSKAH/
    78		645560	000000		PAREA4=SIXBIT/TMP/
    79			000000		PAREA5=0
    80			000000		PAREA6=0
    81			000001		ITERAT==1
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1
PARAM	KSM	28-Mar-78 11:27		CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978                                        SEQ 0011

    82					SUBTTL	CONSOLE DATA SWITCH ASSIGNMENTS, MARCH 1978
    83
    84					DEFINE	S,<;*********************************************************************>
    85
    86					S^;*********************************************************************^
    87					;*DATA SWITCHES
    88					;*LEFT HALF SWITCHES ARE PRE-ASSIGNED FOR SUBROUTINE PACKAGE USE
    89					;*AND CONTROL LOOPING, PRINTING (TTY OR OTHER DEVICE) AND MISC. FUNCTIONS
    90					S^;*********************************************************************^
    91
    92			400000		ABORT==	400000			;ABORT PROGRAM ON PASS COMPLETION
    93			200000		RSTART==200000			;RESTART TEST, PRINT TOTALS
    94			100000		TOTALS==100000			;PRINT TOTALS, CONTINUE
    95
    96			040000		NOPNT==	040000			;INHIBIT ALL PRINT/TYPE OUT (EXCEPT FORCED)
    97			020000		PNTLPT==020000			;PRINT ALL DATA ON LPT (LOGICAL DEVICE, USER MODE)
    98			010000		DING==	010000			;RING BELL ON ERROR
    99
   100			004000		LOOPER==004000			;ENTER EXERCISE/CHECK LOOP ON ERROR
   101			002000		ERSTOP==002000			;HALT ON TEST ERROR
   102			001000		PALERS==001000			;PRINT ALL ERRORS
   103
   104			000400		RELIAB==000400			;RELIABILITY MODE
   105			000200		TXTINH==000200			;INHIBIT ERROR TEXT
   106			000100		INHPAG==000100			;INHIBIT PAGING
   107
   108			000040		MODDVC==000040			;MODIFY DEVICE CODE
   109			000020		INHCSH==000020			;INHIBIT CACHE
   110			000010		OPRSEL==000010			;OPERATOR SELECTION
   111
   112			000004		CHAIN==	000004			;CHAIN CONTROL SWITCH
   113
   114									;SWITCH 16 RESERVED
   115
   116									;SWITCH 17 RESERVED !!!
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 2
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0012

   117					SUBTTL	PROGRAM/SUBROUTINE PARAMETERS
   118
   119					S^;*********************************************************************^
   120					;*SPECIAL SUBPROGRAM LINKAGES
   121					S^;*********************************************************************^
   122
   123			027772		FSELNK=	27772	;FILE SELECT LINK
   124			027773		FRDLNK=	27773	;FILE READ LINK
   125			027774		LDLNK=	27774	;LOAD LINKAGE ADDRESS
   126			027775		DDTLNK=	27775	;DDT LINKAGE ADDRESS
   127			027776		MODLNK=	27776	;OPERATIONAL MODE CHECK LINKAGE ADDRESS
   128			027777		SUBLNK=	27777	;SUBROUTINE LINKAGE ADDRESS
   129
   130					S^;*********************************************************************^
   131					;*SPECIAL SUBROUTINE FATAL HALTS
   132					;*USED TO REPORT ERRORS THAT CAUSE THE SUBROUTINES TO BE UNUSABLE
   133					S^;*********************************************************************^
   134
   135					;ADDRESS   TAG	REASON
   136					;---------------------
   137
   138					; 1010 	NOEXEC	;PROGRAM NOT CODED FOR EXEC MODE OPERATION
   139					; 1011  PLERR	;FATAL PUSH LIST POINTER ERROR
   140					; 1012  PLERR1	;INITIAL PUSH LIST POINTER ERROR
   141					; 1013  MUOERR	;MUUO WITH LUUO HANDLER WIPED OUT
   142					; 1014  SMBER	;KS-10 INTERRUPT WITHOUT DOORBELL
   143					; 1015  SMCER	;KS-10 CLOCK INTERRUPT WITHOUT FLAG SET
   144					; 1016  CPIERR	;CPU INITIALIZATION ERROR
   145					; 1017  EOPERR	;END OF PROGRAM ERROR
   146					; 1020  LUOERR	;INTERRUPT WITH LUUO HANDLER WIPED OUT
   147
   148					S^;*********************************************************************^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 3
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0013

   149					S^;*********************************************************************^
   150					;OPERATOR DEFINITIONS (NON-UUO'S)
   151					S^;*********************************************************************^
   152
   153		260740	000000		OPDEF	GO	[PUSHJ	P,]	;SUBROUTINE CALL
   154		263740	000000		OPDEF	RTN	[POPJ	P,]	;SUBROUTINE RETURN 
   155		261740	000000		OPDEF	PUT	[PUSH	P,]	;PUT DATA ON PUSH LIST
   156		262740	000000		OPDEF	GET	[POP	P,]	;GET DATA FROM PUSH LIST 
   157		254000	000000		OPDEF	PJRST	[JRST	]	;JRST TO ROUTINE THAT RTN'S
   158		254200	000000		OPDEF	HALT	[JRST	4,]	;DEFINITION FOR DDT
   159		254100	000000		OPDEF	JRSTF	[JRST	2,]	;DEFINITION FOR DDT
   160		254500	000000		OPDEF	JEN	[JRST	12,]	;DEFINITION FOR DDT
   161
   162					S^;*********************************************************************^
   163					;*SUBROUTINE INITIALIZATION CALL
   164					S^;*********************************************************************^
   165
   166		265000	030011		OPDEF	PGMINT	[JSP	0,SBINIT]	;SUBROUTINE INITIALIZATION
   167
   168					S^;*********************************************************************^
   169					;*HALTING UUO'S (A MORE GRACEFUL HALT THAN SIMPLY USING THE HALT INSTRUCTION).
   170					S^;*********************************************************************^
   171
   172		037640	000004		OPDEF	FATAL	[37B8!15B12!4]	;FATAL PROGRAMMING HALT
   173		037600	000004		OPDEF	ERRHLT	[37B8!14B12!4]	;PROGRAM ERROR HALT
   174
   175					S^;*********************************************************************^
   176					;*TERMINAL INPUT UUO'S
   177					;*ALWAYS COME FROM THE CONSOLE TERMINAL IN EXEC MODE OR THE
   178					;*CONTROLLING TERMINAL (REAL TERMINAL OR PTY) IN USER MODE.
   179					S^;*********************************************************************^
   180
   181		037000	000003		OPDEF	TTICHR 	[37B8!0B12!3]	;TTY, INPUT ANY CHARACTER
   182		037040	000003		OPDEF	TTIYES	[37B8!1B12!3]	;TTY, NORMAL RETURN Y
   183		037100	000003		OPDEF	TTINO	[37B8!2B12!3]	;TTY, NORMAL RETURN N
   184		037140	000003		OPDEF	TTIOCT	[37B8!3B12!3]	;TTY, INPUT OCTAL WORD
   185		037200	000003		OPDEF	TTIDEC	[37B8!4B12!3]	;TTY, INPUT DECIMAL WORD
   186		037240	000003		OPDEF	TTICNV	[37B8!5B12!3]	;TTY, INPUT CONVERTABLE WORD
   187		037300	000003		OPDEF	TTLOOK	[37B8!6B12!3]	;TTY, KEYBOARD CHECK
   188		037340	000003		OPDEF	TTALTM	[37B8!7B12!3]	;TTY, ALT-MODE CHECK
   189		037400	000003		OPDEF	TTSIXB	[37B8!10B12!3]	;TTY, INPUT SIXBIT WORD
   190		037440	000003		OPDEF	TTYINP	[37B8!11B12!3]	;TTY, IMAGE MODE INPUT
   191		037500	000003		OPDEF	TTICLR	[37B8!12B12!3]	;TTY, CLEAR INPUT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 4
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0014

   192					;*TERMINAL OUTPUT UUO'S.
   193
   194		037000	000000		OPDEF	PNTA	[37B8!0B12!0]	;PRINT ASCII WORD
   195		037000	000001		OPDEF	PNTAF	[37B8!0B12!1]	;PRINT ASCII WORD FORCED
   196		037740	000000		OPDEF	PNTAL	[37B8!17B12!0]	;PRINT ASCIZ LINE
   197		037740	000001		OPDEF	PNTALF	[37B8!17B12!1]	;PRINT ASCIZ LINE FORCED
   198		037600	000003		OPDEF	PSIXL	[37B8!14B12!3]	;PRINT SIXBIT'Z LINE
   199		037640	000003		OPDEF	PSIXLF	[37B8!15B12!3]	;PRINT SIXBIT'Z LINE FORCED
   200		037000	000000		OPDEF	PNTMSG	[37B8!0B12!0]	;PRINT MESSAGE IMMEDIATE
   201		037040	000000		OPDEF	PNTMSF	[37B8!1B12!0]	;PRINT MESSAGE IMMEDIATE FORCED
   202		037100	000000		OPDEF	PSIXM	[37B8!2B12!0]	;PRINT SIXBIT'Z MSG IMMEDIATE
   203		037200	000000		OPDEF	PSIXMF	[37B8!4B12!0]	;PRINT SIXBIT'Z MSG IMM FORCED
   204		037000	000000		OPDEF	PNTCI	[37B8!0B12!0]	;PRINT CHARACTER IMMEDIATE
   205		037040	000000		OPDEF	PNTCIF	[37B8!1B12!0]	;PRINT CHARACTER IMMEDIATE FORCED
   206		037500	000000		OPDEF	PNTCHR	[37B8!12B12!0]	;PRINT CHARACTER
   207		037500	000001		OPDEF	PNTCHF	[37B8!12B12!1]	;PRINT CHARACTER FORCED
   208		037040	000000		OPDEF	PNT1	[37B8!1B12!0]	;PRINT ONE OCTAL DIGIT
   209		037040	000001		OPDEF	PNT1F	[37B8!1B12!1]	;PRINT 1 OCTAL DIGIT FORCED	
   210		037100	000000		OPDEF	PNT2	[37B8!2B12!0]	;PRINT TWO OCTAL DIGITS
   211		037100	000001		OPDEF	PNT2F	[37B8!2B12!1]	;PRINT 2 OCTAL DIGITS FORCED	
   212		037140	000000		OPDEF	PNT3	[37B8!3B12!0]	;PRINT THREE OCTAL DIGITS
   213		037140	000001		OPDEF	PNT3F	[37B8!3B12!1]	;PRINT THREE OCTAL DIGITS FORCED	
   214		037200	000000		OPDEF	PNT4	[37B8!4B12!0]	;PRINT FOUR OCTAL DIGITS
   215		037200	000001		OPDEF	PNT4F	[37B8!4B12!1]	;PRINT FOUR OCTAL DIGITS FORCED
   216		037240	000000		OPDEF	PNT5	[37B8!5B12!0]	;PRINT FIVE OCTAL DIGITS
   217		037240	000001		OPDEF	PNT5F	[37B8!5B12!1]	;PRINT FIVE OCTAL DIGITS FORCED
   218		037300	000000		OPDEF	PNT6	[37B8!6B12!0]	;PRINT SIX OCTAL DIGITS
   219		037300	000001		OPDEF	PNT6F	[37B8!6B12!1]	;PRINT SIX OCTAL DIGITS FORCED
   220		037340	000000		OPDEF	PNT7	[37B8!7B12!0]	;PRINT 7 OCTAL DIGITS
   221		037340	000001		OPDEF	PNT7F	[37B8!7B12!1]	;PRINT 7 OCTAL DIGITS FORCED
   222		037440	000000		OPDEF	PNT11	[37B8!11B12!0]	;PRINT 11 OCTAL DIGITS
   223		037440	000001		OPDEF	PNT11F	[37B8!11B12!1]	;PRINT 11 OCTAL DIGITS FORCED.
   224		037400	000000		OPDEF	PNTADR	[37B8!10B12!0]	;PRINT PHYSICAL ADDRESS
   225		037400	000001		OPDEF	PNTADF	[37B8!10B12!1]	;PRINT PHYSICAL ADDRESS FORCED
   226		037600	000000		OPDEF	PNTOCT  [37B8!14B12!0]	;PRINT FULL WORD OCTAL
   227		037600	000001		OPDEF	PNTOTF	[37B8!14B12!1]	;PRINT FULL WORD OCTAL FORCED
   228		037540	000000		OPDEF	PNTHW	[37B8!13B12!0]	;PRINT OCTAL HALF WORDS, 6 SP 6
   229		037540	000001		OPDEF	PNTHWF	[37B8!13B12!1]	;PRINT OCTAL HALF WORDS, 6 SP 6 FORCED
   230		037700	000003		OPDEF	PNTOCS	[37B8!16B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S
   231		037740	000003		OPDEF	PNTOCF	[37B8!17B12!3]	;PRINT OCTAL, SUPPRESS LEADING 0'S FORCED
   232		037640	000000		OPDEF	PNTDEC	[37B8!15B12!0]	;PRINT DECIMAL, SUPRESS LEADING 0'S
   233		037640	000001		OPDEF	PNTDCF	[37B8!15B12!1]	;PRINT DECIMAL, SUPRESS LEADING 0'S FORCED
   234		037700	000000		OPDEF	PNTDS	[37B8!16B12!0]	;PRINT DECIMAL, SPACES FOR LD 0'S
   235		037700	000001		OPDEF	PNTDSF	[37B8!16B12!1]	;PRINT DECIMAL, SPACES FOR LD 0'S FORCED
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 5
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0015

   236		037200	000002		OPDEF	PNTNM	[37B8!4B12!2]	;PRINT PROGRAM NAME
   237		037000	000002		OPDEF	PNTSIX	[37B8!0B12!2]	;PRINT SIXBIT WORD
   238		037040	000002		OPDEF	PNTSXF	[37B8!1B12!2]	;PRINT SIXBIT WORD FORCED
   239		037240	000002		OPDEF	DROPDV	[37B8!5B12!2]	;CLOSE LOGICAL FILE, USER MODE
   240		037100	000002		OPDEF	PNTCW	[37B8!2B12!2]	;PRINT DF10 CONTROL WORD
   241		037140	000002		OPDEF	PNTCWF	[37B8!3B12!2]	;PRINT DF10 CONTROL WORD FORCED
   242		037000	030242		OPDEF	PCRL	[37B8!0B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED
   243		037040	030242		OPDEF	PCRLF	[37B8!1B12!CRLF] ;PRINT CARRIAGE RETURN/LINE FEED FORCED
   244		037000	000040		OPDEF	PSP	[37B8!0B12!40]	;PRINT SPACE
   245		037040	000040		OPDEF	PSPF	[37B8!1B12!40]	;PRINT SPACE FORCED
   246		037000	030243		OPDEF	PCRL2	[37B8!0B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE)
   247		037040	030243		OPDEF	PCRL2F	[37B8!1B12!CRLF2] ;PRINT CARRIAGE RETURN/LINE FEED (TWICE) FORCED
   248		037040	000007		OPDEF	PBELL	[37B8!1B12!7]	;PRINT TTY BELL
   249
   250		037040	000026		OPDEF	PFORCE	[37B8!1B12!26]	;PRINT FORCE, CONTROL O OVERRIDE
   251
   252					DEFINE	PMSG	(ARG),<
   253						PSIXM	[SIXBIT\ARG'_\]>
   254
   255					DEFINE	PMSGF	(ARG),<
   256						PSIXMF	[SIXBIT\ARG'_\]>
   257
   258					;*SIXBTZ -- MACRO TO GENERATE SIXBIT DATA FOR PRINTING
   259					;*	CONSERVES CORE OVER ASCIZ
   260
   261					DEFINE	SIXBTZ	(ARG),<	[SIXBIT\ARG'_\]>
   262
   263					;*CONSOLE SWITCH INPUT UUO.
   264					;*READS CONSOLE SWITCHES IF IN EXEC MODE OR ASKS FOR THEM IF
   265					;* USER MODE.
   266
   267		037400	000002		OPDEF	SWITCH	[37B8!10B12!2]	;INPUT CONSOLE SWITCHES
   268
   269					;*CLOCK INITIALIZATION UUO - TO SET DESIRED CLOCK OPERATION
   270					;*EITHER IGNORE CLOCK, ONLY LET IT TICK OR CAUSE INTERRUPT TO OCCUR.
   271
   272		037540	000004		OPDEF	CLOKOP	[37B8!13B12!4]	;CLOCK OPERATION UUO - CLOCK
   273		037200	000004		OPDEF	MTROP	[37B8!4B12!4]	;CLOCK OPERATION UUO - METER
   274
   275					;*KS-10 CACHE OPERATION UUO'S
   276
   277		037040	000004		OPDEF	CINVAL	[37B8!1B12!4]	;CACHE INVALIDATE
   278		037100	000004		OPDEF	CFLUSH	[37B8!2B12!4]	;CACHE FLUSH
   279		037140	000004		OPDEF	CWRTBI	[37B8!3B12!4]	;CACHE WRITE-BACK & INVALIDATE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 6
PARAM	KSM	28-Mar-78 11:27		PROGRAM/SUBROUTINE PARAMETERS                                                      SEQ 0016

   280					;*END OF PASS/PROGRAM UUOS
   281
   282					;PERFORMS THE END OF PASS FUNCTIONS. INCREMENT PASS COUNT,
   283					;*DECREMENT ITERATION COUNT, CHECK IF FINISHED WITH THIS PROGRAM ETC.
   284
   285		037500	000004		OPDEF	ENDUUO	[37B8!12B12!4]	;UUO TO DISPLAY LIGHTS
   286		037700	000004		OPDEF	EOPUUO	[37B8!16B12!4]	;END OF PROGRAM UUO
   287
   288					;*MEMORY MANAGEMENT UUO'S
   289					;*UUO'S TO PERFORM VARIOUS MEMORY FUNCTIONS. MAPPING, ZEROING, PAGING,
   290					;*ADDRESS CONVERSION, ETC...
   291
   292		037000	000004		OPDEF	MAPMEM	[37B8!0B12!4]	;MAP MEMORY
   293		037500	000002		OPDEF	MEMZRO	[37B8!12B12!2]	;ZERO MEMORY
   294		037440	000002		OPDEF	MEMSEG	[37B8!11B12!2]	;SETUP MEMORY SEGMENT
   295		037540	000002		OPDEF	MAPADR	[37B8!13B12!2]	;VIRTUAL TO PHYSICAL ADR CONVERT
   296		037640	000002		OPDEF	MAPCNK	[37B8!15B12!2]	;MAP MEMORY CHUNK
   297		037600	000002		OPDEF	MAPSET	[37B8!14B12!2]	;SET KI10 EXEC PAGE MAP
   298		037740	000002		OPDEF	MAPPNT	[37B8!17B12!2]	;PRINT MEMORY MAP
   299
   300					;*DEVICE CODE MODIFICATION UUO
   301					;*ALLOWS THE MODIFICATION OF IOT'S TO ONE DEVICE TO BE CHANGED TO
   302					;*IOT'S TO A DIFFERENT DEVICE CODE.
   303
   304		037340	000002		OPDEF	MODPCU	[37B8!7B12!2]	;MODIFY PERHIPERAL CODE, USER
   305		037300	000002		OPDEF	MODPCP	[37B8!6B12!2]	;MODIFY PERHIPERAL CODE, PROGRAM
   306
   307			030000			IFNDEF	MODDVL,<MODDVL==BEGIN>
   308			030000			IFNDEF	MODDVU,<MODDVU==BEGIN>
   309
   310					;*"DIAMON" FILE SELECTION AND READ UUOS
   311
   312		037240	000004		OPDEF	FSELECT	[37B8!5B12!4]	;FILE SELECTION
   313		037300	000004		OPDEF	FREAD	[37B8!6B12!4]	;FILE READ - ASCII DATA
   314		037340	000004		OPDEF	FRD36	[37B8!7B12!4]	;FILE READ - 36 BIT DATA
   315		037400	000004		OPDEF	FRD8	[37B8!10B12!4]	;FILE READ - 8 BIT DATA
   316
   317						XLIST
   318						LIST
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0017

   319					SUBTTL	*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978
   320
   321	030000					LOC	30000
   322
   323					S^;*********************************************************************^
   324					;*PROGRAM STARTING ADDRESSES
   325					;*THESE ADDRESSES CALL VARIOUS SPECIAL START ROUTINES AND OR OPTIONS
   326					;*NORMAL START ADDRESS IS 30000 ALL OTHERS ARE SPECIAL. INVOKED BECAUSE
   327					;*OF END OF PASS, POWER FAILURE, DDT START, RE-ENTERING(TYPICALLY USER
   328					;*MODE), OR ANY NUMBER OF SPECIAL FEATURE TESTS.
   329					S^;*********************************************************************^
   330
   331	030000	254 00 1 00 027776 	BEGIN:	JRST	@MODLNK		;STAND-ALONE START
   332	030001	254 00 0 00 030631 	$START:	JRST	START		;MODE CHECK STARTING ADDRESS
   333
   334	030002	254 00 1 00 027774 	DIAGMN:	JRST	@LDLNK		;DIAGNOSTIC MONITOR START
   335
   336	030003	254 00 1 00 027774 	SYSEXR:	JRST	@LDLNK		;SYSTEM EXERCISER START
   337
   338	030004	254 00 0 00 030660 	SFSTRT:	JRST	SADR1		;SPECIAL FEATURE START
   339
   340	030005	254 00 0 00 030660 	PFSTRT:	JRST	SADR2		;POWER FAIL RESTART
   341
   342	030006	254 00 0 00 030660 	REENTR:	JRST	SADR3		;REENTER START(USUALLY USER MODE ONLY)
   343
   344	030007				SRTDDT:				;COMMONLY MISTAKEN NAME FOR "DDTSRT"
   345	030007	254 00 1 00 027775 	DDTSRT:	JRST	@DDTLNK		;DDT START
   346
   347	030010	254 00 0 00 030660 	BEGIN1:	JRST	STARTA		;LOOP START(END OF PASS COMES HERE)
   348	030011	254 00 1 00 027777 	SBINIT:	JRST	@SUBLNK		;PMGINT LINKAGE
   349	030012	000000	000000		RETURN:	0			;RETURN ADDRESS STORAGE
   350
   351	030013	254000	030660		START1:	SADR7			;OPTIONAL STARTING ADR/INSTRUCTIONS
   352	030014	254000	030660		START2:	SADR8			; "
   353	030015	254000	030660		START3:	SADR9			; "
   354	030016	254000	030660		START4:	SADR10			; "
   355	030017	254000	030660		START5:	SADR11			; "
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 2
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0018

   356					S^;*********************************************************************^
   357					;*PROGRAM FIXED PARAMETER AREA
   358					S^;*********************************************************************^
   359
   360	030020	446353	415000		PNTNAM:	PAREA3		;SIXBIT PROGRAM NAME
   361	030021	645560	000000		PNTEXT:	PAREA4		;SIXBIT PROGRAM EXTENSION
   362	030022	000000	000000		RANDBS:	PAREA1		;RANDOM BASE NUMBER
   363	030023	000000	000000		SWTEXR:	PAREA2		;SYSTEM EXERCISER SWITCHES
   364	030024	000000	000001		ITRCNT:	ITERAT		;PROGRAM ITERATIONS
   365	030025	000000	030644		$PNAME:	PGMNAM		;POINTER TO PROGRAMS NAME
   366	030026	000000	000001		$PVER:	MCNVER,,DECVER	;MCN & DEC VERSION LEVEL
   367	030027	000000	030000		$MODVL:	MODDVL		;DEVICE CODE CHANGE LOWER LIMIT
   368	030030	000000	030000		$MODVU:	MODDVU		;DEVICE CODE CHANGE UPPER LIMIT
   369	030031	777777	777777		$EMODE:	IFNDEF EXCASB,<0> IFDEF EXCASB,<-1>	;EXEC ALLOWED
   370	030032	000000	000000		$UMODE:	IFNDEF USRASB,<0> IFDEF USRASB,<-1>	;USER ALLOWED
   371	030033	000000	000000		$DSKUP:	IFNDEF DSKUPD,<0> IFDEF DSKUPD,<-1>	;DISK UPDATE MODE
   372	030034	000000	000000		$MMAP:	IFNDEF MEMMAP,<0> IFDEF MEMMAP,<-1>	;ALLOW MEMORY RTNS
   373	030035	000000	000000		PAREA7:	PAREA5		;OPTIONAL PARAMETER
   374	030036	000000	000000		PAREA8:	PAREA6		;OPTIONAL PARAMETER
   375
   376					S^;*********************************************************************^
   377					;*PROGRAM VARIABLE PARAMETER AREA
   378					S^;*********************************************************************^
   379
   380	030037	000000	000000		USER:	0		; 0 = EXEC, -1 = USER MODE FLAG
   381	030040	000000	000000		KAIFLG:	0		;PROCESSOR TYPE, 0 = KA10, -1 = KI10
   382	030041	000000	000000		KLFLG:	0		;PROCESSOR TYPE, 0 = KA/KI, -1 = KL10
   383	030042	777777	777777		MONFLG:	-1		;DIAG MONITOR SPECIAL USER FLAG
   384	030043	000000	000000		MONCTL:	0		;DIAG MON/SYS EXR FLAG
   385	030044	000000	000000		MONTEN:	0		;-1= LOADED BY 10
   386	030045	000000	000000		CLOCKF:	0		;CLOCK TICKED FLAG
   387	030046	000000	000000		CONSW:	0		;CONSOLE SWITCH SETTINGS
   388	030047	000000	000000		PASCNT:	0		;PROGRAM PASS COUNT
   389	030050	000000	000000		RUNFLG:	0		;PROGRAM RUN FLAG
   390	030051	000000	000000		TESTPC:	0		;SUBTEST PC
   391	030052	000000	000000		ERRPC:	0		;ERROR PC
   392	030053	000000	000000		ERRTLS:	0		;ERROR TOTALS
   393	030054	000000	000000		TICKS:	0		;PROGRAM RUNNING TIME
   394	030055	000000	000000		MARGIN:	0		;KI10 MARGIN WORD VALUE
   395	030056	000000	000000		$ONETM:	0		;SUBROUTINE INITIALIZATION FLAG
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 3
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0019

   396					S^;*********************************************************************^
   397					;*SPECIAL PROGRAM DISPATCH ADDRESSES
   398					S^;*********************************************************************^
   399
   400	030057	037 12 0 00 000004 	BEGEND:	ENDUUO		;END OF PASS
   401	030060	254 00 0 00 030010 	$BEND1:	JRST	BEGIN1	;KEEP RUNNING PROGRAM
   402	030061	037 16 0 00 000004 	$BEND2:	EOPUUO		;END OF PROGRAM - NO RETURN
   403	030062	254000	030660		CNTLC:	SADR5		;CONTROL C XFER ADDRESS
   404	030063	254000	030660		ALTMGO:	SADR6		;ALTMODE XFER ADDRESS
   405	030064				CPOPJ1:			;SKIP RETURN
   406	030064	350 00 0 17 000000 	UUOSKP:	AOS	(P)	;SKIP RETURN FROM UUO
   407	030065				CPOPJ:			;NON-SKIP REGULAR RETURN
   408	030065	263 17 0 00 000000 	UUOEXT:	RTN		;UUO RETURN
   409	030066	255 00 0 00 000000 	UUORTN:	JFCL		;ADDITIONAL USERS UUO ROUTINE
   410	030067	255 00 0 00 000000 	$UORTX:	JFCL		;ADDITIONAL UUO LINKAGE
   411	030070	255 00 0 00 000000 	$UUOER:	JFCL		;INITED AS (JRST $UOERX)
   412	030071	255 00 0 00 000000 	$ITRHL:	JFCL		;ADDITIONAL INTERRUPT LINKAGE
   413	030072	255 00 0 00 000000 	$ITRX1:	JFCL		; "
   414	030073	255 00 0 00 000000 	$USRHL:	JFCL		; "
   415	030074	255 00 0 00 000000 	$RSRTX:	JFCL		;ADDITIONAL POWER FAIL LINKAGE
   416	030075	255 00 0 00 000000 	$RSRTY:	JFCL		; "
   417	030076	255 00 0 00 000000 	RESRT1:	JFCL		; INITED AS (JRST RESRTX)
   418	030077	255 00 0 00 000000 	RESRT2:	JFCL		; "
   419	030100	255 00 0 00 000000 	$PARER:	JFCL		;ADDITIONAL PARITY ERROR LINKAGE
   420	030101	255 00 0 00 000000 	ERMORE:	JFCL		;ADDITIONAL ERROR HANDLER LINKAGE
   421	030102	254 04 0 00 030102 		HALT	.	;IMPROPER TRANSFER HALT
   422
   423	030103	000000	000000		$PSHER:	0		;INITED AS (JRST PSHERR)
   424	030104	000000	000000		ITRCH1:	0		;PC & FLAGS OF CURRENT INTERRUPT
   425	030105	000000	000000			0		;INITED AS (JRST $ITRC1)
   426
   427					S^;*********************************************************************^
   428					;*PROCESSOR CONTROL STORAGE
   429					S^;*********************************************************************^
   430
   431	030106	000000	000000		$ACC0:	0		;INTERRUPT SAVED AC0
   432	030107	000000	000000		$SVPI:	0		;INTERRUPT SAVED PI
   433	030110	000000	000000		$SVAPR:	0		;INTERRUPT SAVED APR
   434	030111	000000	000000		$SVPAG:	0		;INTERRUPT SAVED PAG (DATAI)
   435	030112	000000	000000		$SPAG1:	0		;INTERRUPT SAVED PAG (CONI)
   436
   437	030113	000000	000000		$SVUUO:	0		;CURRENT USERS UUO
   438	030114	000000	000000		$SVUPC:	0		;PC OF CURRENT USERS UUO
   439
   440	030115	000000	000000		REPTU:	0		;REPEAT UUO ITERATIONS
   441	030116	000000	000000		SCOPE:	0		;ERROR HANDLER SCOPE LOOP FLAG
   442	030117	000000	000000		%CORFLG:0		; " CORRECT FLAG
   443	030120	000000	000000		%COREC:	0		; " CORRECT DATA
   444	030121	000000	000000		%ACTFL:	0		; " ACTUAL FLAG
   445	030122	000000	000000		%ACTUL:	0		; " ACTUAL DATA
   446	030123	000000	000000		%DISCR:	0		; " DISCREPENCY DATA
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 4
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0020

   447					S^;*********************************************************************^
   448					;*UUO DISPATCH TABLE
   449					S^;*********************************************************************^
   450						XLIST
   451						LIST
   452	030124	030070	030070		UUODIS:	LUUO1,,$UUOER
   453	030125	030070	030070			LUUO3,,LUUO2
   454	030126	030070	030070			LUUO5,,LUUO4
   455	030127	030070	030070			LUUO7,,LUUO6
   456	030130	030070	030070			LUUO11,,LUUO10
   457	030131	030070	030070			LUUO13,,LUUO12
   458	030132	030070	030070			LUUO15,,LUUO14
   459	030133	030070	030070			LUUO17,,LUUO16
   460	030134	030070	030070			LUUO21,,LUUO20
   461	030135	030070	030070			LUUO23,,LUUO22
   462	030136	030070	030070			LUUO25,,LUUO24
   463	030137	030070	030070			LUUO27,,LUUO26
   464	030140	030070	030070			LUUO31,,LUUO30
   465	030141	030070	030070			LUUO33,,LUUO32
   466
   467					S^;*********************************************************************^
   468					;*MEMORY MANAGMENT STORAGE
   469					S^;*********************************************************************^
   470
   471	030142	000000	000000		DF22F:	0		;DF10 CONTROL FLAG, 0 = 18, -1 = 22 BIT
   472	030143	000000	000000		MAPNEW:	0		;MEMORY MAPPING CONTROL FLAG, -1 = 4096K MAPPING
   473	030144	000000	000000		MEMTOT:	0		;TOTAL MEMORY SIZE IN K (1024.)
   474	030145	000000	000000		MEMLOW:	0		;LOWEST USABLE MEMORY
   475	030146				MEMSIZ:	BLOCK ^D41	;MEMORY SEGMENT POINTER TABLE
   476
   477					S^;*********************************************************************^
   478					;*PRINT CONTROL STORAGE
   479					S^;*********************************************************************^
   480
   481	030217	000000	000000		PNTFLG:	0		;PRINT FLAG, -1 WHILE IN PRINT ROUTINE
   482	030220	000000	000000		PNTENB:	0		;PRINT ENABLE
   483	030221	000000	000000		PDISF:	0		;PRINT DISABLED FLAG
   484	030222	000000	000000		PNTINH:	0		;INHIBIT PRINT INPUT CHECKS
   485	030223	000000	000000		PNTSPC:	0		;PRINT SPACE CONTROL
   486	030224	000000	000000		OPTIME:	0		;TYPE-IN WAIT TIME
   487	030225	000000	000000		$TWCNT:	0		;TIME WAITED
   488	030226	000000	000000		$DVOFF:	0		;LOGICAL DEVICE INITED FLAG
   489	030227	000000	000000		TTYFIL:	0		;TTY EXEC FILLERS FLAG
   490	030230	000000	000000		TTYSPD:	0		;TTY EXEC BAUD RATE
   491	030231	000000	000000		$TTCHR:	0		;ACTUAL TYPED IN CHAR
   492	030232	000000	000000		$CHRIN:	0		;UPPER CASED & PARITY STRIPPED CHAR
   493	030233	000000	000000		$TYPNB:	0		;TYPED IN NUMBER
   494	030234	000000	000000		$CRLF:	0		;FREE CR/LF FLAG
   495	030235	000000	000000		$TABF:	0		;TAB CONVERSION FLAG
   496	030236	000000	000000		$FFF:	0		;FORM FEED CONVERSION FLAG
   497	030237	000000	000000		$VTF:	0		;VERTICAL TAB CONVERSION FLAG
   498	030240	000000	000000		USRLFF:	0		;USER LF FILLERS
   499	030241	000000	000000		USRCRF:	0		;USER CR FILLERS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 5
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0021

   500					S^;*********************************************************************^
   501					;*THE FOLLOWING MISCELLANEOUS PRINT CHARACTERS ARE INCLUDED
   502					;*TO FACILITATE PRINTING AND ARE CALLED AS FOLLOWS:
   503					;*	MOVEI	NAME
   504					;*	PNTA		;OR PNTAF
   505					S^;*********************************************************************^
   506
   507	030242				CRLF:	ASCII/
   508	030242	015 012 000 000 000 	/
   509	030243				CRLF2:	ASCII/
   510
   511	030243	015 012 015 012 000 	/
   512	030244	054 000 000 000 000 	COMMA:	ASCII/,/
   513	030245	056 000 000 000 000 	PERIOD:	ASCII/./
   514	030246	040 000 000 000 000 	SPACE:	ASCII/ /
   515	030247	011 000 000 000 000 	TAB:	ASCII/	/
   516	030250				MINUS:
   517	030250	055 000 000 000 000 	HYPEN:	ASCII/-/
   518	030251	053 000 000 000 000 	PLUS:	ASCII/+/
   519	030252	052 000 000 000 000 	AST:	ASCII/*/
   520	030253	100 000 000 000 000 	ATSIN:	ASCII/@/
   521	030254	050 000 000 000 000 	LFP:	ASCII/(/
   522	030255	051 000 000 000 000 	RTP:	ASCII/)/
   523	030256	007 0000000000 		BELL:	BYTE (7) 007
   524	030257	077 000 000 000 000 	QUEST:	ASCII/?/
   525	030260	057 000 000 000 000 	SLASH:	ASCII!/!
   526	030261	044 000 000 000 000 	DOLLAR:	ASCII/$/
   527	030262	000000	000012		RADIX:	^D10			;DECIMAL PRINT RADIX
   528	030263	000000	000040		RADLSP:	40			;DECIMAL PRINT LEADING CHAR
   529	030264	000000	000012		RADLSC:	^D10			;DECIMAL PRINT LEADING CHAR COUNT
   530
   531					S^;*********************************************************************^
   532					;*USER MODE OUTPUT FILE INFORMATION
   533					S^;*********************************************************************^
   534
   535	030265				$OBUF:	BLOCK	3		;LOGICAL FILE OUTPUT BUFFER HEADER
   536	030270	60 62 51 56 64 00 	$OUTNM:	SIXBIT	/PRINT/		;FILE NAME
   537	030271	60 56 64 00 00 00 	$OUTEX:	SIXBIT	/PNT/		;FILE NAME EXTENSION
   538	030272					BLOCK	2
   539
   540					S^;*********************************************************************^
   541					;*DISK UPDATE MODE FILE INFORMATION
   542					S^;*********************************************************************^
   543
   544	030274				$IBUF:	BLOCK	3
   545	030277	60 62 51 56 64 00 	$INNM:	SIXBIT	/PRINT/
   546	030300	60 56 64 00 00 00 	$INEXT:	SIXBIT	/PNT/
   547	030301					BLOCK	2
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 6
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0022

   548					S^;*********************************************************************^
   549					;*PUSHDOWN LIST CONTROL INFORMATION
   550					S^;*********************************************************************^
   551
   552	030303	777577	030303		PLIST:	PLIST-PLISTE,,PLIST
   553	030304				PLISTS:	BLOCK	200
   554	030504	000000	000000		PLISTE:	0		;END OF PUSHDOWN LIST
   555
   556					S^;*********************************************************************^
   557					;*POWER LINE CLOCK FREQUENCY FLAG
   558					S^;*********************************************************************^
   559
   560	030505	000000	000000		CYCL60:	0	;0 = 60, -1 = 50 CYCLE
   561
   562					S^;*********************************************************************^
   563					;*KL10 CACHE CONTROL FLAGS
   564					S^;*********************************************************************^
   565
   566	030506	000000	000000		CSHFLG:	0	;ALLOW CACHE IF 0
   567	030507	000000	000000		CSHMEM:	0	;CACHE MEMORY SEGMENTS IF 0
   568
   569					S^;*********************************************************************^
   570					;*NUMBER INPUT DIGIT FLAG
   571					S^;*********************************************************************^
   572
   573	030510	000000	000000		TTNBRF:	0	;-1 IF ANY DIGIT TYPED
   574
   575					S^;*********************************************************************^
   576					;*KL10 & KI10 "INHPAG" SWITCH PAGING PREVENTION
   577					S^;*********************************************************************^
   578
   579	030511	000000	000000		PVPAGI:	0	;IF NON-ZERO, OVERRIDE "INHPAG" SWITCH ACTION
   580
   581					S^;*********************************************************************^
   582					;*ERROR REPORTING ROUTINE ADDITIONAL USERS CONTROL INSTRUCTIONS
   583					S^;*********************************************************************^
   584
   585	030512	000000	000000		%ERHI1:	0	;IF NON-ZERO, XCT'D AT START OF %ERUUO
   586	030513	000000	000000		%ERHI2:	0	;IF NON-ZERO, XCT'D AT END OF %ERUUO
   587	030514	000000	000000		%ERHI3:	0	;IF NON-ZERO, XCT'D AFTER "PC" OF %ERUUO
   588
   589					S^;*********************************************************************^
   590					;*SPECIAL USERS UUO INTERCEPT INSTRUCTION
   591					S^;*********************************************************************^
   592
   593	030515	000000	000000		$$UUO:	0	;IF NON-ZERO, XCT'D AT START OF $UORTN
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 7
FIXED	KSM	28-Mar-78 11:28		*FIXED* FIXED CONTROL AND DISPATCH STORAGE, MARCH 1978                             SEQ 0023

   594					S^;*********************************************************************^
   595					;*USER MODE MONITOR TYPE FLAG
   596					S^;*********************************************************************^
   597
   598	030516	000000	000000		MONTYP:	0	;0 = TOPS10, -1 = TOPS20
   599
   600					S^;*********************************************************************^
   601					;*SPECIAL USERS MUUO INTERCEPT INSTRUCTION
   602					S^;*********************************************************************^
   603
   604	030517	000000	000000		$$MUUO:	0	;IF NON-ZERO, XCT'D AT START OF MUUOER
   605
   606					S^;*********************************************************************^
   607					;*SPECIAL USERS USER MODE OUTPUT ERROR INTERCEPT INSTUCTION
   608					S^;*********************************************************************^
   609
   610	030520	000000	000000		$$OUTER:0	;IF NON-ZERO, XCT'D AT END OF USER MODE ERROR
   611
   612					S^;*********************************************************************^
   613					;*"SWITCH" CALL USAGE CONTROL
   614					S^;*********************************************************************^
   615
   616	030521	000000	000000		$$TOGGLE:0	;IF NON-ZERO, USE C(CONSW) FOR SWITCHES
   617
   618					S^;*********************************************************************^
   619					;*SPECIAL USERS ALTMODE SWITCH CALL INTERCEPT INSTRUCTIONS
   620					S^;*********************************************************************^
   621
   622	030522	000000	000000		$$TAX1:	0	;IF NON-ZERO, XCT'D AT START OF ALTMODE SWITCH CALL
   623	030523	000000	000000		$$TAX2:	0	;IF NON-ZERO, XCT'D AT END OF ALTMODE SWITCH CALL
   624
   625					S^;*********************************************************************^
   626					;*SM10 (KS-10) PROCESSOR TYPE FLAG
   627					S^;*********************************************************************^
   628
   629	030524	000000	000000		SM10:	0	;IF -1 THIS IS AN KS-10
   630
   631					S^;*********************************************************************^
   632					;*RIGHT HALF SWITCHES PROMPT TABLE ADDRESS
   633					S^;*********************************************************************^
   634
   635	030525	000000	000000		SWPTAB:	0	;0 = NO PROMPT, ADR = ADR OF SIXBIT PROMPT TABLE
   636
   637					S^;*********************************************************************^
   638					;*SPECIAL FUTURE EXPANSION ROOM
   639					S^;*********************************************************************^
   640
   641					S^;*********************************************************************^
   642					;*END OF FIXED STORAGE
   643					S^;*********************************************************************^
   644
   645	030577					LOC	30577
   646	030577	000000	000000		ENDFIX:	0		;END OF FIXED STORAGE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1
SPCCPU	KSM	28-Mar-78 11:24		*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, MARCH 1978                           SEQ 0024

   647					SUBTTL	*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, MARCH 1978
   648
   649			000000		AC0=	0
   650			030000		DIAGNOS=30000		;PDP-10 DIAGNOSTIC START ADDRESS
   651			010000		DDT=	10000		;PDP-10 DDT START ADDRESS
   652			020000		DIAMON=	20000		;PDP-10 DIAGNOSTIC LOADER START ADDRESS
   653
   654					;KS-10 EPT COMMUNICATION AREA
   655
   656			000440		$STD=	440		;PDP-10 DIAGNOSTIC START ADDRESS
   657			000441		$DDT=	441		;PDP-10 DDT START ADDRESS
   658			000442		$STL=	442		;PDP-10 LOADER START ADDRESS
   659			000443		$STM=	443		;PDP-10 MONITOR START ADDRESS
   660
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 2
SPCCPU	KSM	28-Mar-78 11:24		*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, MARCH 1978                           SEQ 0025

   661					;SPECIAL "FIXED" REASSIGNMENTS
   662
   663			030600			$$LOC=.			;SAVE CURRENT LOCATION
   664
   665	030000					LOC	30000
   666	030000	254 00 0 00 030600 	$$BEGIN:JRST	$$START		;SETUP SPECIAL START
   667	030001	254 00 0 00 030600 		JRST	$$START		;"DIAMON" CHAIN START ADDRESS
   668
   669	000440					LOC	440
   670	000440	254 00 0 00 030000 	$STD:	JRST	BEGIN		;SETUP FOR "STD"
   671
   672	030057					LOC	30057
   673	030057	254 00 0 00 030613 	$BEGEND:JRST	$SPBEND		;SETUP SPECIAL "BEGEND"
   674
   675					;SPECIAL MUUO, TRAP & PAGE FAIL SETUP
   676
   677	000420					LOC	420
   678	000420	254 04 0 00 000420 	$$420:	HALT	.
   679	000421	255 00 0 00 000000 	$$421:	JFCL			;OVERFLOW
   680	000422	254 04 0 00 000422 	$$422:	HALT	.		;PUSHDOWN OVERFLOW
   681	000423	254 04 0 00 000423 	$$423:	HALT	.		;TRAP 3
   682	000424	000000	000000		$$424:	0			;MMUO
   683	000425	000000	000000		$$425:	0			;MMUO PC
   684	000426	000000	000000		$$426:	0			;KS-10 PROCESS CONTEXT
   685	000427	254 04 0 00 000427 	$$427:	HALT	.
   686	000430	000000	000427		$$430:	427			;MMUO NEW PC'S
   687	000431	000000	000427		$$431:	427
   688	000432	000000	000427		$$432:	427
   689	000433	000000	000427		$$433:	427
   690	000434	000000	000427		$$434:	427
   691	000435	000000	000427		$$435:	427
   692	000436	000000	000427		$$436:	427
   693	000437	000000	000427		$$437:	427
   694
   695	000500					LOC	500
   696	000500	000000	000000		$$500:	0			;KS-10 PAGE FAIL WORD
   697	000501	000000	000000		$$501:	0			;KS-10 PAGE FAIL PC
   698	000502	000000	000503		$$502:	503			;KS-10 PAGE FAIL NEW PC
   699	000503	254 04 0 00 000503 	$$503:	HALT	.
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 3
SPCCPU	KSM	28-Mar-78 11:24		*SPCCPU* SPECIAL BASIC CPU PROCESSOR CONTROL, MARCH 1978                           SEQ 0026

   700	030600					LOC	$$LOC		;RESET CURRENT LOCATION
   701
   702					;SPECIAL STARTUP SEQUENCE
   703
   704	030600	402 00 0 00 030037 	$$START:SETZM	USER
   705	030601	265 00 0 00 030602 		JSP	0,.+1		;IN USER MODE ?
   706	030602	603 00 0 00 010000 		TLNE	0,USERF
   707	030603	476 00 0 00 030037 		SETOM	USER		;YES, SET CONTROL WORD
   708	030604	336 00 0 00 030042 		SKIPN	MONFLG		;SPECIAL USER MODE ?
   709	030605	402 00 0 00 030037 		SETZM	USER		;YES, RUN AS EXEC
   710	030606	332 00 0 00 030037 		SKIPE	USER
   711	030607	254 00 0 00 030631 		JRST	START		;USER MODE, DON'T NEED CPU TYPE
   712
   713	030610	336 00 0 00 030044 	$STKIL:	SKIPN	MONTEN		;LOADED BY "DIAMON" ?
   714	030611	476 00 0 00 030024 		SETOM	ITRCNT		;NO, RUN FOREVER
   715	030612	254 00 0 00 030631 		JRST	START		;KS-10, NO ADDITIONAL SETUP
   716
   717					;SPECIAL "BEGEND" ROUTINE
   718
   719	030613	350 00 0 00 030047 	$SPBEND:AOS	PASCNT		;INCREMENT PASS COUNT
   720	030614	370 00 0 00 030024 		SOS	ITRCNT		;DECREMENT ITERATION COUNT
   721	030615	336 00 0 00 030037 	$SPB1:	SKIPN	USER
   722	030616	254 00 0 00 030624 		JRST	$SPBEX		;EXEC MODE
   723
   724	030617	332 00 0 00 030024 	$SPBUS:	SKIPE	ITRCNT		;USER MODE, COMPLETED ?
   725	030620	254 00 0 00 030660 		JRST	STARTA		;NO, KEEP RUNNING
   726	030621	336 00 0 00 030044 		SKIPN	MONTEN		;DONE, LOADED BY "DIAMON" ?
   727	030622	047 00 0 00 000012 		EXIT			;NO, RETURN TO MONITOR
   728	030623	254 00 1 00 030012 		JRST	@RETURN		;YES, RETURN TO "DIAMON"
   729
   730	030624	332 00 0 00 030024 	$SPBEX:	SKIPE	ITRCNT
   731	030625	254 00 0 00 030660 		JRST	STARTA		;NOT COMPLETED YET
   732	030626	336 00 0 00 030044 		SKIPN	MONTEN		;DONE, LOADED BY "DIAMON" ?
   733	030627	254 04 0 00 030000 		HALT	BEGIN		;NO, HALT AT BEGINNING
   734	030630	254 00 1 00 030012 		JRST	@RETURN		;DONE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1
DSKAH1	MAC	31-Mar-78 11:13		DIAGNOSTIC SECTION                                                                 SEQ 0027

   735					SUBTTL	DIAGNOSTIC SECTION
   736
   737	030631	402 00 0 00 030037 	START:	SETZM	USER#		;CLEAR USER CONTROL WORD
   738	030632	265 00 0 00 030633 		JSP	0,.+1		;GET FLAGS
   739	030633	603 00 0 00 010000 		TLNE	USERF		;IN USER MODE?
   740	030634	476 00 0 00 030037 		SETOM	USER		;YES, SET USER CONTROL WORD
   741	030635	336 00 0 00 030042 		SKIPN	MONFLG		;SPECIAL USER MODE?
   742	030636	402 00 0 00 030037 		SETZM	USER		;YES, CLEAR USER CONTROL WORD
   743	030637	336 00 0 00 030037 		SKIPN	USER
   744	030640	254 00 0 00 030660 		JRST	STARTA
   745	030641	331 00 0 00 030043 		SKIPL	MONCTL
   746	030642	051 03 0 00 030644 		TTCALL	3,PGMNAM
   747	030643	254 00 0 00 030660 		JRST	STARTA
   748
   749	030644				PGMNAM:	ASCIZ/
   750	030644	015 012 104 105 103 	DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) [DSKAH]
   751	030645	123 131 123 124 105 
   752	030646	115 055 062 060 062 
   753	030647	060 040 102 101 123 
   754	030650	111 103 040 111 116 
   755	030651	123 124 122 125 103 
   756	030652	124 111 117 116 040 
   757	030653	104 111 101 107 116 
   758	030654	117 123 124 111 103 
   759	030655	040 050 070 051 040 
   760	030656	133 104 123 113 101 
   761	030657	110 135 015 012 000 	/
   762
   763					;BASIC INSTRUCTION TEST (8)
   764					;THE TEST IS DESIGNED FOR INITIAL DEBUGGING OF
   765					;PROCESSOR HARDWARE AND TO DETECT (SOLID) FAILURES
   766					;IN THE FIELD.
   767
   768
   769	030660	254 00 0 00 030661 	STARTA:	JRST	.+1
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 2
DSKAH1	MAC	31-Mar-78 11:13		PI/IOT/APR DIAGNOSTIC SECTION                                                      SEQ 0028

   770					SUBTTL	PI/IOT/APR DIAGNOSTIC SECTION
   771
   772	030661	402 00 0 00 030037 	BEGIOT:	SETZM	USER		;CLEAR USER CONTROL WORD
   773	030662	265 00 0 00 030663 		JSP	0,.+1		;GET FLAGS
   774	030663	603 00 0 00 010000 		TLNE	USERF		;IN USER MODE ?
   775	030664	476 00 0 00 030037 		SETOM	USER		;YES, SET USER CONTROL WORD
   776	030665	336 00 0 00 030042 		SKIPN	MONFLG		;SPECIAL USER MODE ?
   777	030666	402 00 0 00 030037 		SETZM	USER		;YES, CLEAR USER CONTROL WORD
   778	030667	336 00 0 00 030037 		SKIPN	USER
   779	030670	254 00 0 00 030672 		JRST	IOT0		;RUN IOT TEST ONLY IN EXEC MODE
   780
   781	030671	254 00 0 00 030057 		JRST	BEGEND		;OTHERWISE START OVER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 3
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0029

   782					SUBTTL	MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS
   783
   784						LALL
   785
   786					;OPERATOR DEFINITIONS
   787
   788		264000	040047			OPDEF	TRPPI	[JSR	TRAPPI]	;FILL INTERRUPT LOCATIONS
   789		264000	040032			OPDEF	HALTPI	[JSR	HALTPI]	;FILL INT. LOC. WITH HALTS
   790		264000	040021			OPDEF	CLRTRP	[JSR	TRPCLR]	;CLEAR TRAPS
   791
   792		700200	261600			OPDEF	CLRAPR	[CONO APR,LIOCLR!LCNXER!LCPAER!LCPWRF!LDNXER!LDPAER!LDPWRF]
   793		700600	031577			OPDEF	CLRPI	[CONO PI,LRQCLR!PICLR!CHNOFF!PIOFF!177]
   794
   795					;MACROS
   796
   797						DEFINE	BLURB	<
   798					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
   799					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
   800					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
   801					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
   802					>
   803						DEFINE	BLURB1	<
   804					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
   805					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
   806					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
   807					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
   808					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
   809					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
   810					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
   811					>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 4
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0030

   812						DEFINE	WATINT<
   813						MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
   814						SOJG	13,.		;AND WAIT>
   815
   816						DEFINE	STOP2<
   817						HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
   818						JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.>
   819
   820						DEFINE	TSET<
   821						%X=.			;DEFINE %X TO SAVE
   822						MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
   823						MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT>
   824
   825						DEFINE	TGET<
   826						MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
   827						CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
   828						STOP2>
   829
   830						DEFINE	TBOTH<
   831						TGET
   832						TSET>
   833
   834						DEFINE	PINO	(A,%NO)<
   835					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
   836					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
   837					
   838						TSET
   839					%NO:	CLRBTH
   840						CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
   841						WATINT
   842						CONSZ	PI,A		;CHECK WHY INT. IN PROGRESS IS SET.
   843						STOP
   844						TGET>
   845
   846						DEFINE	PIYES	(A,B,%YES)<
   847					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
   848					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
   849					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
   850					
   851						TSET
   852					%YES:	CLRBTH
   853						CONO	PI,REQSET+A	;SET CHANNEL REQUEST BUT NOT ACTIVE
   854						WATINT
   855						CONSZ	PI,B		;CHECK WHY INT. IN PROGRESS IS SET.
   856						STOP
   857						TGET>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 5
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0031

   858						DEFINE	PIHCLR	(A,B,%HCLR)<
   859					;CHECK THAT PICLR CLEARS THE HOLD FLOP
   860					
   861						TSET
   862					%HCLR:	CLRBTH
   863						CONO	PI,REQSET+PION+A	;CAUSE INT. TO SET HOLD
   864						WATINT
   865						CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
   866						CONSZ	PI,B		;HOLD FLOP FAILED TO CLEAR.
   867						STOP
   868						TGET>
   869
   870						DEFINE	PIONOF	(A,%ONOF)<
   871					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
   872					;AND THAT AN INTERUPT DOES NOT OCCUR
   873					
   874					BLURB1
   875					
   876						TSET
   877					%ONOF:	CLRBTH
   878						CONO	PI,REQSET+A	;SET REQ. BUT NOT ACTIVE
   879						SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
   880						CONO	PI,PICLR+A	;PI RESET FAILED TO CLEAR PIR FLAG.
   881						WATINT
   882						SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
   883						STOP
   884						TGET>
   885
   886						DEFINE	PIDIS	(A,B,%PICHK)<
   887					;CHECK THAT A JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
   888					
   889						TSET
   890					%PICHK:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
   891						MOVEM	A		;INTO A
   892						CONO	PI,CHNON+PION+REQSET+B	;TURN ON PI AND REQEST ON CH B
   893						WATINT
   894						JRST	.+4
   895						0
   896						CONO	PI,CHNON+PION+LRQCLR+B	;TURN OF INTERRUPT REQUEST
   897						JEN	@.-2		;DISMISS THE INTERRUPT
   898						CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
   899						STOP
   900						TGET
   901						CLRBTH>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 6
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0032

   902						DEFINE	PITEST	(A,%PITST)<
   903					;TEST SETTING OF CHANNEL FLOP
   904					
   905						TSET
   906					%PITST:	CLRBTH
   907						CONO	PI,CHNON+A	;PION FAILED TO SET
   908						CONSO	PI,A
   909						STOP
   910						TBOTH
   911						CLRBTH
   912					;TEST CLEARING OF CHANNEL FLOP
   913						CONO	PI,CHNON+A	;CHECK PIO CLR
   914						CONO	PI,CHNOFF+A	;TURN OFF CHANNELS
   915						CONSZ	PI,A		;CHECK WHY FLOP NOT CLEAR
   916						STOP
   917						TBOTH
   918						CLRBTH
   919					;CHECK RESETING OF PI SYSTEM
   920						CONO	PI,CHNON+A	;CHECK THAT PI RESET CLEARS
   921						CONO	PI,PICLR	;PI SYSTEM
   922						CONSZ	PI,A
   923						STOP
   924						TBOTH
   925						CLRBTH
   926					;TEST THAT CONO ONLY SETS PION
   927						CONO	PI,CHNON	;TEST PIO SET
   928						CONSZ	PI,A		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
   929						STOP
   930						TBOTH
   931						CLRBTH
   932					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
   933						CONO	PI,CHNON+A	;TEST PIO CLR
   934						CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
   935						CONSO	PI,A		;BE SET
   936						STOP
   937						TGET>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 7
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0033

   938						DEFINE	EXECUT<
   939					;FILL THE INTERRUPT LOCATIONS WITH "MOVEI'S"
   940						MOVE	1,[MOVEI 42]	;STORE A MOVEI IN
   941						MOVEM	1,(1)		;INTO 42-60
   942						CAME	1,[MOVEI 57]
   943						AOJA	1,.-2		;LOOP>
   944
   945						DEFINE	STOP<
   946						HALT	.+1		;INSTRUCTION FAILED REPLACE
   947						JRST	.+1		;WITH JRST BACK>
   948
   949						DEFINE	STOP1<
   950						HALT	.+1		;UUO FAILED TO STORE MA BITS
   951						JRST	.+1		;INTO RIGHT HALF OF 40>
   952
   953						DEFINE	XUUO	(X,Y,%XUO)<
   954					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
   955					;ARE CORRECT.
   956					
   957						MLUUO==X		;THE UUO TO BE EXECUTED
   958						TSET
   959					%XUO:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
   960						MOVEM	0,41		;IN TO 41
   961						X			;EXECUTE A UUO
   962						HALT	.+1		;UUO DID NOT TRAP TO FORTY
   963						MOVEI	2,.-1		;GET UUO PC
   964						ANDI	1,-1		;MASK FLAGS OUT
   965						CAME	1,2		;PC CORRECT ?
   966						HALT	.+1		;PC OF UUO NOT = TO PC STORED
   967						MOVE	0,40		;GET UUO !
   968						CAME	0,[X!0]		;CORRECT UUO STORED IN 40?
   969						SKIPA			;NO
   970						JRST	Y		;TESTS OK !
   971						STOP1
   972						TGET>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 8
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0034

   973						DEFINE	XUUOA	(X,%UUPC,%XUPC0,%XUPC1)<
   974					
   975					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
   976					
   977						EFIELD==X		;"E" WE ARE TESTING FOR
   978						TSET
   979					%UUPC:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
   980						MOVEM	41		;INTO 41
   981						1B8!X			;EXECUTE A UUO
   982					%XUPC0:	HALT	.+1		;UUO DIDN'T TRAP TO 40
   983						MOVE	0,40		;GET UUO
   984						ANDI	0,-1		;MASK OUT UUO FOR MA BITS
   985						CAIE	X		;MA BITS CORRECT?
   986					%XUPC1:	STOP1
   987						TGET>
   988
   989						DEFINE	CLRBTH<
   990						CLRAPR
   991						CLRPI>
   992
   993						DEFINE	CLRBT1<
   994						CLRAPR
   995						CLRPI>
   996
   997						DEFINE	TRAP	(A,B)<
   998						MOVE	[A]		;SET TRAP INSTRUCTION
   999						MOVEM	B		;INTO TRAP LOCATION>
  1000
  1001						DEFINE	STUCK<
  1002						WATINT
  1003						JRST	.		;LOOP ON SELF>
  1004
  1005						DEFINE	SBWAIT	(A,%CLKUP)<
  1006					%CLKUP:	CONO	APR,LEPSFT!LSPSFT!A
  1007						STUCK>			;WAIT FOR ERRORS
  1008
  1009						DEFINE	TRPCHK	(%TPC)<
  1010					%TPC:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  1011						JRST	.+3		;DONT IF STAND ALONE
  1012						JRSTF	@.+1		;AND RESTORE THEM
  1013						USERF,.+1		;NEW PC AND FLAGS>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 9
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0035

  1014						DEFINE	XCHN2	(A,B,C)<
  1015					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  1016					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  1017					;IF ERROR OCCURS CHECK "PIN" PRINT
  1018					
  1019						TRPCHK
  1020						CLRBTH
  1021						HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  1022						MOVE	[JSR A]		;SET UP FOR CORRECT
  1023						MOVEM	B		;INTERRUPT TRAP
  1024						CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  1025						CONO	PI,REQSET!C	;REQUEST INTERRUPT ON TWO CHANNELS
  1026						STUCK>
  1027
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 10
DSKAH1	MAC	31-Mar-78 11:13		MACRO'S OPDEFS AND SPECIAL FLAG DEFINITIONS                                        SEQ 0036

  1028						DEFINE	FMUUO	(A,%FMTST,%NOFM),<
  1029					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  1030					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  1031					;CORRECT PC.
  1032					
  1033						AC=A			;TESTED AC
  1034					
  1035						TSET
  1036						MOVE	A,[XWD 1000,0]	;SET UP UUO INTO AC A TO EXECUTE
  1037						MOVE	13,[JSP 11,%FMTST] ;SET UP UUO TRAP INSTRUCTION
  1038						MOVEM	13,41		;INTO LOCATION 41
  1039						MOVE	A+1,[JRST %NOFM] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  1040						JRST	A		;GO EXECUTE  UUO
  1041					%NOFM:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  1042						JRST	.+1		;LOOP TO %FMUUO IF ERROR
  1043					%FMTST:	ANDI	11,-1		;MASK FLAGS
  1044						CAIE	11,A+1		;PC STORED SHOULD = A +1
  1045						STOP
  1046						TGET>
  1047
  1048						DEFINE	INDPI	(A,B,%XX),<
  1049					;GET OURSELVES INTO A TIGHT INDIRECT LOOP.
  1050					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  1051					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  1052					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  1053					
  1054						TSET
  1055						MOVEI	10,^D10		;TIMES TO DO THIS TEST
  1056						MOVEM	10,COUNTX#	;STORE IT
  1057						MOVE	10,[JSR	%XX]	;INTERRUPT TRAP INSTRUCTION
  1058						MOVEM	10,A		;STORE FOR INTERRUPT REQUEST
  1059						CLRBT1
  1060						CONO	PI,2377		;TURN ON PI AND CHANNELS
  1061						CONO	APR,LEPSFT!LSPSFT!B	;ENABLE AND SET ERRORS,ENABLE CH B
  1062						JRST	@.		;LOOP
  1063						HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  1064					%XX:	0
  1065						TGET
  1066						MOVE	1,%XX		;GET STORED PC
  1067						ANDI	1,-1		;MASK PC BITS
  1068						CAIE	1,%XX-2		;WAS CORRECT PC STORED?
  1069						STOP
  1070						SOSE	COUNTX		;LOOP TEST
  1071						JEN	@1		;DISMISS INTERRUPT
  1072						CLRBTH>
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 11
DSKAH1	MAC	31-Mar-78 11:13		IOT TESTING                                                                        SEQ 0037

  1073					SUBTTL	IOT TESTING
  1074
  1075					;IF IOT HANGS - CHECK ARRT AND ARLT CLR
  1076					;AND OR AR SIGN SMEAR..
  1077
  1078					;TEST THE IOT'S
  1079	030672				IOTXXX:
  1080
  1081	030672				IOTXX:
  1082	030672	700 20 00 00 261600 	IOT0:	CLRAPR			;CLEAR APR
  1083	030673	700 14 0 00 031577 		CLRPI			;CLEAR PI
  1084	030674	7 000 20 0 00 060160 		CONO	APR,60160	;DISABLE SOFT,CLK,8080
  1085	030675	264 00 0 00 040216 		JSR	TRPSET		;FILL THE TRAP LOCATIONS
  1086
  1087	030676	200 01 0 00 040236 	IOT2:	MOVE	1,[123456654321]	;CHECK CONI STOR THE CONTENTS OF "E" NOT SET OR
  1088	030677	7 000 24 0 00 000001 		CONI	1		;SAC INH NOT SET - CONTENTS OF LOC 1
  1089	030700	316 01 0 00 040236 		CAMN	1,[123456654321]	;NOT MODIFIED
  1090						STOP^
  1091	030701	254 04 0 00 030702 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1092	030702	254 00 0 00 030703 		JRST	.+1		;WITH JRST BACK^
  1093
  1094	030703	474 00 0 00 000000 	IOT3:	SETO			;CHECK SAC INH FOR
  1095	030704	7 000 24 0 00 000001 		CONI	1		;CONI LOC 0
  1096	030705	312 00 0 00 040237 		CAME	[-1]		;MODIFIED
  1097						STOP^
  1098	030706	254 04 0 00 030707 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1099	030707	254 00 0 00 030710 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 12
DSKAH1	MAC	31-Mar-78 11:13		IOT TESTING                                                                        SEQ 0038

  1100
  1101						TSET^
  1102			030710			%X=.			;DEFINE %X TO SAVE
  1103	030710	201 00 0 00 030710 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1104	030711	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1105	030712	400 00 0 00 000000 	IOT6:	SETZ			;CONSZ FAILED TO SKIP
  1106	030713	7 000 30 0 00 000000 		CONSZ			;CHECK PC CLOCK ENABLE AND AD=0 ON IOT CONSZ
  1107						STOP^
  1108	030714	254 04 0 00 030715 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1109	030715	254 00 0 00 030716 		JRST	.+1		;WITH JRST BACK^
  1110
  1111	030716	7 004 20 0 00 010000 	IOT14:	CONO	PI,10000	;CLR PI SYSTEM
  1112	030717	7 000 20 0 00 000077 		CONO	77		;SET SOME CPA BITS
  1113	030720	7 000 24 0 00 000000 		CONI	0		;IF FAILED EITHER CONO FAILED
  1114	030721	336 00 0 00 000000 		SKIPN	0		;IO SET OR CONI FAILED READ
  1115						STOP^
  1116	030722	254 04 0 00 030723 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1117	030723	254 00 0 00 030724 		JRST	.+1		;WITH JRST BACK^
  1118									;OR ARRT OR ARLT EN OR AR SIGN
  1119									;SMEAR OR CPA SELECT NOT ASSERTED
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 13
DSKAH1	MAC	31-Mar-78 11:13		TEST APR FLAGS                                                                     SEQ 0039

  1120					SUBTTL	TEST APR FLAGS
  1121
  1122	030724	7 000 20 0 00 000000 	IOT15:	CONO			;APR CLOCK PIA FAILED EITHER
  1123	030725	7 000 20 0 00 000001 		CONO	1		;TO SET OR BE READ
  1124	030726	7 000 24 0 00 000000 		CONI			;CHECK APR PIA 35 CLOCK
  1125	030727	606 00 0 00 000001 		TRNN	1
  1126						STOP^
  1127	030730	254 04 0 00 030731 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1128	030731	254 00 0 00 030732 		JRST	.+1		;WITH JRST BACK^
  1129
  1130	030732	7 000 20 0 00 000000 	IOT15A:	CONO			;APR CLOCK PIA FAILED EITHER
  1131	030733	7 000 20 0 00 000002 		CONO	2		;TO SET OR BE READ
  1132	030734	7 000 24 0 00 000000 		CONI			;CHECK APR PIA 34 CLOCK
  1133	030735	606 00 0 00 000002 		TRNN	2
  1134						STOP^
  1135	030736	254 04 0 00 030737 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1136	030737	254 00 0 00 030740 		JRST	.+1		;WITH JRST BACK^
  1137
  1138	030740	7 000 20 0 00 000000 	IOT16:	CONO			;APR CLOCK PIA FAILED EITHER
  1139	030741	7 000 20 0 00 000004 		CONO	4		;TO SET OR BE READ
  1140	030742	7 000 24 0 00 000000 		CONI			;CHECK APR PIA 33 CLOCK
  1141	030743	606 00 0 00 000004 		TRNN	4		;
  1142						STOP^
  1143	030744	254 04 0 00 030745 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1144	030745	254 00 0 00 030746 		JRST	.+1		;WITH JRST BACK^
  1145
  1146	030746	700 04 0 00 261600 	IOT17:	CLRAPR			;APR ERROR PIA FAILED EITHER
  1147	030747	7 000 20 0 00 011000 		CONO	APR,LSPWRF		;TO SET OR BE READ
  1148	030750	7 000 24 0 00 000000 		CONI			;CHECK APR PIA 31 ERROR
  1149	030751	606 00 0 00 001000 		TRNN	LPWRFL
  1150						STOP^
  1151	030752	254 04 0 00 030753 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1152	030753	254 00 0 00 030754 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 14
DSKAH1	MAC	31-Mar-78 11:13		TEST APR FLAGS                                                                     SEQ 0040

  1153	030754	700 04 0 00 261600 	IOT18:	CLRAPR
  1154	030755	7 000 20 0 00 010200 		CONO	APR,LSPAER
  1155	030756	7 000 24 0 00 000000 		CONI	APR,
  1156	030757	606 00 0 00 000200 		TRNN	LPARER
  1157						STOP^
  1158	030760	254 04 0 00 030761 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1159	030761	254 00 0 00 030762 		JRST	.+1		;WITH JRST BACK^
  1160	030762	700 04 0 00 261600 		CLRAPR
  1161	030763	7 000 20 0 00 010400 		CONO	APR,LSNXER
  1162	030764	7 000 24 0 00 000000 		CONI	APR,
  1163	030765	606 00 0 00 000400 		TRNN	LNXMER
  1164						STOP^
  1165	030766	254 04 0 00 030767 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1166	030767	254 00 0 00 030770 		JRST	.+1		;WITH JRST BACK^
  1167	030770	700 04 0 00 261600 		CLRAPR
  1168	030771	7 000 20 0 00 010100 		CONO	APR,LSPSFT
  1169	030772	7 000 24 0 00 000000 		CONI	APR,
  1170	030773	606 00 0 00 000100 		TRNN	LPSFTER
  1171						STOP^
  1172	030774	254 04 0 00 030775 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1173	030775	254 00 0 00 030776 		JRST	.+1		;WITH JRST BACK^
  1174	030776	700 04 0 00 261600 		CLRAPR
  1175
  1176	030777	7 000 20 0 00 000001 	IOT18A:	CONO	1
  1177	031000	7 000 20 0 00 000000 		CONO
  1178	031001	7 000 24 0 00 000000 		CONI
  1179	031002	602 00 0 00 000001 		TRNE	1
  1180						STOP^
  1181	031003	254 04 0 00 031004 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1182	031004	254 00 0 00 031005 		JRST	.+1		;WITH JRST BACK^
  1183	031005	7 000 20 0 00 000002 	IOT19:	CONO	2		;APR PIA 34 CLOCK
  1184	031006	7 000 20 0 00 000000 		CONO			;FAILED TO CLEAR
  1185	031007	7 000 24 0 00 000000 		CONI
  1186	031010	602 00 0 00 000002 		TRNE	2
  1187						STOP^
  1188	031011	254 04 0 00 031012 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1189	031012	254 00 0 00 031013 		JRST	.+1		;WITH JRST BACK^
  1190
  1191	031013	7 000 20 0 00 000004 	IOT20:	CONO	4		;APR PIA 33 CLOCK
  1192	031014	7 000 20 0 00 000000 		CONO			;FAILED TO CLEAR
  1193	031015	7 000 24 0 00 000000 		CONI
  1194	031016	602 00 0 00 000004 		TRNE	4
  1195						STOP^
  1196	031017	254 04 0 00 031020 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1197	031020	254 00 0 00 031021 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 15
DSKAH1	MAC	31-Mar-78 11:13		TEST APR FLAGS                                                                     SEQ 0041

  1198	031021	7 000 20 0 00 011000 	IOT22:	CONO	APR,LSPWRF		;APR PIA 31 ERROR
  1199	031022	7 000 20 0 00 021000 		CONO	APR,LCPWRF		;FAILED TO CLEAR
  1200	031023	7 000 24 0 00 000000 		CONI
  1201	031024	602 00 0 00 001000 		TRNE	LPWRFL
  1202						STOP^
  1203	031025	254 04 0 00 031026 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1204	031026	254 00 0 00 031027 		JRST	.+1		;WITH JRST BACK^
  1205
  1206	031027	7 000 20 0 00 010200 		CONO	APR,LSPAER
  1207	031030	7 000 20 0 00 020200 		CONO	APR,LCPAER
  1208	031031	7 000 24 0 00 000000 		CONI
  1209	031032	602 00 0 00 000200 		TRNE	LPARER
  1210						STOP^
  1211	031033	254 04 0 00 031034 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1212	031034	254 00 0 00 031035 		JRST	.+1		;WITH JRST BACK^
  1213	031035	7 000 20 0 00 010400 		CONO	APR,LSNXER
  1214	031036	7 000 20 0 00 020400 		CONO	APR,LCNXER
  1215	031037	7 000 24 0 00 000000 		CONI
  1216	031040	602 00 0 00 000400 		TRNE	LNXMER
  1217						STOP^
  1218	031041	254 04 0 00 031042 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1219	031042	254 00 0 00 031043 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 16
DSKAH1	MAC	31-Mar-78 11:13		TEST APR FLAGS                                                                     SEQ 0042

  1220						TBOTH^
  1221						TGET^
  1222	031043	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1223	031044	302 00 0 00 030710 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1224						STOP2^^
  1225	031045	254 04 0 00 031046 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1226	031046	254 00 0 00 031047 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1227						TSET^^
  1228			031047			%X=.			;DEFINE %X TO SAVE
  1229	031047	201 00 0 00 031047 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1230	031050	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1231	031051	7 000 20 0 00 000007 	IOT24:	CONO	7		;SET SOME FLAGS
  1232	031052	7 000 34 0 00 000000 		CONSO			;CONSO FAILED CK PC CLOCK ENABLE
  1233	031053	334 00 0 00 000000 		SKIPA			;INH
  1234						STOP^
  1235	031054	254 04 0 00 031055 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1236	031055	254 00 0 00 031056 		JRST	.+1		;WITH JRST BACK^
  1237
  1238						TBOTH^
  1239						TGET^
  1240	031056	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1241	031057	302 00 0 00 031047 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1242						STOP2^^
  1243	031060	254 04 0 00 031061 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1244	031061	254 00 0 00 031062 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1245						TSET^^
  1246			031062			%X=.			;DEFINE %X TO SAVE
  1247	031062	201 00 0 00 031062 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1248	031063	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1249	031064	7 000 20 0 00 000007 	IOT25:	CONO	7		;SET SOME FLAGS
  1250	031065	7 000 24 0 00 000000 		CONI
  1251	031066	606 00 0 00 000007 		TRNN	7		;CONSO FAILED CH PC CLOCK ENABLE
  1252						STOP^
  1253	031067	254 04 0 00 031070 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1254	031070	254 00 0 00 031071 		JRST	.+1		;WITH JRST BACK^
  1255
  1256						TBOTH^
  1257						TGET^
  1258	031071	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1259	031072	302 00 0 00 031062 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1260						STOP2^^
  1261	031073	254 04 0 00 031074 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1262	031074	254 00 0 00 031075 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1263						TSET^^
  1264			031075			%X=.			;DEFINE %X TO SAVE
  1265	031075	201 00 0 00 031075 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1266	031076	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1267	031077	7 000 20 0 00 000007 	IOT26:	CONO	7		;CONSZ FAILED
  1268	031100	7 000 24 0 00 000000 		CONI
  1269	031101	602 00 0 00 000007 		TRNE	7		;CK PC CLOCK ENABLE IF AD=0
  1270	031102	334 00 0 00 000000 		SKIPA			;AND IOT TIME
  1271						STOP^
  1272	031103	254 04 0 00 031104 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1273	031104	254 00 0 00 031105 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 17
DSKAH1	MAC	31-Mar-78 11:13		TEST PI FLAGS                                                                      SEQ 0043

  1274					SUBTTL	TEST PI FLAGS
  1275
  1276	031105	7 000 20 0 00 000007 	IOT33B:	CONO	7		;CONO PI MODIFIED
  1277	031106	7 004 20 0 00 000000 		CONO	PI,0		;CPU AS A DEVICE
  1278	031107	7 000 24 0 00 000000 		CONI
  1279	031110	606 00 0 00 000007 		TRNN	7		;CPA SELECT IS CONFUSED
  1280						STOP^
  1281	031111	254 04 0 00 031112 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1282	031112	254 00 0 00 031113 		JRST	.+1		;WITH JRST BACK^
  1283	031113	7 000 20 0 00 000000 		CONO	0		;RESET BITS
  1284
  1285	031114	7 004 20 0 00 000200 	IOT34:	CONO	PI,200		;CHK WHY PI ON
  1286	031115	7 004 24 0 00 000000 		CONI	PI,		;FLOP NOT SET
  1287	031116	606 00 0 00 000200 		TRNN	200
  1288						STOP^
  1289	031117	254 04 0 00 031120 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1290	031120	254 00 0 00 031121 		JRST	.+1		;WITH JRST BACK^
  1291
  1292	031121	7 004 20 0 00 000200 	IOT35:	CONO	PI,200		;CHK WHY PI ON
  1293	031122	7 004 20 0 00 000400 		CONO	PI,400		;NOT CLEARED
  1294	031123	7 004 24 0 00 000000 		CONI	PI,		;
  1295	031124	602 00 0 00 000200 		TRNE	200
  1296						STOP^
  1297	031125	254 04 0 00 031126 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1298	031126	254 00 0 00 031127 		JRST	.+1		;WITH JRST BACK^
  1299
  1300	031127				IOT36:
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 18
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0044

  1301					SUBTTL	BASIC PI SYSTEM TESTING
  1302
  1303					;BEGIN TESTING THE PI SYSTEM
  1304						BLURB^
  1305					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
  1306					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  1307					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  1308					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  1309					^
  1310					;AND THE PROGRAM WILL HALT POINTING TO THE INTERUPTED ADRESS.
  1311	031127	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  1312
  1313
  1314	031130	7 004 20 0 00 002001 	IOT38:	CONO	PI,2001		;PI CHANNEL 7
  1315	031131	7 004 24 0 00 000000 		CONI	PI,		;FAILED TO SET
  1316	031132	606 00 0 00 000001 		TRNN	1		;
  1317						STOP^
  1318	031133	254 04 0 00 031134 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1319	031134	254 00 0 00 031135 		JRST	.+1		;WITH JRST BACK^
  1320
  1321	031135	7 004 20 0 00 002001 	IOT39:	CONO	PI,2001		;PI CHANNEL 7
  1322	031136	7 004 20 0 00 001001 		CONO	PI,1001		;FAILED TO CLEAR
  1323	031137	7 004 24 0 00 000000 		CONI	PI,
  1324	031140	602 00 0 00 000001 		TRNE	1
  1325						STOP^
  1326	031141	254 04 0 00 031142 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1327	031142	254 00 0 00 031143 		JRST	.+1		;WITH JRST BACK^
  1328
  1329	031143	7 004 20 0 00 002002 	IOT40:	CONO	PI,2002		;PI CHANNEL 6
  1330	031144	7 004 24 0 00 000000 		CONI	PI,		;FAILED TO SET
  1331	031145	606 00 0 00 000002 		TRNN	2
  1332						STOP^
  1333	031146	254 04 0 00 031147 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1334	031147	254 00 0 00 031150 		JRST	.+1		;WITH JRST BACK^
  1335
  1336	031150	7 004 20 0 00 002002 	IOT41:	CONO	PI,2002		;PI CHANNEL 6
  1337	031151	7 004 20 0 00 001002 		CONO	PI,1002		;FAILED TO CLEAR
  1338	031152	7 004 24 0 00 000000 		CONI	PI,
  1339	031153	602 00 0 00 000002 		TRNE	2
  1340						STOP^
  1341	031154	254 04 0 00 031155 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1342	031155	254 00 0 00 031156 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 19
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0045

  1343	031156	7 004 20 0 00 002004 	IOT42:	CONO	PI,2004		;PI CHANNEL 5
  1344	031157	7 004 24 0 00 000000 		CONI	PI,		;FAILED TO SET
  1345	031160	606 00 0 00 000004 		TRNN	4
  1346						STOP^
  1347	031161	254 04 0 00 031162 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1348	031162	254 00 0 00 031163 		JRST	.+1		;WITH JRST BACK^
  1349
  1350	031163	7 004 20 0 00 002004 	IOT43:	CONO	PI,2004		;PI CHANNEL 5
  1351	031164	7 004 20 0 00 001004 		CONO	PI,1004		;FAILED TO CLEAR
  1352	031165	7 004 24 0 00 000000 		CONI	PI,
  1353	031166	602 00 0 00 000004 		TRNE	4
  1354						STOP^
  1355	031167	254 04 0 00 031170 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1356	031170	254 00 0 00 031171 		JRST	.+1		;WITH JRST BACK^
  1357
  1358	031171	7 004 20 0 00 002010 	IOT44:	CONO	PI,2010		;PI CHANNEL 4
  1359	031172	7 004 24 0 00 000000 		CONI	PI,		;FAILED TO SET
  1360	031173	606 00 0 00 000010 		TRNN	10
  1361						STOP^
  1362	031174	254 04 0 00 031175 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1363	031175	254 00 0 00 031176 		JRST	.+1		;WITH JRST BACK^
  1364
  1365	031176	7 004 20 0 00 002010 	IOT45:	CONO	PI,2010		;PI CHAN 4
  1366	031177	7 004 20 0 00 001010 		CONO	PI,1010		;FAILED TO CLEAR
  1367	031200	7 004 24 0 00 000000 		CONI	PI,
  1368	031201	602 00 0 00 000010 		TRNE	10
  1369						STOP^
  1370	031202	254 04 0 00 031203 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1371	031203	254 00 0 00 031204 		JRST	.+1		;WITH JRST BACK^
  1372
  1373	031204	7 004 20 0 00 002020 	IOT46:	CONO	PI,2020		;PI CHAN 3
  1374	031205	7 004 24 0 00 000000 		CONI	PI,		;FAILED TO SET
  1375	031206	606 00 0 00 000020 		TRNN	20
  1376						STOP^
  1377	031207	254 04 0 00 031210 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1378	031210	254 00 0 00 031211 		JRST	.+1		;WITH JRST BACK^
  1379
  1380	031211	7 004 20 0 00 002020 	IOT47:	CONO	PI,2020		;PI CHAN 3
  1381	031212	7 004 20 0 00 001020 		CONO	PI,1020		;FAILED TO CLEAR
  1382	031213	7 004 24 0 00 000000 		CONI	PI,
  1383	031214	602 00 0 00 000010 		TRNE	10
  1384						STOP^
  1385	031215	254 04 0 00 031216 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1386	031216	254 00 0 00 031217 		JRST	.+1		;WITH JRST BACK^
  1387
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 20
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0046

  1388	031217	7 004 20 0 00 002040 	IOT48:	CONO	PI,2040		;PI CHAN 2
  1389	031220	7 004 24 0 00 000000 		CONI	PI,		;FAILED TO SET
  1390	031221	606 00 0 00 000040 		TRNN	40
  1391						STOP^
  1392	031222	254 04 0 00 031223 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1393	031223	254 00 0 00 031224 		JRST	.+1		;WITH JRST BACK^
  1394
  1395	031224	7 004 20 0 00 002040 	IOT49:	CONO	PI,2040		;PI CHAN 2
  1396	031225	7 004 20 0 00 001040 		CONO	PI,1040		;FAILED TO CLR
  1397	031226	7 004 24 0 00 000000 		CONI	PI,
  1398	031227	602 00 0 00 000040 		TRNE	40
  1399						STOP^
  1400	031230	254 04 0 00 031231 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1401	031231	254 00 0 00 031232 		JRST	.+1		;WITH JRST BACK^
  1402
  1403	031232	7 004 20 0 00 002100 	IOT50:	CONO	PI,2100		;PI CHAN 1
  1404	031233	7 004 24 0 00 000000 		CONI	PI,		;FAILED TO SET
  1405	031234	606 00 0 00 000100 		TRNN	100
  1406						STOP^
  1407	031235	254 04 0 00 031236 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1408	031236	254 00 0 00 031237 		JRST	.+1		;WITH JRST BACK^
  1409
  1410	031237	7 004 20 0 00 002100 	IOT51:	CONO	PI,2100		;PI CHAN 1
  1411	031240	7 004 20 0 00 001100 		CONO	PI,1100		;FAILED TO CLEAR
  1412	031241	7 004 24 0 00 000000 		CONI	PI,
  1413	031242	602 00 0 00 000100 		TRNE	100
  1414						STOP^
  1415	031243	254 04 0 00 031244 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1416	031244	254 00 0 00 031245 		JRST	.+1		;WITH JRST BACK^
  1417
  1418	031245	255 00 0 00 000000 	IOTXYZ:	JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 21
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0047

  1419			040000			X=40000
  1420						BLURB^
  1421					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
  1422					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  1423					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  1424					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  1425					^
  1426	031246	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  1427					PIOT00:	REPEAT	7,
  1428					<	PINO	X
  1429						X=X_-1>
  1430						PINO	X^
  1431					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1432					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1433
  1434						TSET^
  1435			031247			%X=.			;DEFINE %X TO SAVE
  1436	031247	201 00 0 00 031247 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1437	031250	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1438	031251				..0001:	CLRBTH^
  1439	031251	700 04 0 00 261600 		CLRAPR
  1440	031252	700 14 0 00 031577 		CLRPI^
  1441	031253	7 004 20 0 00 000200 		CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1442						WATINT^
  1443	031254	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1444	031255	367 13 0 00 031255 		SOJG	13,.		;AND WAIT^
  1445	031256	7 004 30 0 00 040000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1446						STOP^
  1447	031257	254 04 0 00 031260 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1448	031260	254 00 0 00 031261 		JRST	.+1		;WITH JRST BACK^
  1449						TGET^^
  1450	031261	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1451	031262	302 00 0 00 031247 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1452						STOP2^^
  1453	031263	254 04 0 00 031264 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1454	031264	254 00 0 00 031265 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1455			020000			X=X_-1
  1456						PINO	X^
  1457					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1458					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1459
  1460						TSET^
  1461			031265			%X=.			;DEFINE %X TO SAVE
  1462	031265	201 00 0 00 031265 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1463	031266	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1464	031267				..0002:	CLRBTH^
  1465	031267	700 04 0 00 261600 		CLRAPR
  1466	031270	700 14 0 00 031577 		CLRPI^
  1467	031271	7 004 20 0 00 000200 		CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1468						WATINT^
  1469	031272	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1470	031273	367 13 0 00 031273 		SOJG	13,.		;AND WAIT^
  1471	031274	7 004 30 0 00 020000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1472						STOP^
  1473	031275	254 04 0 00 031276 		HALT	.+1		;INSTRUCTION FAILED REPLACE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 21-1
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0048

  1474	031276	254 00 0 00 031277 		JRST	.+1		;WITH JRST BACK^
  1475						TGET^^
  1476	031277	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1477	031300	302 00 0 00 031265 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1478						STOP2^^
  1479	031301	254 04 0 00 031302 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1480	031302	254 00 0 00 031303 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1481			010000			X=X_-1
  1482						PINO	X^
  1483					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1484					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1485
  1486						TSET^
  1487			031303			%X=.			;DEFINE %X TO SAVE
  1488	031303	201 00 0 00 031303 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1489	031304	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1490	031305				..0003:	CLRBTH^
  1491	031305	700 04 0 00 261600 		CLRAPR
  1492	031306	700 14 0 00 031577 		CLRPI^
  1493	031307	7 004 20 0 00 000200 		CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1494						WATINT^
  1495	031310	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1496	031311	367 13 0 00 031311 		SOJG	13,.		;AND WAIT^
  1497	031312	7 004 30 0 00 010000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1498						STOP^
  1499	031313	254 04 0 00 031314 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1500	031314	254 00 0 00 031315 		JRST	.+1		;WITH JRST BACK^
  1501						TGET^^
  1502	031315	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1503	031316	302 00 0 00 031303 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1504						STOP2^^
  1505	031317	254 04 0 00 031320 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1506	031320	254 00 0 00 031321 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1507			004000			X=X_-1
  1508						PINO	X^
  1509					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1510					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1511
  1512						TSET^
  1513			031321			%X=.			;DEFINE %X TO SAVE
  1514	031321	201 00 0 00 031321 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1515	031322	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1516	031323				..0004:	CLRBTH^
  1517	031323	700 04 0 00 261600 		CLRAPR
  1518	031324	700 14 0 00 031577 		CLRPI^
  1519	031325	7 004 20 0 00 000200 		CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1520						WATINT^
  1521	031326	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1522	031327	367 13 0 00 031327 		SOJG	13,.		;AND WAIT^
  1523	031330	7 004 30 0 00 004000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1524						STOP^
  1525	031331	254 04 0 00 031332 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1526	031332	254 00 0 00 031333 		JRST	.+1		;WITH JRST BACK^
  1527						TGET^^
  1528	031333	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 21-2
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0049

  1529	031334	302 00 0 00 031321 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1530						STOP2^^
  1531	031335	254 04 0 00 031336 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1532	031336	254 00 0 00 031337 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1533			002000			X=X_-1
  1534						PINO	X^
  1535					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1536					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1537
  1538						TSET^
  1539			031337			%X=.			;DEFINE %X TO SAVE
  1540	031337	201 00 0 00 031337 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1541	031340	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1542	031341				..0005:	CLRBTH^
  1543	031341	700 04 0 00 261600 		CLRAPR
  1544	031342	700 14 0 00 031577 		CLRPI^
  1545	031343	7 004 20 0 00 000200 		CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1546						WATINT^
  1547	031344	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1548	031345	367 13 0 00 031345 		SOJG	13,.		;AND WAIT^
  1549	031346	7 004 30 0 00 002000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1550						STOP^
  1551	031347	254 04 0 00 031350 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1552	031350	254 00 0 00 031351 		JRST	.+1		;WITH JRST BACK^
  1553						TGET^^
  1554	031351	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1555	031352	302 00 0 00 031337 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1556						STOP2^^
  1557	031353	254 04 0 00 031354 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1558	031354	254 00 0 00 031355 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1559			001000			X=X_-1
  1560						PINO	X^
  1561					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1562					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1563
  1564						TSET^
  1565			031355			%X=.			;DEFINE %X TO SAVE
  1566	031355	201 00 0 00 031355 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1567	031356	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1568	031357				..0006:	CLRBTH^
  1569	031357	700 04 0 00 261600 		CLRAPR
  1570	031360	700 14 0 00 031577 		CLRPI^
  1571	031361	7 004 20 0 00 000200 		CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1572						WATINT^
  1573	031362	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1574	031363	367 13 0 00 031363 		SOJG	13,.		;AND WAIT^
  1575	031364	7 004 30 0 00 001000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1576						STOP^
  1577	031365	254 04 0 00 031366 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1578	031366	254 00 0 00 031367 		JRST	.+1		;WITH JRST BACK^
  1579						TGET^^
  1580	031367	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1581	031370	302 00 0 00 031355 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1582						STOP2^^
  1583	031371	254 04 0 00 031372 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 21-3
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0050

  1584	031372	254 00 0 00 031373 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1585			000400			X=X_-1
  1586						PINO	X^
  1587					;ENABLE THE PI SYSTEM. AND EXPECT NO INTERRUPTS. THEN TEST THAT THE
  1588					;HOLD FLOP FOR EACH CHANNEL IS NOT SET.
  1589
  1590						TSET^
  1591			031373			%X=.			;DEFINE %X TO SAVE
  1592	031373	201 00 0 00 031373 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1593	031374	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1594	031375				..0007:	CLRBTH^
  1595	031375	700 04 0 00 261600 		CLRAPR
  1596	031376	700 14 0 00 031577 		CLRPI^
  1597	031377	7 004 20 0 00 000200 		CONO	PI,PION		;ENABLE PI AND ,EXPECT NO INTERRUPTS
  1598						WATINT^
  1599	031400	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1600	031401	367 13 0 00 031401 		SOJG	13,.		;AND WAIT^
  1601	031402	7 004 30 0 00 000400 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1602						STOP^
  1603	031403	254 04 0 00 031404 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1604	031404	254 00 0 00 031405 		JRST	.+1		;WITH JRST BACK^
  1605						TGET^^
  1606	031405	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1607	031406	302 00 0 00 031373 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1608						STOP2^^
  1609	031407	254 04 0 00 031410 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1610	031410	254 00 0 00 031411 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1611			000200			X=X_-1
  1612	031411	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 22
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0051

  1613						BLURB^
  1614					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
  1615					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  1616					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  1617					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  1618					^
  1619
  1620	031412	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  1621			040000			X=40000
  1622			000100			Y=100
  1623	031413				PIOT01:
  1624						REPEAT	7,<
  1625						PIYES	Y,X
  1626						X=X_-1
  1627						Y=Y_-1
  1628					>
  1629
  1630						PIYES	Y,X^
  1631					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  1632					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  1633					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  1634
  1635						TSET^
  1636			031413			%X=.			;DEFINE %X TO SAVE
  1637	031413	201 00 0 00 031413 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1638	031414	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1639	031415				..0010:	CLRBTH^
  1640	031415	700 04 0 00 261600 		CLRAPR
  1641	031416	700 14 0 00 031577 		CLRPI^
  1642	031417	7 004 20 0 00 004100 		CONO	PI,REQSET+Y	;SET CHANNEL REQUEST BUT NOT ACTIVE
  1643						WATINT^
  1644	031420	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1645	031421	367 13 0 00 031421 		SOJG	13,.		;AND WAIT^
  1646	031422	7 004 30 0 00 040000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1647						STOP^
  1648	031423	254 04 0 00 031424 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1649	031424	254 00 0 00 031425 		JRST	.+1		;WITH JRST BACK^
  1650						TGET^^
  1651	031425	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1652	031426	302 00 0 00 031413 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1653						STOP2^^
  1654	031427	254 04 0 00 031430 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1655	031430	254 00 0 00 031431 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1656			020000			X=X_-1
  1657			000040			Y=Y_-1
  1658
  1659
  1660						PIYES	Y,X^
  1661					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  1662					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  1663					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  1664
  1665						TSET^
  1666			031431			%X=.			;DEFINE %X TO SAVE
  1667	031431	201 00 0 00 031431 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 22-1
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0052

  1668	031432	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1669	031433				..0011:	CLRBTH^
  1670	031433	700 04 0 00 261600 		CLRAPR
  1671	031434	700 14 0 00 031577 		CLRPI^
  1672	031435	7 004 20 0 00 004040 		CONO	PI,REQSET+Y	;SET CHANNEL REQUEST BUT NOT ACTIVE
  1673						WATINT^
  1674	031436	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1675	031437	367 13 0 00 031437 		SOJG	13,.		;AND WAIT^
  1676	031440	7 004 30 0 00 020000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1677						STOP^
  1678	031441	254 04 0 00 031442 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1679	031442	254 00 0 00 031443 		JRST	.+1		;WITH JRST BACK^
  1680						TGET^^
  1681	031443	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1682	031444	302 00 0 00 031431 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1683						STOP2^^
  1684	031445	254 04 0 00 031446 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1685	031446	254 00 0 00 031447 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1686			010000			X=X_-1
  1687			000020			Y=Y_-1
  1688
  1689
  1690						PIYES	Y,X^
  1691					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  1692					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  1693					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  1694
  1695						TSET^
  1696			031447			%X=.			;DEFINE %X TO SAVE
  1697	031447	201 00 0 00 031447 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1698	031450	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1699	031451				..0012:	CLRBTH^
  1700	031451	700 04 0 00 261600 		CLRAPR
  1701	031452	700 14 0 00 031577 		CLRPI^
  1702	031453	7 004 20 0 00 004020 		CONO	PI,REQSET+Y	;SET CHANNEL REQUEST BUT NOT ACTIVE
  1703						WATINT^
  1704	031454	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1705	031455	367 13 0 00 031455 		SOJG	13,.		;AND WAIT^
  1706	031456	7 004 30 0 00 010000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1707						STOP^
  1708	031457	254 04 0 00 031460 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1709	031460	254 00 0 00 031461 		JRST	.+1		;WITH JRST BACK^
  1710						TGET^^
  1711	031461	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1712	031462	302 00 0 00 031447 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1713						STOP2^^
  1714	031463	254 04 0 00 031464 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1715	031464	254 00 0 00 031465 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1716			004000			X=X_-1
  1717			000010			Y=Y_-1
  1718
  1719
  1720						PIYES	Y,X^
  1721					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  1722					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 22-2
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0053

  1723					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  1724
  1725						TSET^
  1726			031465			%X=.			;DEFINE %X TO SAVE
  1727	031465	201 00 0 00 031465 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1728	031466	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1729	031467				..0013:	CLRBTH^
  1730	031467	700 04 0 00 261600 		CLRAPR
  1731	031470	700 14 0 00 031577 		CLRPI^
  1732	031471	7 004 20 0 00 004010 		CONO	PI,REQSET+Y	;SET CHANNEL REQUEST BUT NOT ACTIVE
  1733						WATINT^
  1734	031472	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1735	031473	367 13 0 00 031473 		SOJG	13,.		;AND WAIT^
  1736	031474	7 004 30 0 00 004000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1737						STOP^
  1738	031475	254 04 0 00 031476 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1739	031476	254 00 0 00 031477 		JRST	.+1		;WITH JRST BACK^
  1740						TGET^^
  1741	031477	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1742	031500	302 00 0 00 031465 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1743						STOP2^^
  1744	031501	254 04 0 00 031502 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1745	031502	254 00 0 00 031503 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1746			002000			X=X_-1
  1747			000004			Y=Y_-1
  1748
  1749
  1750						PIYES	Y,X^
  1751					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  1752					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  1753					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  1754
  1755						TSET^
  1756			031503			%X=.			;DEFINE %X TO SAVE
  1757	031503	201 00 0 00 031503 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1758	031504	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1759	031505				..0014:	CLRBTH^
  1760	031505	700 04 0 00 261600 		CLRAPR
  1761	031506	700 14 0 00 031577 		CLRPI^
  1762	031507	7 004 20 0 00 004004 		CONO	PI,REQSET+Y	;SET CHANNEL REQUEST BUT NOT ACTIVE
  1763						WATINT^
  1764	031510	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1765	031511	367 13 0 00 031511 		SOJG	13,.		;AND WAIT^
  1766	031512	7 004 30 0 00 002000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1767						STOP^
  1768	031513	254 04 0 00 031514 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1769	031514	254 00 0 00 031515 		JRST	.+1		;WITH JRST BACK^
  1770						TGET^^
  1771	031515	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1772	031516	302 00 0 00 031503 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1773						STOP2^^
  1774	031517	254 04 0 00 031520 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1775	031520	254 00 0 00 031521 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1776			001000			X=X_-1
  1777			000002			Y=Y_-1
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 22-3
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0054

  1778
  1779
  1780						PIYES	Y,X^
  1781					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  1782					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  1783					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  1784
  1785						TSET^
  1786			031521			%X=.			;DEFINE %X TO SAVE
  1787	031521	201 00 0 00 031521 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1788	031522	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1789	031523				..0015:	CLRBTH^
  1790	031523	700 04 0 00 261600 		CLRAPR
  1791	031524	700 14 0 00 031577 		CLRPI^
  1792	031525	7 004 20 0 00 004002 		CONO	PI,REQSET+Y	;SET CHANNEL REQUEST BUT NOT ACTIVE
  1793						WATINT^
  1794	031526	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1795	031527	367 13 0 00 031527 		SOJG	13,.		;AND WAIT^
  1796	031530	7 004 30 0 00 001000 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1797						STOP^
  1798	031531	254 04 0 00 031532 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1799	031532	254 00 0 00 031533 		JRST	.+1		;WITH JRST BACK^
  1800						TGET^^
  1801	031533	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1802	031534	302 00 0 00 031521 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1803						STOP2^^
  1804	031535	254 04 0 00 031536 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1805	031536	254 00 0 00 031537 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1806			000400			X=X_-1
  1807			000001			Y=Y_-1
  1808
  1809
  1810						PIYES	Y,X^
  1811					;SET REQUESTS FOR EACH CHANNEL BUT DO NOT SET PI ACTIVE.
  1812					;INTERRUPTS SHOULD NOT OCCUR, AND THE INTERRUPT IN PROGRESS
  1813					;FLAG SHOULD NOT BE SET FOR THE CHANNEL BEING TESTED
  1814
  1815						TSET^
  1816			031537			%X=.			;DEFINE %X TO SAVE
  1817	031537	201 00 0 00 031537 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1818	031540	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1819	031541				..0016:	CLRBTH^
  1820	031541	700 04 0 00 261600 		CLRAPR
  1821	031542	700 14 0 00 031577 		CLRPI^
  1822	031543	7 004 20 0 00 004001 		CONO	PI,REQSET+Y	;SET CHANNEL REQUEST BUT NOT ACTIVE
  1823						WATINT^
  1824	031544	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1825	031545	367 13 0 00 031545 		SOJG	13,.		;AND WAIT^
  1826	031546	7 004 30 0 00 000400 		CONSZ	PI,X		;CHECK WHY INT. IN PROGRESS IS SET.
  1827						STOP^
  1828	031547	254 04 0 00 031550 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1829	031550	254 00 0 00 031551 		JRST	.+1		;WITH JRST BACK^
  1830						TGET^^
  1831	031551	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1832	031552	302 00 0 00 031537 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 22-4
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0055

  1833						STOP2^^
  1834	031553	254 04 0 00 031554 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1835	031554	254 00 0 00 031555 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1836			000200			X=X_-1
  1837			000000			Y=Y_-1
  1838
  1839	031555	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 23
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0056

  1840						BLURB^
  1841					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
  1842					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  1843					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  1844					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  1845					^
  1846
  1847	031556	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  1848			000100			X=100
  1849	031557				PIOT02:
  1850						REPEAT	7,<
  1851						PIONOF	X
  1852						X=X_-1
  1853					>
  1854
  1855						PIONOF	X^
  1856					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  1857					;AND THAT AN INTERUPT DOES NOT OCCUR
  1858
  1859					BLURB1^
  1860					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
  1861					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  1862					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  1863					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  1864					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
  1865					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  1866					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  1867					^
  1868
  1869						TSET^
  1870			031557			%X=.			;DEFINE %X TO SAVE
  1871	031557	201 00 0 00 031557 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1872	031560	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1873	031561				..0017:	CLRBTH^
  1874	031561	700 04 0 00 261600 		CLRAPR
  1875	031562	700 14 0 00 031577 		CLRPI^
  1876	031563	7 004 20 0 00 004100 		CONO	PI,REQSET+X	;SET REQ. BUT NOT ACTIVE
  1877	031564	400 00 0 00 000000 		SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
  1878	031565	7 004 20 0 00 010100 		CONO	PI,PICLR+X	;PI RESET FAILED TO CLEAR PIR FLAG.
  1879						WATINT^
  1880	031566	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1881	031567	367 13 0 00 031567 		SOJG	13,.		;AND WAIT^
  1882	031570	332 00 0 00 000000 		SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
  1883						STOP^
  1884	031571	254 04 0 00 031572 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1885	031572	254 00 0 00 031573 		JRST	.+1		;WITH JRST BACK^
  1886						TGET^^
  1887	031573	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1888	031574	302 00 0 00 031557 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1889						STOP2^^
  1890	031575	254 04 0 00 031576 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1891	031576	254 00 0 00 031577 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1892			000040			X=X_-1
  1893
  1894
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 23-1
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0057

  1895						PIONOF	X^
  1896					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  1897					;AND THAT AN INTERUPT DOES NOT OCCUR
  1898
  1899					BLURB1^
  1900					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
  1901					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  1902					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  1903					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  1904					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
  1905					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  1906					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  1907					^
  1908
  1909						TSET^
  1910			031577			%X=.			;DEFINE %X TO SAVE
  1911	031577	201 00 0 00 031577 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1912	031600	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1913	031601				..0020:	CLRBTH^
  1914	031601	700 04 0 00 261600 		CLRAPR
  1915	031602	700 14 0 00 031577 		CLRPI^
  1916	031603	7 004 20 0 00 004040 		CONO	PI,REQSET+X	;SET REQ. BUT NOT ACTIVE
  1917	031604	400 00 0 00 000000 		SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
  1918	031605	7 004 20 0 00 010040 		CONO	PI,PICLR+X	;PI RESET FAILED TO CLEAR PIR FLAG.
  1919						WATINT^
  1920	031606	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1921	031607	367 13 0 00 031607 		SOJG	13,.		;AND WAIT^
  1922	031610	332 00 0 00 000000 		SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
  1923						STOP^
  1924	031611	254 04 0 00 031612 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1925	031612	254 00 0 00 031613 		JRST	.+1		;WITH JRST BACK^
  1926						TGET^^
  1927	031613	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1928	031614	302 00 0 00 031577 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1929						STOP2^^
  1930	031615	254 04 0 00 031616 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1931	031616	254 00 0 00 031617 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1932			000020			X=X_-1
  1933
  1934
  1935						PIONOF	X^
  1936					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  1937					;AND THAT AN INTERUPT DOES NOT OCCUR
  1938
  1939					BLURB1^
  1940					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
  1941					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  1942					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  1943					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  1944					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
  1945					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  1946					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  1947					^
  1948
  1949						TSET^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 23-2
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0058

  1950			031617			%X=.			;DEFINE %X TO SAVE
  1951	031617	201 00 0 00 031617 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1952	031620	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1953	031621				..0021:	CLRBTH^
  1954	031621	700 04 0 00 261600 		CLRAPR
  1955	031622	700 14 0 00 031577 		CLRPI^
  1956	031623	7 004 20 0 00 004020 		CONO	PI,REQSET+X	;SET REQ. BUT NOT ACTIVE
  1957	031624	400 00 0 00 000000 		SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
  1958	031625	7 004 20 0 00 010020 		CONO	PI,PICLR+X	;PI RESET FAILED TO CLEAR PIR FLAG.
  1959						WATINT^
  1960	031626	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  1961	031627	367 13 0 00 031627 		SOJG	13,.		;AND WAIT^
  1962	031630	332 00 0 00 000000 		SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
  1963						STOP^
  1964	031631	254 04 0 00 031632 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  1965	031632	254 00 0 00 031633 		JRST	.+1		;WITH JRST BACK^
  1966						TGET^^
  1967	031633	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  1968	031634	302 00 0 00 031617 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  1969						STOP2^^
  1970	031635	254 04 0 00 031636 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  1971	031636	254 00 0 00 031637 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  1972			000010			X=X_-1
  1973
  1974
  1975						PIONOF	X^
  1976					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  1977					;AND THAT AN INTERUPT DOES NOT OCCUR
  1978
  1979					BLURB1^
  1980					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
  1981					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  1982					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  1983					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  1984					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
  1985					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  1986					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  1987					^
  1988
  1989						TSET^
  1990			031637			%X=.			;DEFINE %X TO SAVE
  1991	031637	201 00 0 00 031637 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  1992	031640	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  1993	031641				..0022:	CLRBTH^
  1994	031641	700 04 0 00 261600 		CLRAPR
  1995	031642	700 14 0 00 031577 		CLRPI^
  1996	031643	7 004 20 0 00 004010 		CONO	PI,REQSET+X	;SET REQ. BUT NOT ACTIVE
  1997	031644	400 00 0 00 000000 		SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
  1998	031645	7 004 20 0 00 010010 		CONO	PI,PICLR+X	;PI RESET FAILED TO CLEAR PIR FLAG.
  1999						WATINT^
  2000	031646	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  2001	031647	367 13 0 00 031647 		SOJG	13,.		;AND WAIT^
  2002	031650	332 00 0 00 000000 		SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
  2003						STOP^
  2004	031651	254 04 0 00 031652 		HALT	.+1		;INSTRUCTION FAILED REPLACE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 23-3
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0059

  2005	031652	254 00 0 00 031653 		JRST	.+1		;WITH JRST BACK^
  2006						TGET^^
  2007	031653	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2008	031654	302 00 0 00 031637 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2009						STOP2^^
  2010	031655	254 04 0 00 031656 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2011	031656	254 00 0 00 031657 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2012			000004			X=X_-1
  2013
  2014
  2015						PIONOF	X^
  2016					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2017					;AND THAT AN INTERUPT DOES NOT OCCUR
  2018
  2019					BLURB1^
  2020					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
  2021					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2022					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2023					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2024					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
  2025					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2026					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2027					^
  2028
  2029						TSET^
  2030			031657			%X=.			;DEFINE %X TO SAVE
  2031	031657	201 00 0 00 031657 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2032	031660	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2033	031661				..0023:	CLRBTH^
  2034	031661	700 04 0 00 261600 		CLRAPR
  2035	031662	700 14 0 00 031577 		CLRPI^
  2036	031663	7 004 20 0 00 004004 		CONO	PI,REQSET+X	;SET REQ. BUT NOT ACTIVE
  2037	031664	400 00 0 00 000000 		SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
  2038	031665	7 004 20 0 00 010004 		CONO	PI,PICLR+X	;PI RESET FAILED TO CLEAR PIR FLAG.
  2039						WATINT^
  2040	031666	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  2041	031667	367 13 0 00 031667 		SOJG	13,.		;AND WAIT^
  2042	031670	332 00 0 00 000000 		SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
  2043						STOP^
  2044	031671	254 04 0 00 031672 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2045	031672	254 00 0 00 031673 		JRST	.+1		;WITH JRST BACK^
  2046						TGET^^
  2047	031673	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2048	031674	302 00 0 00 031657 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2049						STOP2^^
  2050	031675	254 04 0 00 031676 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2051	031676	254 00 0 00 031677 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2052			000002			X=X_-1
  2053
  2054
  2055						PIONOF	X^
  2056					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2057					;AND THAT AN INTERUPT DOES NOT OCCUR
  2058
  2059					BLURB1^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 23-4
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0060

  2060					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
  2061					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2062					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2063					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2064					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
  2065					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2066					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2067					^
  2068
  2069						TSET^
  2070			031677			%X=.			;DEFINE %X TO SAVE
  2071	031677	201 00 0 00 031677 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2072	031700	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2073	031701				..0024:	CLRBTH^
  2074	031701	700 04 0 00 261600 		CLRAPR
  2075	031702	700 14 0 00 031577 		CLRPI^
  2076	031703	7 004 20 0 00 004002 		CONO	PI,REQSET+X	;SET REQ. BUT NOT ACTIVE
  2077	031704	400 00 0 00 000000 		SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
  2078	031705	7 004 20 0 00 010002 		CONO	PI,PICLR+X	;PI RESET FAILED TO CLEAR PIR FLAG.
  2079						WATINT^
  2080	031706	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  2081	031707	367 13 0 00 031707 		SOJG	13,.		;AND WAIT^
  2082	031710	332 00 0 00 000000 		SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
  2083						STOP^
  2084	031711	254 04 0 00 031712 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2085	031712	254 00 0 00 031713 		JRST	.+1		;WITH JRST BACK^
  2086						TGET^^
  2087	031713	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2088	031714	302 00 0 00 031677 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2089						STOP2^^
  2090	031715	254 04 0 00 031716 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2091	031716	254 00 0 00 031717 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2092			000001			X=X_-1
  2093
  2094
  2095						PIONOF	X^
  2096					;CHECK THAT PICLR CLEARS THE REQUEST FLOP
  2097					;AND THAT AN INTERUPT DOES NOT OCCUR
  2098
  2099					BLURB1^
  2100					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH EXECUTES A HALT
  2101					;POINTING TO THE CHANNEL WHICH CAUSED THE REQUEST.
  2102					;OR THE CHANNEL WHICH CAUSED THE INCORRECT INTERRUPT. THE PARTICULAR
  2103					;INTERRUPT TRAP ADRESS FOR THE INTERRUPT LEVEL BEING TESTED MAY NOT
  2104					;ALWAYS HAVE A JSR TO A HALT IN CASE WE ARE TESTING FOR REAL
  2105					;INTERRUPTS ON THAT CHANNEL. IN THIS CASE ONLY THE TRAP FOR THAT 
  2106					;PARTICULAR CHANNEL WILL BE LEGAL. ALL OTHERS WILL HALT.
  2107					^
  2108
  2109						TSET^
  2110			031717			%X=.			;DEFINE %X TO SAVE
  2111	031717	201 00 0 00 031717 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2112	031720	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2113	031721				..0025:	CLRBTH^
  2114	031721	700 04 0 00 261600 		CLRAPR
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 23-5
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0061

  2115	031722	700 14 0 00 031577 		CLRPI^
  2116	031723	7 004 20 0 00 004001 		CONO	PI,REQSET+X	;SET REQ. BUT NOT ACTIVE
  2117	031724	400 00 0 00 000000 		SETZ			;THEN CLEAR REQUEST THEN SET ACTIVE
  2118	031725	7 004 20 0 00 010001 		CONO	PI,PICLR+X	;PI RESET FAILED TO CLEAR PIR FLAG.
  2119						WATINT^
  2120	031726	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  2121	031727	367 13 0 00 031727 		SOJG	13,.		;AND WAIT^
  2122	031730	332 00 0 00 000000 		SKIPE			;MOVEI EXEC OUT OF INTERRUPT CH.?
  2123						STOP^
  2124	031731	254 04 0 00 031732 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2125	031732	254 00 0 00 031733 		JRST	.+1		;WITH JRST BACK^
  2126						TGET^^
  2127	031733	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2128	031734	302 00 0 00 031717 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2129						STOP2^^
  2130	031735	254 04 0 00 031736 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2131	031736	254 00 0 00 031737 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2132			000000			X=X_-1
  2133
  2134	031737	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0062

  2135						BLURB^
  2136					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
  2137					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  2138					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  2139					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  2140					^
  2141					;TEST THE SETTING AND CLEARING OF THE PI FLOPS WITHOUT CREATING INTERRUPTS
  2142					;THE TEST WILL HALT IF AN INTERRUPT OCCURS AND THE CHANNEL NUMBER OF THE
  2143					;INTERRUPT WILL BE STORED IN AC0
  2144
  2145
  2146	031740	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  2147
  2148	031741				BIGPI1:	PITEST	100^
  2149					;TEST SETTING OF CHANNEL FLOP
  2150
  2151						TSET^
  2152			031741			%X=.			;DEFINE %X TO SAVE
  2153	031741	201 00 0 00 031741 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2154	031742	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2155	031743				..0026:	CLRBTH^
  2156	031743	700 04 0 00 261600 		CLRAPR
  2157	031744	700 14 0 00 031577 		CLRPI^
  2158	031745	7 004 20 0 00 002100 		CONO	PI,CHNON+100	;PION FAILED TO SET
  2159	031746	7 004 34 0 00 000100 		CONSO	PI,100
  2160						STOP^
  2161	031747	254 04 0 00 031750 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2162	031750	254 00 0 00 031751 		JRST	.+1		;WITH JRST BACK^
  2163						TBOTH^
  2164						TGET^
  2165	031751	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2166	031752	302 00 0 00 031741 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2167						STOP2^^
  2168	031753	254 04 0 00 031754 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2169	031754	254 00 0 00 031755 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2170						TSET^^
  2171			031755			%X=.			;DEFINE %X TO SAVE
  2172	031755	201 00 0 00 031755 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2173	031756	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2174						CLRBTH^
  2175	031757	700 04 0 00 261600 		CLRAPR
  2176	031760	700 14 0 00 031577 		CLRPI^
  2177					;TEST CLEARING OF CHANNEL FLOP
  2178	031761	7 004 20 0 00 002100 		CONO	PI,CHNON+100	;CHECK PIO CLR
  2179	031762	7 004 20 0 00 001100 		CONO	PI,CHNOFF+100	;TURN OFF CHANNELS
  2180	031763	7 004 30 0 00 000100 		CONSZ	PI,100		;CHECK WHY FLOP NOT CLEAR
  2181						STOP^
  2182	031764	254 04 0 00 031765 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2183	031765	254 00 0 00 031766 		JRST	.+1		;WITH JRST BACK^
  2184						TBOTH^
  2185						TGET^
  2186	031766	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2187	031767	302 00 0 00 031755 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2188						STOP2^^
  2189	031770	254 04 0 00 031771 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-1
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0063

  2190	031771	254 00 0 00 031772 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2191						TSET^^
  2192			031772			%X=.			;DEFINE %X TO SAVE
  2193	031772	201 00 0 00 031772 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2194	031773	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2195						CLRBTH^
  2196	031774	700 04 0 00 261600 		CLRAPR
  2197	031775	700 14 0 00 031577 		CLRPI^
  2198					;CHECK RESETING OF PI SYSTEM
  2199	031776	7 004 20 0 00 002100 		CONO	PI,CHNON+100	;CHECK THAT PI RESET CLEARS
  2200	031777	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2201	032000	7 004 30 0 00 000100 		CONSZ	PI,100
  2202						STOP^
  2203	032001	254 04 0 00 032002 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2204	032002	254 00 0 00 032003 		JRST	.+1		;WITH JRST BACK^
  2205						TBOTH^
  2206						TGET^
  2207	032003	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2208	032004	302 00 0 00 031772 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2209						STOP2^^
  2210	032005	254 04 0 00 032006 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2211	032006	254 00 0 00 032007 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2212						TSET^^
  2213			032007			%X=.			;DEFINE %X TO SAVE
  2214	032007	201 00 0 00 032007 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2215	032010	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2216						CLRBTH^
  2217	032011	700 04 0 00 261600 		CLRAPR
  2218	032012	700 14 0 00 031577 		CLRPI^
  2219					;TEST THAT CONO ONLY SETS PION
  2220	032013	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2221	032014	7 004 30 0 00 000100 		CONSZ	PI,100		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2222						STOP^
  2223	032015	254 04 0 00 032016 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2224	032016	254 00 0 00 032017 		JRST	.+1		;WITH JRST BACK^
  2225						TBOTH^
  2226						TGET^
  2227	032017	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2228	032020	302 00 0 00 032007 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2229						STOP2^^
  2230	032021	254 04 0 00 032022 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2231	032022	254 00 0 00 032023 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2232						TSET^^
  2233			032023			%X=.			;DEFINE %X TO SAVE
  2234	032023	201 00 0 00 032023 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2235	032024	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2236						CLRBTH^
  2237	032025	700 04 0 00 261600 		CLRAPR
  2238	032026	700 14 0 00 031577 		CLRPI^
  2239					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2240	032027	7 004 20 0 00 002100 		CONO	PI,CHNON+100	;TEST PIO CLR
  2241	032030	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2242	032031	7 004 34 0 00 000100 		CONSO	PI,100		;BE SET
  2243						STOP^
  2244	032032	254 04 0 00 032033 		HALT	.+1		;INSTRUCTION FAILED REPLACE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-2
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0064

  2245	032033	254 00 0 00 032034 		JRST	.+1		;WITH JRST BACK^
  2246						TGET^^
  2247	032034	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2248	032035	302 00 0 00 032023 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2249						STOP2^^
  2250	032036	254 04 0 00 032037 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2251	032037	254 00 0 00 032040 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2252
  2253	032040				BIGPI2:	PITEST	40^
  2254					;TEST SETTING OF CHANNEL FLOP
  2255
  2256						TSET^
  2257			032040			%X=.			;DEFINE %X TO SAVE
  2258	032040	201 00 0 00 032040 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2259	032041	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2260	032042				..0027:	CLRBTH^
  2261	032042	700 04 0 00 261600 		CLRAPR
  2262	032043	700 14 0 00 031577 		CLRPI^
  2263	032044	7 004 20 0 00 002040 		CONO	PI,CHNON+40	;PION FAILED TO SET
  2264	032045	7 004 34 0 00 000040 		CONSO	PI,40
  2265						STOP^
  2266	032046	254 04 0 00 032047 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2267	032047	254 00 0 00 032050 		JRST	.+1		;WITH JRST BACK^
  2268						TBOTH^
  2269						TGET^
  2270	032050	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2271	032051	302 00 0 00 032040 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2272						STOP2^^
  2273	032052	254 04 0 00 032053 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2274	032053	254 00 0 00 032054 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2275						TSET^^
  2276			032054			%X=.			;DEFINE %X TO SAVE
  2277	032054	201 00 0 00 032054 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2278	032055	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2279						CLRBTH^
  2280	032056	700 04 0 00 261600 		CLRAPR
  2281	032057	700 14 0 00 031577 		CLRPI^
  2282					;TEST CLEARING OF CHANNEL FLOP
  2283	032060	7 004 20 0 00 002040 		CONO	PI,CHNON+40	;CHECK PIO CLR
  2284	032061	7 004 20 0 00 001040 		CONO	PI,CHNOFF+40	;TURN OFF CHANNELS
  2285	032062	7 004 30 0 00 000040 		CONSZ	PI,40		;CHECK WHY FLOP NOT CLEAR
  2286						STOP^
  2287	032063	254 04 0 00 032064 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2288	032064	254 00 0 00 032065 		JRST	.+1		;WITH JRST BACK^
  2289						TBOTH^
  2290						TGET^
  2291	032065	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2292	032066	302 00 0 00 032054 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2293						STOP2^^
  2294	032067	254 04 0 00 032070 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2295	032070	254 00 0 00 032071 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2296						TSET^^
  2297			032071			%X=.			;DEFINE %X TO SAVE
  2298	032071	201 00 0 00 032071 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2299	032072	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-3
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0065

  2300						CLRBTH^
  2301	032073	700 04 0 00 261600 		CLRAPR
  2302	032074	700 14 0 00 031577 		CLRPI^
  2303					;CHECK RESETING OF PI SYSTEM
  2304	032075	7 004 20 0 00 002040 		CONO	PI,CHNON+40	;CHECK THAT PI RESET CLEARS
  2305	032076	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2306	032077	7 004 30 0 00 000040 		CONSZ	PI,40
  2307						STOP^
  2308	032100	254 04 0 00 032101 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2309	032101	254 00 0 00 032102 		JRST	.+1		;WITH JRST BACK^
  2310						TBOTH^
  2311						TGET^
  2312	032102	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2313	032103	302 00 0 00 032071 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2314						STOP2^^
  2315	032104	254 04 0 00 032105 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2316	032105	254 00 0 00 032106 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2317						TSET^^
  2318			032106			%X=.			;DEFINE %X TO SAVE
  2319	032106	201 00 0 00 032106 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2320	032107	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2321						CLRBTH^
  2322	032110	700 04 0 00 261600 		CLRAPR
  2323	032111	700 14 0 00 031577 		CLRPI^
  2324					;TEST THAT CONO ONLY SETS PION
  2325	032112	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2326	032113	7 004 30 0 00 000040 		CONSZ	PI,40		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2327						STOP^
  2328	032114	254 04 0 00 032115 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2329	032115	254 00 0 00 032116 		JRST	.+1		;WITH JRST BACK^
  2330						TBOTH^
  2331						TGET^
  2332	032116	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2333	032117	302 00 0 00 032106 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2334						STOP2^^
  2335	032120	254 04 0 00 032121 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2336	032121	254 00 0 00 032122 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2337						TSET^^
  2338			032122			%X=.			;DEFINE %X TO SAVE
  2339	032122	201 00 0 00 032122 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2340	032123	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2341						CLRBTH^
  2342	032124	700 04 0 00 261600 		CLRAPR
  2343	032125	700 14 0 00 031577 		CLRPI^
  2344					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2345	032126	7 004 20 0 00 002040 		CONO	PI,CHNON+40	;TEST PIO CLR
  2346	032127	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2347	032130	7 004 34 0 00 000040 		CONSO	PI,40		;BE SET
  2348						STOP^
  2349	032131	254 04 0 00 032132 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2350	032132	254 00 0 00 032133 		JRST	.+1		;WITH JRST BACK^
  2351						TGET^^
  2352	032133	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2353	032134	302 00 0 00 032122 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2354						STOP2^^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-4
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0066

  2355	032135	254 04 0 00 032136 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2356	032136	254 00 0 00 032137 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2357
  2358	032137				BIGPI3:	PITEST	20^
  2359					;TEST SETTING OF CHANNEL FLOP
  2360
  2361						TSET^
  2362			032137			%X=.			;DEFINE %X TO SAVE
  2363	032137	201 00 0 00 032137 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2364	032140	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2365	032141				..0030:	CLRBTH^
  2366	032141	700 04 0 00 261600 		CLRAPR
  2367	032142	700 14 0 00 031577 		CLRPI^
  2368	032143	7 004 20 0 00 002020 		CONO	PI,CHNON+20	;PION FAILED TO SET
  2369	032144	7 004 34 0 00 000020 		CONSO	PI,20
  2370						STOP^
  2371	032145	254 04 0 00 032146 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2372	032146	254 00 0 00 032147 		JRST	.+1		;WITH JRST BACK^
  2373						TBOTH^
  2374						TGET^
  2375	032147	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2376	032150	302 00 0 00 032137 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2377						STOP2^^
  2378	032151	254 04 0 00 032152 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2379	032152	254 00 0 00 032153 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2380						TSET^^
  2381			032153			%X=.			;DEFINE %X TO SAVE
  2382	032153	201 00 0 00 032153 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2383	032154	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2384						CLRBTH^
  2385	032155	700 04 0 00 261600 		CLRAPR
  2386	032156	700 14 0 00 031577 		CLRPI^
  2387					;TEST CLEARING OF CHANNEL FLOP
  2388	032157	7 004 20 0 00 002020 		CONO	PI,CHNON+20	;CHECK PIO CLR
  2389	032160	7 004 20 0 00 001020 		CONO	PI,CHNOFF+20	;TURN OFF CHANNELS
  2390	032161	7 004 30 0 00 000020 		CONSZ	PI,20		;CHECK WHY FLOP NOT CLEAR
  2391						STOP^
  2392	032162	254 04 0 00 032163 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2393	032163	254 00 0 00 032164 		JRST	.+1		;WITH JRST BACK^
  2394						TBOTH^
  2395						TGET^
  2396	032164	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2397	032165	302 00 0 00 032153 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2398						STOP2^^
  2399	032166	254 04 0 00 032167 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2400	032167	254 00 0 00 032170 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2401						TSET^^
  2402			032170			%X=.			;DEFINE %X TO SAVE
  2403	032170	201 00 0 00 032170 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2404	032171	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2405						CLRBTH^
  2406	032172	700 04 0 00 261600 		CLRAPR
  2407	032173	700 14 0 00 031577 		CLRPI^
  2408					;CHECK RESETING OF PI SYSTEM
  2409	032174	7 004 20 0 00 002020 		CONO	PI,CHNON+20	;CHECK THAT PI RESET CLEARS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-5
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0067

  2410	032175	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2411	032176	7 004 30 0 00 000020 		CONSZ	PI,20
  2412						STOP^
  2413	032177	254 04 0 00 032200 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2414	032200	254 00 0 00 032201 		JRST	.+1		;WITH JRST BACK^
  2415						TBOTH^
  2416						TGET^
  2417	032201	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2418	032202	302 00 0 00 032170 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2419						STOP2^^
  2420	032203	254 04 0 00 032204 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2421	032204	254 00 0 00 032205 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2422						TSET^^
  2423			032205			%X=.			;DEFINE %X TO SAVE
  2424	032205	201 00 0 00 032205 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2425	032206	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2426						CLRBTH^
  2427	032207	700 04 0 00 261600 		CLRAPR
  2428	032210	700 14 0 00 031577 		CLRPI^
  2429					;TEST THAT CONO ONLY SETS PION
  2430	032211	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2431	032212	7 004 30 0 00 000020 		CONSZ	PI,20		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2432						STOP^
  2433	032213	254 04 0 00 032214 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2434	032214	254 00 0 00 032215 		JRST	.+1		;WITH JRST BACK^
  2435						TBOTH^
  2436						TGET^
  2437	032215	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2438	032216	302 00 0 00 032205 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2439						STOP2^^
  2440	032217	254 04 0 00 032220 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2441	032220	254 00 0 00 032221 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2442						TSET^^
  2443			032221			%X=.			;DEFINE %X TO SAVE
  2444	032221	201 00 0 00 032221 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2445	032222	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2446						CLRBTH^
  2447	032223	700 04 0 00 261600 		CLRAPR
  2448	032224	700 14 0 00 031577 		CLRPI^
  2449					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2450	032225	7 004 20 0 00 002020 		CONO	PI,CHNON+20	;TEST PIO CLR
  2451	032226	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2452	032227	7 004 34 0 00 000020 		CONSO	PI,20		;BE SET
  2453						STOP^
  2454	032230	254 04 0 00 032231 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2455	032231	254 00 0 00 032232 		JRST	.+1		;WITH JRST BACK^
  2456						TGET^^
  2457	032232	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2458	032233	302 00 0 00 032221 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2459						STOP2^^
  2460	032234	254 04 0 00 032235 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2461	032235	254 00 0 00 032236 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2462
  2463	032236				BIGPI4:	PITEST	10^
  2464					;TEST SETTING OF CHANNEL FLOP
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-6
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0068

  2465
  2466						TSET^
  2467			032236			%X=.			;DEFINE %X TO SAVE
  2468	032236	201 00 0 00 032236 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2469	032237	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2470	032240				..0031:	CLRBTH^
  2471	032240	700 04 0 00 261600 		CLRAPR
  2472	032241	700 14 0 00 031577 		CLRPI^
  2473	032242	7 004 20 0 00 002010 		CONO	PI,CHNON+10	;PION FAILED TO SET
  2474	032243	7 004 34 0 00 000010 		CONSO	PI,10
  2475						STOP^
  2476	032244	254 04 0 00 032245 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2477	032245	254 00 0 00 032246 		JRST	.+1		;WITH JRST BACK^
  2478						TBOTH^
  2479						TGET^
  2480	032246	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2481	032247	302 00 0 00 032236 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2482						STOP2^^
  2483	032250	254 04 0 00 032251 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2484	032251	254 00 0 00 032252 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2485						TSET^^
  2486			032252			%X=.			;DEFINE %X TO SAVE
  2487	032252	201 00 0 00 032252 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2488	032253	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2489						CLRBTH^
  2490	032254	700 04 0 00 261600 		CLRAPR
  2491	032255	700 14 0 00 031577 		CLRPI^
  2492					;TEST CLEARING OF CHANNEL FLOP
  2493	032256	7 004 20 0 00 002010 		CONO	PI,CHNON+10	;CHECK PIO CLR
  2494	032257	7 004 20 0 00 001010 		CONO	PI,CHNOFF+10	;TURN OFF CHANNELS
  2495	032260	7 004 30 0 00 000010 		CONSZ	PI,10		;CHECK WHY FLOP NOT CLEAR
  2496						STOP^
  2497	032261	254 04 0 00 032262 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2498	032262	254 00 0 00 032263 		JRST	.+1		;WITH JRST BACK^
  2499						TBOTH^
  2500						TGET^
  2501	032263	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2502	032264	302 00 0 00 032252 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2503						STOP2^^
  2504	032265	254 04 0 00 032266 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2505	032266	254 00 0 00 032267 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2506						TSET^^
  2507			032267			%X=.			;DEFINE %X TO SAVE
  2508	032267	201 00 0 00 032267 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2509	032270	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2510						CLRBTH^
  2511	032271	700 04 0 00 261600 		CLRAPR
  2512	032272	700 14 0 00 031577 		CLRPI^
  2513					;CHECK RESETING OF PI SYSTEM
  2514	032273	7 004 20 0 00 002010 		CONO	PI,CHNON+10	;CHECK THAT PI RESET CLEARS
  2515	032274	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2516	032275	7 004 30 0 00 000010 		CONSZ	PI,10
  2517						STOP^
  2518	032276	254 04 0 00 032277 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2519	032277	254 00 0 00 032300 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-7
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0069

  2520						TBOTH^
  2521						TGET^
  2522	032300	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2523	032301	302 00 0 00 032267 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2524						STOP2^^
  2525	032302	254 04 0 00 032303 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2526	032303	254 00 0 00 032304 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2527						TSET^^
  2528			032304			%X=.			;DEFINE %X TO SAVE
  2529	032304	201 00 0 00 032304 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2530	032305	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2531						CLRBTH^
  2532	032306	700 04 0 00 261600 		CLRAPR
  2533	032307	700 14 0 00 031577 		CLRPI^
  2534					;TEST THAT CONO ONLY SETS PION
  2535	032310	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2536	032311	7 004 30 0 00 000010 		CONSZ	PI,10		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2537						STOP^
  2538	032312	254 04 0 00 032313 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2539	032313	254 00 0 00 032314 		JRST	.+1		;WITH JRST BACK^
  2540						TBOTH^
  2541						TGET^
  2542	032314	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2543	032315	302 00 0 00 032304 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2544						STOP2^^
  2545	032316	254 04 0 00 032317 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2546	032317	254 00 0 00 032320 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2547						TSET^^
  2548			032320			%X=.			;DEFINE %X TO SAVE
  2549	032320	201 00 0 00 032320 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2550	032321	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2551						CLRBTH^
  2552	032322	700 04 0 00 261600 		CLRAPR
  2553	032323	700 14 0 00 031577 		CLRPI^
  2554					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2555	032324	7 004 20 0 00 002010 		CONO	PI,CHNON+10	;TEST PIO CLR
  2556	032325	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2557	032326	7 004 34 0 00 000010 		CONSO	PI,10		;BE SET
  2558						STOP^
  2559	032327	254 04 0 00 032330 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2560	032330	254 00 0 00 032331 		JRST	.+1		;WITH JRST BACK^
  2561						TGET^^
  2562	032331	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2563	032332	302 00 0 00 032320 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2564						STOP2^^
  2565	032333	254 04 0 00 032334 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2566	032334	254 00 0 00 032335 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2567
  2568	032335				BIGPI5:	PITEST	4^
  2569					;TEST SETTING OF CHANNEL FLOP
  2570
  2571						TSET^
  2572			032335			%X=.			;DEFINE %X TO SAVE
  2573	032335	201 00 0 00 032335 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2574	032336	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-8
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0070

  2575	032337				..0032:	CLRBTH^
  2576	032337	700 04 0 00 261600 		CLRAPR
  2577	032340	700 14 0 00 031577 		CLRPI^
  2578	032341	7 004 20 0 00 002004 		CONO	PI,CHNON+4	;PION FAILED TO SET
  2579	032342	7 004 34 0 00 000004 		CONSO	PI,4
  2580						STOP^
  2581	032343	254 04 0 00 032344 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2582	032344	254 00 0 00 032345 		JRST	.+1		;WITH JRST BACK^
  2583						TBOTH^
  2584						TGET^
  2585	032345	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2586	032346	302 00 0 00 032335 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2587						STOP2^^
  2588	032347	254 04 0 00 032350 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2589	032350	254 00 0 00 032351 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2590						TSET^^
  2591			032351			%X=.			;DEFINE %X TO SAVE
  2592	032351	201 00 0 00 032351 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2593	032352	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2594						CLRBTH^
  2595	032353	700 04 0 00 261600 		CLRAPR
  2596	032354	700 14 0 00 031577 		CLRPI^
  2597					;TEST CLEARING OF CHANNEL FLOP
  2598	032355	7 004 20 0 00 002004 		CONO	PI,CHNON+4	;CHECK PIO CLR
  2599	032356	7 004 20 0 00 001004 		CONO	PI,CHNOFF+4	;TURN OFF CHANNELS
  2600	032357	7 004 30 0 00 000004 		CONSZ	PI,4		;CHECK WHY FLOP NOT CLEAR
  2601						STOP^
  2602	032360	254 04 0 00 032361 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2603	032361	254 00 0 00 032362 		JRST	.+1		;WITH JRST BACK^
  2604						TBOTH^
  2605						TGET^
  2606	032362	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2607	032363	302 00 0 00 032351 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2608						STOP2^^
  2609	032364	254 04 0 00 032365 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2610	032365	254 00 0 00 032366 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2611						TSET^^
  2612			032366			%X=.			;DEFINE %X TO SAVE
  2613	032366	201 00 0 00 032366 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2614	032367	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2615						CLRBTH^
  2616	032370	700 04 0 00 261600 		CLRAPR
  2617	032371	700 14 0 00 031577 		CLRPI^
  2618					;CHECK RESETING OF PI SYSTEM
  2619	032372	7 004 20 0 00 002004 		CONO	PI,CHNON+4	;CHECK THAT PI RESET CLEARS
  2620	032373	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2621	032374	7 004 30 0 00 000004 		CONSZ	PI,4
  2622						STOP^
  2623	032375	254 04 0 00 032376 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2624	032376	254 00 0 00 032377 		JRST	.+1		;WITH JRST BACK^
  2625						TBOTH^
  2626						TGET^
  2627	032377	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2628	032400	302 00 0 00 032366 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2629						STOP2^^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-9
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0071

  2630	032401	254 04 0 00 032402 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2631	032402	254 00 0 00 032403 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2632						TSET^^
  2633			032403			%X=.			;DEFINE %X TO SAVE
  2634	032403	201 00 0 00 032403 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2635	032404	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2636						CLRBTH^
  2637	032405	700 04 0 00 261600 		CLRAPR
  2638	032406	700 14 0 00 031577 		CLRPI^
  2639					;TEST THAT CONO ONLY SETS PION
  2640	032407	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2641	032410	7 004 30 0 00 000004 		CONSZ	PI,4		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2642						STOP^
  2643	032411	254 04 0 00 032412 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2644	032412	254 00 0 00 032413 		JRST	.+1		;WITH JRST BACK^
  2645						TBOTH^
  2646						TGET^
  2647	032413	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2648	032414	302 00 0 00 032403 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2649						STOP2^^
  2650	032415	254 04 0 00 032416 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2651	032416	254 00 0 00 032417 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2652						TSET^^
  2653			032417			%X=.			;DEFINE %X TO SAVE
  2654	032417	201 00 0 00 032417 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2655	032420	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2656						CLRBTH^
  2657	032421	700 04 0 00 261600 		CLRAPR
  2658	032422	700 14 0 00 031577 		CLRPI^
  2659					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2660	032423	7 004 20 0 00 002004 		CONO	PI,CHNON+4	;TEST PIO CLR
  2661	032424	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2662	032425	7 004 34 0 00 000004 		CONSO	PI,4		;BE SET
  2663						STOP^
  2664	032426	254 04 0 00 032427 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2665	032427	254 00 0 00 032430 		JRST	.+1		;WITH JRST BACK^
  2666						TGET^^
  2667	032430	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2668	032431	302 00 0 00 032417 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2669						STOP2^^
  2670	032432	254 04 0 00 032433 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2671	032433	254 00 0 00 032434 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2672
  2673	032434				BIGPI6:	PITEST	2^
  2674					;TEST SETTING OF CHANNEL FLOP
  2675
  2676						TSET^
  2677			032434			%X=.			;DEFINE %X TO SAVE
  2678	032434	201 00 0 00 032434 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2679	032435	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2680	032436				..0033:	CLRBTH^
  2681	032436	700 04 0 00 261600 		CLRAPR
  2682	032437	700 14 0 00 031577 		CLRPI^
  2683	032440	7 004 20 0 00 002002 		CONO	PI,CHNON+2	;PION FAILED TO SET
  2684	032441	7 004 34 0 00 000002 		CONSO	PI,2
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-10
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0072

  2685						STOP^
  2686	032442	254 04 0 00 032443 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2687	032443	254 00 0 00 032444 		JRST	.+1		;WITH JRST BACK^
  2688						TBOTH^
  2689						TGET^
  2690	032444	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2691	032445	302 00 0 00 032434 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2692						STOP2^^
  2693	032446	254 04 0 00 032447 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2694	032447	254 00 0 00 032450 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2695						TSET^^
  2696			032450			%X=.			;DEFINE %X TO SAVE
  2697	032450	201 00 0 00 032450 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2698	032451	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2699						CLRBTH^
  2700	032452	700 04 0 00 261600 		CLRAPR
  2701	032453	700 14 0 00 031577 		CLRPI^
  2702					;TEST CLEARING OF CHANNEL FLOP
  2703	032454	7 004 20 0 00 002002 		CONO	PI,CHNON+2	;CHECK PIO CLR
  2704	032455	7 004 20 0 00 001002 		CONO	PI,CHNOFF+2	;TURN OFF CHANNELS
  2705	032456	7 004 30 0 00 000002 		CONSZ	PI,2		;CHECK WHY FLOP NOT CLEAR
  2706						STOP^
  2707	032457	254 04 0 00 032460 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2708	032460	254 00 0 00 032461 		JRST	.+1		;WITH JRST BACK^
  2709						TBOTH^
  2710						TGET^
  2711	032461	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2712	032462	302 00 0 00 032450 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2713						STOP2^^
  2714	032463	254 04 0 00 032464 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2715	032464	254 00 0 00 032465 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2716						TSET^^
  2717			032465			%X=.			;DEFINE %X TO SAVE
  2718	032465	201 00 0 00 032465 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2719	032466	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2720						CLRBTH^
  2721	032467	700 04 0 00 261600 		CLRAPR
  2722	032470	700 14 0 00 031577 		CLRPI^
  2723					;CHECK RESETING OF PI SYSTEM
  2724	032471	7 004 20 0 00 002002 		CONO	PI,CHNON+2	;CHECK THAT PI RESET CLEARS
  2725	032472	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2726	032473	7 004 30 0 00 000002 		CONSZ	PI,2
  2727						STOP^
  2728	032474	254 04 0 00 032475 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2729	032475	254 00 0 00 032476 		JRST	.+1		;WITH JRST BACK^
  2730						TBOTH^
  2731						TGET^
  2732	032476	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2733	032477	302 00 0 00 032465 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2734						STOP2^^
  2735	032500	254 04 0 00 032501 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2736	032501	254 00 0 00 032502 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2737						TSET^^
  2738			032502			%X=.			;DEFINE %X TO SAVE
  2739	032502	201 00 0 00 032502 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-11
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0073

  2740	032503	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2741						CLRBTH^
  2742	032504	700 04 0 00 261600 		CLRAPR
  2743	032505	700 14 0 00 031577 		CLRPI^
  2744					;TEST THAT CONO ONLY SETS PION
  2745	032506	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2746	032507	7 004 30 0 00 000002 		CONSZ	PI,2		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2747						STOP^
  2748	032510	254 04 0 00 032511 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2749	032511	254 00 0 00 032512 		JRST	.+1		;WITH JRST BACK^
  2750						TBOTH^
  2751						TGET^
  2752	032512	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2753	032513	302 00 0 00 032502 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2754						STOP2^^
  2755	032514	254 04 0 00 032515 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2756	032515	254 00 0 00 032516 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2757						TSET^^
  2758			032516			%X=.			;DEFINE %X TO SAVE
  2759	032516	201 00 0 00 032516 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2760	032517	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2761						CLRBTH^
  2762	032520	700 04 0 00 261600 		CLRAPR
  2763	032521	700 14 0 00 031577 		CLRPI^
  2764					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2765	032522	7 004 20 0 00 002002 		CONO	PI,CHNON+2	;TEST PIO CLR
  2766	032523	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2767	032524	7 004 34 0 00 000002 		CONSO	PI,2		;BE SET
  2768						STOP^
  2769	032525	254 04 0 00 032526 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2770	032526	254 00 0 00 032527 		JRST	.+1		;WITH JRST BACK^
  2771						TGET^^
  2772	032527	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2773	032530	302 00 0 00 032516 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2774						STOP2^^
  2775	032531	254 04 0 00 032532 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2776	032532	254 00 0 00 032533 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2777
  2778	032533				BIGPI7:	PITEST	1^
  2779					;TEST SETTING OF CHANNEL FLOP
  2780
  2781						TSET^
  2782			032533			%X=.			;DEFINE %X TO SAVE
  2783	032533	201 00 0 00 032533 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2784	032534	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2785	032535				..0034:	CLRBTH^
  2786	032535	700 04 0 00 261600 		CLRAPR
  2787	032536	700 14 0 00 031577 		CLRPI^
  2788	032537	7 004 20 0 00 002001 		CONO	PI,CHNON+1	;PION FAILED TO SET
  2789	032540	7 004 34 0 00 000001 		CONSO	PI,1
  2790						STOP^
  2791	032541	254 04 0 00 032542 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2792	032542	254 00 0 00 032543 		JRST	.+1		;WITH JRST BACK^
  2793						TBOTH^
  2794						TGET^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-12
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0074

  2795	032543	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2796	032544	302 00 0 00 032533 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2797						STOP2^^
  2798	032545	254 04 0 00 032546 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2799	032546	254 00 0 00 032547 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2800						TSET^^
  2801			032547			%X=.			;DEFINE %X TO SAVE
  2802	032547	201 00 0 00 032547 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2803	032550	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2804						CLRBTH^
  2805	032551	700 04 0 00 261600 		CLRAPR
  2806	032552	700 14 0 00 031577 		CLRPI^
  2807					;TEST CLEARING OF CHANNEL FLOP
  2808	032553	7 004 20 0 00 002001 		CONO	PI,CHNON+1	;CHECK PIO CLR
  2809	032554	7 004 20 0 00 001001 		CONO	PI,CHNOFF+1	;TURN OFF CHANNELS
  2810	032555	7 004 30 0 00 000001 		CONSZ	PI,1		;CHECK WHY FLOP NOT CLEAR
  2811						STOP^
  2812	032556	254 04 0 00 032557 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2813	032557	254 00 0 00 032560 		JRST	.+1		;WITH JRST BACK^
  2814						TBOTH^
  2815						TGET^
  2816	032560	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2817	032561	302 00 0 00 032547 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2818						STOP2^^
  2819	032562	254 04 0 00 032563 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2820	032563	254 00 0 00 032564 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2821						TSET^^
  2822			032564			%X=.			;DEFINE %X TO SAVE
  2823	032564	201 00 0 00 032564 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2824	032565	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2825						CLRBTH^
  2826	032566	700 04 0 00 261600 		CLRAPR
  2827	032567	700 14 0 00 031577 		CLRPI^
  2828					;CHECK RESETING OF PI SYSTEM
  2829	032570	7 004 20 0 00 002001 		CONO	PI,CHNON+1	;CHECK THAT PI RESET CLEARS
  2830	032571	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2831	032572	7 004 30 0 00 000001 		CONSZ	PI,1
  2832						STOP^
  2833	032573	254 04 0 00 032574 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2834	032574	254 00 0 00 032575 		JRST	.+1		;WITH JRST BACK^
  2835						TBOTH^
  2836						TGET^
  2837	032575	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2838	032576	302 00 0 00 032564 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2839						STOP2^^
  2840	032577	254 04 0 00 032600 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2841	032600	254 00 0 00 032601 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2842						TSET^^
  2843			032601			%X=.			;DEFINE %X TO SAVE
  2844	032601	201 00 0 00 032601 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2845	032602	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2846						CLRBTH^
  2847	032603	700 04 0 00 261600 		CLRAPR
  2848	032604	700 14 0 00 031577 		CLRPI^
  2849					;TEST THAT CONO ONLY SETS PION
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-13
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0075

  2850	032605	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2851	032606	7 004 30 0 00 000001 		CONSZ	PI,1		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2852						STOP^
  2853	032607	254 04 0 00 032610 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2854	032610	254 00 0 00 032611 		JRST	.+1		;WITH JRST BACK^
  2855						TBOTH^
  2856						TGET^
  2857	032611	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2858	032612	302 00 0 00 032601 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2859						STOP2^^
  2860	032613	254 04 0 00 032614 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2861	032614	254 00 0 00 032615 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2862						TSET^^
  2863			032615			%X=.			;DEFINE %X TO SAVE
  2864	032615	201 00 0 00 032615 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2865	032616	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2866						CLRBTH^
  2867	032617	700 04 0 00 261600 		CLRAPR
  2868	032620	700 14 0 00 031577 		CLRPI^
  2869					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2870	032621	7 004 20 0 00 002001 		CONO	PI,CHNON+1	;TEST PIO CLR
  2871	032622	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2872	032623	7 004 34 0 00 000001 		CONSO	PI,1		;BE SET
  2873						STOP^
  2874	032624	254 04 0 00 032625 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2875	032625	254 00 0 00 032626 		JRST	.+1		;WITH JRST BACK^
  2876						TGET^^
  2877	032626	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2878	032627	302 00 0 00 032615 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2879						STOP2^^
  2880	032630	254 04 0 00 032631 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2881	032631	254 00 0 00 032632 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2882
  2883	032632				BIGPIX:	PITEST	177^
  2884					;TEST SETTING OF CHANNEL FLOP
  2885
  2886						TSET^
  2887			032632			%X=.			;DEFINE %X TO SAVE
  2888	032632	201 00 0 00 032632 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2889	032633	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2890	032634				..0035:	CLRBTH^
  2891	032634	700 04 0 00 261600 		CLRAPR
  2892	032635	700 14 0 00 031577 		CLRPI^
  2893	032636	7 004 20 0 00 002177 		CONO	PI,CHNON+177	;PION FAILED TO SET
  2894	032637	7 004 34 0 00 000177 		CONSO	PI,177
  2895						STOP^
  2896	032640	254 04 0 00 032641 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2897	032641	254 00 0 00 032642 		JRST	.+1		;WITH JRST BACK^
  2898						TBOTH^
  2899						TGET^
  2900	032642	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2901	032643	302 00 0 00 032632 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2902						STOP2^^
  2903	032644	254 04 0 00 032645 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2904	032645	254 00 0 00 032646 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-14
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0076

  2905						TSET^^
  2906			032646			%X=.			;DEFINE %X TO SAVE
  2907	032646	201 00 0 00 032646 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2908	032647	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2909						CLRBTH^
  2910	032650	700 04 0 00 261600 		CLRAPR
  2911	032651	700 14 0 00 031577 		CLRPI^
  2912					;TEST CLEARING OF CHANNEL FLOP
  2913	032652	7 004 20 0 00 002177 		CONO	PI,CHNON+177	;CHECK PIO CLR
  2914	032653	7 004 20 0 00 001177 		CONO	PI,CHNOFF+177	;TURN OFF CHANNELS
  2915	032654	7 004 30 0 00 000177 		CONSZ	PI,177		;CHECK WHY FLOP NOT CLEAR
  2916						STOP^
  2917	032655	254 04 0 00 032656 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2918	032656	254 00 0 00 032657 		JRST	.+1		;WITH JRST BACK^
  2919						TBOTH^
  2920						TGET^
  2921	032657	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2922	032660	302 00 0 00 032646 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2923						STOP2^^
  2924	032661	254 04 0 00 032662 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2925	032662	254 00 0 00 032663 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2926						TSET^^
  2927			032663			%X=.			;DEFINE %X TO SAVE
  2928	032663	201 00 0 00 032663 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2929	032664	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2930						CLRBTH^
  2931	032665	700 04 0 00 261600 		CLRAPR
  2932	032666	700 14 0 00 031577 		CLRPI^
  2933					;CHECK RESETING OF PI SYSTEM
  2934	032667	7 004 20 0 00 002177 		CONO	PI,CHNON+177	;CHECK THAT PI RESET CLEARS
  2935	032670	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  2936	032671	7 004 30 0 00 000177 		CONSZ	PI,177
  2937						STOP^
  2938	032672	254 04 0 00 032673 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2939	032673	254 00 0 00 032674 		JRST	.+1		;WITH JRST BACK^
  2940						TBOTH^
  2941						TGET^
  2942	032674	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2943	032675	302 00 0 00 032663 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2944						STOP2^^
  2945	032676	254 04 0 00 032677 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2946	032677	254 00 0 00 032700 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2947						TSET^^
  2948			032700			%X=.			;DEFINE %X TO SAVE
  2949	032700	201 00 0 00 032700 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2950	032701	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2951						CLRBTH^
  2952	032702	700 04 0 00 261600 		CLRAPR
  2953	032703	700 14 0 00 031577 		CLRPI^
  2954					;TEST THAT CONO ONLY SETS PION
  2955	032704	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  2956	032705	7 004 30 0 00 000177 		CONSZ	PI,177		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  2957						STOP^
  2958	032706	254 04 0 00 032707 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2959	032707	254 00 0 00 032710 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-15
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0077

  2960						TBOTH^
  2961						TGET^
  2962	032710	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2963	032711	302 00 0 00 032700 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2964						STOP2^^
  2965	032712	254 04 0 00 032713 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2966	032713	254 00 0 00 032714 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2967						TSET^^
  2968			032714			%X=.			;DEFINE %X TO SAVE
  2969	032714	201 00 0 00 032714 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2970	032715	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2971						CLRBTH^
  2972	032716	700 04 0 00 261600 		CLRAPR
  2973	032717	700 14 0 00 031577 		CLRPI^
  2974					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  2975	032720	7 004 20 0 00 002177 		CONO	PI,CHNON+177	;TEST PIO CLR
  2976	032721	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  2977	032722	7 004 34 0 00 000177 		CONSO	PI,177		;BE SET
  2978						STOP^
  2979	032723	254 04 0 00 032724 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  2980	032724	254 00 0 00 032725 		JRST	.+1		;WITH JRST BACK^
  2981						TGET^^
  2982	032725	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  2983	032726	302 00 0 00 032714 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  2984						STOP2^^
  2985	032727	254 04 0 00 032730 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  2986	032730	254 00 0 00 032731 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  2987
  2988	032731				BIGPIY:	PITEST	125^
  2989					;TEST SETTING OF CHANNEL FLOP
  2990
  2991						TSET^
  2992			032731			%X=.			;DEFINE %X TO SAVE
  2993	032731	201 00 0 00 032731 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  2994	032732	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  2995	032733				..0036:	CLRBTH^
  2996	032733	700 04 0 00 261600 		CLRAPR
  2997	032734	700 14 0 00 031577 		CLRPI^
  2998	032735	7 004 20 0 00 002125 		CONO	PI,CHNON+125	;PION FAILED TO SET
  2999	032736	7 004 34 0 00 000125 		CONSO	PI,125
  3000						STOP^
  3001	032737	254 04 0 00 032740 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3002	032740	254 00 0 00 032741 		JRST	.+1		;WITH JRST BACK^
  3003						TBOTH^
  3004						TGET^
  3005	032741	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3006	032742	302 00 0 00 032731 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3007						STOP2^^
  3008	032743	254 04 0 00 032744 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3009	032744	254 00 0 00 032745 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3010						TSET^^
  3011			032745			%X=.			;DEFINE %X TO SAVE
  3012	032745	201 00 0 00 032745 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3013	032746	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3014						CLRBTH^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-16
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0078

  3015	032747	700 04 0 00 261600 		CLRAPR
  3016	032750	700 14 0 00 031577 		CLRPI^
  3017					;TEST CLEARING OF CHANNEL FLOP
  3018	032751	7 004 20 0 00 002125 		CONO	PI,CHNON+125	;CHECK PIO CLR
  3019	032752	7 004 20 0 00 001125 		CONO	PI,CHNOFF+125	;TURN OFF CHANNELS
  3020	032753	7 004 30 0 00 000125 		CONSZ	PI,125		;CHECK WHY FLOP NOT CLEAR
  3021						STOP^
  3022	032754	254 04 0 00 032755 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3023	032755	254 00 0 00 032756 		JRST	.+1		;WITH JRST BACK^
  3024						TBOTH^
  3025						TGET^
  3026	032756	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3027	032757	302 00 0 00 032745 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3028						STOP2^^
  3029	032760	254 04 0 00 032761 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3030	032761	254 00 0 00 032762 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3031						TSET^^
  3032			032762			%X=.			;DEFINE %X TO SAVE
  3033	032762	201 00 0 00 032762 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3034	032763	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3035						CLRBTH^
  3036	032764	700 04 0 00 261600 		CLRAPR
  3037	032765	700 14 0 00 031577 		CLRPI^
  3038					;CHECK RESETING OF PI SYSTEM
  3039	032766	7 004 20 0 00 002125 		CONO	PI,CHNON+125	;CHECK THAT PI RESET CLEARS
  3040	032767	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  3041	032770	7 004 30 0 00 000125 		CONSZ	PI,125
  3042						STOP^
  3043	032771	254 04 0 00 032772 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3044	032772	254 00 0 00 032773 		JRST	.+1		;WITH JRST BACK^
  3045						TBOTH^
  3046						TGET^
  3047	032773	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3048	032774	302 00 0 00 032762 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3049						STOP2^^
  3050	032775	254 04 0 00 032776 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3051	032776	254 00 0 00 032777 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3052						TSET^^
  3053			032777			%X=.			;DEFINE %X TO SAVE
  3054	032777	201 00 0 00 032777 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3055	033000	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3056						CLRBTH^
  3057	033001	700 04 0 00 261600 		CLRAPR
  3058	033002	700 14 0 00 031577 		CLRPI^
  3059					;TEST THAT CONO ONLY SETS PION
  3060	033003	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  3061	033004	7 004 30 0 00 000125 		CONSZ	PI,125		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  3062						STOP^
  3063	033005	254 04 0 00 033006 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3064	033006	254 00 0 00 033007 		JRST	.+1		;WITH JRST BACK^
  3065						TBOTH^
  3066						TGET^
  3067	033007	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3068	033010	302 00 0 00 032777 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3069						STOP2^^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-17
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0079

  3070	033011	254 04 0 00 033012 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3071	033012	254 00 0 00 033013 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3072						TSET^^
  3073			033013			%X=.			;DEFINE %X TO SAVE
  3074	033013	201 00 0 00 033013 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3075	033014	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3076						CLRBTH^
  3077	033015	700 04 0 00 261600 		CLRAPR
  3078	033016	700 14 0 00 031577 		CLRPI^
  3079					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3080	033017	7 004 20 0 00 002125 		CONO	PI,CHNON+125	;TEST PIO CLR
  3081	033020	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  3082	033021	7 004 34 0 00 000125 		CONSO	PI,125		;BE SET
  3083						STOP^
  3084	033022	254 04 0 00 033023 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3085	033023	254 00 0 00 033024 		JRST	.+1		;WITH JRST BACK^
  3086						TGET^^
  3087	033024	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3088	033025	302 00 0 00 033013 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3089						STOP2^^
  3090	033026	254 04 0 00 033027 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3091	033027	254 00 0 00 033030 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3092
  3093	033030				BIGPIZ:	PITEST	52^
  3094					;TEST SETTING OF CHANNEL FLOP
  3095
  3096						TSET^
  3097			033030			%X=.			;DEFINE %X TO SAVE
  3098	033030	201 00 0 00 033030 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3099	033031	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3100	033032				..0037:	CLRBTH^
  3101	033032	700 04 0 00 261600 		CLRAPR
  3102	033033	700 14 0 00 031577 		CLRPI^
  3103	033034	7 004 20 0 00 002052 		CONO	PI,CHNON+52	;PION FAILED TO SET
  3104	033035	7 004 34 0 00 000052 		CONSO	PI,52
  3105						STOP^
  3106	033036	254 04 0 00 033037 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3107	033037	254 00 0 00 033040 		JRST	.+1		;WITH JRST BACK^
  3108						TBOTH^
  3109						TGET^
  3110	033040	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3111	033041	302 00 0 00 033030 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3112						STOP2^^
  3113	033042	254 04 0 00 033043 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3114	033043	254 00 0 00 033044 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3115						TSET^^
  3116			033044			%X=.			;DEFINE %X TO SAVE
  3117	033044	201 00 0 00 033044 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3118	033045	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3119						CLRBTH^
  3120	033046	700 04 0 00 261600 		CLRAPR
  3121	033047	700 14 0 00 031577 		CLRPI^
  3122					;TEST CLEARING OF CHANNEL FLOP
  3123	033050	7 004 20 0 00 002052 		CONO	PI,CHNON+52	;CHECK PIO CLR
  3124	033051	7 004 20 0 00 001052 		CONO	PI,CHNOFF+52	;TURN OFF CHANNELS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-18
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0080

  3125	033052	7 004 30 0 00 000052 		CONSZ	PI,52		;CHECK WHY FLOP NOT CLEAR
  3126						STOP^
  3127	033053	254 04 0 00 033054 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3128	033054	254 00 0 00 033055 		JRST	.+1		;WITH JRST BACK^
  3129						TBOTH^
  3130						TGET^
  3131	033055	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3132	033056	302 00 0 00 033044 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3133						STOP2^^
  3134	033057	254 04 0 00 033060 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3135	033060	254 00 0 00 033061 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3136						TSET^^
  3137			033061			%X=.			;DEFINE %X TO SAVE
  3138	033061	201 00 0 00 033061 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3139	033062	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3140						CLRBTH^
  3141	033063	700 04 0 00 261600 		CLRAPR
  3142	033064	700 14 0 00 031577 		CLRPI^
  3143					;CHECK RESETING OF PI SYSTEM
  3144	033065	7 004 20 0 00 002052 		CONO	PI,CHNON+52	;CHECK THAT PI RESET CLEARS
  3145	033066	7 004 20 0 00 010000 		CONO	PI,PICLR	;PI SYSTEM
  3146	033067	7 004 30 0 00 000052 		CONSZ	PI,52
  3147						STOP^
  3148	033070	254 04 0 00 033071 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3149	033071	254 00 0 00 033072 		JRST	.+1		;WITH JRST BACK^
  3150						TBOTH^
  3151						TGET^
  3152	033072	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3153	033073	302 00 0 00 033061 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3154						STOP2^^
  3155	033074	254 04 0 00 033075 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3156	033075	254 00 0 00 033076 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3157						TSET^^
  3158			033076			%X=.			;DEFINE %X TO SAVE
  3159	033076	201 00 0 00 033076 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3160	033077	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3161						CLRBTH^
  3162	033100	700 04 0 00 261600 		CLRAPR
  3163	033101	700 14 0 00 031577 		CLRPI^
  3164					;TEST THAT CONO ONLY SETS PION
  3165	033102	7 004 20 0 00 002000 		CONO	PI,CHNON	;TEST PIO SET
  3166	033103	7 004 30 0 00 000052 		CONSZ	PI,52		;CHECK WHY CONO SET FLAGS WITHOUT AN IOB BIT
  3167						STOP^
  3168	033104	254 04 0 00 033105 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3169	033105	254 00 0 00 033106 		JRST	.+1		;WITH JRST BACK^
  3170						TBOTH^
  3171						TGET^
  3172	033106	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3173	033107	302 00 0 00 033076 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3174						STOP2^^
  3175	033110	254 04 0 00 033111 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3176	033111	254 00 0 00 033112 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3177						TSET^^
  3178			033112			%X=.			;DEFINE %X TO SAVE
  3179	033112	201 00 0 00 033112 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 24-19
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0081

  3180	033113	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3181						CLRBTH^
  3182	033114	700 04 0 00 261600 		CLRAPR
  3183	033115	700 14 0 00 031577 		CLRPI^
  3184					;CHECK THAT CONO DOES NOT CLEAR ACTIVE
  3185	033116	7 004 20 0 00 002052 		CONO	PI,CHNON+52	;TEST PIO CLR
  3186	033117	7 004 20 0 00 001000 		CONO	PI,CHNOFF	;MAYBE RESET OCCURED - BIT SHOULD STILL
  3187	033120	7 004 34 0 00 000052 		CONSO	PI,52		;BE SET
  3188						STOP^
  3189	033121	254 04 0 00 033122 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3190	033122	254 00 0 00 033123 		JRST	.+1		;WITH JRST BACK^
  3191						TGET^^
  3192	033123	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3193	033124	302 00 0 00 033112 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3194						STOP2^^
  3195	033125	254 04 0 00 033126 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3196	033126	254 00 0 00 033127 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3197
  3198	033127	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 25
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0082

  3199						BLURB^
  3200					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
  3201					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  3202					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  3203					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  3204					^
  3205					;CHECK THE SETTING AND CLEARING OF THE HOLD FLOPS
  3206
  3207
  3208	033130	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  3209			040000			X=40000
  3210			000100			Y=100
  3211					PIOT03:	REPEAT	7,<
  3212						PIHCLR	Y,X
  3213						X=X_-1
  3214						Y=Y_-1
  3215					>
  3216
  3217						PIHCLR	Y,X^
  3218					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3219
  3220						TSET^
  3221			033131			%X=.			;DEFINE %X TO SAVE
  3222	033131	201 00 0 00 033131 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3223	033132	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3224	033133				..0040:	CLRBTH^
  3225	033133	700 04 0 00 261600 		CLRAPR
  3226	033134	700 14 0 00 031577 		CLRPI^
  3227	033135	7 004 20 0 00 004300 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3228						WATINT^
  3229	033136	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3230	033137	367 13 0 00 033137 		SOJG	13,.		;AND WAIT^
  3231	033140	7 004 20 0 00 010000 		CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
  3232	033141	7 004 30 0 00 040000 		CONSZ	PI,X		;HOLD FLOP FAILED TO CLEAR.
  3233						STOP^
  3234	033142	254 04 0 00 033143 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3235	033143	254 00 0 00 033144 		JRST	.+1		;WITH JRST BACK^
  3236						TGET^^
  3237	033144	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3238	033145	302 00 0 00 033131 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3239						STOP2^^
  3240	033146	254 04 0 00 033147 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3241	033147	254 00 0 00 033150 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3242			020000			X=X_-1
  3243			000040			Y=Y_-1
  3244
  3245
  3246						PIHCLR	Y,X^
  3247					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3248
  3249						TSET^
  3250			033150			%X=.			;DEFINE %X TO SAVE
  3251	033150	201 00 0 00 033150 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3252	033151	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3253	033152				..0041:	CLRBTH^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 25-1
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0083

  3254	033152	700 04 0 00 261600 		CLRAPR
  3255	033153	700 14 0 00 031577 		CLRPI^
  3256	033154	7 004 20 0 00 004240 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3257						WATINT^
  3258	033155	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3259	033156	367 13 0 00 033156 		SOJG	13,.		;AND WAIT^
  3260	033157	7 004 20 0 00 010000 		CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
  3261	033160	7 004 30 0 00 020000 		CONSZ	PI,X		;HOLD FLOP FAILED TO CLEAR.
  3262						STOP^
  3263	033161	254 04 0 00 033162 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3264	033162	254 00 0 00 033163 		JRST	.+1		;WITH JRST BACK^
  3265						TGET^^
  3266	033163	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3267	033164	302 00 0 00 033150 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3268						STOP2^^
  3269	033165	254 04 0 00 033166 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3270	033166	254 00 0 00 033167 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3271			010000			X=X_-1
  3272			000020			Y=Y_-1
  3273
  3274
  3275						PIHCLR	Y,X^
  3276					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3277
  3278						TSET^
  3279			033167			%X=.			;DEFINE %X TO SAVE
  3280	033167	201 00 0 00 033167 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3281	033170	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3282	033171				..0042:	CLRBTH^
  3283	033171	700 04 0 00 261600 		CLRAPR
  3284	033172	700 14 0 00 031577 		CLRPI^
  3285	033173	7 004 20 0 00 004220 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3286						WATINT^
  3287	033174	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3288	033175	367 13 0 00 033175 		SOJG	13,.		;AND WAIT^
  3289	033176	7 004 20 0 00 010000 		CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
  3290	033177	7 004 30 0 00 010000 		CONSZ	PI,X		;HOLD FLOP FAILED TO CLEAR.
  3291						STOP^
  3292	033200	254 04 0 00 033201 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3293	033201	254 00 0 00 033202 		JRST	.+1		;WITH JRST BACK^
  3294						TGET^^
  3295	033202	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3296	033203	302 00 0 00 033167 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3297						STOP2^^
  3298	033204	254 04 0 00 033205 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3299	033205	254 00 0 00 033206 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3300			004000			X=X_-1
  3301			000010			Y=Y_-1
  3302
  3303
  3304						PIHCLR	Y,X^
  3305					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3306
  3307						TSET^
  3308			033206			%X=.			;DEFINE %X TO SAVE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 25-2
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0084

  3309	033206	201 00 0 00 033206 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3310	033207	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3311	033210				..0043:	CLRBTH^
  3312	033210	700 04 0 00 261600 		CLRAPR
  3313	033211	700 14 0 00 031577 		CLRPI^
  3314	033212	7 004 20 0 00 004210 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3315						WATINT^
  3316	033213	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3317	033214	367 13 0 00 033214 		SOJG	13,.		;AND WAIT^
  3318	033215	7 004 20 0 00 010000 		CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
  3319	033216	7 004 30 0 00 004000 		CONSZ	PI,X		;HOLD FLOP FAILED TO CLEAR.
  3320						STOP^
  3321	033217	254 04 0 00 033220 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3322	033220	254 00 0 00 033221 		JRST	.+1		;WITH JRST BACK^
  3323						TGET^^
  3324	033221	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3325	033222	302 00 0 00 033206 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3326						STOP2^^
  3327	033223	254 04 0 00 033224 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3328	033224	254 00 0 00 033225 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3329			002000			X=X_-1
  3330			000004			Y=Y_-1
  3331
  3332
  3333						PIHCLR	Y,X^
  3334					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3335
  3336						TSET^
  3337			033225			%X=.			;DEFINE %X TO SAVE
  3338	033225	201 00 0 00 033225 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3339	033226	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3340	033227				..0044:	CLRBTH^
  3341	033227	700 04 0 00 261600 		CLRAPR
  3342	033230	700 14 0 00 031577 		CLRPI^
  3343	033231	7 004 20 0 00 004204 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3344						WATINT^
  3345	033232	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3346	033233	367 13 0 00 033233 		SOJG	13,.		;AND WAIT^
  3347	033234	7 004 20 0 00 010000 		CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
  3348	033235	7 004 30 0 00 002000 		CONSZ	PI,X		;HOLD FLOP FAILED TO CLEAR.
  3349						STOP^
  3350	033236	254 04 0 00 033237 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3351	033237	254 00 0 00 033240 		JRST	.+1		;WITH JRST BACK^
  3352						TGET^^
  3353	033240	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3354	033241	302 00 0 00 033225 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3355						STOP2^^
  3356	033242	254 04 0 00 033243 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3357	033243	254 00 0 00 033244 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3358			001000			X=X_-1
  3359			000002			Y=Y_-1
  3360
  3361
  3362						PIHCLR	Y,X^
  3363					;CHECK THAT PICLR CLEARS THE HOLD FLOP
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 25-3
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0085

  3364
  3365						TSET^
  3366			033244			%X=.			;DEFINE %X TO SAVE
  3367	033244	201 00 0 00 033244 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3368	033245	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3369	033246				..0045:	CLRBTH^
  3370	033246	700 04 0 00 261600 		CLRAPR
  3371	033247	700 14 0 00 031577 		CLRPI^
  3372	033250	7 004 20 0 00 004202 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3373						WATINT^
  3374	033251	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3375	033252	367 13 0 00 033252 		SOJG	13,.		;AND WAIT^
  3376	033253	7 004 20 0 00 010000 		CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
  3377	033254	7 004 30 0 00 001000 		CONSZ	PI,X		;HOLD FLOP FAILED TO CLEAR.
  3378						STOP^
  3379	033255	254 04 0 00 033256 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3380	033256	254 00 0 00 033257 		JRST	.+1		;WITH JRST BACK^
  3381						TGET^^
  3382	033257	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3383	033260	302 00 0 00 033244 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3384						STOP2^^
  3385	033261	254 04 0 00 033262 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3386	033262	254 00 0 00 033263 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3387			000400			X=X_-1
  3388			000001			Y=Y_-1
  3389
  3390
  3391						PIHCLR	Y,X^
  3392					;CHECK THAT PICLR CLEARS THE HOLD FLOP
  3393
  3394						TSET^
  3395			033263			%X=.			;DEFINE %X TO SAVE
  3396	033263	201 00 0 00 033263 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3397	033264	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3398	033265				..0046:	CLRBTH^
  3399	033265	700 04 0 00 261600 		CLRAPR
  3400	033266	700 14 0 00 031577 		CLRPI^
  3401	033267	7 004 20 0 00 004201 		CONO	PI,REQSET+PION+Y	;CAUSE INT. TO SET HOLD
  3402						WATINT^
  3403	033270	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3404	033271	367 13 0 00 033271 		SOJG	13,.		;AND WAIT^
  3405	033272	7 004 20 0 00 010000 		CONO	PI,PICLR	;THEN CLEAR VIA PI RESET
  3406	033273	7 004 30 0 00 000400 		CONSZ	PI,X		;HOLD FLOP FAILED TO CLEAR.
  3407						STOP^
  3408	033274	254 04 0 00 033275 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  3409	033275	254 00 0 00 033276 		JRST	.+1		;WITH JRST BACK^
  3410						TGET^^
  3411	033276	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3412	033277	302 00 0 00 033263 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3413						STOP2^^
  3414	033300	254 04 0 00 033301 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3415	033301	254 00 0 00 033302 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3416			000200			X=X_-1
  3417			000000			Y=Y_-1
  3418
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 25-4
DSKAH1	MAC	31-Mar-78 11:13		BASIC PI SYSTEM TESTING                                                            SEQ 0086

  3419	033302	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 26
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0087

  3420					SUBTTL	INTERRUPT TESTING WITH REAL INTERRUPTS
  3421
  3422					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3423					;VIA THE CACHE SWEEP DONE FLAG--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3424					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3425
  3426					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3427	033303	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3428	033304	700 14 0 00 031577 		CLRPI
  3429	033305	700 04 0 00 261600 		CLRAPR
  3430	033306	200 00 0 00 040240 		MOVE	[JSP UUO]	;SET TRAP TO HALT
  3431	033307	202 00 0 00 000041 		MOVEM	41		;IN THE UUO TRAP LOCATION
  3432	033310	200 00 0 00 040241 		MOVE	[JSR TRP0A]	;SET PROPER RECOVERY INST.
  3433	033311	202 00 0 00 000042 		MOVEM	42		;INTO CH1 TRAP
  3434	033312	7 004 20 0 00 002300 		CONO	PI,2300		;TURN ON CHAN1
  3435	033313	7 000 20 0 00 110401 		CONO	APR,LENXER!LSNXER!LAPRP1	;CAUSE CACHE SWP DONE AND CHAN
  3436						STUCK^
  3437						WATINT^
  3438	033314	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3439	033315	367 13 0 00 033315 		SOJG	13,.		;AND WAIT^
  3440	033316	254 00 0 00 033316 		JRST	.		;LOOP ON SELF^
  3441	033317	000000	000000		TRP0A:	0
  3442						TRPCHK^
  3443	033320	332 00 0 00 030042 	..0047:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3444	033321	254 00 0 00 033324 		JRST	.+3		;DONT IF STAND ALONE
  3445	033322	254 02 1 00 033323 		JRSTF	@.+1		;AND RESTORE THEM
  3446	033323	000000	033324			USERF,.+1		;NEW PC AND FLAGS^
  3447	033324	700 14 0 00 031577 		CLRPI
  3448	033325	700 04 0 00 261600 		CLRAPR
  3449					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3450					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3451					;VIA THE CACHE SWEEP DONE FLAG--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3452					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3453	033326	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3454	033327	200 00 0 00 040242 		MOVE	[JSR TRP1A]	;RECOVERY INSTRUCTION INTO
  3455	033330	202 00 0 00 000044 		MOVEM	44		;PROPER CHAN TRAP (2)
  3456	033331	7 004 20 0 00 002240 		CONO	PI,2240		;TURN CHAN 2 ON
  3457	033332	7 000 20 0 00 110102 		CONO	APR,LEPSFT!LSPSFT!LAPRP2	;CAUSE CACHE SWP DONE AND CHN ON
  3458						STUCK^
  3459						WATINT^
  3460	033333	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3461	033334	367 13 0 00 033334 		SOJG	13,.		;AND WAIT^
  3462	033335	254 00 0 00 033335 		JRST	.		;LOOP ON SELF^
  3463	033336	000000	000000		TRP1A:	0
  3464						TRPCHK^
  3465	033337	332 00 0 00 030042 	..0050:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3466	033340	254 00 0 00 033343 		JRST	.+3		;DONT IF STAND ALONE
  3467	033341	254 02 1 00 033342 		JRSTF	@.+1		;AND RESTORE THEM
  3468	033342	000000	033343			USERF,.+1		;NEW PC AND FLAGS^
  3469	033343	700 14 0 00 031577 		CLRPI
  3470	033344	700 04 0 00 261600 		CLRAPR
  3471					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3472					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3473					;VIA THE CACHE SWEEP DONE FLAG--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3474					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 26-1
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0088

  3475	033345	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3476	033346	200 00 0 00 040243 		MOVE	[JSR TRP2A]	;RECOVERY INSTRUCTION
  3477	033347	202 00 0 00 000046 		MOVEM	46		;INTO PROPER CHAN TRAP (3)
  3478	033350	7 004 20 0 00 002220 		CONO	PI,2220		;TURN CHAN 3 ON
  3479	033351	7 000 20 0 00 110203 		CONO	APR,LEPAER!LSPAER!LAPRP3		;CAUSE CACHE SWP DONE AND CHAN ON
  3480						STUCK^
  3481						WATINT^
  3482	033352	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3483	033353	367 13 0 00 033353 		SOJG	13,.		;AND WAIT^
  3484	033354	254 00 0 00 033354 		JRST	.		;LOOP ON SELF^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 27
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0089

  3485	033355	000000	000000		TRP2A:	0
  3486						TRPCHK^
  3487	033356	332 00 0 00 030042 	..0051:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3488	033357	254 00 0 00 033362 		JRST	.+3		;DONT IF STAND ALONE
  3489	033360	254 02 1 00 033361 		JRSTF	@.+1		;AND RESTORE THEM
  3490	033361	000000	033362			USERF,.+1		;NEW PC AND FLAGS^
  3491	033362	700 14 0 00 031577 		CLRPI
  3492	033363	700 04 0 00 261600 		CLRAPR
  3493					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3494					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3495					;VIA THE CACHE SWEEP DONE FLAG--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3496					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3497	033364	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3498	033365	200 00 0 00 040244 		MOVE	[JSR TRP3A]	;RECOVERY INSTRUCTION
  3499	033366	202 00 0 00 000050 		MOVEM	50		;INTO PROPER CHAN TRAP (4)
  3500	033367	7 004 20 0 00 002210 		CONO	PI,2210		;TURN CHAN 4 ON
  3501	033370	7 000 20 0 00 010104 		CONO	APR,LSPSFT!LSPSFT!LAPRP4		;CAUSE CACHE SWP DONE AND CHAN ON
  3502						STUCK^
  3503						WATINT^
  3504	033371	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3505	033372	367 13 0 00 033372 		SOJG	13,.		;AND WAIT^
  3506	033373	254 00 0 00 033373 		JRST	.		;LOOP ON SELF^
  3507	033374	000000	000000		TRP3A:	0
  3508						TRPCHK^
  3509	033375	332 00 0 00 030042 	..0052:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3510	033376	254 00 0 00 033401 		JRST	.+3		;DONT IF STAND ALONE
  3511	033377	254 02 1 00 033400 		JRSTF	@.+1		;AND RESTORE THEM
  3512	033400	000000	033401			USERF,.+1		;NEW PC AND FLAGS^
  3513	033401	700 14 0 00 031577 		CLRPI
  3514	033402	700 04 0 00 261600 		CLRAPR
  3515					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3516					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3517					;VIA THE CACHE SWEEP DONE FLAG--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3518					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3519	033403	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3520	033404	200 00 0 00 040245 		MOVE	[JSR TRP4A]	;RECOVERY INSTRUCTION
  3521	033405	202 00 0 00 000052 		MOVEM	52		;INTO PROPER CHAN TRAP (5)
  3522	033406	7 004 20 0 00 002204 		CONO	PI,2204		;TURN CHAN 5 ON
  3523	033407	7 000 20 0 00 110105 		CONO	APR,LEPSFT!LSPSFT!LAPRP5		;CAUSE CACHE SWP DONE AND CHAN ON
  3524						STUCK^
  3525						WATINT^
  3526	033410	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3527	033411	367 13 0 00 033411 		SOJG	13,.		;AND WAIT^
  3528	033412	254 00 0 00 033412 		JRST	.		;LOOP ON SELF^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 28
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT TESTING WITH REAL INTERRUPTS                                             SEQ 0090

  3529	033413	000000	000000		TRP4A:	0
  3530						TRPCHK^
  3531	033414	332 00 0 00 030042 	..0053:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3532	033415	254 00 0 00 033420 		JRST	.+3		;DONT IF STAND ALONE
  3533	033416	254 02 1 00 033417 		JRSTF	@.+1		;AND RESTORE THEM
  3534	033417	000000	033420			USERF,.+1		;NEW PC AND FLAGS^
  3535	033420	700 14 0 00 031577 		CLRPI
  3536	033421	700 04 0 00 261600 		CLRAPR
  3537
  3538					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3539					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3540					;VIA THE CACHE SWEEP DONE FLAG--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3541					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3542	033422	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3543	033423	200 00 0 00 040246 		MOVE	[JSR TRP5A]	;RECOVERY INSTRUCTION
  3544	033424	202 00 0 00 000054 		MOVEM	54		;INTO PROPER CHAN TRAP (6)
  3545	033425	7 004 20 0 00 002202 		CONO	PI,2202		;TURN CHAN 6 ON
  3546	033426	7 000 20 0 00 111006 		CONO	APR,LEPWRF!LSPWRF!LAPRP6	;CAUSE CACHE SWP DONE AND CHAN ON
  3547						STUCK^
  3548						WATINT^
  3549	033427	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3550	033430	367 13 0 00 033430 		SOJG	13,.		;AND WAIT^
  3551	033431	254 00 0 00 033431 		JRST	.		;LOOP ON SELF^
  3552	033432	000000	000000		TRP5A:	0
  3553						TRPCHK^
  3554	033433	332 00 0 00 030042 	..0054:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3555	033434	254 00 0 00 033437 		JRST	.+3		;DONT IF STAND ALONE
  3556	033435	254 02 1 00 033436 		JRSTF	@.+1		;AND RESTORE THEM
  3557	033436	000000	033437			USERF,.+1		;NEW PC AND FLAGS^
  3558	033437	700 14 0 00 031577 		CLRPI
  3559	033440	700 04 0 00 261600 		CLRAPR
  3560					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3561					;TEST PROPER TRAP WHEN INTERRUPTING ON EACH CHANNEL
  3562					;VIA THE CACHE SWEEP DONE FLAG--ILLEGAL TRAPS HALT--NO TRAP LOOPS
  3563					;THE HALT POINTS TO THE CHANNEL THOUGHT TO BE REQUESTED
  3564	033441	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3565	033442	200 00 0 00 040247 		MOVE	[JSR TRP6A]	;RECOVERY INSTRUCTION
  3566	033443	202 00 0 00 000056 		MOVEM	56		;INTO PROPER CHAN TRAP (7)
  3567	033444	7 004 20 0 00 002201 		CONO	PI,2201		;TURN CHAN 7 ON
  3568	033445	7 000 20 0 00 111007 		CONO	APR,LEPWRF!LSPWRF!LAPRP7	;CASUE CACHE SWP DONE AND CHAN ON
  3569						STUCK^
  3570						WATINT^
  3571	033446	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3572	033447	367 13 0 00 033447 		SOJG	13,.		;AND WAIT^
  3573	033450	254 00 0 00 033450 		JRST	.		;LOOP ON SELF^
  3574	033451	000000	000000		TRP6A:	0
  3575						TRPCHK^
  3576	033452	332 00 0 00 030042 	..0055:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3577	033453	254 00 0 00 033456 		JRST	.+3		;DONT IF STAND ALONE
  3578	033454	254 02 1 00 033455 		JRSTF	@.+1		;AND RESTORE THEM
  3579	033455	000000	033456			USERF,.+1		;NEW PC AND FLAGS^
  3580
  3581	033456	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 29
DSKAH1	MAC	31-Mar-78 11:13		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0091

  3582					SUBTTL	INTERNAL INTERRUPT REQUEST TESTING
  3583
  3584					;CHECK THE ABILITY TO GENERATE PI REQUESTS VIA PROGRAM REQEST ON ALL
  3585					;CHANNELS.
  3586	033457	265 00 0 00 033460 		JSP	.+1		;GET FLAGS
  3587	033460	603 00 0 00 010000 		TLNE	USERF		;USER MODE BIT ON
  3588	033461	254 00 0 00 033462 		JRST	.+1		;DONT DO IF USER MODE!
  3589
  3590						CLRBTH^
  3591	033462	700 04 0 00 261600 		CLRAPR
  3592	033463	700 14 0 00 031577 		CLRPI^
  3593					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3594	033464	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3595	033465	700 14 0 00 031577 		CLRPI
  3596	033466	700 04 0 00 261600 		CLRAPR
  3597						TRAP	<JSR CKI01>,42^
  3598	033467	200 00 0 00 040250 		MOVE	[JSR CKI01]		;SET TRAP INSTRUCTION
  3599	033470	202 00 0 00 000042 		MOVEM	42		;INTO TRAP LOCATION^
  3600	033471	7 004 20 0 00 006300 		CONO	PI,6300		;INTERRUPT ON CH1
  3601						STUCK^
  3602						WATINT^
  3603	033472	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3604	033473	367 13 0 00 033473 		SOJG	13,.		;AND WAIT^
  3605	033474	254 00 0 00 033474 		JRST	.		;LOOP ON SELF^
  3606					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3607	033475	000000	000000		CKI01:	0
  3608						TRPCHK^
  3609	033476	332 00 0 00 030042 	..0056:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3610	033477	254 00 0 00 033502 		JRST	.+3		;DONT IF STAND ALONE
  3611	033500	254 02 1 00 033501 		JRSTF	@.+1		;AND RESTORE THEM
  3612	033501	000000	033502			USERF,.+1		;NEW PC AND FLAGS^
  3613	033502	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3614	033503	700 14 0 00 031577 		CLRPI
  3615	033504	700 04 0 00 261600 		CLRAPR
  3616						TRAP	<JSR CKI02>,44^
  3617	033505	200 00 0 00 040251 		MOVE	[JSR CKI02]		;SET TRAP INSTRUCTION
  3618	033506	202 00 0 00 000044 		MOVEM	44		;INTO TRAP LOCATION^
  3619	033507	7 004 20 0 00 006240 		CONO	PI,6240		;INTERRUPT ON CH 2
  3620						STUCK^
  3621						WATINT^
  3622	033510	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3623	033511	367 13 0 00 033511 		SOJG	13,.		;AND WAIT^
  3624	033512	254 00 0 00 033512 		JRST	.		;LOOP ON SELF^
  3625					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 30
DSKAH1	MAC	31-Mar-78 11:13		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0092

  3626	033513	000000	000000		CKI02:	0
  3627						TRPCHK^
  3628	033514	332 00 0 00 030042 	..0057:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3629	033515	254 00 0 00 033520 		JRST	.+3		;DONT IF STAND ALONE
  3630	033516	254 02 1 00 033517 		JRSTF	@.+1		;AND RESTORE THEM
  3631	033517	000000	033520			USERF,.+1		;NEW PC AND FLAGS^
  3632	033520	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3633	033521	700 14 0 00 031577 		CLRPI
  3634	033522	700 04 0 00 261600 		CLRAPR
  3635						TRAP	<JSR CKI03>,46^
  3636	033523	200 00 0 00 040252 		MOVE	[JSR CKI03]		;SET TRAP INSTRUCTION
  3637	033524	202 00 0 00 000046 		MOVEM	46		;INTO TRAP LOCATION^
  3638	033525	7 004 20 0 00 006220 		CONO	PI,6220		;INTERRUPT ON CH 3
  3639						STUCK^
  3640						WATINT^
  3641	033526	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3642	033527	367 13 0 00 033527 		SOJG	13,.		;AND WAIT^
  3643	033530	254 00 0 00 033530 		JRST	.		;LOOP ON SELF^
  3644					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 31
DSKAH1	MAC	31-Mar-78 11:13		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0093

  3645	033531	000000	000000		CKI03:	0
  3646						TRPCHK^
  3647	033532	332 00 0 00 030042 	..0060:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3648	033533	254 00 0 00 033536 		JRST	.+3		;DONT IF STAND ALONE
  3649	033534	254 02 1 00 033535 		JRSTF	@.+1		;AND RESTORE THEM
  3650	033535	000000	033536			USERF,.+1		;NEW PC AND FLAGS^
  3651	033536	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3652	033537	700 14 0 00 031577 		CLRPI
  3653	033540	700 04 0 00 261600 		CLRAPR
  3654						TRAP	<JSR CKI04>,50^
  3655	033541	200 00 0 00 040253 		MOVE	[JSR CKI04]		;SET TRAP INSTRUCTION
  3656	033542	202 00 0 00 000050 		MOVEM	50		;INTO TRAP LOCATION^
  3657	033543	7 004 20 0 00 006210 		CONO	PI,6210		;INTERRUPT ON CH 4
  3658						STUCK^
  3659						WATINT^
  3660	033544	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3661	033545	367 13 0 00 033545 		SOJG	13,.		;AND WAIT^
  3662	033546	254 00 0 00 033546 		JRST	.		;LOOP ON SELF^
  3663					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3664	033547	000000	000000		CKI04:	0
  3665						TRPCHK^
  3666	033550	332 00 0 00 030042 	..0061:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3667	033551	254 00 0 00 033554 		JRST	.+3		;DONT IF STAND ALONE
  3668	033552	254 02 1 00 033553 		JRSTF	@.+1		;AND RESTORE THEM
  3669	033553	000000	033554			USERF,.+1		;NEW PC AND FLAGS^
  3670	033554	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3671	033555	700 14 0 00 031577 		CLRPI
  3672	033556	700 04 0 00 261600 		CLRAPR
  3673						TRAP	<JSR CKI05>,52^
  3674	033557	200 00 0 00 040254 		MOVE	[JSR CKI05]		;SET TRAP INSTRUCTION
  3675	033560	202 00 0 00 000052 		MOVEM	52		;INTO TRAP LOCATION^
  3676	033561	7 004 20 0 00 006204 		CONO	PI,6204		;INTERRUPT ON CH 5
  3677						STUCK^
  3678						WATINT^
  3679	033562	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3680	033563	367 13 0 00 033563 		SOJG	13,.		;AND WAIT^
  3681	033564	254 00 0 00 033564 		JRST	.		;LOOP ON SELF^
  3682					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3683	033565	000000	000000		CKI05:	0
  3684						TRPCHK^
  3685	033566	332 00 0 00 030042 	..0062:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3686	033567	254 00 0 00 033572 		JRST	.+3		;DONT IF STAND ALONE
  3687	033570	254 02 1 00 033571 		JRSTF	@.+1		;AND RESTORE THEM
  3688	033571	000000	033572			USERF,.+1		;NEW PC AND FLAGS^
  3689	033572	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3690	033573	700 14 0 00 031577 		CLRPI
  3691	033574	700 04 0 00 261600 		CLRAPR
  3692						TRAP	<JSR CKI06>,54^
  3693	033575	200 00 0 00 040255 		MOVE	[JSR CKI06]		;SET TRAP INSTRUCTION
  3694	033576	202 00 0 00 000054 		MOVEM	54		;INTO TRAP LOCATION^
  3695	033577	7 004 20 0 00 006202 		CONO	PI,6202		;INTERRUPT ON CH 6
  3696						STUCK^
  3697						WATINT^
  3698	033600	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3699	033601	367 13 0 00 033601 		SOJG	13,.		;AND WAIT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 31-1
DSKAH1	MAC	31-Mar-78 11:13		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0094

  3700	033602	254 00 0 00 033602 		JRST	.		;LOOP ON SELF^
  3701					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 32
DSKAH1	MAC	31-Mar-78 11:13		INTERNAL INTERRUPT REQUEST TESTING                                                 SEQ 0095

  3702	033603	000000	000000		CKI06:	0
  3703						TRPCHK^
  3704	033604	332 00 0 00 030042 	..0063:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3705	033605	254 00 0 00 033610 		JRST	.+3		;DONT IF STAND ALONE
  3706	033606	254 02 1 00 033607 		JRSTF	@.+1		;AND RESTORE THEM
  3707	033607	000000	033610			USERF,.+1		;NEW PC AND FLAGS^
  3708	033610	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3709	033611	700 14 0 00 031577 		CLRPI
  3710	033612	700 04 0 00 261600 		CLRAPR
  3711						TRAP	<JSR CKI07>,56^
  3712	033613	200 00 0 00 040256 		MOVE	[JSR CKI07]		;SET TRAP INSTRUCTION
  3713	033614	202 00 0 00 000056 		MOVEM	56		;INTO TRAP LOCATION^
  3714	033615	7 004 20 0 00 006201 		CONO	PI,6201		;INTERRUPT ON CH 7
  3715						STUCK^
  3716						WATINT^
  3717	033616	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3718	033617	367 13 0 00 033617 		SOJG	13,.		;AND WAIT^
  3719	033620	254 00 0 00 033620 		JRST	.		;LOOP ON SELF^
  3720					;IF PI HANGS OR BLOWS UP THEN SEE 'PII' PRINT OR 'PIR' PRINT
  3721	033621	000000	000000		CKI07:	0
  3722						TRPCHK^
  3723	033622	332 00 0 00 030042 	..0064:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3724	033623	254 00 0 00 033626 		JRST	.+3		;DONT IF STAND ALONE
  3725	033624	254 02 1 00 033625 		JRSTF	@.+1		;AND RESTORE THEM
  3726	033625	000000	033626			USERF,.+1		;NEW PC AND FLAGS^
  3727	033626	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3728	033627	264 00 0 00 040021 		CLRTRP
  3729	033630	700 14 0 00 031577 		CLRPI
  3730	033631	700 04 0 00 261600 		CLRAPR
  3731	033632	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 33
DSKAH1	MAC	31-Mar-78 11:13		PRIORITY TESTING                                                                   SEQ 0096

  3732					SUBTTL	PRIORITY TESTING
  3733					;THIS TEST CHECKS TO SEE IF INTERRUPTS RECOGNIZE THE PROPER PRIORITY
  3734					;IMPROPER TRAPS WILL HALT - NO TRAPS WILL CAUSE PROGRAM TO HANG
  3735					;IF PROGRAM STUCK THEN REPLACE "JRST ." WITH JRST BACK TO MULT7
  3736					;IF PROGRAM HALTS THEN REPLACE "JSR" IN INTERRUPT LOCATION
  3737					;TO "JSR" TO ROUTINE WHICH CAUSED THE TRAP +1
  3738					;FOR EXAMPLE IF ROUTINE TRAPPED TO LOCATION '50' IN 50
  3739					;YOU WOULD PUT A JSR TO "MULTX ROUTINE+3
  3740
  3741	033633				MULTI:	CLRBT1^
  3742	033633	700 04 0 00 261600 		CLRAPR
  3743	033634	700 14 0 00 031577 		CLRPI^
  3744	033635	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3745						TRAP	<JSR	MULT6>,56^
  3746	033636	200 00 0 00 040257 		MOVE	[JSR	MULT6]		;SET TRAP INSTRUCTION
  3747	033637	202 00 0 00 000056 		MOVEM	56		;INTO TRAP LOCATION^
  3748	033640	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  3749						SBWAIT	7^
  3750	033641	7 000 20 0 00 110107 	..0065:	CONO	APR,LEPSFT!LSPSFT!7
  3751						STUCK^^
  3752						WATINT^
  3753	033642	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3754	033643	367 13 0 00 033643 		SOJG	13,.		;AND WAIT^
  3755	033644	254 00 0 00 033644 		JRST	.		;LOOP ON SELF^
  3756	033645	000000	000000		MULT6:	0
  3757						TRPCHK^
  3758	033646	332 00 0 00 030042 	..0066:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3759	033647	254 00 0 00 033652 		JRST	.+3		;DONT IF STAND ALONE
  3760	033650	254 02 1 00 033651 		JRSTF	@.+1		;AND RESTORE THEM
  3761	033651	000000	033652			USERF,.+1		;NEW PC AND FLAGS^
  3762	033652	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3763						TRAP	<JSR	MULT5>,54^
  3764	033653	200 00 0 00 040260 		MOVE	[JSR	MULT5]		;SET TRAP INSTRUCTION
  3765	033654	202 00 0 00 000054 		MOVEM	54		;INTO TRAP LOCATION^
  3766	033655	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  3767						SBWAIT	6^
  3768	033656	7 000 20 0 00 110106 	..0067:	CONO	APR,LEPSFT!LSPSFT!6
  3769						STUCK^^
  3770						WATINT^
  3771	033657	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3772	033660	367 13 0 00 033660 		SOJG	13,.		;AND WAIT^
  3773	033661	254 00 0 00 033661 		JRST	.		;LOOP ON SELF^
  3774	033662	000000	000000		MULT5:	0
  3775						TRPCHK^
  3776	033663	332 00 0 00 030042 	..0070:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3777	033664	254 00 0 00 033667 		JRST	.+3		;DONT IF STAND ALONE
  3778	033665	254 02 1 00 033666 		JRSTF	@.+1		;AND RESTORE THEM
  3779	033666	000000	033667			USERF,.+1		;NEW PC AND FLAGS^
  3780	033667	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3781						TRAP	<JSR	MULT4>,52^
  3782	033670	200 00 0 00 040261 		MOVE	[JSR	MULT4]		;SET TRAP INSTRUCTION
  3783	033671	202 00 0 00 000052 		MOVEM	52		;INTO TRAP LOCATION^
  3784	033672	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  3785						SBWAIT	5^
  3786	033673	7 000 20 0 00 110105 	..0071:	CONO	APR,LEPSFT!LSPSFT!5
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 33-1
DSKAH1	MAC	31-Mar-78 11:13		PRIORITY TESTING                                                                   SEQ 0097

  3787						STUCK^^
  3788						WATINT^
  3789	033674	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3790	033675	367 13 0 00 033675 		SOJG	13,.		;AND WAIT^
  3791	033676	254 00 0 00 033676 		JRST	.		;LOOP ON SELF^
  3792	033677	000000	000000		MULT4:	0
  3793						TRPCHK^
  3794	033700	332 00 0 00 030042 	..0072:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3795	033701	254 00 0 00 033704 		JRST	.+3		;DONT IF STAND ALONE
  3796	033702	254 02 1 00 033703 		JRSTF	@.+1		;AND RESTORE THEM
  3797	033703	000000	033704			USERF,.+1		;NEW PC AND FLAGS^
  3798	033704	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3799						TRAP	<JSR	MULT3>,50^
  3800	033705	200 00 0 00 040262 		MOVE	[JSR	MULT3]		;SET TRAP INSTRUCTION
  3801	033706	202 00 0 00 000050 		MOVEM	50		;INTO TRAP LOCATION^
  3802	033707	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  3803						SBWAIT	4^
  3804	033710	7 000 20 0 00 110104 	..0073:	CONO	APR,LEPSFT!LSPSFT!4
  3805						STUCK^^
  3806						WATINT^
  3807	033711	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3808	033712	367 13 0 00 033712 		SOJG	13,.		;AND WAIT^
  3809	033713	254 00 0 00 033713 		JRST	.		;LOOP ON SELF^
  3810	033714	000000	000000		MULT3:	0
  3811						TRPCHK^
  3812	033715	332 00 0 00 030042 	..0074:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3813	033716	254 00 0 00 033721 		JRST	.+3		;DONT IF STAND ALONE
  3814	033717	254 02 1 00 033720 		JRSTF	@.+1		;AND RESTORE THEM
  3815	033720	000000	033721			USERF,.+1		;NEW PC AND FLAGS^
  3816	033721	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3817						TRAP	<JSR	MULT2>,46^
  3818	033722	200 00 0 00 040263 		MOVE	[JSR	MULT2]		;SET TRAP INSTRUCTION
  3819	033723	202 00 0 00 000046 		MOVEM	46		;INTO TRAP LOCATION^
  3820	033724	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  3821						SBWAIT	3^
  3822	033725	7 000 20 0 00 110103 	..0075:	CONO	APR,LEPSFT!LSPSFT!3
  3823						STUCK^^
  3824						WATINT^
  3825	033726	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3826	033727	367 13 0 00 033727 		SOJG	13,.		;AND WAIT^
  3827	033730	254 00 0 00 033730 		JRST	.		;LOOP ON SELF^
  3828	033731	000000	000000		MULT2:	0
  3829						TRPCHK^
  3830	033732	332 00 0 00 030042 	..0076:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3831	033733	254 00 0 00 033736 		JRST	.+3		;DONT IF STAND ALONE
  3832	033734	254 02 1 00 033735 		JRSTF	@.+1		;AND RESTORE THEM
  3833	033735	000000	033736			USERF,.+1		;NEW PC AND FLAGS^
  3834	033736	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3835						TRAP	<JSR	MULT1>,44^
  3836	033737	200 00 0 00 040264 		MOVE	[JSR	MULT1]		;SET TRAP INSTRUCTION
  3837	033740	202 00 0 00 000044 		MOVEM	44		;INTO TRAP LOCATION^
  3838	033741	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  3839						SBWAIT	2^
  3840	033742	7 000 20 0 00 110102 	..0077:	CONO	APR,LEPSFT!LSPSFT!2
  3841						STUCK^^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 33-2
DSKAH1	MAC	31-Mar-78 11:13		PRIORITY TESTING                                                                   SEQ 0098

  3842						WATINT^
  3843	033743	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3844	033744	367 13 0 00 033744 		SOJG	13,.		;AND WAIT^
  3845	033745	254 00 0 00 033745 		JRST	.		;LOOP ON SELF^
  3846	033746	000000	000000		MULT1:	0
  3847						TRPCHK^
  3848	033747	332 00 0 00 030042 	..0100:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3849	033750	254 00 0 00 033753 		JRST	.+3		;DONT IF STAND ALONE
  3850	033751	254 02 1 00 033752 		JRSTF	@.+1		;AND RESTORE THEM
  3851	033752	000000	033753			USERF,.+1		;NEW PC AND FLAGS^
  3852	033753	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3853						TRAP	<JSR	MULT0>,42^
  3854	033754	200 00 0 00 040265 		MOVE	[JSR	MULT0]		;SET TRAP INSTRUCTION
  3855	033755	202 00 0 00 000042 		MOVEM	42		;INTO TRAP LOCATION^
  3856	033756	7 004 20 0 00 002377 		CONO	PI,CHNON+PION+177	;TURN ON PI SYSTEM
  3857						SBWAIT	1^
  3858	033757	7 000 20 0 00 110101 	..0101:	CONO	APR,LEPSFT!LSPSFT!1
  3859						STUCK^^
  3860						WATINT^
  3861	033760	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3862	033761	367 13 0 00 033761 		SOJG	13,.		;AND WAIT^
  3863	033762	254 00 0 00 033762 		JRST	.		;LOOP ON SELF^
  3864	033763	000000	000000		MULT0:	0
  3865						TRPCHK^
  3866	033764	332 00 0 00 030042 	..0102:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3867	033765	254 00 0 00 033770 		JRST	.+3		;DONT IF STAND ALONE
  3868	033766	254 02 1 00 033767 		JRSTF	@.+1		;AND RESTORE THEM
  3869	033767	000000	033770			USERF,.+1		;NEW PC AND FLAGS^
  3870	033770	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3871						CLRBTH^
  3872	033771	700 04 0 00 261600 		CLRAPR
  3873	033772	700 14 0 00 031577 		CLRPI^
  3874	033773	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0099

  3875					SUBTTL	DUAL REQUEST TESTING
  3876					;TEST THAT INTERRUPTING ON 2 CHANNELS AT ONCE TRAPS
  3877					;TO THE CORRECT TRAP. TEST IS DONE ON ALL POSSIBLE CHANNELS I.E.
  3878					;7,1 7,2 7,3 7,4 7,5 7,6 6,1 6,2...ETC
  3879
  3880
  3881	033774				C2A:	TSET^
  3882			033774			%X=.			;DEFINE %X TO SAVE
  3883	033774	201 00 0 00 033774 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3884	033775	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3885						XCHN2	C2B,42,101^
  3886					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  3887					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  3888					;IF ERROR OCCURS CHECK "PIN" PRINT
  3889
  3890						TRPCHK^
  3891	033776	332 00 0 00 030042 	..0103:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3892	033777	254 00 0 00 034002 		JRST	.+3		;DONT IF STAND ALONE
  3893	034000	254 02 1 00 034001 		JRSTF	@.+1		;AND RESTORE THEM
  3894	034001	000000	034002			USERF,.+1		;NEW PC AND FLAGS^
  3895						CLRBTH^
  3896	034002	700 04 0 00 261600 		CLRAPR
  3897	034003	700 14 0 00 031577 		CLRPI^
  3898	034004	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3899	034005	200 00 0 00 040266 		MOVE	[JSR C2B]		;SET UP FOR CORRECT
  3900	034006	202 00 0 00 000042 		MOVEM	42		;INTERRUPT TRAP
  3901	034007	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  3902	034010	7 004 20 0 00 004101 		CONO	PI,REQSET!101	;REQUEST INTERRUPT ON TWO CHANNELS
  3903						STUCK^^
  3904						WATINT^
  3905	034011	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3906	034012	367 13 0 00 034012 		SOJG	13,.		;AND WAIT^
  3907	034013	254 00 0 00 034013 		JRST	.		;LOOP ON SELF^
  3908	034014	000000	000000		C2B:	0
  3909						TBOTH^
  3910						TGET^
  3911	034015	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3912	034016	302 00 0 00 033774 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3913						STOP2^^
  3914	034017	254 04 0 00 034020 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3915	034020	254 00 0 00 034021 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3916						TSET^^
  3917			034021			%X=.			;DEFINE %X TO SAVE
  3918	034021	201 00 0 00 034021 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3919	034022	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3920						XCHN2	C2C,44,41^
  3921					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  3922					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  3923					;IF ERROR OCCURS CHECK "PIN" PRINT
  3924
  3925						TRPCHK^
  3926	034023	332 00 0 00 030042 	..0104:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3927	034024	254 00 0 00 034027 		JRST	.+3		;DONT IF STAND ALONE
  3928	034025	254 02 1 00 034026 		JRSTF	@.+1		;AND RESTORE THEM
  3929	034026	000000	034027			USERF,.+1		;NEW PC AND FLAGS^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-1
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0100

  3930						CLRBTH^
  3931	034027	700 04 0 00 261600 		CLRAPR
  3932	034030	700 14 0 00 031577 		CLRPI^
  3933	034031	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3934	034032	200 00 0 00 040267 		MOVE	[JSR C2C]		;SET UP FOR CORRECT
  3935	034033	202 00 0 00 000044 		MOVEM	44		;INTERRUPT TRAP
  3936	034034	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  3937	034035	7 004 20 0 00 004041 		CONO	PI,REQSET!41	;REQUEST INTERRUPT ON TWO CHANNELS
  3938						STUCK^^
  3939						WATINT^
  3940	034036	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3941	034037	367 13 0 00 034037 		SOJG	13,.		;AND WAIT^
  3942	034040	254 00 0 00 034040 		JRST	.		;LOOP ON SELF^
  3943	034041	000000	000000		C2C:	0
  3944						TBOTH^
  3945						TGET^
  3946	034042	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3947	034043	302 00 0 00 034021 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3948						STOP2^^
  3949	034044	254 04 0 00 034045 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  3950	034045	254 00 0 00 034046 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3951						TSET^^
  3952			034046			%X=.			;DEFINE %X TO SAVE
  3953	034046	201 00 0 00 034046 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3954	034047	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3955						XCHN2	C2D,46,21^
  3956					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  3957					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  3958					;IF ERROR OCCURS CHECK "PIN" PRINT
  3959
  3960						TRPCHK^
  3961	034050	332 00 0 00 030042 	..0105:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3962	034051	254 00 0 00 034054 		JRST	.+3		;DONT IF STAND ALONE
  3963	034052	254 02 1 00 034053 		JRSTF	@.+1		;AND RESTORE THEM
  3964	034053	000000	034054			USERF,.+1		;NEW PC AND FLAGS^
  3965						CLRBTH^
  3966	034054	700 04 0 00 261600 		CLRAPR
  3967	034055	700 14 0 00 031577 		CLRPI^
  3968	034056	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  3969	034057	200 00 0 00 040270 		MOVE	[JSR C2D]		;SET UP FOR CORRECT
  3970	034060	202 00 0 00 000046 		MOVEM	46		;INTERRUPT TRAP
  3971	034061	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  3972	034062	7 004 20 0 00 004021 		CONO	PI,REQSET!21	;REQUEST INTERRUPT ON TWO CHANNELS
  3973						STUCK^^
  3974						WATINT^
  3975	034063	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  3976	034064	367 13 0 00 034064 		SOJG	13,.		;AND WAIT^
  3977	034065	254 00 0 00 034065 		JRST	.		;LOOP ON SELF^
  3978	034066	000000	000000		C2D:	0
  3979						TBOTH^
  3980						TGET^
  3981	034067	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  3982	034070	302 00 0 00 034046 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  3983						STOP2^^
  3984	034071	254 04 0 00 034072 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-2
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0101

  3985	034072	254 00 0 00 034073 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  3986						TSET^^
  3987			034073			%X=.			;DEFINE %X TO SAVE
  3988	034073	201 00 0 00 034073 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  3989	034074	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  3990						XCHN2	C2E,50,11^
  3991					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  3992					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  3993					;IF ERROR OCCURS CHECK "PIN" PRINT
  3994
  3995						TRPCHK^
  3996	034075	332 00 0 00 030042 	..0106:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  3997	034076	254 00 0 00 034101 		JRST	.+3		;DONT IF STAND ALONE
  3998	034077	254 02 1 00 034100 		JRSTF	@.+1		;AND RESTORE THEM
  3999	034100	000000	034101			USERF,.+1		;NEW PC AND FLAGS^
  4000						CLRBTH^
  4001	034101	700 04 0 00 261600 		CLRAPR
  4002	034102	700 14 0 00 031577 		CLRPI^
  4003	034103	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4004	034104	200 00 0 00 040271 		MOVE	[JSR C2E]		;SET UP FOR CORRECT
  4005	034105	202 00 0 00 000050 		MOVEM	50		;INTERRUPT TRAP
  4006	034106	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4007	034107	7 004 20 0 00 004011 		CONO	PI,REQSET!11	;REQUEST INTERRUPT ON TWO CHANNELS
  4008						STUCK^^
  4009						WATINT^
  4010	034110	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4011	034111	367 13 0 00 034111 		SOJG	13,.		;AND WAIT^
  4012	034112	254 00 0 00 034112 		JRST	.		;LOOP ON SELF^
  4013	034113	000000	000000		C2E:	0
  4014						TBOTH^
  4015						TGET^
  4016	034114	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4017	034115	302 00 0 00 034073 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4018						STOP2^^
  4019	034116	254 04 0 00 034117 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4020	034117	254 00 0 00 034120 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4021						TSET^^
  4022			034120			%X=.			;DEFINE %X TO SAVE
  4023	034120	201 00 0 00 034120 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4024	034121	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4025						XCHN2	C2F,52,5^
  4026					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4027					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4028					;IF ERROR OCCURS CHECK "PIN" PRINT
  4029
  4030						TRPCHK^
  4031	034122	332 00 0 00 030042 	..0107:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4032	034123	254 00 0 00 034126 		JRST	.+3		;DONT IF STAND ALONE
  4033	034124	254 02 1 00 034125 		JRSTF	@.+1		;AND RESTORE THEM
  4034	034125	000000	034126			USERF,.+1		;NEW PC AND FLAGS^
  4035						CLRBTH^
  4036	034126	700 04 0 00 261600 		CLRAPR
  4037	034127	700 14 0 00 031577 		CLRPI^
  4038	034130	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4039	034131	200 00 0 00 040272 		MOVE	[JSR C2F]		;SET UP FOR CORRECT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-3
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0102

  4040	034132	202 00 0 00 000052 		MOVEM	52		;INTERRUPT TRAP
  4041	034133	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4042	034134	7 004 20 0 00 004005 		CONO	PI,REQSET!5	;REQUEST INTERRUPT ON TWO CHANNELS
  4043						STUCK^^
  4044						WATINT^
  4045	034135	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4046	034136	367 13 0 00 034136 		SOJG	13,.		;AND WAIT^
  4047	034137	254 00 0 00 034137 		JRST	.		;LOOP ON SELF^
  4048	034140	000000	000000		C2F:	0
  4049						TBOTH^
  4050						TGET^
  4051	034141	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4052	034142	302 00 0 00 034120 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4053						STOP2^^
  4054	034143	254 04 0 00 034144 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4055	034144	254 00 0 00 034145 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4056						TSET^^
  4057			034145			%X=.			;DEFINE %X TO SAVE
  4058	034145	201 00 0 00 034145 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4059	034146	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4060						XCHN2	C2G,54,3^
  4061					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4062					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4063					;IF ERROR OCCURS CHECK "PIN" PRINT
  4064
  4065						TRPCHK^
  4066	034147	332 00 0 00 030042 	..0110:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4067	034150	254 00 0 00 034153 		JRST	.+3		;DONT IF STAND ALONE
  4068	034151	254 02 1 00 034152 		JRSTF	@.+1		;AND RESTORE THEM
  4069	034152	000000	034153			USERF,.+1		;NEW PC AND FLAGS^
  4070						CLRBTH^
  4071	034153	700 04 0 00 261600 		CLRAPR
  4072	034154	700 14 0 00 031577 		CLRPI^
  4073	034155	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4074	034156	200 00 0 00 040273 		MOVE	[JSR C2G]		;SET UP FOR CORRECT
  4075	034157	202 00 0 00 000054 		MOVEM	54		;INTERRUPT TRAP
  4076	034160	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4077	034161	7 004 20 0 00 004003 		CONO	PI,REQSET!3	;REQUEST INTERRUPT ON TWO CHANNELS
  4078						STUCK^^
  4079						WATINT^
  4080	034162	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4081	034163	367 13 0 00 034163 		SOJG	13,.		;AND WAIT^
  4082	034164	254 00 0 00 034164 		JRST	.		;LOOP ON SELF^
  4083	034165	000000	000000		C2G:	0
  4084						TBOTH^
  4085						TGET^
  4086	034166	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4087	034167	302 00 0 00 034145 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4088						STOP2^^
  4089	034170	254 04 0 00 034171 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4090	034171	254 00 0 00 034172 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4091						TSET^^
  4092			034172			%X=.			;DEFINE %X TO SAVE
  4093	034172	201 00 0 00 034172 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4094	034173	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-4
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0103

  4095						XCHN2	C2H,42,102^
  4096					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4097					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4098					;IF ERROR OCCURS CHECK "PIN" PRINT
  4099
  4100						TRPCHK^
  4101	034174	332 00 0 00 030042 	..0111:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4102	034175	254 00 0 00 034200 		JRST	.+3		;DONT IF STAND ALONE
  4103	034176	254 02 1 00 034177 		JRSTF	@.+1		;AND RESTORE THEM
  4104	034177	000000	034200			USERF,.+1		;NEW PC AND FLAGS^
  4105						CLRBTH^
  4106	034200	700 04 0 00 261600 		CLRAPR
  4107	034201	700 14 0 00 031577 		CLRPI^
  4108	034202	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4109	034203	200 00 0 00 040274 		MOVE	[JSR C2H]		;SET UP FOR CORRECT
  4110	034204	202 00 0 00 000042 		MOVEM	42		;INTERRUPT TRAP
  4111	034205	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4112	034206	7 004 20 0 00 004102 		CONO	PI,REQSET!102	;REQUEST INTERRUPT ON TWO CHANNELS
  4113						STUCK^^
  4114						WATINT^
  4115	034207	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4116	034210	367 13 0 00 034210 		SOJG	13,.		;AND WAIT^
  4117	034211	254 00 0 00 034211 		JRST	.		;LOOP ON SELF^
  4118	034212	000000	000000		C2H:	0
  4119						TBOTH^
  4120						TGET^
  4121	034213	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4122	034214	302 00 0 00 034172 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4123						STOP2^^
  4124	034215	254 04 0 00 034216 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4125	034216	254 00 0 00 034217 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4126						TSET^^
  4127			034217			%X=.			;DEFINE %X TO SAVE
  4128	034217	201 00 0 00 034217 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4129	034220	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4130						XCHN2	C2I,44,42^
  4131					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4132					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4133					;IF ERROR OCCURS CHECK "PIN" PRINT
  4134
  4135						TRPCHK^
  4136	034221	332 00 0 00 030042 	..0112:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4137	034222	254 00 0 00 034225 		JRST	.+3		;DONT IF STAND ALONE
  4138	034223	254 02 1 00 034224 		JRSTF	@.+1		;AND RESTORE THEM
  4139	034224	000000	034225			USERF,.+1		;NEW PC AND FLAGS^
  4140						CLRBTH^
  4141	034225	700 04 0 00 261600 		CLRAPR
  4142	034226	700 14 0 00 031577 		CLRPI^
  4143	034227	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4144	034230	200 00 0 00 040275 		MOVE	[JSR C2I]		;SET UP FOR CORRECT
  4145	034231	202 00 0 00 000044 		MOVEM	44		;INTERRUPT TRAP
  4146	034232	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4147	034233	7 004 20 0 00 004042 		CONO	PI,REQSET!42	;REQUEST INTERRUPT ON TWO CHANNELS
  4148						STUCK^^
  4149						WATINT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-5
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0104

  4150	034234	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4151	034235	367 13 0 00 034235 		SOJG	13,.		;AND WAIT^
  4152	034236	254 00 0 00 034236 		JRST	.		;LOOP ON SELF^
  4153	034237	000000	000000		C2I:	0
  4154						TBOTH^
  4155						TGET^
  4156	034240	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4157	034241	302 00 0 00 034217 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4158						STOP2^^
  4159	034242	254 04 0 00 034243 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4160	034243	254 00 0 00 034244 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4161						TSET^^
  4162			034244			%X=.			;DEFINE %X TO SAVE
  4163	034244	201 00 0 00 034244 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4164	034245	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4165						XCHN2	C2J,46,22^
  4166					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4167					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4168					;IF ERROR OCCURS CHECK "PIN" PRINT
  4169
  4170						TRPCHK^
  4171	034246	332 00 0 00 030042 	..0113:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4172	034247	254 00 0 00 034252 		JRST	.+3		;DONT IF STAND ALONE
  4173	034250	254 02 1 00 034251 		JRSTF	@.+1		;AND RESTORE THEM
  4174	034251	000000	034252			USERF,.+1		;NEW PC AND FLAGS^
  4175						CLRBTH^
  4176	034252	700 04 0 00 261600 		CLRAPR
  4177	034253	700 14 0 00 031577 		CLRPI^
  4178	034254	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4179	034255	200 00 0 00 040276 		MOVE	[JSR C2J]		;SET UP FOR CORRECT
  4180	034256	202 00 0 00 000046 		MOVEM	46		;INTERRUPT TRAP
  4181	034257	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4182	034260	7 004 20 0 00 004022 		CONO	PI,REQSET!22	;REQUEST INTERRUPT ON TWO CHANNELS
  4183						STUCK^^
  4184						WATINT^
  4185	034261	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4186	034262	367 13 0 00 034262 		SOJG	13,.		;AND WAIT^
  4187	034263	254 00 0 00 034263 		JRST	.		;LOOP ON SELF^
  4188	034264	000000	000000		C2J:	0
  4189						TBOTH^
  4190						TGET^
  4191	034265	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4192	034266	302 00 0 00 034244 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4193						STOP2^^
  4194	034267	254 04 0 00 034270 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4195	034270	254 00 0 00 034271 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4196						TSET^^
  4197			034271			%X=.			;DEFINE %X TO SAVE
  4198	034271	201 00 0 00 034271 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4199	034272	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4200						XCHN2	C2K,50,12^
  4201					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4202					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4203					;IF ERROR OCCURS CHECK "PIN" PRINT
  4204
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-6
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0105

  4205						TRPCHK^
  4206	034273	332 00 0 00 030042 	..0114:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4207	034274	254 00 0 00 034277 		JRST	.+3		;DONT IF STAND ALONE
  4208	034275	254 02 1 00 034276 		JRSTF	@.+1		;AND RESTORE THEM
  4209	034276	000000	034277			USERF,.+1		;NEW PC AND FLAGS^
  4210						CLRBTH^
  4211	034277	700 04 0 00 261600 		CLRAPR
  4212	034300	700 14 0 00 031577 		CLRPI^
  4213	034301	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4214	034302	200 00 0 00 040277 		MOVE	[JSR C2K]		;SET UP FOR CORRECT
  4215	034303	202 00 0 00 000050 		MOVEM	50		;INTERRUPT TRAP
  4216	034304	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4217	034305	7 004 20 0 00 004012 		CONO	PI,REQSET!12	;REQUEST INTERRUPT ON TWO CHANNELS
  4218						STUCK^^
  4219						WATINT^
  4220	034306	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4221	034307	367 13 0 00 034307 		SOJG	13,.		;AND WAIT^
  4222	034310	254 00 0 00 034310 		JRST	.		;LOOP ON SELF^
  4223	034311	000000	000000		C2K:	0
  4224						TBOTH^
  4225						TGET^
  4226	034312	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4227	034313	302 00 0 00 034271 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4228						STOP2^^
  4229	034314	254 04 0 00 034315 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4230	034315	254 00 0 00 034316 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4231						TSET^^
  4232			034316			%X=.			;DEFINE %X TO SAVE
  4233	034316	201 00 0 00 034316 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4234	034317	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4235						XCHN2	C2L,52,6^
  4236					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4237					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4238					;IF ERROR OCCURS CHECK "PIN" PRINT
  4239
  4240						TRPCHK^
  4241	034320	332 00 0 00 030042 	..0115:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4242	034321	254 00 0 00 034324 		JRST	.+3		;DONT IF STAND ALONE
  4243	034322	254 02 1 00 034323 		JRSTF	@.+1		;AND RESTORE THEM
  4244	034323	000000	034324			USERF,.+1		;NEW PC AND FLAGS^
  4245						CLRBTH^
  4246	034324	700 04 0 00 261600 		CLRAPR
  4247	034325	700 14 0 00 031577 		CLRPI^
  4248	034326	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4249	034327	200 00 0 00 040300 		MOVE	[JSR C2L]		;SET UP FOR CORRECT
  4250	034330	202 00 0 00 000052 		MOVEM	52		;INTERRUPT TRAP
  4251	034331	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4252	034332	7 004 20 0 00 004006 		CONO	PI,REQSET!6	;REQUEST INTERRUPT ON TWO CHANNELS
  4253						STUCK^^
  4254						WATINT^
  4255	034333	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4256	034334	367 13 0 00 034334 		SOJG	13,.		;AND WAIT^
  4257	034335	254 00 0 00 034335 		JRST	.		;LOOP ON SELF^
  4258	034336	000000	000000		C2L:	0
  4259						TBOTH^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-7
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0106

  4260						TGET^
  4261	034337	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4262	034340	302 00 0 00 034316 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4263						STOP2^^
  4264	034341	254 04 0 00 034342 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4265	034342	254 00 0 00 034343 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4266						TSET^^
  4267			034343			%X=.			;DEFINE %X TO SAVE
  4268	034343	201 00 0 00 034343 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4269	034344	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4270						XCHN2	C2M,42,104^
  4271					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4272					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4273					;IF ERROR OCCURS CHECK "PIN" PRINT
  4274
  4275						TRPCHK^
  4276	034345	332 00 0 00 030042 	..0116:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4277	034346	254 00 0 00 034351 		JRST	.+3		;DONT IF STAND ALONE
  4278	034347	254 02 1 00 034350 		JRSTF	@.+1		;AND RESTORE THEM
  4279	034350	000000	034351			USERF,.+1		;NEW PC AND FLAGS^
  4280						CLRBTH^
  4281	034351	700 04 0 00 261600 		CLRAPR
  4282	034352	700 14 0 00 031577 		CLRPI^
  4283	034353	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4284	034354	200 00 0 00 040301 		MOVE	[JSR C2M]		;SET UP FOR CORRECT
  4285	034355	202 00 0 00 000042 		MOVEM	42		;INTERRUPT TRAP
  4286	034356	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4287	034357	7 004 20 0 00 004104 		CONO	PI,REQSET!104	;REQUEST INTERRUPT ON TWO CHANNELS
  4288						STUCK^^
  4289						WATINT^
  4290	034360	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4291	034361	367 13 0 00 034361 		SOJG	13,.		;AND WAIT^
  4292	034362	254 00 0 00 034362 		JRST	.		;LOOP ON SELF^
  4293	034363	000000	000000		C2M:	0
  4294						TBOTH^
  4295						TGET^
  4296	034364	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4297	034365	302 00 0 00 034343 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4298						STOP2^^
  4299	034366	254 04 0 00 034367 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4300	034367	254 00 0 00 034370 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4301						TSET^^
  4302			034370			%X=.			;DEFINE %X TO SAVE
  4303	034370	201 00 0 00 034370 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4304	034371	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4305						XCHN2	C2N,44,44^
  4306					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4307					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4308					;IF ERROR OCCURS CHECK "PIN" PRINT
  4309
  4310						TRPCHK^
  4311	034372	332 00 0 00 030042 	..0117:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4312	034373	254 00 0 00 034376 		JRST	.+3		;DONT IF STAND ALONE
  4313	034374	254 02 1 00 034375 		JRSTF	@.+1		;AND RESTORE THEM
  4314	034375	000000	034376			USERF,.+1		;NEW PC AND FLAGS^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-8
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0107

  4315						CLRBTH^
  4316	034376	700 04 0 00 261600 		CLRAPR
  4317	034377	700 14 0 00 031577 		CLRPI^
  4318	034400	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4319	034401	200 00 0 00 040302 		MOVE	[JSR C2N]		;SET UP FOR CORRECT
  4320	034402	202 00 0 00 000044 		MOVEM	44		;INTERRUPT TRAP
  4321	034403	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4322	034404	7 004 20 0 00 004044 		CONO	PI,REQSET!44	;REQUEST INTERRUPT ON TWO CHANNELS
  4323						STUCK^^
  4324						WATINT^
  4325	034405	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4326	034406	367 13 0 00 034406 		SOJG	13,.		;AND WAIT^
  4327	034407	254 00 0 00 034407 		JRST	.		;LOOP ON SELF^
  4328	034410	000000	000000		C2N:	0
  4329						TBOTH^
  4330						TGET^
  4331	034411	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4332	034412	302 00 0 00 034370 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4333						STOP2^^
  4334	034413	254 04 0 00 034414 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4335	034414	254 00 0 00 034415 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4336						TSET^^
  4337			034415			%X=.			;DEFINE %X TO SAVE
  4338	034415	201 00 0 00 034415 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4339	034416	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4340						XCHN2	C2O,46,24^
  4341					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4342					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4343					;IF ERROR OCCURS CHECK "PIN" PRINT
  4344
  4345						TRPCHK^
  4346	034417	332 00 0 00 030042 	..0120:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4347	034420	254 00 0 00 034423 		JRST	.+3		;DONT IF STAND ALONE
  4348	034421	254 02 1 00 034422 		JRSTF	@.+1		;AND RESTORE THEM
  4349	034422	000000	034423			USERF,.+1		;NEW PC AND FLAGS^
  4350						CLRBTH^
  4351	034423	700 04 0 00 261600 		CLRAPR
  4352	034424	700 14 0 00 031577 		CLRPI^
  4353	034425	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4354	034426	200 00 0 00 040303 		MOVE	[JSR C2O]		;SET UP FOR CORRECT
  4355	034427	202 00 0 00 000046 		MOVEM	46		;INTERRUPT TRAP
  4356	034430	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4357	034431	7 004 20 0 00 004024 		CONO	PI,REQSET!24	;REQUEST INTERRUPT ON TWO CHANNELS
  4358						STUCK^^
  4359						WATINT^
  4360	034432	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4361	034433	367 13 0 00 034433 		SOJG	13,.		;AND WAIT^
  4362	034434	254 00 0 00 034434 		JRST	.		;LOOP ON SELF^
  4363	034435	000000	000000		C2O:	0
  4364						TBOTH^
  4365						TGET^
  4366	034436	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4367	034437	302 00 0 00 034415 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4368						STOP2^^
  4369	034440	254 04 0 00 034441 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-9
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0108

  4370	034441	254 00 0 00 034442 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4371						TSET^^
  4372			034442			%X=.			;DEFINE %X TO SAVE
  4373	034442	201 00 0 00 034442 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4374	034443	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4375						XCHN2	C2P,50,14^
  4376					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4377					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4378					;IF ERROR OCCURS CHECK "PIN" PRINT
  4379
  4380						TRPCHK^
  4381	034444	332 00 0 00 030042 	..0121:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4382	034445	254 00 0 00 034450 		JRST	.+3		;DONT IF STAND ALONE
  4383	034446	254 02 1 00 034447 		JRSTF	@.+1		;AND RESTORE THEM
  4384	034447	000000	034450			USERF,.+1		;NEW PC AND FLAGS^
  4385						CLRBTH^
  4386	034450	700 04 0 00 261600 		CLRAPR
  4387	034451	700 14 0 00 031577 		CLRPI^
  4388	034452	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4389	034453	200 00 0 00 040304 		MOVE	[JSR C2P]		;SET UP FOR CORRECT
  4390	034454	202 00 0 00 000050 		MOVEM	50		;INTERRUPT TRAP
  4391	034455	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4392	034456	7 004 20 0 00 004014 		CONO	PI,REQSET!14	;REQUEST INTERRUPT ON TWO CHANNELS
  4393						STUCK^^
  4394						WATINT^
  4395	034457	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4396	034460	367 13 0 00 034460 		SOJG	13,.		;AND WAIT^
  4397	034461	254 00 0 00 034461 		JRST	.		;LOOP ON SELF^
  4398	034462	000000	000000		C2P:	0
  4399						TBOTH^
  4400						TGET^
  4401	034463	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4402	034464	302 00 0 00 034442 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4403						STOP2^^
  4404	034465	254 04 0 00 034466 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4405	034466	254 00 0 00 034467 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4406						TSET^^
  4407			034467			%X=.			;DEFINE %X TO SAVE
  4408	034467	201 00 0 00 034467 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4409	034470	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4410						XCHN2	C2Q,42,110^
  4411					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4412					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4413					;IF ERROR OCCURS CHECK "PIN" PRINT
  4414
  4415						TRPCHK^
  4416	034471	332 00 0 00 030042 	..0122:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4417	034472	254 00 0 00 034475 		JRST	.+3		;DONT IF STAND ALONE
  4418	034473	254 02 1 00 034474 		JRSTF	@.+1		;AND RESTORE THEM
  4419	034474	000000	034475			USERF,.+1		;NEW PC AND FLAGS^
  4420						CLRBTH^
  4421	034475	700 04 0 00 261600 		CLRAPR
  4422	034476	700 14 0 00 031577 		CLRPI^
  4423	034477	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4424	034500	200 00 0 00 040305 		MOVE	[JSR C2Q]		;SET UP FOR CORRECT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-10
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0109

  4425	034501	202 00 0 00 000042 		MOVEM	42		;INTERRUPT TRAP
  4426	034502	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4427	034503	7 004 20 0 00 004110 		CONO	PI,REQSET!110	;REQUEST INTERRUPT ON TWO CHANNELS
  4428						STUCK^^
  4429						WATINT^
  4430	034504	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4431	034505	367 13 0 00 034505 		SOJG	13,.		;AND WAIT^
  4432	034506	254 00 0 00 034506 		JRST	.		;LOOP ON SELF^
  4433	034507	000000	000000		C2Q:	0
  4434						TBOTH^
  4435						TGET^
  4436	034510	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4437	034511	302 00 0 00 034467 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4438						STOP2^^
  4439	034512	254 04 0 00 034513 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4440	034513	254 00 0 00 034514 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4441						TSET^^
  4442			034514			%X=.			;DEFINE %X TO SAVE
  4443	034514	201 00 0 00 034514 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4444	034515	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4445						XCHN2	C2R,44,50^
  4446					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4447					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4448					;IF ERROR OCCURS CHECK "PIN" PRINT
  4449
  4450						TRPCHK^
  4451	034516	332 00 0 00 030042 	..0123:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4452	034517	254 00 0 00 034522 		JRST	.+3		;DONT IF STAND ALONE
  4453	034520	254 02 1 00 034521 		JRSTF	@.+1		;AND RESTORE THEM
  4454	034521	000000	034522			USERF,.+1		;NEW PC AND FLAGS^
  4455						CLRBTH^
  4456	034522	700 04 0 00 261600 		CLRAPR
  4457	034523	700 14 0 00 031577 		CLRPI^
  4458	034524	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4459	034525	200 00 0 00 040306 		MOVE	[JSR C2R]		;SET UP FOR CORRECT
  4460	034526	202 00 0 00 000044 		MOVEM	44		;INTERRUPT TRAP
  4461	034527	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4462	034530	7 004 20 0 00 004050 		CONO	PI,REQSET!50	;REQUEST INTERRUPT ON TWO CHANNELS
  4463						STUCK^^
  4464						WATINT^
  4465	034531	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4466	034532	367 13 0 00 034532 		SOJG	13,.		;AND WAIT^
  4467	034533	254 00 0 00 034533 		JRST	.		;LOOP ON SELF^
  4468	034534	000000	000000		C2R:	0
  4469						TBOTH^
  4470						TGET^
  4471	034535	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4472	034536	302 00 0 00 034514 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4473						STOP2^^
  4474	034537	254 04 0 00 034540 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4475	034540	254 00 0 00 034541 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4476						TSET^^
  4477			034541			%X=.			;DEFINE %X TO SAVE
  4478	034541	201 00 0 00 034541 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4479	034542	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-11
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0110

  4480						XCHN2	C2S,46,30^
  4481					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4482					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4483					;IF ERROR OCCURS CHECK "PIN" PRINT
  4484
  4485						TRPCHK^
  4486	034543	332 00 0 00 030042 	..0124:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4487	034544	254 00 0 00 034547 		JRST	.+3		;DONT IF STAND ALONE
  4488	034545	254 02 1 00 034546 		JRSTF	@.+1		;AND RESTORE THEM
  4489	034546	000000	034547			USERF,.+1		;NEW PC AND FLAGS^
  4490						CLRBTH^
  4491	034547	700 04 0 00 261600 		CLRAPR
  4492	034550	700 14 0 00 031577 		CLRPI^
  4493	034551	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4494	034552	200 00 0 00 040307 		MOVE	[JSR C2S]		;SET UP FOR CORRECT
  4495	034553	202 00 0 00 000046 		MOVEM	46		;INTERRUPT TRAP
  4496	034554	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4497	034555	7 004 20 0 00 004030 		CONO	PI,REQSET!30	;REQUEST INTERRUPT ON TWO CHANNELS
  4498						STUCK^^
  4499						WATINT^
  4500	034556	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4501	034557	367 13 0 00 034557 		SOJG	13,.		;AND WAIT^
  4502	034560	254 00 0 00 034560 		JRST	.		;LOOP ON SELF^
  4503	034561	000000	000000		C2S:	0
  4504						TBOTH^
  4505						TGET^
  4506	034562	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4507	034563	302 00 0 00 034541 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4508						STOP2^^
  4509	034564	254 04 0 00 034565 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4510	034565	254 00 0 00 034566 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4511						TSET^^
  4512			034566			%X=.			;DEFINE %X TO SAVE
  4513	034566	201 00 0 00 034566 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4514	034567	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4515						XCHN2	C2T,42,120^
  4516					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4517					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4518					;IF ERROR OCCURS CHECK "PIN" PRINT
  4519
  4520						TRPCHK^
  4521	034570	332 00 0 00 030042 	..0125:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4522	034571	254 00 0 00 034574 		JRST	.+3		;DONT IF STAND ALONE
  4523	034572	254 02 1 00 034573 		JRSTF	@.+1		;AND RESTORE THEM
  4524	034573	000000	034574			USERF,.+1		;NEW PC AND FLAGS^
  4525						CLRBTH^
  4526	034574	700 04 0 00 261600 		CLRAPR
  4527	034575	700 14 0 00 031577 		CLRPI^
  4528	034576	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4529	034577	200 00 0 00 040310 		MOVE	[JSR C2T]		;SET UP FOR CORRECT
  4530	034600	202 00 0 00 000042 		MOVEM	42		;INTERRUPT TRAP
  4531	034601	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4532	034602	7 004 20 0 00 004120 		CONO	PI,REQSET!120	;REQUEST INTERRUPT ON TWO CHANNELS
  4533						STUCK^^
  4534						WATINT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-12
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0111

  4535	034603	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4536	034604	367 13 0 00 034604 		SOJG	13,.		;AND WAIT^
  4537	034605	254 00 0 00 034605 		JRST	.		;LOOP ON SELF^
  4538	034606	000000	000000		C2T:	0
  4539						TBOTH^
  4540						TGET^
  4541	034607	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4542	034610	302 00 0 00 034566 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4543						STOP2^^
  4544	034611	254 04 0 00 034612 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4545	034612	254 00 0 00 034613 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4546						TSET^^
  4547			034613			%X=.			;DEFINE %X TO SAVE
  4548	034613	201 00 0 00 034613 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4549	034614	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4550						XCHN2	C2U,44,60^
  4551					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4552					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4553					;IF ERROR OCCURS CHECK "PIN" PRINT
  4554
  4555						TRPCHK^
  4556	034615	332 00 0 00 030042 	..0126:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4557	034616	254 00 0 00 034621 		JRST	.+3		;DONT IF STAND ALONE
  4558	034617	254 02 1 00 034620 		JRSTF	@.+1		;AND RESTORE THEM
  4559	034620	000000	034621			USERF,.+1		;NEW PC AND FLAGS^
  4560						CLRBTH^
  4561	034621	700 04 0 00 261600 		CLRAPR
  4562	034622	700 14 0 00 031577 		CLRPI^
  4563	034623	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4564	034624	200 00 0 00 040311 		MOVE	[JSR C2U]		;SET UP FOR CORRECT
  4565	034625	202 00 0 00 000044 		MOVEM	44		;INTERRUPT TRAP
  4566	034626	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4567	034627	7 004 20 0 00 004060 		CONO	PI,REQSET!60	;REQUEST INTERRUPT ON TWO CHANNELS
  4568						STUCK^^
  4569						WATINT^
  4570	034630	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4571	034631	367 13 0 00 034631 		SOJG	13,.		;AND WAIT^
  4572	034632	254 00 0 00 034632 		JRST	.		;LOOP ON SELF^
  4573	034633	000000	000000		C2U:	0
  4574						TBOTH^
  4575						TGET^
  4576	034634	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4577	034635	302 00 0 00 034613 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4578						STOP2^^
  4579	034636	254 04 0 00 034637 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4580	034637	254 00 0 00 034640 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4581						TSET^^
  4582			034640			%X=.			;DEFINE %X TO SAVE
  4583	034640	201 00 0 00 034640 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4584	034641	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4585						XCHN2	C2V,42,140^
  4586					;REQUEST INTERRUPTS ON 2 CHANNELS AT ONCE TO SEE IF THEY TRAP
  4587					;TO THE CORRECT (I.E. HIGHEST PRIORITY) CHANNEL.
  4588					;IF ERROR OCCURS CHECK "PIN" PRINT
  4589
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 34-13
DSKAH1	MAC	31-Mar-78 11:13		DUAL REQUEST TESTING                                                               SEQ 0112

  4590						TRPCHK^
  4591	034642	332 00 0 00 030042 	..0127:	SKIPE	MONFLG		;RESET FLAGS IF IN MONITOR
  4592	034643	254 00 0 00 034646 		JRST	.+3		;DONT IF STAND ALONE
  4593	034644	254 02 1 00 034645 		JRSTF	@.+1		;AND RESTORE THEM
  4594	034645	000000	034646			USERF,.+1		;NEW PC AND FLAGS^
  4595						CLRBTH^
  4596	034646	700 04 0 00 261600 		CLRAPR
  4597	034647	700 14 0 00 031577 		CLRPI^
  4598	034650	264 00 0 00 040032 		HALTPI			;FILL INTERRUPT LOCATIONS WITH HALTS
  4599	034651	200 00 0 00 040312 		MOVE	[JSR C2V]		;SET UP FOR CORRECT
  4600	034652	202 00 0 00 000042 		MOVEM	42		;INTERRUPT TRAP
  4601	034653	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4602	034654	7 004 20 0 00 004140 		CONO	PI,REQSET!140	;REQUEST INTERRUPT ON TWO CHANNELS
  4603						STUCK^^
  4604						WATINT^
  4605	034655	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4606	034656	367 13 0 00 034656 		SOJG	13,.		;AND WAIT^
  4607	034657	254 00 0 00 034657 		JRST	.		;LOOP ON SELF^
  4608	034660	255 00 0 00 000000 		JFCL
  4609	034661	000000	000000		C2V:	0
  4610						TGET^
  4611	034662	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4612	034663	302 00 0 00 034640 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4613						STOP2^^
  4614	034664	254 04 0 00 034665 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4615	034665	254 00 0 00 034666 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4616						CLRBTH^
  4617	034666	700 04 0 00 261600 		CLRAPR
  4618	034667	700 14 0 00 031577 		CLRPI^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 35
DSKAH1	MAC	31-Mar-78 11:13		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0113

  4619					SUBTTL	TEST THE ABILITY TO DISMISS INTERRUPTS
  4620
  4621					;CHECK THAT "JEN" DISMISSES INTERRUPTS
  4622
  4623			000042			X=42
  4624			000100			Z1=100
  4625					JENDIS:	REPEAT	7,<
  4626						PIDIS	X,Z1
  4627						X=X+2
  4628						Z1=Z1_-1
  4629					>
  4630
  4631						PIDIS	X,Z1^
  4632					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  4633
  4634						TSET^
  4635			034670			%X=.			;DEFINE %X TO SAVE
  4636	034670	201 00 0 00 034670 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4637	034671	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4638	034672	200 00 0 00 040313 	..0130:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
  4639	034673	202 00 0 00 000042 		MOVEM	X		;INTO X
  4640	034674	7 004 20 0 00 006300 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  4641						WATINT^
  4642	034675	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4643	034676	367 13 0 00 034676 		SOJG	13,.		;AND WAIT^
  4644	034677	254 00 0 00 034703 		JRST	.+4
  4645	034700	000000	000000			0
  4646	034701	7 004 20 0 00 022300 		CONO	PI,CHNON+PION+LRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  4647	034702	254 12 1 00 034700 		JEN	@.-2		;DISMISS THE INTERRUPT
  4648	034703	7 004 30 0 00 077400 		CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
  4649						STOP^
  4650	034704	254 04 0 00 034705 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4651	034705	254 00 0 00 034706 		JRST	.+1		;WITH JRST BACK^
  4652						TGET^
  4653	034706	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4654	034707	302 00 0 00 034670 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4655						STOP2^^
  4656	034710	254 04 0 00 034711 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4657	034711	254 00 0 00 034712 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4658						CLRBTH^^
  4659	034712	700 04 0 00 261600 		CLRAPR
  4660	034713	700 14 0 00 031577 		CLRPI^
  4661			000044			X=X+2
  4662			000040			Z1=Z1_-1
  4663
  4664
  4665						PIDIS	X,Z1^
  4666					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  4667
  4668						TSET^
  4669			034714			%X=.			;DEFINE %X TO SAVE
  4670	034714	201 00 0 00 034714 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4671	034715	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4672	034716	200 00 0 00 040314 	..0131:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
  4673	034717	202 00 0 00 000044 		MOVEM	X		;INTO X
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 35-1
DSKAH1	MAC	31-Mar-78 11:13		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0114

  4674	034720	7 004 20 0 00 006240 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  4675						WATINT^
  4676	034721	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4677	034722	367 13 0 00 034722 		SOJG	13,.		;AND WAIT^
  4678	034723	254 00 0 00 034727 		JRST	.+4
  4679	034724	000000	000000			0
  4680	034725	7 004 20 0 00 022240 		CONO	PI,CHNON+PION+LRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  4681	034726	254 12 1 00 034724 		JEN	@.-2		;DISMISS THE INTERRUPT
  4682	034727	7 004 30 0 00 077400 		CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
  4683						STOP^
  4684	034730	254 04 0 00 034731 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4685	034731	254 00 0 00 034732 		JRST	.+1		;WITH JRST BACK^
  4686						TGET^
  4687	034732	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4688	034733	302 00 0 00 034714 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4689						STOP2^^
  4690	034734	254 04 0 00 034735 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4691	034735	254 00 0 00 034736 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4692						CLRBTH^^
  4693	034736	700 04 0 00 261600 		CLRAPR
  4694	034737	700 14 0 00 031577 		CLRPI^
  4695			000046			X=X+2
  4696			000020			Z1=Z1_-1
  4697
  4698
  4699						PIDIS	X,Z1^
  4700					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  4701
  4702						TSET^
  4703			034740			%X=.			;DEFINE %X TO SAVE
  4704	034740	201 00 0 00 034740 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4705	034741	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4706	034742	200 00 0 00 040315 	..0132:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
  4707	034743	202 00 0 00 000046 		MOVEM	X		;INTO X
  4708	034744	7 004 20 0 00 006220 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  4709						WATINT^
  4710	034745	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4711	034746	367 13 0 00 034746 		SOJG	13,.		;AND WAIT^
  4712	034747	254 00 0 00 034753 		JRST	.+4
  4713	034750	000000	000000			0
  4714	034751	7 004 20 0 00 022220 		CONO	PI,CHNON+PION+LRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  4715	034752	254 12 1 00 034750 		JEN	@.-2		;DISMISS THE INTERRUPT
  4716	034753	7 004 30 0 00 077400 		CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
  4717						STOP^
  4718	034754	254 04 0 00 034755 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4719	034755	254 00 0 00 034756 		JRST	.+1		;WITH JRST BACK^
  4720						TGET^
  4721	034756	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4722	034757	302 00 0 00 034740 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4723						STOP2^^
  4724	034760	254 04 0 00 034761 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4725	034761	254 00 0 00 034762 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4726						CLRBTH^^
  4727	034762	700 04 0 00 261600 		CLRAPR
  4728	034763	700 14 0 00 031577 		CLRPI^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 35-2
DSKAH1	MAC	31-Mar-78 11:13		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0115

  4729			000050			X=X+2
  4730			000010			Z1=Z1_-1
  4731
  4732
  4733						PIDIS	X,Z1^
  4734					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  4735
  4736						TSET^
  4737			034764			%X=.			;DEFINE %X TO SAVE
  4738	034764	201 00 0 00 034764 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4739	034765	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4740	034766	200 00 0 00 040316 	..0133:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
  4741	034767	202 00 0 00 000050 		MOVEM	X		;INTO X
  4742	034770	7 004 20 0 00 006210 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  4743						WATINT^
  4744	034771	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4745	034772	367 13 0 00 034772 		SOJG	13,.		;AND WAIT^
  4746	034773	254 00 0 00 034777 		JRST	.+4
  4747	034774	000000	000000			0
  4748	034775	7 004 20 0 00 022210 		CONO	PI,CHNON+PION+LRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  4749	034776	254 12 1 00 034774 		JEN	@.-2		;DISMISS THE INTERRUPT
  4750	034777	7 004 30 0 00 077400 		CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
  4751						STOP^
  4752	035000	254 04 0 00 035001 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4753	035001	254 00 0 00 035002 		JRST	.+1		;WITH JRST BACK^
  4754						TGET^
  4755	035002	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4756	035003	302 00 0 00 034764 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4757						STOP2^^
  4758	035004	254 04 0 00 035005 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4759	035005	254 00 0 00 035006 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4760						CLRBTH^^
  4761	035006	700 04 0 00 261600 		CLRAPR
  4762	035007	700 14 0 00 031577 		CLRPI^
  4763			000052			X=X+2
  4764			000004			Z1=Z1_-1
  4765
  4766
  4767						PIDIS	X,Z1^
  4768					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  4769
  4770						TSET^
  4771			035010			%X=.			;DEFINE %X TO SAVE
  4772	035010	201 00 0 00 035010 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4773	035011	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4774	035012	200 00 0 00 040317 	..0134:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
  4775	035013	202 00 0 00 000052 		MOVEM	X		;INTO X
  4776	035014	7 004 20 0 00 006204 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  4777						WATINT^
  4778	035015	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4779	035016	367 13 0 00 035016 		SOJG	13,.		;AND WAIT^
  4780	035017	254 00 0 00 035023 		JRST	.+4
  4781	035020	000000	000000			0
  4782	035021	7 004 20 0 00 022204 		CONO	PI,CHNON+PION+LRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  4783	035022	254 12 1 00 035020 		JEN	@.-2		;DISMISS THE INTERRUPT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 35-3
DSKAH1	MAC	31-Mar-78 11:13		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0116

  4784	035023	7 004 30 0 00 077400 		CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
  4785						STOP^
  4786	035024	254 04 0 00 035025 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4787	035025	254 00 0 00 035026 		JRST	.+1		;WITH JRST BACK^
  4788						TGET^
  4789	035026	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4790	035027	302 00 0 00 035010 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4791						STOP2^^
  4792	035030	254 04 0 00 035031 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4793	035031	254 00 0 00 035032 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4794						CLRBTH^^
  4795	035032	700 04 0 00 261600 		CLRAPR
  4796	035033	700 14 0 00 031577 		CLRPI^
  4797			000054			X=X+2
  4798			000002			Z1=Z1_-1
  4799
  4800
  4801						PIDIS	X,Z1^
  4802					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  4803
  4804						TSET^
  4805			035034			%X=.			;DEFINE %X TO SAVE
  4806	035034	201 00 0 00 035034 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4807	035035	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4808	035036	200 00 0 00 040320 	..0135:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
  4809	035037	202 00 0 00 000054 		MOVEM	X		;INTO X
  4810	035040	7 004 20 0 00 006202 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  4811						WATINT^
  4812	035041	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4813	035042	367 13 0 00 035042 		SOJG	13,.		;AND WAIT^
  4814	035043	254 00 0 00 035047 		JRST	.+4
  4815	035044	000000	000000			0
  4816	035045	7 004 20 0 00 022202 		CONO	PI,CHNON+PION+LRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  4817	035046	254 12 1 00 035044 		JEN	@.-2		;DISMISS THE INTERRUPT
  4818	035047	7 004 30 0 00 077400 		CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
  4819						STOP^
  4820	035050	254 04 0 00 035051 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4821	035051	254 00 0 00 035052 		JRST	.+1		;WITH JRST BACK^
  4822						TGET^
  4823	035052	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4824	035053	302 00 0 00 035034 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4825						STOP2^^
  4826	035054	254 04 0 00 035055 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4827	035055	254 00 0 00 035056 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4828						CLRBTH^^
  4829	035056	700 04 0 00 261600 		CLRAPR
  4830	035057	700 14 0 00 031577 		CLRPI^
  4831			000056			X=X+2
  4832			000001			Z1=Z1_-1
  4833
  4834
  4835						PIDIS	X,Z1^
  4836					;CHECK THAT X JEN WILL DISMISS INTERUPTS ON ALL CHANNELS
  4837
  4838						TSET^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 35-4
DSKAH1	MAC	31-Mar-78 11:13		TEST THE ABILITY TO DISMISS INTERRUPTS                                             SEQ 0117

  4839			035060			%X=.			;DEFINE %X TO SAVE
  4840	035060	201 00 0 00 035060 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  4841	035061	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  4842	035062	200 00 0 00 040321 	..0136:	MOVE	[JSR	.+6]	;PUT THE PI TRAP INSTRUCTION
  4843	035063	202 00 0 00 000056 		MOVEM	X		;INTO X
  4844	035064	7 004 20 0 00 006201 		CONO	PI,CHNON+PION+REQSET+Z1	;TURN ON PI AND REQEST ON CH Z1
  4845						WATINT^
  4846	035065	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4847	035066	367 13 0 00 035066 		SOJG	13,.		;AND WAIT^
  4848	035067	254 00 0 00 035073 		JRST	.+4
  4849	035070	000000	000000			0
  4850	035071	7 004 20 0 00 022201 		CONO	PI,CHNON+PION+LRQCLR+Z1	;TURN OF INTERRUPT REQUEST
  4851	035072	254 12 1 00 035070 		JEN	@.-2		;DISMISS THE INTERRUPT
  4852	035073	7 004 30 0 00 077400 		CONSZ	PI,77400	;NO REQUESTS SHOULD BE SET
  4853						STOP^
  4854	035074	254 04 0 00 035075 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4855	035075	254 00 0 00 035076 		JRST	.+1		;WITH JRST BACK^
  4856						TGET^
  4857	035076	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  4858	035077	302 00 0 00 035060 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  4859						STOP2^^
  4860	035100	254 04 0 00 035101 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  4861	035101	254 00 0 00 035102 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  4862						CLRBTH^^
  4863	035102	700 04 0 00 261600 		CLRAPR
  4864	035103	700 14 0 00 031577 		CLRPI^
  4865			000060			X=X+2
  4866			000000			Z1=Z1_-1
  4867
  4868	035104	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 36
DSKAH1	MAC	31-Mar-78 11:13		TICKLE THE INTERRUPT SYSTEM WITH THE APR SYSTEM                                    SEQ 0118

  4869					SUBTTL	TICKLE THE INTERRUPT SYSTEM WITH THE APR SYSTEM
  4870					;TEST THAT THE APR SYSTEM WILL NOT CAUSE AN INTERRUPT WHEN ENABLED AND
  4871					;NO APR APR SYSTEM CHANNEL IS SET..
  4872						BLURB^
  4873					;LOCATIONS 40-60 CONTAIN A JSR TO A ROUTINE WHICH STORES
  4874					;THE CHANNEL NUMBER OF THE INTERRUPT INTO 0
  4875					;THEREFORE IF AN INTERRUPT OCCURS THEN LOCATION
  4876					;ZERO WILL CONTAIN THE NUMBER OF THE INTERRUPT CHANNEL TRAP ADRESS
  4877					^
  4878	035105				CKCK0:	CLRBTH^
  4879	035105	700 04 0 00 261600 		CLRAPR
  4880	035106	700 14 0 00 031577 		CLRPI^
  4881	035107	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  4882	035110	400 00 0 00 000000 		SETZ			;CLEAR 0
  4883	035111	7 004 20 0 00 002377 		CONO	PI,CHNON!PION!177	;TURN ON PI SYSTEM
  4884						CONO	APR,LEPSFT!LSPSFT!LENXER!LSNXER!LEPWRF!LSPWRF!LEPAER!LSPAER	;ENABLE THE
  4885	035112	7 000 20 0 00 111700 	 APR SYSTEM
  4886						WATINT^
  4887	035113	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4888	035114	367 13 0 00 035114 		SOJG	13,.		;AND WAIT^
  4889	035115	332 00 0 00 000000 		SKIPE			;AC0=0
  4890						STOP^
  4891	035116	254 04 0 00 035117 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4892	035117	254 00 0 00 035120 		JRST	.+1		;WITH JRST BACK^
  4893
  4894
  4895					;TEST THAT THE APR SYSTEM WILL NOT INTERRUPT WITHOUT APR SYSTEM ENABLE SET
  4896					;ON ALL CHANNELS
  4897
  4898			000001			X=1
  4899					CKCK1:	REPEAT	7,<
  4900					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  4901					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  4902					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  4903					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  4904						CLRBTH
  4905						TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  4906						SETZ	0,		;INSURE ZERO AC0.
  4907						CONO	PI,PION!CHNON!177	;ENABLE PI'S
  4908						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  4909					STEM AND SET CH X
  4910						WATINT
  4911						SKIPE			;AC0=0
  4912						STOP
  4913						X=X+1
  4914					>
  4915
  4916					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  4917					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  4918					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  4919					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  4920						CLRBTH^
  4921	035120	700 04 0 00 261600 		CLRAPR
  4922	035121	700 14 0 00 031577 		CLRPI^
  4923	035122	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 36-1
DSKAH1	MAC	31-Mar-78 11:13		TICKLE THE INTERRUPT SYSTEM WITH THE APR SYSTEM                                    SEQ 0119

  4924	035123	400 00 0 00 000000 		SETZ	0,		;INSURE ZERO AC0.
  4925	035124	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  4926						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  4927	035125	7 000 20 0 00 051701 	STEM AND SET CH X
  4928						WATINT^
  4929	035126	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4930	035127	367 13 0 00 035127 		SOJG	13,.		;AND WAIT^
  4931	035130	332 00 0 00 000000 		SKIPE			;AC0=0
  4932						STOP^
  4933	035131	254 04 0 00 035132 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4934	035132	254 00 0 00 035133 		JRST	.+1		;WITH JRST BACK^
  4935			000002			X=X+1
  4936
  4937
  4938					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  4939					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  4940					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  4941					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  4942						CLRBTH^
  4943	035133	700 04 0 00 261600 		CLRAPR
  4944	035134	700 14 0 00 031577 		CLRPI^
  4945	035135	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  4946	035136	400 00 0 00 000000 		SETZ	0,		;INSURE ZERO AC0.
  4947	035137	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  4948						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  4949	035140	7 000 20 0 00 051702 	STEM AND SET CH X
  4950						WATINT^
  4951	035141	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4952	035142	367 13 0 00 035142 		SOJG	13,.		;AND WAIT^
  4953	035143	332 00 0 00 000000 		SKIPE			;AC0=0
  4954						STOP^
  4955	035144	254 04 0 00 035145 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4956	035145	254 00 0 00 035146 		JRST	.+1		;WITH JRST BACK^
  4957			000003			X=X+1
  4958
  4959
  4960					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  4961					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  4962					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  4963					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  4964						CLRBTH^
  4965	035146	700 04 0 00 261600 		CLRAPR
  4966	035147	700 14 0 00 031577 		CLRPI^
  4967	035150	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  4968	035151	400 00 0 00 000000 		SETZ	0,		;INSURE ZERO AC0.
  4969	035152	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  4970						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  4971	035153	7 000 20 0 00 051703 	STEM AND SET CH X
  4972						WATINT^
  4973	035154	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4974	035155	367 13 0 00 035155 		SOJG	13,.		;AND WAIT^
  4975	035156	332 00 0 00 000000 		SKIPE			;AC0=0
  4976						STOP^
  4977	035157	254 04 0 00 035160 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  4978	035160	254 00 0 00 035161 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 36-2
DSKAH1	MAC	31-Mar-78 11:13		TICKLE THE INTERRUPT SYSTEM WITH THE APR SYSTEM                                    SEQ 0120

  4979			000004			X=X+1
  4980
  4981
  4982					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  4983					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  4984					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  4985					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  4986						CLRBTH^
  4987	035161	700 04 0 00 261600 		CLRAPR
  4988	035162	700 14 0 00 031577 		CLRPI^
  4989	035163	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  4990	035164	400 00 0 00 000000 		SETZ	0,		;INSURE ZERO AC0.
  4991	035165	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  4992						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  4993	035166	7 000 20 0 00 051704 	STEM AND SET CH X
  4994						WATINT^
  4995	035167	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  4996	035170	367 13 0 00 035170 		SOJG	13,.		;AND WAIT^
  4997	035171	332 00 0 00 000000 		SKIPE			;AC0=0
  4998						STOP^
  4999	035172	254 04 0 00 035173 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5000	035173	254 00 0 00 035174 		JRST	.+1		;WITH JRST BACK^
  5001			000005			X=X+1
  5002
  5003
  5004					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  5005					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  5006					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  5007					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  5008						CLRBTH^
  5009	035174	700 04 0 00 261600 		CLRAPR
  5010	035175	700 14 0 00 031577 		CLRPI^
  5011	035176	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  5012	035177	400 00 0 00 000000 		SETZ	0,		;INSURE ZERO AC0.
  5013	035200	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  5014						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  5015	035201	7 000 20 0 00 051705 	STEM AND SET CH X
  5016						WATINT^
  5017	035202	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  5018	035203	367 13 0 00 035203 		SOJG	13,.		;AND WAIT^
  5019	035204	332 00 0 00 000000 		SKIPE			;AC0=0
  5020						STOP^
  5021	035205	254 04 0 00 035206 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5022	035206	254 00 0 00 035207 		JRST	.+1		;WITH JRST BACK^
  5023			000006			X=X+1
  5024
  5025
  5026					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  5027					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  5028					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  5029					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  5030						CLRBTH^
  5031	035207	700 04 0 00 261600 		CLRAPR
  5032	035210	700 14 0 00 031577 		CLRPI^
  5033	035211	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 36-3
DSKAH1	MAC	31-Mar-78 11:13		TICKLE THE INTERRUPT SYSTEM WITH THE APR SYSTEM                                    SEQ 0121

  5034	035212	400 00 0 00 000000 		SETZ	0,		;INSURE ZERO AC0.
  5035	035213	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  5036						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  5037	035214	7 000 20 0 00 051706 	STEM AND SET CH X
  5038						WATINT^
  5039	035215	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  5040	035216	367 13 0 00 035216 		SOJG	13,.		;AND WAIT^
  5041	035217	332 00 0 00 000000 		SKIPE			;AC0=0
  5042						STOP^
  5043	035220	254 04 0 00 035221 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5044	035221	254 00 0 00 035222 		JRST	.+1		;WITH JRST BACK^
  5045			000007			X=X+1
  5046
  5047
  5048					;THE PROGRAM WILL WAIT FOR THE APR SYSTEM TO INTERRUPT ON EACH CHANNEL
  5049					;WITHOUT APR SYSTEM ENABLE SET. IF AC0 BECOMES NON-ZERO THE PROGRAM WILL
  5050					;HALT AND AC0 HAS THE NUMBER OF THE CHANNEL THAT THE INTERRUPT OCCURED
  5051					;ON. NO INTERRUPTS SHOULD OCCUR DURING THIS TEST.
  5052						CLRBTH^
  5053	035222	700 04 0 00 261600 		CLRAPR
  5054	035223	700 14 0 00 031577 		CLRPI^
  5055	035224	264 00 0 00 040047 		TRPPI			;FILL INTERRUPT LOCATIONS WITH TRAPS
  5056	035225	400 00 0 00 000000 		SETZ	0,		;INSURE ZERO AC0.
  5057	035226	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;ENABLE PI'S
  5058						CONO	APR,LSPSFT!LDNXER!LSNXER!LDPWRF!LSPWRF!LDPAER!LSPAER!X	;DISABLE THE APR SY
  5059	035227	7 000 20 0 00 051707 	STEM AND SET CH X
  5060						WATINT^
  5061	035230	201 13 0 00 001000 		MOVEI	13,1000		;SET UP LOOP OF TEN TO WAIT FOR INT.
  5062	035231	367 13 0 00 035231 		SOJG	13,.		;AND WAIT^
  5063	035232	332 00 0 00 000000 		SKIPE			;AC0=0
  5064						STOP^
  5065	035233	254 04 0 00 035234 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5066	035234	254 00 0 00 035235 		JRST	.+1		;WITH JRST BACK^
  5067			000010			X=X+1
  5068
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 37
DSKAH1	MAC	31-Mar-78 11:13		TEST VARIOUS RESETS                                                                SEQ 0122

  5069					SUBTTL	TEST VARIOUS RESETS
  5070
  5071					;TRY TO RESET THE PI BITS VIA CONO RESET TO THE APR
  5072
  5073	035235				RESET1:	CLRBTH^
  5074	035235	700 04 0 00 261600 		CLRAPR
  5075	035236	700 14 0 00 031577 		CLRPI^
  5076	035237	7 004 20 0 00 002377 		CONO	PI,PION!CHNON!177	;TURN ON PI SYSTEM
  5077	035240	7 000 20 0 00 200000 		CONO	APR,IOCLR	;RESET THE I/O BUS
  5078	035241	7 004 24 0 00 000000 		CONI	PI,0
  5079	035242	606 00 0 00 000377 		TRNN	0,PION!177	;ALL PI BITS SHOULD STILL BE SET
  5080						STOP^
  5081	035243	254 04 0 00 035244 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5082	035244	254 00 0 00 035245 		JRST	.+1		;WITH JRST BACK^
  5083
  5084					;TRY TO RESET THE APR WITH A RESET TO THE PI.
  5085
  5086	035245				RESET2:	CLRBTH^
  5087	035245	700 04 0 00 261600 		CLRAPR
  5088	035246	700 14 0 00 031577 		CLRPI^
  5089	035247	7 000 20 0 00 000007 		CONO	APR,7		;SET CLOCK AND ERROR PIA'S
  5090	035250	7 004 20 0 00 010000 		CONO	PI,PICLR	;CLEAR THE PI SYSTEM
  5091	035251	7 000 24 0 00 000000 		CONI	APR,0
  5092	035252	606 00 0 00 000007 		TRNN	0,7		;AND APR BITS SHOULD STILL BE SET
  5093						STOP^
  5094	035253	254 04 0 00 035254 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5095	035254	254 00 0 00 035255 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 38
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0123

  5096					SUBTTL	INTERRUPT OUT OF INDIRECT LOOP
  5097
  5098						INDPI	42,1^
  5099					;GET OURSELVES INTO 42 TIGHT INDIRECT LOOP.
  5100					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  5101					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  5102					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  5103
  5104						TSET^
  5105			035255			%X=.			;DEFINE %X TO SAVE
  5106	035255	201 00 0 00 035255 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5107	035256	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5108	035257	201 10 0 00 000012 		MOVEI	10,^D10		;TIMES TO DO THIS TEST
  5109	035260	202 10 0 00 040505 		MOVEM	10,COUNTX#	;STORE IT
  5110	035261	200 10 0 00 040322 		MOVE	10,[JSR	..0137]	;INTERRUPT TRAP INSTRUCTION
  5111	035262	202 10 0 00 000042 		MOVEM	10,42		;STORE FOR INTERRUPT REQUEST
  5112						CLRBT1^
  5113	035263	700 04 0 00 261600 		CLRAPR
  5114	035264	700 14 0 00 031577 		CLRPI^
  5115	035265	7 004 20 0 00 002377 		CONO	PI,2377		;TURN ON PI AND CHANNELS
  5116	035266	7 000 20 0 00 110101 		CONO	APR,LEPSFT!LSPSFT!1	;ENABLE AND SET ERRORS,ENABLE CH 1
  5117	035267	254 00 1 00 035267 		JRST	@.		;LOOP
  5118	035270	254 04 0 00 035271 		HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  5119	035271	000000	000000		..0137:	0
  5120						TGET^
  5121	035272	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5122	035273	302 00 0 00 035255 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5123						STOP2^^
  5124	035274	254 04 0 00 035275 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5125	035275	254 00 0 00 035276 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5126	035276	200 01 0 00 035271 		MOVE	1,..0137		;GET STORED PC
  5127	035277	405 01 0 00 777777 		ANDI	1,-1		;MASK PC BITS
  5128	035300	302 01 0 00 035267 		CAIE	1,..0137-2		;WAS CORRECT PC STORED?
  5129						STOP^
  5130	035301	254 04 0 00 035302 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5131	035302	254 00 0 00 035303 		JRST	.+1		;WITH JRST BACK^
  5132	035303	372 00 0 00 040505 		SOSE	COUNTX		;LOOP TEST
  5133	035304	254 12 1 00 000001 		JEN	@1		;DISMISS INTERRUPT
  5134						CLRBTH^^
  5135	035305	700 04 0 00 261600 		CLRAPR
  5136	035306	700 14 0 00 031577 		CLRPI^
  5137
  5138						INDPI	44,2^
  5139					;GET OURSELVES INTO 44 TIGHT INDIRECT LOOP.
  5140					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  5141					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  5142					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  5143
  5144						TSET^
  5145			035307			%X=.			;DEFINE %X TO SAVE
  5146	035307	201 00 0 00 035307 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5147	035310	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5148	035311	201 10 0 00 000012 		MOVEI	10,^D10		;TIMES TO DO THIS TEST
  5149	035312	202 10 0 00 040505 		MOVEM	10,COUNTX#	;STORE IT
  5150	035313	200 10 0 00 040323 		MOVE	10,[JSR	..0140]	;INTERRUPT TRAP INSTRUCTION
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 38-1
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0124

  5151	035314	202 10 0 00 000044 		MOVEM	10,44		;STORE FOR INTERRUPT REQUEST
  5152						CLRBT1^
  5153	035315	700 04 0 00 261600 		CLRAPR
  5154	035316	700 14 0 00 031577 		CLRPI^
  5155	035317	7 004 20 0 00 002377 		CONO	PI,2377		;TURN ON PI AND CHANNELS
  5156	035320	7 000 20 0 00 110102 		CONO	APR,LEPSFT!LSPSFT!2	;ENABLE AND SET ERRORS,ENABLE CH 2
  5157	035321	254 00 1 00 035321 		JRST	@.		;LOOP
  5158	035322	254 04 0 00 035323 		HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  5159	035323	000000	000000		..0140:	0
  5160						TGET^
  5161	035324	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5162	035325	302 00 0 00 035307 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5163						STOP2^^
  5164	035326	254 04 0 00 035327 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5165	035327	254 00 0 00 035330 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5166	035330	200 01 0 00 035323 		MOVE	1,..0140		;GET STORED PC
  5167	035331	405 01 0 00 777777 		ANDI	1,-1		;MASK PC BITS
  5168	035332	302 01 0 00 035321 		CAIE	1,..0140-2		;WAS CORRECT PC STORED?
  5169						STOP^
  5170	035333	254 04 0 00 035334 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5171	035334	254 00 0 00 035335 		JRST	.+1		;WITH JRST BACK^
  5172	035335	372 00 0 00 040505 		SOSE	COUNTX		;LOOP TEST
  5173	035336	254 12 1 00 000001 		JEN	@1		;DISMISS INTERRUPT
  5174						CLRBTH^^
  5175	035337	700 04 0 00 261600 		CLRAPR
  5176	035340	700 14 0 00 031577 		CLRPI^
  5177
  5178						INDPI	46,3^
  5179					;GET OURSELVES INTO 46 TIGHT INDIRECT LOOP.
  5180					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  5181					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  5182					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  5183
  5184						TSET^
  5185			035341			%X=.			;DEFINE %X TO SAVE
  5186	035341	201 00 0 00 035341 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5187	035342	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5188	035343	201 10 0 00 000012 		MOVEI	10,^D10		;TIMES TO DO THIS TEST
  5189	035344	202 10 0 00 040505 		MOVEM	10,COUNTX#	;STORE IT
  5190	035345	200 10 0 00 040324 		MOVE	10,[JSR	..0141]	;INTERRUPT TRAP INSTRUCTION
  5191	035346	202 10 0 00 000046 		MOVEM	10,46		;STORE FOR INTERRUPT REQUEST
  5192						CLRBT1^
  5193	035347	700 04 0 00 261600 		CLRAPR
  5194	035350	700 14 0 00 031577 		CLRPI^
  5195	035351	7 004 20 0 00 002377 		CONO	PI,2377		;TURN ON PI AND CHANNELS
  5196	035352	7 000 20 0 00 110103 		CONO	APR,LEPSFT!LSPSFT!3	;ENABLE AND SET ERRORS,ENABLE CH 3
  5197	035353	254 00 1 00 035353 		JRST	@.		;LOOP
  5198	035354	254 04 0 00 035355 		HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  5199	035355	000000	000000		..0141:	0
  5200						TGET^
  5201	035356	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5202	035357	302 00 0 00 035341 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5203						STOP2^^
  5204	035360	254 04 0 00 035361 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5205	035361	254 00 0 00 035362 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 38-2
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0125

  5206	035362	200 01 0 00 035355 		MOVE	1,..0141		;GET STORED PC
  5207	035363	405 01 0 00 777777 		ANDI	1,-1		;MASK PC BITS
  5208	035364	302 01 0 00 035353 		CAIE	1,..0141-2		;WAS CORRECT PC STORED?
  5209						STOP^
  5210	035365	254 04 0 00 035366 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5211	035366	254 00 0 00 035367 		JRST	.+1		;WITH JRST BACK^
  5212	035367	372 00 0 00 040505 		SOSE	COUNTX		;LOOP TEST
  5213	035370	254 12 1 00 000001 		JEN	@1		;DISMISS INTERRUPT
  5214						CLRBTH^^
  5215	035371	700 04 0 00 261600 		CLRAPR
  5216	035372	700 14 0 00 031577 		CLRPI^
  5217
  5218						INDPI	50,4^
  5219					;GET OURSELVES INTO 50 TIGHT INDIRECT LOOP.
  5220					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  5221					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  5222					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  5223
  5224						TSET^
  5225			035373			%X=.			;DEFINE %X TO SAVE
  5226	035373	201 00 0 00 035373 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5227	035374	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5228	035375	201 10 0 00 000012 		MOVEI	10,^D10		;TIMES TO DO THIS TEST
  5229	035376	202 10 0 00 040505 		MOVEM	10,COUNTX#	;STORE IT
  5230	035377	200 10 0 00 040325 		MOVE	10,[JSR	..0142]	;INTERRUPT TRAP INSTRUCTION
  5231	035400	202 10 0 00 000050 		MOVEM	10,50		;STORE FOR INTERRUPT REQUEST
  5232						CLRBT1^
  5233	035401	700 04 0 00 261600 		CLRAPR
  5234	035402	700 14 0 00 031577 		CLRPI^
  5235	035403	7 004 20 0 00 002377 		CONO	PI,2377		;TURN ON PI AND CHANNELS
  5236	035404	7 000 20 0 00 110104 		CONO	APR,LEPSFT!LSPSFT!4	;ENABLE AND SET ERRORS,ENABLE CH 4
  5237	035405	254 00 1 00 035405 		JRST	@.		;LOOP
  5238	035406	254 04 0 00 035407 		HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  5239	035407	000000	000000		..0142:	0
  5240						TGET^
  5241	035410	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5242	035411	302 00 0 00 035373 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5243						STOP2^^
  5244	035412	254 04 0 00 035413 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5245	035413	254 00 0 00 035414 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5246	035414	200 01 0 00 035407 		MOVE	1,..0142		;GET STORED PC
  5247	035415	405 01 0 00 777777 		ANDI	1,-1		;MASK PC BITS
  5248	035416	302 01 0 00 035405 		CAIE	1,..0142-2		;WAS CORRECT PC STORED?
  5249						STOP^
  5250	035417	254 04 0 00 035420 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5251	035420	254 00 0 00 035421 		JRST	.+1		;WITH JRST BACK^
  5252	035421	372 00 0 00 040505 		SOSE	COUNTX		;LOOP TEST
  5253	035422	254 12 1 00 000001 		JEN	@1		;DISMISS INTERRUPT
  5254						CLRBTH^^
  5255	035423	700 04 0 00 261600 		CLRAPR
  5256	035424	700 14 0 00 031577 		CLRPI^
  5257
  5258						INDPI	52,5^
  5259					;GET OURSELVES INTO 52 TIGHT INDIRECT LOOP.
  5260					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 38-3
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0126

  5261					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  5262					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  5263
  5264						TSET^
  5265			035425			%X=.			;DEFINE %X TO SAVE
  5266	035425	201 00 0 00 035425 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5267	035426	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5268	035427	201 10 0 00 000012 		MOVEI	10,^D10		;TIMES TO DO THIS TEST
  5269	035430	202 10 0 00 040505 		MOVEM	10,COUNTX#	;STORE IT
  5270	035431	200 10 0 00 040326 		MOVE	10,[JSR	..0143]	;INTERRUPT TRAP INSTRUCTION
  5271	035432	202 10 0 00 000052 		MOVEM	10,52		;STORE FOR INTERRUPT REQUEST
  5272						CLRBT1^
  5273	035433	700 04 0 00 261600 		CLRAPR
  5274	035434	700 14 0 00 031577 		CLRPI^
  5275	035435	7 004 20 0 00 002377 		CONO	PI,2377		;TURN ON PI AND CHANNELS
  5276	035436	7 000 20 0 00 110105 		CONO	APR,LEPSFT!LSPSFT!5	;ENABLE AND SET ERRORS,ENABLE CH 5
  5277	035437	254 00 1 00 035437 		JRST	@.		;LOOP
  5278	035440	254 04 0 00 035441 		HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  5279	035441	000000	000000		..0143:	0
  5280						TGET^
  5281	035442	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5282	035443	302 00 0 00 035425 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5283						STOP2^^
  5284	035444	254 04 0 00 035445 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5285	035445	254 00 0 00 035446 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5286	035446	200 01 0 00 035441 		MOVE	1,..0143		;GET STORED PC
  5287	035447	405 01 0 00 777777 		ANDI	1,-1		;MASK PC BITS
  5288	035450	302 01 0 00 035437 		CAIE	1,..0143-2		;WAS CORRECT PC STORED?
  5289						STOP^
  5290	035451	254 04 0 00 035452 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5291	035452	254 00 0 00 035453 		JRST	.+1		;WITH JRST BACK^
  5292	035453	372 00 0 00 040505 		SOSE	COUNTX		;LOOP TEST
  5293	035454	254 12 1 00 000001 		JEN	@1		;DISMISS INTERRUPT
  5294						CLRBTH^^
  5295	035455	700 04 0 00 261600 		CLRAPR
  5296	035456	700 14 0 00 031577 		CLRPI^
  5297
  5298						INDPI	54,6^
  5299					;GET OURSELVES INTO 54 TIGHT INDIRECT LOOP.
  5300					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  5301					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  5302					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  5303
  5304						TSET^
  5305			035457			%X=.			;DEFINE %X TO SAVE
  5306	035457	201 00 0 00 035457 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5307	035460	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5308	035461	201 10 0 00 000012 		MOVEI	10,^D10		;TIMES TO DO THIS TEST
  5309	035462	202 10 0 00 040505 		MOVEM	10,COUNTX#	;STORE IT
  5310	035463	200 10 0 00 040327 		MOVE	10,[JSR	..0144]	;INTERRUPT TRAP INSTRUCTION
  5311	035464	202 10 0 00 000054 		MOVEM	10,54		;STORE FOR INTERRUPT REQUEST
  5312						CLRBT1^
  5313	035465	700 04 0 00 261600 		CLRAPR
  5314	035466	700 14 0 00 031577 		CLRPI^
  5315	035467	7 004 20 0 00 002377 		CONO	PI,2377		;TURN ON PI AND CHANNELS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 38-4
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0127

  5316	035470	7 000 20 0 00 110106 		CONO	APR,LEPSFT!LSPSFT!6	;ENABLE AND SET ERRORS,ENABLE CH 6
  5317	035471	254 00 1 00 035471 		JRST	@.		;LOOP
  5318	035472	254 04 0 00 035473 		HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  5319	035473	000000	000000		..0144:	0
  5320						TGET^
  5321	035474	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5322	035475	302 00 0 00 035457 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5323						STOP2^^
  5324	035476	254 04 0 00 035477 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5325	035477	254 00 0 00 035500 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5326	035500	200 01 0 00 035473 		MOVE	1,..0144		;GET STORED PC
  5327	035501	405 01 0 00 777777 		ANDI	1,-1		;MASK PC BITS
  5328	035502	302 01 0 00 035471 		CAIE	1,..0144-2		;WAS CORRECT PC STORED?
  5329						STOP^
  5330	035503	254 04 0 00 035504 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  5331	035504	254 00 0 00 035505 		JRST	.+1		;WITH JRST BACK^
  5332	035505	372 00 0 00 040505 		SOSE	COUNTX		;LOOP TEST
  5333	035506	254 12 1 00 000001 		JEN	@1		;DISMISS INTERRUPT
  5334						CLRBTH^^
  5335	035507	700 04 0 00 261600 		CLRAPR
  5336	035510	700 14 0 00 031577 		CLRPI^
  5337
  5338						INDPI	56,7^
  5339					;GET OURSELVES INTO 56 TIGHT INDIRECT LOOP.
  5340					;AND SEE IF WE ARE ABLE TO INTERRUPT OUT OF IT.
  5341					;THE LOOP IS DONE TEN TIMES. EACH TIME THE INTERRUPT IS DISMISSED AND
  5342					;WE WILL RETURN TO THE "JRST @." INSTRUCTION.
  5343
  5344						TSET^
  5345			035511			%X=.			;DEFINE %X TO SAVE
  5346	035511	201 00 0 00 035511 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5347	035512	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5348	035513	201 10 0 00 000012 		MOVEI	10,^D10		;TIMES TO DO THIS TEST
  5349	035514	202 10 0 00 040505 		MOVEM	10,COUNTX#	;STORE IT
  5350	035515	200 10 0 00 040330 		MOVE	10,[JSR	..0145]	;INTERRUPT TRAP INSTRUCTION
  5351	035516	202 10 0 00 000056 		MOVEM	10,56		;STORE FOR INTERRUPT REQUEST
  5352						CLRBT1^
  5353	035517	700 04 0 00 261600 		CLRAPR
  5354	035520	700 14 0 00 031577 		CLRPI^
  5355	035521	7 004 20 0 00 002377 		CONO	PI,2377		;TURN ON PI AND CHANNELS
  5356	035522	7 000 20 0 00 110107 		CONO	APR,LEPSFT!LSPSFT!7	;ENABLE AND SET ERRORS,ENABLE CH 7
  5357	035523	254 00 1 00 035523 		JRST	@.		;LOOP
  5358	035524	254 04 0 00 035525 		HALT	.+1		;ERROR IF HERE  (GOT OUT OF INDIRECT LOOP)
  5359	035525	000000	000000		..0145:	0
  5360						TGET^
  5361	035526	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5362	035527	302 00 0 00 035511 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5363						STOP2^^
  5364	035530	254 04 0 00 035531 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5365	035531	254 00 0 00 035532 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5366	035532	200 01 0 00 035525 		MOVE	1,..0145		;GET STORED PC
  5367	035533	405 01 0 00 777777 		ANDI	1,-1		;MASK PC BITS
  5368	035534	302 01 0 00 035523 		CAIE	1,..0145-2		;WAS CORRECT PC STORED?
  5369						STOP^
  5370	035535	254 04 0 00 035536 		HALT	.+1		;INSTRUCTION FAILED REPLACE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 38-5
DSKAH1	MAC	31-Mar-78 11:13		INTERRUPT OUT OF INDIRECT LOOP                                                     SEQ 0128

  5371	035536	254 00 0 00 035537 		JRST	.+1		;WITH JRST BACK^
  5372	035537	372 00 0 00 040505 		SOSE	COUNTX		;LOOP TEST
  5373	035540	254 12 1 00 000001 		JEN	@1		;DISMISS INTERRUPT
  5374						CLRBTH^^
  5375	035541	700 04 0 00 261600 		CLRAPR
  5376	035542	700 14 0 00 031577 		CLRPI^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0129

  5377					SUBTTL	LOCAL UUO TESTING (LUUO)
  5378
  5379					;TEST UUO'S IN RANGE 1-37
  5380					;TEST TO SEE THAT UUO TRAPS CORRECTLY AND THAT PC
  5381					;OF UUO IS CORRECT AND THAT UUO STORED IN 40 IS ALSO CORRECT
  5382					;MONITOR UUO'S ARE NOT TESTED.
  5383
  5384	035543				UUO01:	XUUO	1B8,UUO02^
  5385					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5386					;ARE CORRECT.
  5387
  5388		001000	000000			MLUUO==1B8		;THE UUO TO BE EXECUTED
  5389						TSET^
  5390			035543			%X=.			;DEFINE %X TO SAVE
  5391	035543	201 00 0 00 035543 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5392	035544	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5393	035545	200 00 0 00 040331 	..0146:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5394	035546	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5395	035547	001000	000000			1B8			;EXECUTE A UUO
  5396	035550	254 04 0 00 035551 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5397	035551	201 02 0 00 035550 		MOVEI	2,.-1		;GET UUO PC
  5398	035552	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5399	035553	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5400	035554	254 04 0 00 035555 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5401	035555	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5402	035556	312 00 0 00 040332 		CAME	0,[1B8!0]		;CORRECT UUO STORED IN 40?
  5403	035557	334 00 0 00 000000 		SKIPA			;NO
  5404	035560	254 00 0 00 035567 		JRST	UUO02		;TESTS OK !
  5405						STOP1^
  5406	035561	254 04 0 00 035562 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5407	035562	254 00 0 00 035563 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5408						TGET^^
  5409	035563	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5410	035564	302 00 0 00 035543 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5411						STOP2^^
  5412	035565	254 04 0 00 035566 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5413	035566	254 00 0 00 035567 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5414	035567				UUO02:	XUUO	2B8,UUO03^
  5415					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5416					;ARE CORRECT.
  5417
  5418		002000	000000			MLUUO==2B8		;THE UUO TO BE EXECUTED
  5419						TSET^
  5420			035567			%X=.			;DEFINE %X TO SAVE
  5421	035567	201 00 0 00 035567 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5422	035570	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5423	035571	200 00 0 00 040333 	..0147:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5424	035572	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5425	035573	002000	000000			2B8			;EXECUTE A UUO
  5426	035574	254 04 0 00 035575 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5427	035575	201 02 0 00 035574 		MOVEI	2,.-1		;GET UUO PC
  5428	035576	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5429	035577	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5430	035600	254 04 0 00 035601 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5431	035601	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-1
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0130

  5432	035602	312 00 0 00 040334 		CAME	0,[2B8!0]		;CORRECT UUO STORED IN 40?
  5433	035603	334 00 0 00 000000 		SKIPA			;NO
  5434	035604	254 00 0 00 035613 		JRST	UUO03		;TESTS OK !
  5435						STOP1^
  5436	035605	254 04 0 00 035606 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5437	035606	254 00 0 00 035607 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5438						TGET^^
  5439	035607	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5440	035610	302 00 0 00 035567 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5441						STOP2^^
  5442	035611	254 04 0 00 035612 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5443	035612	254 00 0 00 035613 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5444	035613				UUO03:	XUUO	3B8,UUO04^
  5445					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5446					;ARE CORRECT.
  5447
  5448		003000	000000			MLUUO==3B8		;THE UUO TO BE EXECUTED
  5449						TSET^
  5450			035613			%X=.			;DEFINE %X TO SAVE
  5451	035613	201 00 0 00 035613 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5452	035614	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5453	035615	200 00 0 00 040335 	..0150:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5454	035616	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5455	035617	003000	000000			3B8			;EXECUTE A UUO
  5456	035620	254 04 0 00 035621 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5457	035621	201 02 0 00 035620 		MOVEI	2,.-1		;GET UUO PC
  5458	035622	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5459	035623	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5460	035624	254 04 0 00 035625 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5461	035625	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5462	035626	312 00 0 00 040336 		CAME	0,[3B8!0]		;CORRECT UUO STORED IN 40?
  5463	035627	334 00 0 00 000000 		SKIPA			;NO
  5464	035630	254 00 0 00 035637 		JRST	UUO04		;TESTS OK !
  5465						STOP1^
  5466	035631	254 04 0 00 035632 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5467	035632	254 00 0 00 035633 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5468						TGET^^
  5469	035633	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5470	035634	302 00 0 00 035613 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5471						STOP2^^
  5472	035635	254 04 0 00 035636 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5473	035636	254 00 0 00 035637 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5474	035637				UUO04:	XUUO	4B8,UUO05^
  5475					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5476					;ARE CORRECT.
  5477
  5478		004000	000000			MLUUO==4B8		;THE UUO TO BE EXECUTED
  5479						TSET^
  5480			035637			%X=.			;DEFINE %X TO SAVE
  5481	035637	201 00 0 00 035637 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5482	035640	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5483	035641	200 00 0 00 040337 	..0151:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5484	035642	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5485	035643	004000	000000			4B8			;EXECUTE A UUO
  5486	035644	254 04 0 00 035645 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-2
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0131

  5487	035645	201 02 0 00 035644 		MOVEI	2,.-1		;GET UUO PC
  5488	035646	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5489	035647	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5490	035650	254 04 0 00 035651 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5491	035651	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5492	035652	312 00 0 00 040340 		CAME	0,[4B8!0]		;CORRECT UUO STORED IN 40?
  5493	035653	334 00 0 00 000000 		SKIPA			;NO
  5494	035654	254 00 0 00 035663 		JRST	UUO05		;TESTS OK !
  5495						STOP1^
  5496	035655	254 04 0 00 035656 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5497	035656	254 00 0 00 035657 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5498						TGET^^
  5499	035657	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5500	035660	302 00 0 00 035637 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5501						STOP2^^
  5502	035661	254 04 0 00 035662 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5503	035662	254 00 0 00 035663 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5504	035663				UUO05:	XUUO	5B8,UUO06^
  5505					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5506					;ARE CORRECT.
  5507
  5508		005000	000000			MLUUO==5B8		;THE UUO TO BE EXECUTED
  5509						TSET^
  5510			035663			%X=.			;DEFINE %X TO SAVE
  5511	035663	201 00 0 00 035663 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5512	035664	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5513	035665	200 00 0 00 040341 	..0152:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5514	035666	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5515	035667	005000	000000			5B8			;EXECUTE A UUO
  5516	035670	254 04 0 00 035671 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5517	035671	201 02 0 00 035670 		MOVEI	2,.-1		;GET UUO PC
  5518	035672	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5519	035673	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5520	035674	254 04 0 00 035675 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5521	035675	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5522	035676	312 00 0 00 040342 		CAME	0,[5B8!0]		;CORRECT UUO STORED IN 40?
  5523	035677	334 00 0 00 000000 		SKIPA			;NO
  5524	035700	254 00 0 00 035707 		JRST	UUO06		;TESTS OK !
  5525						STOP1^
  5526	035701	254 04 0 00 035702 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5527	035702	254 00 0 00 035703 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5528						TGET^^
  5529	035703	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5530	035704	302 00 0 00 035663 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5531						STOP2^^
  5532	035705	254 04 0 00 035706 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5533	035706	254 00 0 00 035707 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5534	035707				UUO06:	XUUO	6B8,UUO07^
  5535					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5536					;ARE CORRECT.
  5537
  5538		006000	000000			MLUUO==6B8		;THE UUO TO BE EXECUTED
  5539						TSET^
  5540			035707			%X=.			;DEFINE %X TO SAVE
  5541	035707	201 00 0 00 035707 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-3
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0132

  5542	035710	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5543	035711	200 00 0 00 040343 	..0153:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5544	035712	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5545	035713	006000	000000			6B8			;EXECUTE A UUO
  5546	035714	254 04 0 00 035715 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5547	035715	201 02 0 00 035714 		MOVEI	2,.-1		;GET UUO PC
  5548	035716	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5549	035717	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5550	035720	254 04 0 00 035721 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5551	035721	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5552	035722	312 00 0 00 040344 		CAME	0,[6B8!0]		;CORRECT UUO STORED IN 40?
  5553	035723	334 00 0 00 000000 		SKIPA			;NO
  5554	035724	254 00 0 00 035733 		JRST	UUO07		;TESTS OK !
  5555						STOP1^
  5556	035725	254 04 0 00 035726 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5557	035726	254 00 0 00 035727 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5558						TGET^^
  5559	035727	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5560	035730	302 00 0 00 035707 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5561						STOP2^^
  5562	035731	254 04 0 00 035732 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5563	035732	254 00 0 00 035733 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5564	035733				UUO07:	XUUO	7B8,UUO10^
  5565					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5566					;ARE CORRECT.
  5567
  5568		007000	000000			MLUUO==7B8		;THE UUO TO BE EXECUTED
  5569						TSET^
  5570			035733			%X=.			;DEFINE %X TO SAVE
  5571	035733	201 00 0 00 035733 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5572	035734	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5573	035735	200 00 0 00 040345 	..0154:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5574	035736	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5575	035737	007000	000000			7B8			;EXECUTE A UUO
  5576	035740	254 04 0 00 035741 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5577	035741	201 02 0 00 035740 		MOVEI	2,.-1		;GET UUO PC
  5578	035742	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5579	035743	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5580	035744	254 04 0 00 035745 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5581	035745	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5582	035746	312 00 0 00 040346 		CAME	0,[7B8!0]		;CORRECT UUO STORED IN 40?
  5583	035747	334 00 0 00 000000 		SKIPA			;NO
  5584	035750	254 00 0 00 035757 		JRST	UUO10		;TESTS OK !
  5585						STOP1^
  5586	035751	254 04 0 00 035752 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5587	035752	254 00 0 00 035753 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5588						TGET^^
  5589	035753	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5590	035754	302 00 0 00 035733 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5591						STOP2^^
  5592	035755	254 04 0 00 035756 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5593	035756	254 00 0 00 035757 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5594	035757				UUO10:	XUUO	10B8,UUO11^
  5595					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5596					;ARE CORRECT.
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-4
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0133

  5597
  5598		010000	000000			MLUUO==10B8		;THE UUO TO BE EXECUTED
  5599						TSET^
  5600			035757			%X=.			;DEFINE %X TO SAVE
  5601	035757	201 00 0 00 035757 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5602	035760	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5603	035761	200 00 0 00 040347 	..0155:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5604	035762	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5605	035763	010000	000000			10B8			;EXECUTE A UUO
  5606	035764	254 04 0 00 035765 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5607	035765	201 02 0 00 035764 		MOVEI	2,.-1		;GET UUO PC
  5608	035766	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5609	035767	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5610	035770	254 04 0 00 035771 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5611	035771	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5612	035772	312 00 0 00 040350 		CAME	0,[10B8!0]		;CORRECT UUO STORED IN 40?
  5613	035773	334 00 0 00 000000 		SKIPA			;NO
  5614	035774	254 00 0 00 036003 		JRST	UUO11		;TESTS OK !
  5615						STOP1^
  5616	035775	254 04 0 00 035776 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5617	035776	254 00 0 00 035777 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5618						TGET^^
  5619	035777	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5620	036000	302 00 0 00 035757 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5621						STOP2^^
  5622	036001	254 04 0 00 036002 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5623	036002	254 00 0 00 036003 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5624	036003				UUO11:	XUUO	11B8,UUO12^
  5625					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5626					;ARE CORRECT.
  5627
  5628		011000	000000			MLUUO==11B8		;THE UUO TO BE EXECUTED
  5629						TSET^
  5630			036003			%X=.			;DEFINE %X TO SAVE
  5631	036003	201 00 0 00 036003 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5632	036004	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5633	036005	200 00 0 00 040351 	..0156:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5634	036006	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5635	036007	011000	000000			11B8			;EXECUTE A UUO
  5636	036010	254 04 0 00 036011 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5637	036011	201 02 0 00 036010 		MOVEI	2,.-1		;GET UUO PC
  5638	036012	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5639	036013	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5640	036014	254 04 0 00 036015 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5641	036015	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5642	036016	312 00 0 00 040352 		CAME	0,[11B8!0]		;CORRECT UUO STORED IN 40?
  5643	036017	334 00 0 00 000000 		SKIPA			;NO
  5644	036020	254 00 0 00 036027 		JRST	UUO12		;TESTS OK !
  5645						STOP1^
  5646	036021	254 04 0 00 036022 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5647	036022	254 00 0 00 036023 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5648						TGET^^
  5649	036023	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5650	036024	302 00 0 00 036003 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5651						STOP2^^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-5
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0134

  5652	036025	254 04 0 00 036026 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5653	036026	254 00 0 00 036027 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5654	036027				UUO12:	XUUO	12B8,UUO13^
  5655					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5656					;ARE CORRECT.
  5657
  5658		012000	000000			MLUUO==12B8		;THE UUO TO BE EXECUTED
  5659						TSET^
  5660			036027			%X=.			;DEFINE %X TO SAVE
  5661	036027	201 00 0 00 036027 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5662	036030	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5663	036031	200 00 0 00 040353 	..0157:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5664	036032	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5665	036033	012000	000000			12B8			;EXECUTE A UUO
  5666	036034	254 04 0 00 036035 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5667	036035	201 02 0 00 036034 		MOVEI	2,.-1		;GET UUO PC
  5668	036036	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5669	036037	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5670	036040	254 04 0 00 036041 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5671	036041	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5672	036042	312 00 0 00 040354 		CAME	0,[12B8!0]		;CORRECT UUO STORED IN 40?
  5673	036043	334 00 0 00 000000 		SKIPA			;NO
  5674	036044	254 00 0 00 036053 		JRST	UUO13		;TESTS OK !
  5675						STOP1^
  5676	036045	254 04 0 00 036046 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5677	036046	254 00 0 00 036047 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5678						TGET^^
  5679	036047	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5680	036050	302 00 0 00 036027 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5681						STOP2^^
  5682	036051	254 04 0 00 036052 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5683	036052	254 00 0 00 036053 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5684	036053				UUO13:	XUUO	13B8,UUO14^
  5685					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5686					;ARE CORRECT.
  5687
  5688		013000	000000			MLUUO==13B8		;THE UUO TO BE EXECUTED
  5689						TSET^
  5690			036053			%X=.			;DEFINE %X TO SAVE
  5691	036053	201 00 0 00 036053 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5692	036054	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5693	036055	200 00 0 00 040355 	..0160:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5694	036056	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5695	036057	013000	000000			13B8			;EXECUTE A UUO
  5696	036060	254 04 0 00 036061 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5697	036061	201 02 0 00 036060 		MOVEI	2,.-1		;GET UUO PC
  5698	036062	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5699	036063	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5700	036064	254 04 0 00 036065 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5701	036065	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5702	036066	312 00 0 00 040356 		CAME	0,[13B8!0]		;CORRECT UUO STORED IN 40?
  5703	036067	334 00 0 00 000000 		SKIPA			;NO
  5704	036070	254 00 0 00 036077 		JRST	UUO14		;TESTS OK !
  5705						STOP1^
  5706	036071	254 04 0 00 036072 		HALT	.+1		;UUO FAILED TO STORE MA BITS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-6
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0135

  5707	036072	254 00 0 00 036073 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5708						TGET^^
  5709	036073	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5710	036074	302 00 0 00 036053 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5711						STOP2^^
  5712	036075	254 04 0 00 036076 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5713	036076	254 00 0 00 036077 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5714	036077				UUO14:	XUUO	14B8,UUO15^
  5715					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5716					;ARE CORRECT.
  5717
  5718		014000	000000			MLUUO==14B8		;THE UUO TO BE EXECUTED
  5719						TSET^
  5720			036077			%X=.			;DEFINE %X TO SAVE
  5721	036077	201 00 0 00 036077 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5722	036100	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5723	036101	200 00 0 00 040357 	..0161:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5724	036102	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5725	036103	014000	000000			14B8			;EXECUTE A UUO
  5726	036104	254 04 0 00 036105 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5727	036105	201 02 0 00 036104 		MOVEI	2,.-1		;GET UUO PC
  5728	036106	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5729	036107	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5730	036110	254 04 0 00 036111 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5731	036111	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5732	036112	312 00 0 00 040360 		CAME	0,[14B8!0]		;CORRECT UUO STORED IN 40?
  5733	036113	334 00 0 00 000000 		SKIPA			;NO
  5734	036114	254 00 0 00 036123 		JRST	UUO15		;TESTS OK !
  5735						STOP1^
  5736	036115	254 04 0 00 036116 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5737	036116	254 00 0 00 036117 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5738						TGET^^
  5739	036117	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5740	036120	302 00 0 00 036077 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5741						STOP2^^
  5742	036121	254 04 0 00 036122 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5743	036122	254 00 0 00 036123 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5744	036123				UUO15:	XUUO	15B8,UUO16^
  5745					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5746					;ARE CORRECT.
  5747
  5748		015000	000000			MLUUO==15B8		;THE UUO TO BE EXECUTED
  5749						TSET^
  5750			036123			%X=.			;DEFINE %X TO SAVE
  5751	036123	201 00 0 00 036123 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5752	036124	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5753	036125	200 00 0 00 040361 	..0162:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5754	036126	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5755	036127	015000	000000			15B8			;EXECUTE A UUO
  5756	036130	254 04 0 00 036131 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5757	036131	201 02 0 00 036130 		MOVEI	2,.-1		;GET UUO PC
  5758	036132	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5759	036133	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5760	036134	254 04 0 00 036135 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5761	036135	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-7
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0136

  5762	036136	312 00 0 00 040362 		CAME	0,[15B8!0]		;CORRECT UUO STORED IN 40?
  5763	036137	334 00 0 00 000000 		SKIPA			;NO
  5764	036140	254 00 0 00 036147 		JRST	UUO16		;TESTS OK !
  5765						STOP1^
  5766	036141	254 04 0 00 036142 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5767	036142	254 00 0 00 036143 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5768						TGET^^
  5769	036143	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5770	036144	302 00 0 00 036123 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5771						STOP2^^
  5772	036145	254 04 0 00 036146 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5773	036146	254 00 0 00 036147 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5774	036147				UUO16:	XUUO	16B8,UUO17^
  5775					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5776					;ARE CORRECT.
  5777
  5778		016000	000000			MLUUO==16B8		;THE UUO TO BE EXECUTED
  5779						TSET^
  5780			036147			%X=.			;DEFINE %X TO SAVE
  5781	036147	201 00 0 00 036147 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5782	036150	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5783	036151	200 00 0 00 040363 	..0163:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5784	036152	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5785	036153	016000	000000			16B8			;EXECUTE A UUO
  5786	036154	254 04 0 00 036155 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5787	036155	201 02 0 00 036154 		MOVEI	2,.-1		;GET UUO PC
  5788	036156	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5789	036157	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5790	036160	254 04 0 00 036161 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5791	036161	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5792	036162	312 00 0 00 040364 		CAME	0,[16B8!0]		;CORRECT UUO STORED IN 40?
  5793	036163	334 00 0 00 000000 		SKIPA			;NO
  5794	036164	254 00 0 00 036173 		JRST	UUO17		;TESTS OK !
  5795						STOP1^
  5796	036165	254 04 0 00 036166 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5797	036166	254 00 0 00 036167 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5798						TGET^^
  5799	036167	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5800	036170	302 00 0 00 036147 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5801						STOP2^^
  5802	036171	254 04 0 00 036172 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5803	036172	254 00 0 00 036173 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5804	036173				UUO17:	XUUO	17B8,UUO20^
  5805					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5806					;ARE CORRECT.
  5807
  5808		017000	000000			MLUUO==17B8		;THE UUO TO BE EXECUTED
  5809						TSET^
  5810			036173			%X=.			;DEFINE %X TO SAVE
  5811	036173	201 00 0 00 036173 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5812	036174	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5813	036175	200 00 0 00 040365 	..0164:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5814	036176	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5815	036177	017000	000000			17B8			;EXECUTE A UUO
  5816	036200	254 04 0 00 036201 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-8
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0137

  5817	036201	201 02 0 00 036200 		MOVEI	2,.-1		;GET UUO PC
  5818	036202	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5819	036203	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5820	036204	254 04 0 00 036205 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5821	036205	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5822	036206	312 00 0 00 040366 		CAME	0,[17B8!0]		;CORRECT UUO STORED IN 40?
  5823	036207	334 00 0 00 000000 		SKIPA			;NO
  5824	036210	254 00 0 00 036217 		JRST	UUO20		;TESTS OK !
  5825						STOP1^
  5826	036211	254 04 0 00 036212 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5827	036212	254 00 0 00 036213 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5828						TGET^^
  5829	036213	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5830	036214	302 00 0 00 036173 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5831						STOP2^^
  5832	036215	254 04 0 00 036216 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5833	036216	254 00 0 00 036217 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5834	036217				UUO20:	XUUO	20B8,UUO21^
  5835					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5836					;ARE CORRECT.
  5837
  5838		020000	000000			MLUUO==20B8		;THE UUO TO BE EXECUTED
  5839						TSET^
  5840			036217			%X=.			;DEFINE %X TO SAVE
  5841	036217	201 00 0 00 036217 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5842	036220	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5843	036221	200 00 0 00 040367 	..0165:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5844	036222	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5845	036223	020000	000000			20B8			;EXECUTE A UUO
  5846	036224	254 04 0 00 036225 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5847	036225	201 02 0 00 036224 		MOVEI	2,.-1		;GET UUO PC
  5848	036226	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5849	036227	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5850	036230	254 04 0 00 036231 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5851	036231	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5852	036232	312 00 0 00 040370 		CAME	0,[20B8!0]		;CORRECT UUO STORED IN 40?
  5853	036233	334 00 0 00 000000 		SKIPA			;NO
  5854	036234	254 00 0 00 036243 		JRST	UUO21		;TESTS OK !
  5855						STOP1^
  5856	036235	254 04 0 00 036236 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5857	036236	254 00 0 00 036237 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5858						TGET^^
  5859	036237	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5860	036240	302 00 0 00 036217 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5861						STOP2^^
  5862	036241	254 04 0 00 036242 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5863	036242	254 00 0 00 036243 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5864	036243				UUO21:	XUUO	21B8,UUO22^
  5865					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5866					;ARE CORRECT.
  5867
  5868		021000	000000			MLUUO==21B8		;THE UUO TO BE EXECUTED
  5869						TSET^
  5870			036243			%X=.			;DEFINE %X TO SAVE
  5871	036243	201 00 0 00 036243 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-9
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0138

  5872	036244	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5873	036245	200 00 0 00 040371 	..0166:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5874	036246	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5875	036247	021000	000000			21B8			;EXECUTE A UUO
  5876	036250	254 04 0 00 036251 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5877	036251	201 02 0 00 036250 		MOVEI	2,.-1		;GET UUO PC
  5878	036252	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5879	036253	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5880	036254	254 04 0 00 036255 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5881	036255	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5882	036256	312 00 0 00 040372 		CAME	0,[21B8!0]		;CORRECT UUO STORED IN 40?
  5883	036257	334 00 0 00 000000 		SKIPA			;NO
  5884	036260	254 00 0 00 036267 		JRST	UUO22		;TESTS OK !
  5885						STOP1^
  5886	036261	254 04 0 00 036262 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5887	036262	254 00 0 00 036263 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5888						TGET^^
  5889	036263	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5890	036264	302 00 0 00 036243 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5891						STOP2^^
  5892	036265	254 04 0 00 036266 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5893	036266	254 00 0 00 036267 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5894	036267				UUO22:	XUUO	22B8,UUO23^
  5895					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5896					;ARE CORRECT.
  5897
  5898		022000	000000			MLUUO==22B8		;THE UUO TO BE EXECUTED
  5899						TSET^
  5900			036267			%X=.			;DEFINE %X TO SAVE
  5901	036267	201 00 0 00 036267 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5902	036270	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5903	036271	200 00 0 00 040373 	..0167:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5904	036272	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5905	036273	022000	000000			22B8			;EXECUTE A UUO
  5906	036274	254 04 0 00 036275 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5907	036275	201 02 0 00 036274 		MOVEI	2,.-1		;GET UUO PC
  5908	036276	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5909	036277	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5910	036300	254 04 0 00 036301 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5911	036301	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5912	036302	312 00 0 00 040374 		CAME	0,[22B8!0]		;CORRECT UUO STORED IN 40?
  5913	036303	334 00 0 00 000000 		SKIPA			;NO
  5914	036304	254 00 0 00 036313 		JRST	UUO23		;TESTS OK !
  5915						STOP1^
  5916	036305	254 04 0 00 036306 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5917	036306	254 00 0 00 036307 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5918						TGET^^
  5919	036307	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5920	036310	302 00 0 00 036267 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5921						STOP2^^
  5922	036311	254 04 0 00 036312 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5923	036312	254 00 0 00 036313 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5924	036313				UUO23:	XUUO	23B8,UUO24^
  5925					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5926					;ARE CORRECT.
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-10
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0139

  5927
  5928		023000	000000			MLUUO==23B8		;THE UUO TO BE EXECUTED
  5929						TSET^
  5930			036313			%X=.			;DEFINE %X TO SAVE
  5931	036313	201 00 0 00 036313 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5932	036314	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5933	036315	200 00 0 00 040375 	..0170:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5934	036316	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5935	036317	023000	000000			23B8			;EXECUTE A UUO
  5936	036320	254 04 0 00 036321 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5937	036321	201 02 0 00 036320 		MOVEI	2,.-1		;GET UUO PC
  5938	036322	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5939	036323	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5940	036324	254 04 0 00 036325 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5941	036325	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5942	036326	312 00 0 00 040376 		CAME	0,[23B8!0]		;CORRECT UUO STORED IN 40?
  5943	036327	334 00 0 00 000000 		SKIPA			;NO
  5944	036330	254 00 0 00 036337 		JRST	UUO24		;TESTS OK !
  5945						STOP1^
  5946	036331	254 04 0 00 036332 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5947	036332	254 00 0 00 036333 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5948						TGET^^
  5949	036333	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5950	036334	302 00 0 00 036313 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5951						STOP2^^
  5952	036335	254 04 0 00 036336 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5953	036336	254 00 0 00 036337 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5954	036337				UUO24:	XUUO	24B8,UUO25^
  5955					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5956					;ARE CORRECT.
  5957
  5958		024000	000000			MLUUO==24B8		;THE UUO TO BE EXECUTED
  5959						TSET^
  5960			036337			%X=.			;DEFINE %X TO SAVE
  5961	036337	201 00 0 00 036337 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5962	036340	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5963	036341	200 00 0 00 040377 	..0171:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5964	036342	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5965	036343	024000	000000			24B8			;EXECUTE A UUO
  5966	036344	254 04 0 00 036345 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5967	036345	201 02 0 00 036344 		MOVEI	2,.-1		;GET UUO PC
  5968	036346	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5969	036347	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  5970	036350	254 04 0 00 036351 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  5971	036351	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  5972	036352	312 00 0 00 040400 		CAME	0,[24B8!0]		;CORRECT UUO STORED IN 40?
  5973	036353	334 00 0 00 000000 		SKIPA			;NO
  5974	036354	254 00 0 00 036363 		JRST	UUO25		;TESTS OK !
  5975						STOP1^
  5976	036355	254 04 0 00 036356 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  5977	036356	254 00 0 00 036357 		JRST	.+1		;INTO RIGHT HALF OF 40^
  5978						TGET^^
  5979	036357	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  5980	036360	302 00 0 00 036337 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  5981						STOP2^^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-11
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0140

  5982	036361	254 04 0 00 036362 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  5983	036362	254 00 0 00 036363 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  5984	036363				UUO25:	XUUO	25B8,UUO26^
  5985					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  5986					;ARE CORRECT.
  5987
  5988		025000	000000			MLUUO==25B8		;THE UUO TO BE EXECUTED
  5989						TSET^
  5990			036363			%X=.			;DEFINE %X TO SAVE
  5991	036363	201 00 0 00 036363 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  5992	036364	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  5993	036365	200 00 0 00 040401 	..0172:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  5994	036366	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  5995	036367	025000	000000			25B8			;EXECUTE A UUO
  5996	036370	254 04 0 00 036371 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  5997	036371	201 02 0 00 036370 		MOVEI	2,.-1		;GET UUO PC
  5998	036372	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  5999	036373	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6000	036374	254 04 0 00 036375 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6001	036375	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6002	036376	312 00 0 00 040402 		CAME	0,[25B8!0]		;CORRECT UUO STORED IN 40?
  6003	036377	334 00 0 00 000000 		SKIPA			;NO
  6004	036400	254 00 0 00 036407 		JRST	UUO26		;TESTS OK !
  6005						STOP1^
  6006	036401	254 04 0 00 036402 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6007	036402	254 00 0 00 036403 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6008						TGET^^
  6009	036403	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6010	036404	302 00 0 00 036363 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6011						STOP2^^
  6012	036405	254 04 0 00 036406 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6013	036406	254 00 0 00 036407 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6014	036407				UUO26:	XUUO	26B8,UUO27^
  6015					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6016					;ARE CORRECT.
  6017
  6018		026000	000000			MLUUO==26B8		;THE UUO TO BE EXECUTED
  6019						TSET^
  6020			036407			%X=.			;DEFINE %X TO SAVE
  6021	036407	201 00 0 00 036407 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6022	036410	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6023	036411	200 00 0 00 040403 	..0173:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6024	036412	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6025	036413	026000	000000			26B8			;EXECUTE A UUO
  6026	036414	254 04 0 00 036415 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6027	036415	201 02 0 00 036414 		MOVEI	2,.-1		;GET UUO PC
  6028	036416	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6029	036417	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6030	036420	254 04 0 00 036421 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6031	036421	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6032	036422	312 00 0 00 040404 		CAME	0,[26B8!0]		;CORRECT UUO STORED IN 40?
  6033	036423	334 00 0 00 000000 		SKIPA			;NO
  6034	036424	254 00 0 00 036433 		JRST	UUO27		;TESTS OK !
  6035						STOP1^
  6036	036425	254 04 0 00 036426 		HALT	.+1		;UUO FAILED TO STORE MA BITS
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-12
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0141

  6037	036426	254 00 0 00 036427 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6038						TGET^^
  6039	036427	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6040	036430	302 00 0 00 036407 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6041						STOP2^^
  6042	036431	254 04 0 00 036432 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6043	036432	254 00 0 00 036433 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6044	036433				UUO27:	XUUO	27B8,UUO30^
  6045					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6046					;ARE CORRECT.
  6047
  6048		027000	000000			MLUUO==27B8		;THE UUO TO BE EXECUTED
  6049						TSET^
  6050			036433			%X=.			;DEFINE %X TO SAVE
  6051	036433	201 00 0 00 036433 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6052	036434	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6053	036435	200 00 0 00 040405 	..0174:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6054	036436	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6055	036437	027000	000000			27B8			;EXECUTE A UUO
  6056	036440	254 04 0 00 036441 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6057	036441	201 02 0 00 036440 		MOVEI	2,.-1		;GET UUO PC
  6058	036442	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6059	036443	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6060	036444	254 04 0 00 036445 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6061	036445	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6062	036446	312 00 0 00 040406 		CAME	0,[27B8!0]		;CORRECT UUO STORED IN 40?
  6063	036447	334 00 0 00 000000 		SKIPA			;NO
  6064	036450	254 00 0 00 036457 		JRST	UUO30		;TESTS OK !
  6065						STOP1^
  6066	036451	254 04 0 00 036452 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6067	036452	254 00 0 00 036453 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6068						TGET^^
  6069	036453	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6070	036454	302 00 0 00 036433 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6071						STOP2^^
  6072	036455	254 04 0 00 036456 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6073	036456	254 00 0 00 036457 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6074	036457				UUO30:	XUUO	30B8,UUO31^
  6075					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6076					;ARE CORRECT.
  6077
  6078		030000	000000			MLUUO==30B8		;THE UUO TO BE EXECUTED
  6079						TSET^
  6080			036457			%X=.			;DEFINE %X TO SAVE
  6081	036457	201 00 0 00 036457 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6082	036460	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6083	036461	200 00 0 00 040407 	..0175:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6084	036462	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6085	036463	030000	000000			30B8			;EXECUTE A UUO
  6086	036464	254 04 0 00 036465 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6087	036465	201 02 0 00 036464 		MOVEI	2,.-1		;GET UUO PC
  6088	036466	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6089	036467	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6090	036470	254 04 0 00 036471 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6091	036471	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-13
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0142

  6092	036472	312 00 0 00 040410 		CAME	0,[30B8!0]		;CORRECT UUO STORED IN 40?
  6093	036473	334 00 0 00 000000 		SKIPA			;NO
  6094	036474	254 00 0 00 036503 		JRST	UUO31		;TESTS OK !
  6095						STOP1^
  6096	036475	254 04 0 00 036476 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6097	036476	254 00 0 00 036477 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6098						TGET^^
  6099	036477	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6100	036500	302 00 0 00 036457 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6101						STOP2^^
  6102	036501	254 04 0 00 036502 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6103	036502	254 00 0 00 036503 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6104	036503				UUO31:	XUUO	31B8,UUO32^
  6105					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6106					;ARE CORRECT.
  6107
  6108		031000	000000			MLUUO==31B8		;THE UUO TO BE EXECUTED
  6109						TSET^
  6110			036503			%X=.			;DEFINE %X TO SAVE
  6111	036503	201 00 0 00 036503 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6112	036504	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6113	036505	200 00 0 00 040411 	..0176:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6114	036506	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6115	036507	031000	000000			31B8			;EXECUTE A UUO
  6116	036510	254 04 0 00 036511 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6117	036511	201 02 0 00 036510 		MOVEI	2,.-1		;GET UUO PC
  6118	036512	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6119	036513	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6120	036514	254 04 0 00 036515 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6121	036515	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6122	036516	312 00 0 00 040412 		CAME	0,[31B8!0]		;CORRECT UUO STORED IN 40?
  6123	036517	334 00 0 00 000000 		SKIPA			;NO
  6124	036520	254 00 0 00 036527 		JRST	UUO32		;TESTS OK !
  6125						STOP1^
  6126	036521	254 04 0 00 036522 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6127	036522	254 00 0 00 036523 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6128						TGET^^
  6129	036523	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6130	036524	302 00 0 00 036503 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6131						STOP2^^
  6132	036525	254 04 0 00 036526 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6133	036526	254 00 0 00 036527 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6134	036527				UUO32:	XUUO	32B8,UUO33^
  6135					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6136					;ARE CORRECT.
  6137
  6138		032000	000000			MLUUO==32B8		;THE UUO TO BE EXECUTED
  6139						TSET^
  6140			036527			%X=.			;DEFINE %X TO SAVE
  6141	036527	201 00 0 00 036527 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6142	036530	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6143	036531	200 00 0 00 040413 	..0177:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6144	036532	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6145	036533	032000	000000			32B8			;EXECUTE A UUO
  6146	036534	254 04 0 00 036535 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-14
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0143

  6147	036535	201 02 0 00 036534 		MOVEI	2,.-1		;GET UUO PC
  6148	036536	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6149	036537	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6150	036540	254 04 0 00 036541 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6151	036541	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6152	036542	312 00 0 00 040414 		CAME	0,[32B8!0]		;CORRECT UUO STORED IN 40?
  6153	036543	334 00 0 00 000000 		SKIPA			;NO
  6154	036544	254 00 0 00 036553 		JRST	UUO33		;TESTS OK !
  6155						STOP1^
  6156	036545	254 04 0 00 036546 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6157	036546	254 00 0 00 036547 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6158						TGET^^
  6159	036547	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6160	036550	302 00 0 00 036527 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6161						STOP2^^
  6162	036551	254 04 0 00 036552 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6163	036552	254 00 0 00 036553 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6164	036553				UUO33:	XUUO	33B8,UUO34^
  6165					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6166					;ARE CORRECT.
  6167
  6168		033000	000000			MLUUO==33B8		;THE UUO TO BE EXECUTED
  6169						TSET^
  6170			036553			%X=.			;DEFINE %X TO SAVE
  6171	036553	201 00 0 00 036553 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6172	036554	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6173	036555	200 00 0 00 040415 	..0200:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6174	036556	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6175	036557	033000	000000			33B8			;EXECUTE A UUO
  6176	036560	254 04 0 00 036561 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6177	036561	201 02 0 00 036560 		MOVEI	2,.-1		;GET UUO PC
  6178	036562	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6179	036563	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6180	036564	254 04 0 00 036565 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6181	036565	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6182	036566	312 00 0 00 040416 		CAME	0,[33B8!0]		;CORRECT UUO STORED IN 40?
  6183	036567	334 00 0 00 000000 		SKIPA			;NO
  6184	036570	254 00 0 00 036577 		JRST	UUO34		;TESTS OK !
  6185						STOP1^
  6186	036571	254 04 0 00 036572 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6187	036572	254 00 0 00 036573 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6188						TGET^^
  6189	036573	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6190	036574	302 00 0 00 036553 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6191						STOP2^^
  6192	036575	254 04 0 00 036576 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6193	036576	254 00 0 00 036577 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6194	036577				UUO34:	XUUO	34B8,UUO35^
  6195					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6196					;ARE CORRECT.
  6197
  6198		034000	000000			MLUUO==34B8		;THE UUO TO BE EXECUTED
  6199						TSET^
  6200			036577			%X=.			;DEFINE %X TO SAVE
  6201	036577	201 00 0 00 036577 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-15
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0144

  6202	036600	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6203	036601	200 00 0 00 040417 	..0201:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6204	036602	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6205	036603	034000	000000			34B8			;EXECUTE A UUO
  6206	036604	254 04 0 00 036605 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6207	036605	201 02 0 00 036604 		MOVEI	2,.-1		;GET UUO PC
  6208	036606	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6209	036607	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6210	036610	254 04 0 00 036611 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6211	036611	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6212	036612	312 00 0 00 040420 		CAME	0,[34B8!0]		;CORRECT UUO STORED IN 40?
  6213	036613	334 00 0 00 000000 		SKIPA			;NO
  6214	036614	254 00 0 00 036623 		JRST	UUO35		;TESTS OK !
  6215						STOP1^
  6216	036615	254 04 0 00 036616 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6217	036616	254 00 0 00 036617 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6218						TGET^^
  6219	036617	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6220	036620	302 00 0 00 036577 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6221						STOP2^^
  6222	036621	254 04 0 00 036622 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6223	036622	254 00 0 00 036623 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6224	036623				UUO35:	XUUO	35B8,UUO36^
  6225					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6226					;ARE CORRECT.
  6227
  6228		035000	000000			MLUUO==35B8		;THE UUO TO BE EXECUTED
  6229						TSET^
  6230			036623			%X=.			;DEFINE %X TO SAVE
  6231	036623	201 00 0 00 036623 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6232	036624	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6233	036625	200 00 0 00 040421 	..0202:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6234	036626	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6235	036627	035000	000000			35B8			;EXECUTE A UUO
  6236	036630	254 04 0 00 036631 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6237	036631	201 02 0 00 036630 		MOVEI	2,.-1		;GET UUO PC
  6238	036632	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6239	036633	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6240	036634	254 04 0 00 036635 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6241	036635	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6242	036636	312 00 0 00 040422 		CAME	0,[35B8!0]		;CORRECT UUO STORED IN 40?
  6243	036637	334 00 0 00 000000 		SKIPA			;NO
  6244	036640	254 00 0 00 036647 		JRST	UUO36		;TESTS OK !
  6245						STOP1^
  6246	036641	254 04 0 00 036642 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6247	036642	254 00 0 00 036643 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6248						TGET^^
  6249	036643	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6250	036644	302 00 0 00 036623 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6251						STOP2^^
  6252	036645	254 04 0 00 036646 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6253	036646	254 00 0 00 036647 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6254	036647				UUO36:	XUUO	36B8,UUO37^
  6255					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6256					;ARE CORRECT.
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-16
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0145

  6257
  6258		036000	000000			MLUUO==36B8		;THE UUO TO BE EXECUTED
  6259						TSET^
  6260			036647			%X=.			;DEFINE %X TO SAVE
  6261	036647	201 00 0 00 036647 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6262	036650	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6263	036651	200 00 0 00 040423 	..0203:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6264	036652	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6265	036653	036000	000000			36B8			;EXECUTE A UUO
  6266	036654	254 04 0 00 036655 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6267	036655	201 02 0 00 036654 		MOVEI	2,.-1		;GET UUO PC
  6268	036656	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6269	036657	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6270	036660	254 04 0 00 036661 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6271	036661	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6272	036662	312 00 0 00 040424 		CAME	0,[36B8!0]		;CORRECT UUO STORED IN 40?
  6273	036663	334 00 0 00 000000 		SKIPA			;NO
  6274	036664	254 00 0 00 036673 		JRST	UUO37		;TESTS OK !
  6275						STOP1^
  6276	036665	254 04 0 00 036666 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6277	036666	254 00 0 00 036667 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6278						TGET^^
  6279	036667	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6280	036670	302 00 0 00 036647 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6281						STOP2^^
  6282	036671	254 04 0 00 036672 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6283	036672	254 00 0 00 036673 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6284	036673				UUO37:	XUUO	37B8,UUOPC^
  6285					;EXECUTE AN LUUO AND CHECK THAT THE UUO AND PC STORED
  6286					;ARE CORRECT.
  6287
  6288		037000	000000			MLUUO==37B8		;THE UUO TO BE EXECUTED
  6289						TSET^
  6290			036673			%X=.			;DEFINE %X TO SAVE
  6291	036673	201 00 0 00 036673 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6292	036674	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6293	036675	200 00 0 00 040425 	..0204:	MOVE	0,[JSP 1,.+4]	;TRAP INSTRUCTION
  6294	036676	202 00 0 00 000041 		MOVEM	0,41		;IN TO 41
  6295	036677	037000	000000			37B8			;EXECUTE A UUO
  6296	036700	254 04 0 00 036701 		HALT	.+1		;UUO DID NOT TRAP TO FORTY
  6297	036701	201 02 0 00 036700 		MOVEI	2,.-1		;GET UUO PC
  6298	036702	405 01 0 00 777777 		ANDI	1,-1		;MASK FLAGS OUT
  6299	036703	312 01 0 00 000002 		CAME	1,2		;PC CORRECT ?
  6300	036704	254 04 0 00 036705 		HALT	.+1		;PC OF UUO NOT = TO PC STORED
  6301	036705	200 00 0 00 000040 		MOVE	0,40		;GET UUO !
  6302	036706	312 00 0 00 040426 		CAME	0,[37B8!0]		;CORRECT UUO STORED IN 40?
  6303	036707	334 00 0 00 000000 		SKIPA			;NO
  6304	036710	254 00 0 00 036720 		JRST	UUOPC		;TESTS OK !
  6305						STOP1^
  6306	036711	254 04 0 00 036712 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6307	036712	254 00 0 00 036713 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6308						TGET^^
  6309	036713	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6310	036714	302 00 0 00 036673 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6311						STOP2^^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 39-17
DSKAH1	MAC	31-Mar-78 11:13		LOCAL UUO TESTING (LUUO)                                                           SEQ 0146

  6312	036715	254 04 0 00 036716 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6313	036716	254 00 0 00 036717 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6314
  6315	036717	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0147

  6316					SUBTTL	TEST UUO STORING CORRECTLY
  6317					;TEST THE MA PORTION OF THE UUO TO SEE IF BITS 18-35 ARE STORED CORRECTLY
  6318					;ROUTINE ROTATES A BIT LEFT THROUGH THE MA OF THE UUO
  6319					;THEN DOES ALTERNATING PATTERN, ALL ONES AND ALL ZEROS
  6320
  6321			000001			X=1
  6322	036720				UUOPC:
  6323	036720				UUOPCA:
  6324						REPEAT	^D18,<
  6325						XUUOA	X
  6326						X=X_1
  6327					>
  6328
  6329						XUUOA	X^
  6330
  6331					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6332
  6333			000001			EFIELD==X		;"E" WE ARE TESTING FOR
  6334						TSET^
  6335			036720			%X=.			;DEFINE %X TO SAVE
  6336	036720	201 00 0 00 036720 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6337	036721	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6338	036722	200 00 0 00 040427 	..0205:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6339	036723	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6340	036724	001000	000001			1B8!X			;EXECUTE A UUO
  6341	036725	254 04 0 00 036726 	..0206:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6342	036726	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6343	036727	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6344	036730	302 00 0 00 000001 		CAIE	X		;MA BITS CORRECT?
  6345	036731				..0207:	STOP1^
  6346	036731	254 04 0 00 036732 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6347	036732	254 00 0 00 036733 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6348						TGET^^
  6349	036733	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6350	036734	302 00 0 00 036720 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6351						STOP2^^
  6352	036735	254 04 0 00 036736 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6353	036736	254 00 0 00 036737 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6354			000002			X=X_1
  6355
  6356
  6357						XUUOA	X^
  6358
  6359					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6360
  6361			000002			EFIELD==X		;"E" WE ARE TESTING FOR
  6362						TSET^
  6363			036737			%X=.			;DEFINE %X TO SAVE
  6364	036737	201 00 0 00 036737 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6365	036740	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6366	036741	200 00 0 00 040430 	..0210:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6367	036742	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6368	036743	001000	000002			1B8!X			;EXECUTE A UUO
  6369	036744	254 04 0 00 036745 	..0211:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6370	036745	200 00 0 00 000040 		MOVE	0,40		;GET UUO
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-1
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0148

  6371	036746	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6372	036747	302 00 0 00 000002 		CAIE	X		;MA BITS CORRECT?
  6373	036750				..0212:	STOP1^
  6374	036750	254 04 0 00 036751 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6375	036751	254 00 0 00 036752 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6376						TGET^^
  6377	036752	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6378	036753	302 00 0 00 036737 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6379						STOP2^^
  6380	036754	254 04 0 00 036755 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6381	036755	254 00 0 00 036756 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6382			000004			X=X_1
  6383
  6384
  6385						XUUOA	X^
  6386
  6387					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6388
  6389			000004			EFIELD==X		;"E" WE ARE TESTING FOR
  6390						TSET^
  6391			036756			%X=.			;DEFINE %X TO SAVE
  6392	036756	201 00 0 00 036756 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6393	036757	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6394	036760	200 00 0 00 040431 	..0213:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6395	036761	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6396	036762	001000	000004			1B8!X			;EXECUTE A UUO
  6397	036763	254 04 0 00 036764 	..0214:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6398	036764	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6399	036765	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6400	036766	302 00 0 00 000004 		CAIE	X		;MA BITS CORRECT?
  6401	036767				..0215:	STOP1^
  6402	036767	254 04 0 00 036770 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6403	036770	254 00 0 00 036771 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6404						TGET^^
  6405	036771	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6406	036772	302 00 0 00 036756 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6407						STOP2^^
  6408	036773	254 04 0 00 036774 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6409	036774	254 00 0 00 036775 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6410			000010			X=X_1
  6411
  6412
  6413						XUUOA	X^
  6414
  6415					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6416
  6417			000010			EFIELD==X		;"E" WE ARE TESTING FOR
  6418						TSET^
  6419			036775			%X=.			;DEFINE %X TO SAVE
  6420	036775	201 00 0 00 036775 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6421	036776	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6422	036777	200 00 0 00 040432 	..0216:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6423	037000	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6424	037001	001000	000010			1B8!X			;EXECUTE A UUO
  6425	037002	254 04 0 00 037003 	..0217:	HALT	.+1		;UUO DIDN'T TRAP TO 40
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-2
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0149

  6426	037003	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6427	037004	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6428	037005	302 00 0 00 000010 		CAIE	X		;MA BITS CORRECT?
  6429	037006				..0220:	STOP1^
  6430	037006	254 04 0 00 037007 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6431	037007	254 00 0 00 037010 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6432						TGET^^
  6433	037010	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6434	037011	302 00 0 00 036775 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6435						STOP2^^
  6436	037012	254 04 0 00 037013 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6437	037013	254 00 0 00 037014 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6438			000020			X=X_1
  6439
  6440
  6441						XUUOA	X^
  6442
  6443					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6444
  6445			000020			EFIELD==X		;"E" WE ARE TESTING FOR
  6446						TSET^
  6447			037014			%X=.			;DEFINE %X TO SAVE
  6448	037014	201 00 0 00 037014 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6449	037015	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6450	037016	200 00 0 00 040433 	..0221:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6451	037017	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6452	037020	001000	000020			1B8!X			;EXECUTE A UUO
  6453	037021	254 04 0 00 037022 	..0222:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6454	037022	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6455	037023	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6456	037024	302 00 0 00 000020 		CAIE	X		;MA BITS CORRECT?
  6457	037025				..0223:	STOP1^
  6458	037025	254 04 0 00 037026 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6459	037026	254 00 0 00 037027 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6460						TGET^^
  6461	037027	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6462	037030	302 00 0 00 037014 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6463						STOP2^^
  6464	037031	254 04 0 00 037032 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6465	037032	254 00 0 00 037033 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6466			000040			X=X_1
  6467
  6468
  6469						XUUOA	X^
  6470
  6471					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6472
  6473			000040			EFIELD==X		;"E" WE ARE TESTING FOR
  6474						TSET^
  6475			037033			%X=.			;DEFINE %X TO SAVE
  6476	037033	201 00 0 00 037033 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6477	037034	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6478	037035	200 00 0 00 040434 	..0224:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6479	037036	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6480	037037	001000	000040			1B8!X			;EXECUTE A UUO
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-3
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0150

  6481	037040	254 04 0 00 037041 	..0225:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6482	037041	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6483	037042	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6484	037043	302 00 0 00 000040 		CAIE	X		;MA BITS CORRECT?
  6485	037044				..0226:	STOP1^
  6486	037044	254 04 0 00 037045 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6487	037045	254 00 0 00 037046 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6488						TGET^^
  6489	037046	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6490	037047	302 00 0 00 037033 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6491						STOP2^^
  6492	037050	254 04 0 00 037051 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6493	037051	254 00 0 00 037052 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6494			000100			X=X_1
  6495
  6496
  6497						XUUOA	X^
  6498
  6499					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6500
  6501			000100			EFIELD==X		;"E" WE ARE TESTING FOR
  6502						TSET^
  6503			037052			%X=.			;DEFINE %X TO SAVE
  6504	037052	201 00 0 00 037052 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6505	037053	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6506	037054	200 00 0 00 040435 	..0227:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6507	037055	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6508	037056	001000	000100			1B8!X			;EXECUTE A UUO
  6509	037057	254 04 0 00 037060 	..0230:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6510	037060	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6511	037061	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6512	037062	302 00 0 00 000100 		CAIE	X		;MA BITS CORRECT?
  6513	037063				..0231:	STOP1^
  6514	037063	254 04 0 00 037064 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6515	037064	254 00 0 00 037065 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6516						TGET^^
  6517	037065	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6518	037066	302 00 0 00 037052 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6519						STOP2^^
  6520	037067	254 04 0 00 037070 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6521	037070	254 00 0 00 037071 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6522			000200			X=X_1
  6523
  6524
  6525						XUUOA	X^
  6526
  6527					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6528
  6529			000200			EFIELD==X		;"E" WE ARE TESTING FOR
  6530						TSET^
  6531			037071			%X=.			;DEFINE %X TO SAVE
  6532	037071	201 00 0 00 037071 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6533	037072	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6534	037073	200 00 0 00 040436 	..0232:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6535	037074	202 00 0 00 000041 		MOVEM	41		;INTO 41
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-4
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0151

  6536	037075	001000	000200			1B8!X			;EXECUTE A UUO
  6537	037076	254 04 0 00 037077 	..0233:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6538	037077	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6539	037100	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6540	037101	302 00 0 00 000200 		CAIE	X		;MA BITS CORRECT?
  6541	037102				..0234:	STOP1^
  6542	037102	254 04 0 00 037103 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6543	037103	254 00 0 00 037104 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6544						TGET^^
  6545	037104	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6546	037105	302 00 0 00 037071 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6547						STOP2^^
  6548	037106	254 04 0 00 037107 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6549	037107	254 00 0 00 037110 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6550			000400			X=X_1
  6551
  6552
  6553						XUUOA	X^
  6554
  6555					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6556
  6557			000400			EFIELD==X		;"E" WE ARE TESTING FOR
  6558						TSET^
  6559			037110			%X=.			;DEFINE %X TO SAVE
  6560	037110	201 00 0 00 037110 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6561	037111	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6562	037112	200 00 0 00 040437 	..0235:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6563	037113	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6564	037114	001000	000400			1B8!X			;EXECUTE A UUO
  6565	037115	254 04 0 00 037116 	..0236:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6566	037116	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6567	037117	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6568	037120	302 00 0 00 000400 		CAIE	X		;MA BITS CORRECT?
  6569	037121				..0237:	STOP1^
  6570	037121	254 04 0 00 037122 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6571	037122	254 00 0 00 037123 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6572						TGET^^
  6573	037123	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6574	037124	302 00 0 00 037110 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6575						STOP2^^
  6576	037125	254 04 0 00 037126 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6577	037126	254 00 0 00 037127 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6578			001000			X=X_1
  6579
  6580
  6581						XUUOA	X^
  6582
  6583					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6584
  6585			001000			EFIELD==X		;"E" WE ARE TESTING FOR
  6586						TSET^
  6587			037127			%X=.			;DEFINE %X TO SAVE
  6588	037127	201 00 0 00 037127 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6589	037130	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6590	037131	200 00 0 00 040440 	..0240:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-5
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0152

  6591	037132	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6592	037133	001000	001000			1B8!X			;EXECUTE A UUO
  6593	037134	254 04 0 00 037135 	..0241:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6594	037135	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6595	037136	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6596	037137	302 00 0 00 001000 		CAIE	X		;MA BITS CORRECT?
  6597	037140				..0242:	STOP1^
  6598	037140	254 04 0 00 037141 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6599	037141	254 00 0 00 037142 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6600						TGET^^
  6601	037142	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6602	037143	302 00 0 00 037127 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6603						STOP2^^
  6604	037144	254 04 0 00 037145 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6605	037145	254 00 0 00 037146 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6606			002000			X=X_1
  6607
  6608
  6609						XUUOA	X^
  6610
  6611					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6612
  6613			002000			EFIELD==X		;"E" WE ARE TESTING FOR
  6614						TSET^
  6615			037146			%X=.			;DEFINE %X TO SAVE
  6616	037146	201 00 0 00 037146 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6617	037147	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6618	037150	200 00 0 00 040441 	..0243:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6619	037151	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6620	037152	001000	002000			1B8!X			;EXECUTE A UUO
  6621	037153	254 04 0 00 037154 	..0244:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6622	037154	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6623	037155	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6624	037156	302 00 0 00 002000 		CAIE	X		;MA BITS CORRECT?
  6625	037157				..0245:	STOP1^
  6626	037157	254 04 0 00 037160 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6627	037160	254 00 0 00 037161 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6628						TGET^^
  6629	037161	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6630	037162	302 00 0 00 037146 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6631						STOP2^^
  6632	037163	254 04 0 00 037164 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6633	037164	254 00 0 00 037165 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6634			004000			X=X_1
  6635
  6636
  6637						XUUOA	X^
  6638
  6639					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6640
  6641			004000			EFIELD==X		;"E" WE ARE TESTING FOR
  6642						TSET^
  6643			037165			%X=.			;DEFINE %X TO SAVE
  6644	037165	201 00 0 00 037165 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6645	037166	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-6
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0153

  6646	037167	200 00 0 00 040442 	..0246:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6647	037170	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6648	037171	001000	004000			1B8!X			;EXECUTE A UUO
  6649	037172	254 04 0 00 037173 	..0247:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6650	037173	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6651	037174	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6652	037175	302 00 0 00 004000 		CAIE	X		;MA BITS CORRECT?
  6653	037176				..0250:	STOP1^
  6654	037176	254 04 0 00 037177 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6655	037177	254 00 0 00 037200 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6656						TGET^^
  6657	037200	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6658	037201	302 00 0 00 037165 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6659						STOP2^^
  6660	037202	254 04 0 00 037203 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6661	037203	254 00 0 00 037204 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6662			010000			X=X_1
  6663
  6664
  6665						XUUOA	X^
  6666
  6667					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6668
  6669			010000			EFIELD==X		;"E" WE ARE TESTING FOR
  6670						TSET^
  6671			037204			%X=.			;DEFINE %X TO SAVE
  6672	037204	201 00 0 00 037204 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6673	037205	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6674	037206	200 00 0 00 040443 	..0251:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6675	037207	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6676	037210	001000	010000			1B8!X			;EXECUTE A UUO
  6677	037211	254 04 0 00 037212 	..0252:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6678	037212	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6679	037213	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6680	037214	302 00 0 00 010000 		CAIE	X		;MA BITS CORRECT?
  6681	037215				..0253:	STOP1^
  6682	037215	254 04 0 00 037216 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6683	037216	254 00 0 00 037217 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6684						TGET^^
  6685	037217	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6686	037220	302 00 0 00 037204 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6687						STOP2^^
  6688	037221	254 04 0 00 037222 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6689	037222	254 00 0 00 037223 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6690			020000			X=X_1
  6691
  6692
  6693						XUUOA	X^
  6694
  6695					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6696
  6697			020000			EFIELD==X		;"E" WE ARE TESTING FOR
  6698						TSET^
  6699			037223			%X=.			;DEFINE %X TO SAVE
  6700	037223	201 00 0 00 037223 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-7
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0154

  6701	037224	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6702	037225	200 00 0 00 040444 	..0254:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6703	037226	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6704	037227	001000	020000			1B8!X			;EXECUTE A UUO
  6705	037230	254 04 0 00 037231 	..0255:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6706	037231	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6707	037232	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6708	037233	302 00 0 00 020000 		CAIE	X		;MA BITS CORRECT?
  6709	037234				..0256:	STOP1^
  6710	037234	254 04 0 00 037235 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6711	037235	254 00 0 00 037236 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6712						TGET^^
  6713	037236	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6714	037237	302 00 0 00 037223 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6715						STOP2^^
  6716	037240	254 04 0 00 037241 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6717	037241	254 00 0 00 037242 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6718			040000			X=X_1
  6719
  6720
  6721						XUUOA	X^
  6722
  6723					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6724
  6725			040000			EFIELD==X		;"E" WE ARE TESTING FOR
  6726						TSET^
  6727			037242			%X=.			;DEFINE %X TO SAVE
  6728	037242	201 00 0 00 037242 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6729	037243	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6730	037244	200 00 0 00 040445 	..0257:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6731	037245	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6732	037246	001000	040000			1B8!X			;EXECUTE A UUO
  6733	037247	254 04 0 00 037250 	..0260:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6734	037250	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6735	037251	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6736	037252	302 00 0 00 040000 		CAIE	X		;MA BITS CORRECT?
  6737	037253				..0261:	STOP1^
  6738	037253	254 04 0 00 037254 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6739	037254	254 00 0 00 037255 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6740						TGET^^
  6741	037255	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6742	037256	302 00 0 00 037242 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6743						STOP2^^
  6744	037257	254 04 0 00 037260 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6745	037260	254 00 0 00 037261 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6746			100000			X=X_1
  6747
  6748
  6749						XUUOA	X^
  6750
  6751					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6752
  6753			100000			EFIELD==X		;"E" WE ARE TESTING FOR
  6754						TSET^
  6755			037261			%X=.			;DEFINE %X TO SAVE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-8
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0155

  6756	037261	201 00 0 00 037261 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6757	037262	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6758	037263	200 00 0 00 040446 	..0262:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6759	037264	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6760	037265	001000	100000			1B8!X			;EXECUTE A UUO
  6761	037266	254 04 0 00 037267 	..0263:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6762	037267	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6763	037270	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6764	037271	302 00 0 00 100000 		CAIE	X		;MA BITS CORRECT?
  6765	037272				..0264:	STOP1^
  6766	037272	254 04 0 00 037273 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6767	037273	254 00 0 00 037274 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6768						TGET^^
  6769	037274	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6770	037275	302 00 0 00 037261 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6771						STOP2^^
  6772	037276	254 04 0 00 037277 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6773	037277	254 00 0 00 037300 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6774			200000			X=X_1
  6775
  6776
  6777						XUUOA	X^
  6778
  6779					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6780
  6781			200000			EFIELD==X		;"E" WE ARE TESTING FOR
  6782						TSET^
  6783			037300			%X=.			;DEFINE %X TO SAVE
  6784	037300	201 00 0 00 037300 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6785	037301	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6786	037302	200 00 0 00 040447 	..0265:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6787	037303	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6788	037304	001000	200000			1B8!X			;EXECUTE A UUO
  6789	037305	254 04 0 00 037306 	..0266:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6790	037306	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6791	037307	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6792	037310	302 00 0 00 200000 		CAIE	X		;MA BITS CORRECT?
  6793	037311				..0267:	STOP1^
  6794	037311	254 04 0 00 037312 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6795	037312	254 00 0 00 037313 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6796						TGET^^
  6797	037313	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6798	037314	302 00 0 00 037300 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6799						STOP2^^
  6800	037315	254 04 0 00 037316 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6801	037316	254 00 0 00 037317 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6802			400000			X=X_1
  6803
  6804
  6805						XUUOA	X^
  6806
  6807					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6808
  6809			400000			EFIELD==X		;"E" WE ARE TESTING FOR
  6810						TSET^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-9
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0156

  6811			037317			%X=.			;DEFINE %X TO SAVE
  6812	037317	201 00 0 00 037317 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6813	037320	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6814	037321	200 00 0 00 040450 	..0270:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6815	037322	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6816	037323	001000	400000			1B8!X			;EXECUTE A UUO
  6817	037324	254 04 0 00 037325 	..0271:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6818	037325	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6819	037326	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6820	037327	302 00 0 00 400000 		CAIE	X		;MA BITS CORRECT?
  6821	037330				..0272:	STOP1^
  6822	037330	254 04 0 00 037331 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6823	037331	254 00 0 00 037332 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6824						TGET^^
  6825	037332	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6826	037333	302 00 0 00 037317 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6827						STOP2^^
  6828	037334	254 04 0 00 037335 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6829	037335	254 00 0 00 037336 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6830		000001	000000			X=X_1
  6831
  6832			777777			X=777777
  6833						XUUOA	X^
  6834
  6835					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6836
  6837			777777			EFIELD==X		;"E" WE ARE TESTING FOR
  6838						TSET^
  6839			037336			%X=.			;DEFINE %X TO SAVE
  6840	037336	201 00 0 00 037336 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6841	037337	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6842	037340	200 00 0 00 040451 	..0273:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6843	037341	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6844	037342	001000	777777			1B8!X			;EXECUTE A UUO
  6845	037343	254 04 0 00 037344 	..0274:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6846	037344	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6847	037345	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6848	037346	302 00 0 00 777777 		CAIE	X		;MA BITS CORRECT?
  6849	037347				..0275:	STOP1^
  6850	037347	254 04 0 00 037350 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6851	037350	254 00 0 00 037351 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6852						TGET^^
  6853	037351	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6854	037352	302 00 0 00 037336 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6855						STOP2^^
  6856	037353	254 04 0 00 037354 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6857	037354	254 00 0 00 037355 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6858
  6859			000000			X=0
  6860						XUUOA	X^
  6861
  6862					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6863
  6864			000000			EFIELD==X		;"E" WE ARE TESTING FOR
  6865						TSET^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-10
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0157

  6866			037355			%X=.			;DEFINE %X TO SAVE
  6867	037355	201 00 0 00 037355 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6868	037356	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6869	037357	200 00 0 00 040452 	..0276:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6870	037360	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6871	037361	001000	000000			1B8!X			;EXECUTE A UUO
  6872	037362	254 04 0 00 037363 	..0277:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6873	037363	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6874	037364	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6875	037365	302 00 0 00 000000 		CAIE	X		;MA BITS CORRECT?
  6876	037366				..0300:	STOP1^
  6877	037366	254 04 0 00 037367 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6878	037367	254 00 0 00 037370 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6879						TGET^^
  6880	037370	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6881	037371	302 00 0 00 037355 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6882						STOP2^^
  6883	037372	254 04 0 00 037373 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6884	037373	254 00 0 00 037374 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6885
  6886			252525			X=252525
  6887						XUUOA	X^
  6888
  6889					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6890
  6891			252525			EFIELD==X		;"E" WE ARE TESTING FOR
  6892						TSET^
  6893			037374			%X=.			;DEFINE %X TO SAVE
  6894	037374	201 00 0 00 037374 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6895	037375	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6896	037376	200 00 0 00 040453 	..0301:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6897	037377	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6898	037400	001000	252525			1B8!X			;EXECUTE A UUO
  6899	037401	254 04 0 00 037402 	..0302:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6900	037402	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6901	037403	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6902	037404	302 00 0 00 252525 		CAIE	X		;MA BITS CORRECT?
  6903	037405				..0303:	STOP1^
  6904	037405	254 04 0 00 037406 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6905	037406	254 00 0 00 037407 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6906						TGET^^
  6907	037407	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6908	037410	302 00 0 00 037374 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6909						STOP2^^
  6910	037411	254 04 0 00 037412 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6911	037412	254 00 0 00 037413 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6912
  6913			525252			X=525252
  6914						XUUOA	X^
  6915
  6916					;CHECK THE "E" OF THE UUO STORED IS CORRECT.
  6917
  6918			525252			EFIELD==X		;"E" WE ARE TESTING FOR
  6919						TSET^
  6920			037413			%X=.			;DEFINE %X TO SAVE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 40-11
DSKAH1	MAC	31-Mar-78 11:13		TEST UUO STORING CORRECTLY                                                         SEQ 0158

  6921	037413	201 00 0 00 037413 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  6922	037414	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  6923	037415	200 00 0 00 040454 	..0304:	MOVE	[JRST	.+4]	;SET A TRAP INSTRUCTION
  6924	037416	202 00 0 00 000041 		MOVEM	41		;INTO 41
  6925	037417	001000	525252			1B8!X			;EXECUTE A UUO
  6926	037420	254 04 0 00 037421 	..0305:	HALT	.+1		;UUO DIDN'T TRAP TO 40
  6927	037421	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6928	037422	405 00 0 00 777777 		ANDI	0,-1		;MASK OUT UUO FOR MA BITS
  6929	037423	302 00 0 00 525252 		CAIE	X		;MA BITS CORRECT?
  6930	037424				..0306:	STOP1^
  6931	037424	254 04 0 00 037425 		HALT	.+1		;UUO FAILED TO STORE MA BITS
  6932	037425	254 00 0 00 037426 		JRST	.+1		;INTO RIGHT HALF OF 40^
  6933						TGET^^
  6934	037426	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  6935	037427	302 00 0 00 037413 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  6936						STOP2^^
  6937	037430	254 04 0 00 037431 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  6938	037431	254 00 0 00 037432 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  6939			000000			X=0
  6940	037432	255 00 0 00 000000 		JFCL
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 41
DSKAH1	MAC	31-Mar-78 11:13		TEST CLEARING OF INDEX AND INDIRECT BITS ON UUO                                    SEQ 0159

  6941					SUBTTL	TEST CLEARING OF INDEX AND INDIRECT BITS ON UUO
  6942
  6943					;TEST THAT THE INDEX BITS ARE CLEARED WHEN EXECUTING A UUO
  6944
  6945	037433				UUOIND:	CLRBTH^
  6946	037433	700 04 0 00 261600 		CLRAPR
  6947	037434	700 14 0 00 031577 		CLRPI^
  6948	037435	400 17 0 00 000000 		SETZ	17,		;CLEAR INDEX FIELD
  6949	037436	200 00 0 00 040455 		MOVE	[JRST .+4]	;SET UP UUO TRAP INSTR.
  6950	037437	202 00 0 00 000041 		MOVEM	41		;INTO TRAP LOCATION
  6951	037440	001017	000000			1B8!(17)		;EXECUTE A UUO WITH INDEXING
  6952	037441	254 04 0 00 037442 		HALT	.+1		;UUO DID NOT TRAP
  6953	037442	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6954	037443	603 00 0 00 000017 		TLNE	0,17		;INDEX FIELD CLEAR?
  6955						STOP^
  6956	037444	254 04 0 00 037445 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  6957	037445	254 00 0 00 037446 		JRST	.+1		;WITH JRST BACK^
  6958
  6959					;TEST THAT THE INDIRECT BIT IS CLEARED WHEN EXECUTING A UUO
  6960
  6961	037446				UUOINX:	CLRBTH^
  6962	037446	700 04 0 00 261600 		CLRAPR
  6963	037447	700 14 0 00 031577 		CLRPI^
  6964	037450	403 17 0 00 000000 		SETZB	17,0		;CLEAR INDEX FIELD
  6965	037451	200 00 0 00 040456 		MOVE	[JRST .+4]	;SET UUO TRAP INSTR.
  6966	037452	202 00 0 00 000041 		MOVEM	41		;INTO TRAP LOCATION
  6967	037453	001020	000017			1B8!@17			;EXECUTE A UUO WITH INDIRECTING
  6968	037454	254 04 0 00 037455 		HALT	.+1		;UUO DID NOT TRAP
  6969	037455	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6970	037456	603 00 0 00 000020 		TLNE	0,20		;INDIRECT BIT CLEAR?
  6971						STOP^
  6972	037457	254 04 0 00 037460 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  6973	037460	254 00 0 00 037461 		JRST	.+1		;WITH JRST BACK^
  6974
  6975					;TEST THAT BOTH INDEX AND INDIRECT BITS CLEAR WHEN EXECUTING A UUO
  6976
  6977	037461				UUOBTH:	CLRBTH^
  6978	037461	700 04 0 00 261600 		CLRAPR
  6979	037462	700 14 0 00 031577 		CLRPI^
  6980	037463	403 17 0 00 000000 		SETZB	17,0		;CLEAR INDEX FIELD
  6981	037464	200 00 0 00 040457 		MOVE	[JRST .+4]	;SET UP TRAP INSTR.
  6982	037465	202 00 0 00 000041 		MOVEM	41		;INTO TRAP LOCATION
  6983	037466	001037	000017			1B8!@17(17)		;EXECUTE WITH INDIRECT AND INDEX
  6984	037467	254 04 0 00 037470 		HALT	.+1		;UUO DID NOT TRAP
  6985	037470	200 00 0 00 000040 		MOVE	0,40		;GET UUO
  6986	037471	603 00 0 00 000037 		TLNE	0,37		;INDIRECT OR INDEX BITS STILL SET?
  6987						STOP^
  6988	037472	254 04 0 00 037473 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  6989	037473	254 00 0 00 037474 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 42
DSKAH1	MAC	31-Mar-78 11:13		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0160

  6990					SUBTTL	TEST UUOS OUT OF FAST MEMORY
  6991
  6992						FMUUO	0^
  6993					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  6994					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  6995					;CORRECT PC.
  6996
  6997			000000			AC=0			;TESTED AC
  6998
  6999						TSET^
  7000			037474			%X=.			;DEFINE %X TO SAVE
  7001	037474	201 00 0 00 037474 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7002	037475	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7003	037476	200 00 0 00 040332 		MOVE	0,[XWD 1000,0]	;SET UP UUO INTO AC 0 TO EXECUTE
  7004	037477	200 13 0 00 040460 		MOVE	13,[JSP 11,..0307] ;SET UP UUO TRAP INSTRUCTION
  7005	037500	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7006	037501	200 01 0 00 040461 		MOVE	0+1,[JRST ..0310] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7007	037502	254 00 0 00 000000 		JRST	0		;GO EXECUTE  UUO
  7008	037503	254 04 0 00 037504 	..0310:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7009	037504	254 00 0 00 037505 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
  7010	037505	405 11 0 00 777777 	..0307:	ANDI	11,-1		;MASK FLAGS
  7011	037506	302 11 0 00 000001 		CAIE	11,0+1		;PC STORED SHOULD = 0 +1
  7012						STOP^
  7013	037507	254 04 0 00 037510 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7014	037510	254 00 0 00 037511 		JRST	.+1		;WITH JRST BACK^
  7015						TGET^^
  7016	037511	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7017	037512	302 00 0 00 037474 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7018						STOP2^^
  7019	037513	254 04 0 00 037514 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7020	037514	254 00 0 00 037515 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7021
  7022						FMUUO	1^
  7023					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  7024					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  7025					;CORRECT PC.
  7026
  7027			000001			AC=1			;TESTED AC
  7028
  7029						TSET^
  7030			037515			%X=.			;DEFINE %X TO SAVE
  7031	037515	201 00 0 00 037515 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7032	037516	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7033	037517	200 01 0 00 040332 		MOVE	1,[XWD 1000,0]	;SET UP UUO INTO AC 1 TO EXECUTE
  7034	037520	200 13 0 00 040462 		MOVE	13,[JSP 11,..0311] ;SET UP UUO TRAP INSTRUCTION
  7035	037521	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7036	037522	200 02 0 00 040463 		MOVE	1+1,[JRST ..0312] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7037	037523	254 00 0 00 000001 		JRST	1		;GO EXECUTE  UUO
  7038	037524	254 04 0 00 037525 	..0312:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7039	037525	254 00 0 00 037526 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
  7040	037526	405 11 0 00 777777 	..0311:	ANDI	11,-1		;MASK FLAGS
  7041	037527	302 11 0 00 000002 		CAIE	11,1+1		;PC STORED SHOULD = 1 +1
  7042						STOP^
  7043	037530	254 04 0 00 037531 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7044	037531	254 00 0 00 037532 		JRST	.+1		;WITH JRST BACK^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 42-1
DSKAH1	MAC	31-Mar-78 11:13		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0161

  7045						TGET^^
  7046	037532	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7047	037533	302 00 0 00 037515 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7048						STOP2^^
  7049	037534	254 04 0 00 037535 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7050	037535	254 00 0 00 037536 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7051
  7052						FMUUO	2^
  7053					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  7054					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  7055					;CORRECT PC.
  7056
  7057			000002			AC=2			;TESTED AC
  7058
  7059						TSET^
  7060			037536			%X=.			;DEFINE %X TO SAVE
  7061	037536	201 00 0 00 037536 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7062	037537	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7063	037540	200 02 0 00 040332 		MOVE	2,[XWD 1000,0]	;SET UP UUO INTO AC 2 TO EXECUTE
  7064	037541	200 13 0 00 040464 		MOVE	13,[JSP 11,..0313] ;SET UP UUO TRAP INSTRUCTION
  7065	037542	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7066	037543	200 03 0 00 040465 		MOVE	2+1,[JRST ..0314] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7067	037544	254 00 0 00 000002 		JRST	2		;GO EXECUTE  UUO
  7068	037545	254 04 0 00 037546 	..0314:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7069	037546	254 00 0 00 037547 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
  7070	037547	405 11 0 00 777777 	..0313:	ANDI	11,-1		;MASK FLAGS
  7071	037550	302 11 0 00 000003 		CAIE	11,2+1		;PC STORED SHOULD = 2 +1
  7072						STOP^
  7073	037551	254 04 0 00 037552 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7074	037552	254 00 0 00 037553 		JRST	.+1		;WITH JRST BACK^
  7075						TGET^^
  7076	037553	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7077	037554	302 00 0 00 037536 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7078						STOP2^^
  7079	037555	254 04 0 00 037556 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7080	037556	254 00 0 00 037557 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7081
  7082						FMUUO	4^
  7083					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  7084					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  7085					;CORRECT PC.
  7086
  7087			000004			AC=4			;TESTED AC
  7088
  7089						TSET^
  7090			037557			%X=.			;DEFINE %X TO SAVE
  7091	037557	201 00 0 00 037557 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7092	037560	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7093	037561	200 04 0 00 040332 		MOVE	4,[XWD 1000,0]	;SET UP UUO INTO AC 4 TO EXECUTE
  7094	037562	200 13 0 00 040466 		MOVE	13,[JSP 11,..0315] ;SET UP UUO TRAP INSTRUCTION
  7095	037563	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7096	037564	200 05 0 00 040467 		MOVE	4+1,[JRST ..0316] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7097	037565	254 00 0 00 000004 		JRST	4		;GO EXECUTE  UUO
  7098	037566	254 04 0 00 037567 	..0316:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7099	037567	254 00 0 00 037570 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 42-2
DSKAH1	MAC	31-Mar-78 11:13		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0162

  7100	037570	405 11 0 00 777777 	..0315:	ANDI	11,-1		;MASK FLAGS
  7101	037571	302 11 0 00 000005 		CAIE	11,4+1		;PC STORED SHOULD = 4 +1
  7102						STOP^
  7103	037572	254 04 0 00 037573 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7104	037573	254 00 0 00 037574 		JRST	.+1		;WITH JRST BACK^
  7105						TGET^^
  7106	037574	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7107	037575	302 00 0 00 037557 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7108						STOP2^^
  7109	037576	254 04 0 00 037577 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7110	037577	254 00 0 00 037600 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7111
  7112						FMUUO	5^
  7113					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  7114					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  7115					;CORRECT PC.
  7116
  7117			000005			AC=5			;TESTED AC
  7118
  7119						TSET^
  7120			037600			%X=.			;DEFINE %X TO SAVE
  7121	037600	201 00 0 00 037600 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7122	037601	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7123	037602	200 05 0 00 040332 		MOVE	5,[XWD 1000,0]	;SET UP UUO INTO AC 5 TO EXECUTE
  7124	037603	200 13 0 00 040470 		MOVE	13,[JSP 11,..0317] ;SET UP UUO TRAP INSTRUCTION
  7125	037604	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7126	037605	200 06 0 00 040471 		MOVE	5+1,[JRST ..0320] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7127	037606	254 00 0 00 000005 		JRST	5		;GO EXECUTE  UUO
  7128	037607	254 04 0 00 037610 	..0320:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7129	037610	254 00 0 00 037611 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
  7130	037611	405 11 0 00 777777 	..0317:	ANDI	11,-1		;MASK FLAGS
  7131	037612	302 11 0 00 000006 		CAIE	11,5+1		;PC STORED SHOULD = 5 +1
  7132						STOP^
  7133	037613	254 04 0 00 037614 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7134	037614	254 00 0 00 037615 		JRST	.+1		;WITH JRST BACK^
  7135						TGET^^
  7136	037615	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7137	037616	302 00 0 00 037600 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7138						STOP2^^
  7139	037617	254 04 0 00 037620 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7140	037620	254 00 0 00 037621 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7141
  7142						FMUUO	10^
  7143					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  7144					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  7145					;CORRECT PC.
  7146
  7147			000010			AC=10			;TESTED AC
  7148
  7149						TSET^
  7150			037621			%X=.			;DEFINE %X TO SAVE
  7151	037621	201 00 0 00 037621 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7152	037622	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7153	037623	200 10 0 00 040332 		MOVE	10,[XWD 1000,0]	;SET UP UUO INTO AC 10 TO EXECUTE
  7154	037624	200 13 0 00 040472 		MOVE	13,[JSP 11,..0321] ;SET UP UUO TRAP INSTRUCTION
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 42-3
DSKAH1	MAC	31-Mar-78 11:13		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0163

  7155	037625	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7156	037626	200 11 0 00 040473 		MOVE	10+1,[JRST ..0322] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7157	037627	254 00 0 00 000010 		JRST	10		;GO EXECUTE  UUO
  7158	037630	254 04 0 00 037631 	..0322:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7159	037631	254 00 0 00 037632 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
  7160	037632	405 11 0 00 777777 	..0321:	ANDI	11,-1		;MASK FLAGS
  7161	037633	302 11 0 00 000011 		CAIE	11,10+1		;PC STORED SHOULD = 10 +1
  7162						STOP^
  7163	037634	254 04 0 00 037635 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7164	037635	254 00 0 00 037636 		JRST	.+1		;WITH JRST BACK^
  7165						TGET^^
  7166	037636	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7167	037637	302 00 0 00 037621 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7168						STOP2^^
  7169	037640	254 04 0 00 037641 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7170	037641	254 00 0 00 037642 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7171
  7172						FMUUO	12^
  7173					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  7174					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  7175					;CORRECT PC.
  7176
  7177			000012			AC=12			;TESTED AC
  7178
  7179						TSET^
  7180			037642			%X=.			;DEFINE %X TO SAVE
  7181	037642	201 00 0 00 037642 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7182	037643	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7183	037644	200 12 0 00 040332 		MOVE	12,[XWD 1000,0]	;SET UP UUO INTO AC 12 TO EXECUTE
  7184	037645	200 13 0 00 040474 		MOVE	13,[JSP 11,..0323] ;SET UP UUO TRAP INSTRUCTION
  7185	037646	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7186	037647	200 13 0 00 040475 		MOVE	12+1,[JRST ..0324] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7187	037650	254 00 0 00 000012 		JRST	12		;GO EXECUTE  UUO
  7188	037651	254 04 0 00 037652 	..0324:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7189	037652	254 00 0 00 037653 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
  7190	037653	405 11 0 00 777777 	..0323:	ANDI	11,-1		;MASK FLAGS
  7191	037654	302 11 0 00 000013 		CAIE	11,12+1		;PC STORED SHOULD = 12 +1
  7192						STOP^
  7193	037655	254 04 0 00 037656 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7194	037656	254 00 0 00 037657 		JRST	.+1		;WITH JRST BACK^
  7195						TGET^^
  7196	037657	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7197	037660	302 00 0 00 037642 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7198						STOP2^^
  7199	037661	254 04 0 00 037662 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7200	037662	254 00 0 00 037663 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7201
  7202						FMUUO	17^
  7203					;EXECUTE UUO'S OUT OF FAST MEMORY LOCATIONS 0,1,2,4,5,10,12, AND 17
  7204					;CHECK FIRST THAT THE UUO TRAPPED AND SECONDLY THAT IT STORED THE
  7205					;CORRECT PC.
  7206
  7207			000017			AC=17			;TESTED AC
  7208
  7209						TSET^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 42-4
DSKAH1	MAC	31-Mar-78 11:13		TEST UUOS OUT OF FAST MEMORY                                                       SEQ 0164

  7210			037663			%X=.			;DEFINE %X TO SAVE
  7211	037663	201 00 0 00 037663 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7212	037664	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7213	037665	200 17 0 00 040332 		MOVE	17,[XWD 1000,0]	;SET UP UUO INTO AC 17 TO EXECUTE
  7214	037666	200 13 0 00 040476 		MOVE	13,[JSP 11,..0325] ;SET UP UUO TRAP INSTRUCTION
  7215	037667	202 13 0 00 000041 		MOVEM	13,41		;INTO LOCATION 41
  7216	037670	200 00 0 00 040477 		MOVE	17+1,[JRST ..0326] ;SET UP TRAP INSTRUCTION INCASE UUO DOES NOT TRAP
  7217	037671	254 00 0 00 000017 		JRST	17		;GO EXECUTE  UUO
  7218	037672	254 04 0 00 037673 	..0326:	HALT	.+1		;UUO DID NOT TRAP FROM FAST MEMORY
  7219	037673	254 00 0 00 037674 		JRST	.+1		;LOOP TO %FMUUO IF ERROR
  7220	037674	405 11 0 00 777777 	..0325:	ANDI	11,-1		;MASK FLAGS
  7221	037675	302 11 0 00 000020 		CAIE	11,17+1		;PC STORED SHOULD = 17 +1
  7222						STOP^
  7223	037676	254 04 0 00 037677 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7224	037677	254 00 0 00 037700 		JRST	.+1		;WITH JRST BACK^
  7225						TGET^^
  7226	037700	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7227	037701	302 00 0 00 037663 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7228						STOP2^^
  7229	037702	254 04 0 00 037703 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7230	037703	254 00 0 00 037704 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 43
DSKAH1	MAC	31-Mar-78 11:13		SIMPLE MUUO TEST                                                                   SEQ 0165

  7231					SUBTTL	SIMPLE MUUO TEST
  7232					;TEST MONITOR UUO "0" TO SEE IF IT TRAPS AT ALL
  7233					;TRAPPING TO 40 CAUSES IT TO HALT. TRAPPING TO SUPERVISOR KERNAL PUBLIC
  7234					;OR CONCEALED IS ALLOWED AND IS CONSIDERED CORRECT.
  7235
  7236						TSET^
  7237			037704			%X=.			;DEFINE %X TO SAVE
  7238	037704	201 00 0 00 037704 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7239	037705	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7240	037706	265 00 0 00 037707 		JSP	.+1		;GET FLAGS
  7241	037707	603 00 0 00 010000 		TLNE	USERF		;IF USER MODE THEN EXIT
  7242	037710	254 00 0 00 037756 		JRST	USRIO0		;SKIP IF USER MODE TO USER IO TEST
  7243
  7244						CLRBTH^
  7245	037711	700 04 0 00 261600 		CLRAPR
  7246	037712	700 14 0 00 031577 		CLRPI^
  7247	037713	201 00 0 00 037736 	XMUUO:	MOVEI	XMUPC		;SET UP A TRAP FOR MONITOR UUO
  7248	037714	202 00 0 00 000430 		MOVEM	KNTRP		;INTO A POSSIBLE TRAP LOCATIONS
  7249	037715	202 00 0 00 000431 		MOVEM	KTRP
  7250	037716	202 00 0 00 000432 		MOVEM	SNTRP
  7251	037717	202 00 0 00 000433 		MOVEM	STRP
  7252	037720	202 00 0 00 000434 		MOVEM	CNTRP
  7253	037721	202 00 0 00 000435 		MOVEM	CTRP
  7254	037722	202 00 0 00 000436 		MOVEM	PNTRP
  7255	037723	202 00 0 00 000437 		MOVEM	PTRP
  7256	037724	476 00 0 00 000424 		SETOM	MUUO		;SET THE TRAP LOCATIONS
  7257	037725	476 00 0 00 000425 		SETOM	MUUO+1		;TO ENABLE CHECKING
  7258	037726	200 00 0 00 040500 		MOVE	[JRST	MUHLT]	;SET UP A LUUO TRAP HALT
  7259	037727	202 00 0 00 000041 		MOVEM	41
  7260	037730	402 00 0 00 037731 		SETZM	.+1		;MAKE A MUUO IN THE NEXT LOCATION
  7261	037731	000000	000000		XMUUO0:	0			;THIS IS A MONITOR UUO
  7262	037732	254 04 0 00 037733 		HALT	.+1		;THE UUO DIDN'T TRAP
  7263	037733	254 04 0 00 037734 		HALT	.+1		;MUUO SKIPPED?
  7264	037734	254 04 0 00 037735 	MUHLT:	HALT	.+1		;UUO TRAPPED TO 40(DECODE AS LUUO?)
  7265	037735	254 04 0 00 037736 		HALT	.+1		;SPARE HALT
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 44
DSKAH1	MAC	31-Mar-78 11:13		SIMPLE MUUO TEST                                                                   SEQ 0166

  7266	037736				XMUPC:	TGET^
  7267	037736	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7268	037737	302 00 0 00 037704 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7269						STOP2^^
  7270	037740	254 04 0 00 037741 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7271	037741	254 00 0 00 037742 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7272	037742	332 00 0 00 000424 		SKIPE	MUUO		;MON UUO "0" DIDN'T STORE A ZERO
  7273						STOP^
  7274	037743	254 04 0 00 037744 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7275	037744	254 00 0 00 037745 		JRST	.+1		;WITH JRST BACK^
  7276	037745	550 00 0 00 000425 		HRRZ	MUUO+1		;GET THE STORED PC
  7277	037746	302 00 0 00 037732 		CAIE	XMUUO0+1	;DID WE STORE THE CORRECT PC?
  7278						STOP^
  7279	037747	254 04 0 00 037750 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7280	037750	254 00 0 00 037751 		JRST	.+1		;WITH JRST BACK^
  7281	037751	255 00 0 00 000000 		JFCL
  7282						TGET^
  7283	037752	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7284	037753	302 00 0 00 037704 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7285						STOP2^^
  7286	037754	254 04 0 00 037755 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7287	037755	254 00 0 00 037756 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 45
DSKAH1	MAC	31-Mar-78 11:13		TEST THE USER IOT BIT                                                              SEQ 0167

  7288					SUBTTL	TEST THE USER IOT BIT
  7289					;CHECK CLEARING AND SETTING OF THE USER IOT BIT
  7290
  7291	037756				USRIO0:	TSET^
  7292			037756			%X=.			;DEFINE %X TO SAVE
  7293	037756	201 00 0 00 037756 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7294	037757	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7295						CLRBTH^
  7296	037760	700 04 0 00 261600 		CLRAPR
  7297	037761	700 14 0 00 031577 		CLRPI^
  7298	037762	336 00 0 00 030042 		SKIPN	MONFLG		;IN SPECIAL USER MODE?
  7299	037763	254 00 0 00 040017 		JRST	ENDIT		;YES LOOP TEST
  7300	037764	254 02 1 00 037765 		JRSTF	@.+1		;CLEAR BITS
  7301	037765	000000	037766			0,,.+1			;PC AND FLAGS
  7302	037766	265 00 0 00 037767 		JSP	.+1		;CHECK WHY USER I/O FLAG IS SET
  7303	037767	603 00 0 00 004000 		TLNE	EXIOT		;SHOULD BE CLEAR VIA JRSTF
  7304						STOP^
  7305	037770	254 04 0 00 037771 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7306	037771	254 00 0 00 037772 		JRST	.+1		;WITH JRST BACK^
  7307						TGET^
  7308	037772	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7309	037773	302 00 0 00 037756 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7310						STOP2^^
  7311	037774	254 04 0 00 037775 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7312	037775	254 00 0 00 037776 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7313	037776	336 00 0 00 030042 		SKIPN	MONFLG		;IN USER MODE?
  7314	037777	254 00 0 00 040017 		JRST	ENDIT		;YES CANNOT SET USER IO FLAG
  7315									;IN USER MODE
  7316
  7317	040000				USRIO1:	TSET^
  7318			040000			%X=.			;DEFINE %X TO SAVE
  7319	040000	201 00 0 00 040000 		MOVEI	%X		;SAVE THIS PC IN CASE OF WILD TRANSFER
  7320	040001	202 00 0 00 040506 		MOVEM	TNUMB#		;BECAUSE OF PC MOD OR INTERRUPT^
  7321						CLRBTH^
  7322	040002	700 04 0 00 261600 		CLRAPR
  7323	040003	700 14 0 00 031577 		CLRPI^
  7324	040004	400 00 0 00 000000 		SETZ	0		;CLEAR 0
  7325	040005	200 01 0 00 040501 		MOVE	1,[1B6!.+2]	;FLAGS AND PC
  7326	040006	254 02 0 01 000000 		JRSTF	(1)		;USER I/O FLAG DID
  7327	040007	265 00 0 00 040010 		JSP	.+1		;NOT SET
  7328	040010	607 00 0 00 004000 		TLNN	EXIOT		;CHECK WHY BIT IS NOT SET
  7329						STOP^
  7330	040011	254 04 0 00 040012 		HALT	.+1		;INSTRUCTION FAILED REPLACE
  7331	040012	254 00 0 00 040013 		JRST	.+1		;WITH JRST BACK^
  7332						TGET^
  7333	040013	200 00 0 00 040506 		MOVE	TNUMB		;GET LAST PC STORED AND CHECK TO SEE
  7334	040014	302 00 0 00 040000 		CAIE	%X		;IF ITS WHERE WE REALLY SHOULD BE
  7335						STOP2^^
  7336	040015	254 04 0 00 040016 		HALT	.+1		;HALT IF WE SHOULDN'T BE HERE
  7337	040016	254 00 0 00 040017 		JRST	.+1		;WILD TRANSFER CAUSED THIS HALT.^
  7338
  7339	040017	402 00 0 00 040506 	ENDIT:	SETZM	TNUMB		;CLEAR TEST NUMBER FLAG
  7340	040020	254 00 0 00 030057 		JRST	BEGEND		;GO TO BEG/END SEQUENCE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 46
DSKAH1	MAC	31-Mar-78 11:13		IOT/PI/APR SUBROUTINES                                                             SEQ 0168

  7341					SUBTTL	IOT/PI/APR SUBROUTINES
  7342
  7343					;HERE ARE SOME USEFUL SUBROUTINES FOR THE DIAGNOSTIC
  7344
  7345					;THIS ROUTINE CLEARS ALL THE TRAP LOCATIONS(42-56)
  7346
  7347	040021	000000	000000		TRPCLR:	0			;FOR PC RETURN
  7348	040022	202 15 0 00 040511 		MOVEM	15,XAC15#	;SAVE AC15
  7349	040023	201 15 0 00 000042 		MOVEI	15,42
  7350	040024	402 00 1 00 000015 		SETZM	@15		;CLEAR LOCATION
  7351	040025	271 15 0 00 000001 		ADDI	15,1		;BUMP POINTER
  7352	040026	307 15 0 00 000056 		CAIG	15,56		;DONE LAST?
  7353	040027	254 00 0 00 040024 		JRST	.-3		;LOOP
  7354	040030	200 15 0 00 040511 		MOVE	15,XAC15	;RESTORE AC15
  7355	040031	254 00 1 00 040021 		JRST	@TRPCLR
  7356
  7357					;THIS ROUTINE PUTS A JSR TO A HALT INTO EACH TRAP LOCATION (42-57)
  7358
  7359	040032	000000	000000		HALTPI:	0			;FOR RETURN PC
  7360	040033	202 00 0 00 040507 		MOVEM	0,XAC0#		;SAVE AC0
  7361	040034	202 01 0 00 040510 		MOVEM	1,XAC1#		;SAVE AC1
  7362	040035	200 00 0 00 040502 		MOVE	[JSR HLTCK]	;PUT JSR INTO EACH TRAP LOCATION
  7363	040036	201 01 0 00 000042 		MOVEI	1,42		;IN CASE INCORRECT INTERRUPT
  7364	040037	202 00 1 00 000001 		MOVEM	@1		;STORE
  7365	040040	271 00 0 00 000004 		ADDI	4
  7366	040041	271 01 0 00 000002 		ADDI	1,2
  7367	040042	305 01 0 00 000060 		CAIGE	1,60		;DONE?
  7368	040043	254 00 0 00 040037 		JRST	.-4
  7369	040044	200 00 0 00 040507 		MOVE	0,XAC0		;RESTORE AC0
  7370	040045	200 01 0 00 040510 		MOVE	1,XAC1		;AND AC1
  7371	040046	254 00 1 00 040032 		JRST	@HALTPI		;RETURN
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 47
DSKAH1	MAC	31-Mar-78 11:13		IOT/PI/APR SUBROUTINES                                                             SEQ 0169

  7372					;THIS ROUTINE PUTS A JSR INTO EACH INTERRUPT LOCATION WHICH WILL
  7373					;IGNORE INTERRUPTS..
  7374
  7375	040047	000000	000000		TRAPPI:	0			;FOR JSR
  7376	040050	202 00 0 00 040507 		MOVEM	0,XAC0#		;SAVE AC0
  7377	040051	202 01 0 00 040510 		MOVEM	1,XAC1#		;SAVE AC1
  7378	040052	200 00 0 00 040503 		MOVE	[JSR TRPFIL]	;SET UP TRAP INSTRUCTION
  7379	040053	201 01 0 00 000042 		MOVEI	1,42
  7380	040054	202 00 1 00 000001 		MOVEM	@1
  7381	040055	271 01 0 00 000002 		ADDI	1,2
  7382	040056	271 00 0 00 000004 		ADDI	0,4		;STORAGE POINTER
  7383	040057	305 01 0 00 000060 		CAIGE	1,60		;DONE?
  7384	040060	254 00 0 00 040054 		JRST	.-4		;NO LOOP
  7385	040061	200 00 0 00 040507 		MOVE	0,XAC0		;RESTORE AC0
  7386	040062	200 01 0 00 040510 		MOVE	1,XAC1		;AND AC1
  7387	040063	254 00 1 00 040047 		JRST	@TRAPPI		;RETURN
  7388
  7389					;THIS ROUTINE PLACES THE VALUE OF THE CHANNEL WHICH INTERRUPTED INTO
  7390					;AC0. IT DOES NOTHING ELSE (IT EFFECTIVLY IGNORES THE INTERRUPT).
  7391
  7392	040064	000000	000000		TRPFIL:	0
  7393	040065	200 01 0 00 040064 		MOVE	1,.-1
  7394	040066	201 00 0 00 000001 		MOVEI	1		;POINTER
  7395	040067	254 00 0 00 040121 		JRST	TPEND
  7396	040070	000000	000000			0
  7397	040071	200 01 0 00 040070 		MOVE	1,.-1
  7398	040072	201 00 0 00 000002 		MOVEI	2
  7399	040073	254 00 0 00 040121 		JRST	TPEND
  7400	040074	000000	000000			0
  7401	040075	200 01 0 00 040074 		MOVE	1,.-1
  7402	040076	201 00 0 00 000003 		MOVEI	3
  7403	040077	254 00 0 00 040121 		JRST	TPEND
  7404	040100	000000	000000			0
  7405	040101	200 01 0 00 040100 		MOVE	1,.-1
  7406	040102	201 00 0 00 000004 		MOVEI	4
  7407	040103	254 00 0 00 040121 		JRST	TPEND
  7408	040104	000000	000000			0
  7409	040105	200 01 0 00 040104 		MOVE	1,.-1
  7410	040106	201 00 0 00 000005 		MOVEI	5
  7411	040107	254 00 0 00 040121 		JRST	TPEND
  7412	040110	000000	000000			0
  7413	040111	200 01 0 00 040110 		MOVE	1,.-1
  7414	040112	201 00 0 00 000006 		MOVEI	6
  7415	040113	254 00 0 00 040121 		JRST	TPEND
  7416	040114	000000	000000			0
  7417	040115	200 01 0 00 040114 		MOVE	1,.-1
  7418	040116	201 00 0 00 000007 		MOVEI	7
  7419	040117	254 00 0 00 040121 		JRST	TPEND
  7420	040120	254 04 0 00 040121 		HALT	TPEND		;"JRST @" OR "JRSTF @" FAILS
  7421
  7422	040121	332 00 0 00 030042 	TPEND:	SKIPE	MONFLG		;IN USER MODE?
  7423	040122	254 00 1 00 000001 		JRST	@1		;RETURN
  7424	040123	254 02 1 00 000001 		JRSTF	@1		;RESTORE FLAGS
  7425	040124	254 04 0 00 040124 		HALT	.		;JRST @ OR JRSTF FAILS ?
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 48
DSKAH1	MAC	31-Mar-78 11:13		IOT/PI/APR SUBROUTINES                                                             SEQ 0170

  7426					;THIS ROUTINE PLACES THE VALUE OF THE CHANNEL WHICH INTERRUPTED
  7427					;INTO AC0. AFTER WHICH IT WILL HALT. THIS ROUTINE IS CALLED WHENEVER AN
  7428					;INTERRUPT OCCURS ON AN INCORRECT CHANNEL.
  7429	040125	000000	000000		HLTCK:	0
  7430	040126	200 01 0 00 040125 		MOVE	1,.-1
  7431	040127	201 00 0 00 000001 		MOVEI	1
  7432	040130	254 04 1 00 000001 		HALT	@1
  7433	040131	000000	000000			0
  7434	040132	200 01 0 00 040131 		MOVE	1,.-1
  7435	040133	201 00 0 00 000002 		MOVEI	2
  7436	040134	254 04 1 00 000001 		HALT	@1
  7437	040135	000000	000000			0
  7438	040136	200 01 0 00 040135 		MOVE	1,.-1
  7439	040137	201 00 0 00 000003 		MOVEI	3
  7440	040140	254 04 1 00 000001 		HALT	@1
  7441	040141	000000	000000			0
  7442	040142	200 01 0 00 040141 		MOVE	1,.-1
  7443	040143	201 00 0 00 000004 		MOVEI	4
  7444	040144	254 04 1 00 000001 		HALT	@1
  7445	040145	000000	000000			0
  7446	040146	200 01 0 00 040145 		MOVE	1,.-1
  7447	040147	201 00 0 00 000005 		MOVEI	5
  7448	040150	254 04 1 00 000001 		HALT	@1
  7449	040151	000000	000000			0
  7450	040152	200 01 0 00 040151 		MOVE	1,.-1
  7451	040153	201 00 0 00 000006 		MOVEI	6
  7452	040154	254 04 1 00 000001 		HALT	@1
  7453	040155	000000	000000			0
  7454	040156	200 01 0 00 040155 		MOVE	1,.-1
  7455	040157	201 00 0 00 000007 		MOVEI	7
  7456	040160	254 04 1 00 000007 		HALT	@7
  7457	040161	000000	000000			0
  7458	040162	200 01 0 00 040161 		MOVE	1,.-1
  7459	040163	474 00 0 00 000000 		SETO	0
  7460	040164	254 04 0 00 040164 		HALT	.		;SHOULD NEVER GET HERE
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 49
DSKAH1	MAC	31-Mar-78 11:13		IOT/PI/APR TRAP ROUTINES                                                           SEQ 0171

  7461					SUBTTL	IOT/PI/APR TRAP ROUTINES
  7462
  7463					;HERE LIE THE VARIOUS TRAPS  TRAPS HERE REPRESENT ERRORS
  7464					;NOT CHECKED IN THE DIAGNOSTIC. THE LISTING SHOWS THE CAUSE OF THE
  7465					;TRAP.
  7466
  7467	040165	254 04 0 00 040165 	UUO:	HALT	.		;ERROR-UUO (LOC 0 HAS PC OF UUO)
  7468	040166	254 04 1 00 000425 	MACHTP:	HALT	@425		;KERNAL NO TRAP
  7469	040167	254 04 1 00 000425 		HALT	@425		;KERNAL TRAP
  7470	040170	254 04 1 00 000425 		HALT	@425		;SUPERVISOR NO TRAP
  7471	040171	254 04 1 00 000425 		HALT	@425		;SUPERVISOR TRAP
  7472	040172	254 04 1 00 000425 		HALT	@425		;CONCEAL NO TRAP
  7473	040173	254 04 1 00 000425 		HALT	@425		;CONCEAL TRAP
  7474	040174	254 04 1 00 000425 		HALT	@425		;PUBLIC NO TRAP
  7475	040175	254 04 1 00 000425 		HALT	@425		;PUBLIC TRAP
  7476
  7477	040176	254 04 0 00 040176 	TABLE:	HALT	.		;PAGE FAILURE TRAP
  7478	040177	255 00 0 00 000000 		JFCL			;IGNORE ARITHMETIC TRAPS
  7479	040200	254 04 0 00 040200 		HALT	.
  7480	040201	254 04 0 00 040201 		HALT	.
  7481	040202	777777	777777			-1			;IF UUO THEN NOT =O-1
  7482	040203	777777	777777			-1
  7483	040204	000000	000000			0
  7484	040205	000000	000000			0
  7485	040206	000000	040166			MACHTP
  7486	040207	000000	040167			MACHTP+1
  7487	040210	000000	040170			MACHTP+2
  7488	040211	000000	040171			MACHTP+3
  7489	040212	000000	040172			MACHTP+4
  7490	040213	000000	040173			MACHTP+5
  7491	040214	000000	040174			MACHTP+6
  7492	040215	000000	040175			MACHTP+7
  7493
  7494	040216	000000	000000		TRPSET:	0			;FOR JSR
  7495	040217	202 00 0 00 040507 		MOVEM	0,XAC0#		;SAVE AC0
  7496	040220	202 01 0 00 040510 		MOVEM	1,XAC1#		;SAVE AC1
  7497	040221	202 16 0 00 040512 		MOVEM	16,XAC16#	;SAVE AC16
  7498	040222	201 00 0 00 040176 		MOVEI	0,TABLE		;TRAP TABLE POINTER
  7499	040223	201 01 0 00 000420 		MOVEI	1,420		;STORAGE ADRESS
  7500	040224	200 16 1 00 000000 		MOVE	16,@0		;PUT TRAP WORD INTO
  7501	040225	202 16 0 01 000000 		MOVEM	16,(1)		;TRAP LOCATION
  7502	040226	271 00 0 00 000001 		ADDI	0,1		;BUMP
  7503	040227	271 01 0 00 000001 		ADDI	1,1		;POINTERS
  7504	040230	302 01 0 00 000440 		CAIE	1,440		;DONE LAST
  7505	040231	254 00 0 00 040224 		JRST	.-5		;NO KEEP LOOPING
  7506	040232	200 00 0 00 040507 		MOVE	0,XAC0		;RESTORE AC0
  7507	040233	200 01 0 00 040510 		MOVE	1,XAC1		;AND AC1
  7508	040234	200 16 0 00 040512 		MOVE	16,XAC16	;AND AC16
  7509	040235	254 00 1 00 040216 		JRST	@TRPSET		;RETURN TO CALLER
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0172

  7510					SUBTTL	*STOR* RESERVED STORAGE, MARCH 1978
  7511
  7512					;PROGRAM LITERALS
  7513
  7514						XLIST
  7515					IFNDEF	$LPAPER,<LIST>
  7516	040236					LIT
  7517	040236	123456	654321
  7518	040237	777777	777777
  7519	040240	265 00 0 00 040165 
  7520	040241	264 00 0 00 033317 
  7521	040242	264 00 0 00 033336 
  7522	040243	264 00 0 00 033355 
  7523	040244	264 00 0 00 033374 
  7524	040245	264 00 0 00 033413 
  7525	040246	264 00 0 00 033432 
  7526	040247	264 00 0 00 033451 
  7527	040250	264 00 0 00 033475 
  7528	040251	264 00 0 00 033513 
  7529	040252	264 00 0 00 033531 
  7530	040253	264 00 0 00 033547 
  7531	040254	264 00 0 00 033565 
  7532	040255	264 00 0 00 033603 
  7533	040256	264 00 0 00 033621 
  7534	040257	264 00 0 00 033645 
  7535	040260	264 00 0 00 033662 
  7536	040261	264 00 0 00 033677 
  7537	040262	264 00 0 00 033714 
  7538	040263	264 00 0 00 033731 
  7539	040264	264 00 0 00 033746 
  7540	040265	264 00 0 00 033763 
  7541	040266	264 00 0 00 034014 
  7542	040267	264 00 0 00 034041 
  7543	040270	264 00 0 00 034066 
  7544	040271	264 00 0 00 034113 
  7545	040272	264 00 0 00 034140 
  7546	040273	264 00 0 00 034165 
  7547	040274	264 00 0 00 034212 
  7548	040275	264 00 0 00 034237 
  7549	040276	264 00 0 00 034264 
  7550	040277	264 00 0 00 034311 
  7551	040300	264 00 0 00 034336 
  7552	040301	264 00 0 00 034363 
  7553	040302	264 00 0 00 034410 
  7554	040303	264 00 0 00 034435 
  7555	040304	264 00 0 00 034462 
  7556	040305	264 00 0 00 034507 
  7557	040306	264 00 0 00 034534 
  7558	040307	264 00 0 00 034561 
  7559	040310	264 00 0 00 034606 
  7560	040311	264 00 0 00 034633 
  7561	040312	264 00 0 00 034661 
  7562	040313	264 00 0 00 034700 
  7563	040314	264 00 0 00 034724 
  7564	040315	264 00 0 00 034750 
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1-1
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0173

  7565	040316	264 00 0 00 034774 
  7566	040317	264 00 0 00 035020 
  7567	040320	264 00 0 00 035044 
  7568	040321	264 00 0 00 035070 
  7569	040322	264 00 0 00 035271 
  7570	040323	264 00 0 00 035323 
  7571	040324	264 00 0 00 035355 
  7572	040325	264 00 0 00 035407 
  7573	040326	264 00 0 00 035441 
  7574	040327	264 00 0 00 035473 
  7575	040330	264 00 0 00 035525 
  7576	040331	265 01 0 00 035551 
  7577	040332	001000	000000
  7578	040333	265 01 0 00 035575 
  7579	040334	002000	000000
  7580	040335	265 01 0 00 035621 
  7581	040336	003000	000000
  7582	040337	265 01 0 00 035645 
  7583	040340	004000	000000
  7584	040341	265 01 0 00 035671 
  7585	040342	005000	000000
  7586	040343	265 01 0 00 035715 
  7587	040344	006000	000000
  7588	040345	265 01 0 00 035741 
  7589	040346	007000	000000
  7590	040347	265 01 0 00 035765 
  7591	040350	010000	000000
  7592	040351	265 01 0 00 036011 
  7593	040352	011000	000000
  7594	040353	265 01 0 00 036035 
  7595	040354	012000	000000
  7596	040355	265 01 0 00 036061 
  7597	040356	013000	000000
  7598	040357	265 01 0 00 036105 
  7599	040360	014000	000000
  7600	040361	265 01 0 00 036131 
  7601	040362	015000	000000
  7602	040363	265 01 0 00 036155 
  7603	040364	016000	000000
  7604	040365	265 01 0 00 036201 
  7605	040366	017000	000000
  7606	040367	265 01 0 00 036225 
  7607	040370	020000	000000
  7608	040371	265 01 0 00 036251 
  7609	040372	021000	000000
  7610	040373	265 01 0 00 036275 
  7611	040374	022000	000000
  7612	040375	265 01 0 00 036321 
  7613	040376	023000	000000
  7614	040377	265 01 0 00 036345 
  7615	040400	024000	000000
  7616	040401	265 01 0 00 036371 
  7617	040402	025000	000000
  7618	040403	265 01 0 00 036415 
  7619	040404	026000	000000
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1-2
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0174

  7620	040405	265 01 0 00 036441 
  7621	040406	027000	000000
  7622	040407	265 01 0 00 036465 
  7623	040410	030000	000000
  7624	040411	265 01 0 00 036511 
  7625	040412	031000	000000
  7626	040413	265 01 0 00 036535 
  7627	040414	032000	000000
  7628	040415	265 01 0 00 036561 
  7629	040416	033000	000000
  7630	040417	265 01 0 00 036605 
  7631	040420	034000	000000
  7632	040421	265 01 0 00 036631 
  7633	040422	035000	000000
  7634	040423	265 01 0 00 036655 
  7635	040424	036000	000000
  7636	040425	265 01 0 00 036701 
  7637	040426	037000	000000
  7638	040427	254 00 0 00 036726 
  7639	040430	254 00 0 00 036745 
  7640	040431	254 00 0 00 036764 
  7641	040432	254 00 0 00 037003 
  7642	040433	254 00 0 00 037022 
  7643	040434	254 00 0 00 037041 
  7644	040435	254 00 0 00 037060 
  7645	040436	254 00 0 00 037077 
  7646	040437	254 00 0 00 037116 
  7647	040440	254 00 0 00 037135 
  7648	040441	254 00 0 00 037154 
  7649	040442	254 00 0 00 037173 
  7650	040443	254 00 0 00 037212 
  7651	040444	254 00 0 00 037231 
  7652	040445	254 00 0 00 037250 
  7653	040446	254 00 0 00 037267 
  7654	040447	254 00 0 00 037306 
  7655	040450	254 00 0 00 037325 
  7656	040451	254 00 0 00 037344 
  7657	040452	254 00 0 00 037363 
  7658	040453	254 00 0 00 037402 
  7659	040454	254 00 0 00 037421 
  7660	040455	254 00 0 00 037442 
  7661	040456	254 00 0 00 037455 
  7662	040457	254 00 0 00 037470 
  7663	040460	265 11 0 00 037505 
  7664	040461	254 00 0 00 037503 
  7665	040462	265 11 0 00 037526 
  7666	040463	254 00 0 00 037524 
  7667	040464	265 11 0 00 037547 
  7668	040465	254 00 0 00 037545 
  7669	040466	265 11 0 00 037570 
  7670	040467	254 00 0 00 037566 
  7671	040470	265 11 0 00 037611 
  7672	040471	254 00 0 00 037607 
  7673	040472	265 11 0 00 037632 
  7674	040473	254 00 0 00 037630 
DSKAH DECSYSTEM-2020 BASIC INSTRUCTION DIAGNOSTIC (8) VER 0,1	MACRO %53(1020) 11:18 31-Mar-78 Page 1-3
STOR	KSM	28-Mar-78 11:25		*STOR* RESERVED STORAGE, MARCH 1978                                                SEQ 0175

  7675	040474	265 11 0 00 037653 
  7676	040475	254 00 0 00 037651 
  7677	040476	265 11 0 00 037674 
  7678	040477	254 00 0 00 037672 
  7679	040500	254 00 0 00 037734 
  7680	040501	004000	040007
  7681	040502	264 00 0 00 040125 
  7682	040503	264 00 0 00 040064 
  7683						LIST
  7684	040504	000000	000000		ENDSLD:	0
  7685
  7686					IFDEF	DEBUG,<
  7687					PATCH:	BLOCK DEBUG		;PATCHING AREA
  7688					>
  7689
  7690					;PROGRAM VARIABLES
  7691	040505					VAR
  7692
  7693					IFDEF	PGMEND,<
  7694	040513	000000	000000		END:	0
  7695			030000			END	BEGIN	>

NO ERRORS DETECTED

PROGRAM BREAK IS 000000
ABSOLUTE BREAK IS 040514
CPU TIME USED 00:24.977

26P CORE USED

ABORT	    92#
AC	  6997#	  7027#	  7057#	  7087#	  7117#	  7147#	  7177#	  7207#                                                    SEQ 0176
AC0	   649#
ALTMGO	   404#
APR	   792	  1084	  1147	  1154	  1155	  1161	  1162	  1168	  1169	  1198	  1199	  1206	  1207	  1213
	  1214	  3435	  3457	  3479	  3501	  3523	  3546	  3568	  3750	  3768	  3786	  3804	  3822	  3840
	  3858	  4884	  4926	  4948	  4970	  4992	  5014	  5036	  5058	  5077	  5089	  5091	  5116	  5156
	  5196	  5236	  5276	  5316	  5356
AROV	   318#
AROVTP	   318#
AROVU	   318#
AST	   519#
ATSIN	   520#
BEGEND	   400#	   781	  7340
BEGIN	   307	   308	   331#	   670	   733	  7695
BEGIN1	   347#	   401
BEGIOT	   772#
BELL	   523#
BIGPI1	  2148#
BIGPI2	  2253#
BIGPI3	  2358#
BIGPI4	  2463#
BIGPI5	  2568#
BIGPI6	  2673#
BIGPI7	  2778#
BIGPIX	  2883#
BIGPIY	  2988#
BIGPIZ	  3093#
BIS	   318#
C2A	  3881#
C2B	  3899	  3908#
C2C	  3934	  3943#
C2D	  3969	  3978#
C2E	  4004	  4013#
C2F	  4039	  4048#
C2G	  4074	  4083#
C2H	  4109	  4118#
C2I	  4144	  4153#
C2J	  4179	  4188#
C2K	  4214	  4223#
C2L	  4249	  4258#
C2M	  4284	  4293#
C2N	  4319	  4328#
C2O	  4354	  4363#
C2P	  4389	  4398#
C2Q	  4424	  4433#
C2R	  4459	  4468#
C2S	  4494	  4503#
C2T	  4529	  4538#
C2U	  4564	  4573#
C2V	  4599	  4609#
CCA	   318#
CHAIN	   112#
CHNOFF	   318#	   793	  2179	  2241	  2284	  2346	  2389	  2451	  2494	  2556	  2599	  2661	  2704	  2766
	  2809	  2871	  2914	  2976	  3019	  3081	  3124	  3186                                                     SEQ 0177
CHNON	   318#	  2158	  2178	  2199	  2220	  2240	  2263	  2283	  2304	  2325	  2345	  2368	  2388	  2409
	  2430	  2450	  2473	  2493	  2514	  2535	  2555	  2578	  2598	  2619	  2640	  2660	  2683	  2703
	  2724	  2745	  2765	  2788	  2808	  2829	  2850	  2870	  2893	  2913	  2934	  2955	  2975	  2998
	  3018	  3039	  3060	  3080	  3103	  3123	  3144	  3165	  3185	  3748	  3766	  3784	  3802	  3820
	  3838	  3856	  3901	  3936	  3971	  4006	  4041	  4076	  4111	  4146	  4181	  4216	  4251	  4286
	  4321	  4356	  4391	  4426	  4461	  4496	  4531	  4566	  4601	  4640	  4646	  4674	  4680	  4708
	  4714	  4742	  4748	  4776	  4782	  4810	  4816	  4844	  4850	  4883	  4925	  4947	  4969	  4991
	  5013	  5035	  5057	  5076
CKCK0	  4878#
CKCK1	  4899#
CKI01	  3598	  3607#
CKI02	  3617	  3626#
CKI03	  3636	  3645#
CKI04	  3655	  3664#
CKI05	  3674	  3683#
CKI06	  3693	  3702#
CKI07	  3712	  3721#
CLKU	   318#
CLOCKF	   386#
CNTLC	   403#
CNTRP	   318#	  7252
COMMA	   512#
CONSW	   387#
COUNTX	  5109#	  5109	  5132	  5149#	  5149	  5172	  5189#	  5189	  5212	  5229#	  5229	  5252	  5269#	  5269
	  5292	  5309#	  5309	  5332	  5349#	  5349	  5372
CPOPJ	   407#
CPOPJ1	   405#
CRLF	   242	   243	   507#
CRLF2	   246	   247	   509#
CRY0	   318#
CRY1	   318#
CSHFLG	   566#
CSHMEM	   567#
CTRP	   318#	  7253
CYCL60	   560#
DCK	   318#
DDT	   651#
DDTLNK	   126#	   345
DDTSRT	   345#
DEBUG	  7686
DECVER	     5#	    12	    27	   366
DF22F	   471#
DIAGMN	   334#
DIAGNO	   650#
DIAMON	   652#
DING	    98#
DOLLAR	   526#
DSKUPD	   371
EBIT0	   318#
EBIT1	   318#
EBIT10	   318#
EBIT11	   318#
EBIT12	   318#                                                                                                            SEQ 0178
EBIT13	   318#
EBIT14	   318#
EBIT15	   318#
EBIT2	   318#
EBIT3	   318#
EBIT4	   318#
EBIT5	   318#
EBIT6	   318#
EBIT7	   318#
EBIT8	   318#
EBIT9	   318#
EFIELD	  6333#	  6361#	  6389#	  6417#	  6445#	  6473#	  6501#	  6529#	  6557#	  6585#	  6613#	  6641#	  6669#	  6697#
	  6725#	  6753#	  6781#	  6809#	  6837#	  6864#	  6891#	  6918#
END	  7694#
ENDFIX	   646#
ENDIT	  7299	  7314	  7339#
ENDSLD	  7684#
ERMORE	   420#
EROLD	    36#	   318
ERRPC	   391#
ERRTLS	   392#
ERSTOP	   101#
EXCASB	    34#	   369
EXIOT	   318#	  7303	  7328
FOV	   318#
FOVU	   318#
FRDLNK	   124#
FSELNK	   123#
FXU	   318#
HALTPI	   789	   789#	  7359#	  7371
HLTCK	  7362	  7429#
HYPEN	   517#
INHCSH	   109#
INHPAG	   106#
IOCLR	   318#	  5077
IOT0	   779	  1082#
IOT14	  1111#
IOT15	  1122#
IOT15A	  1130#
IOT16	  1138#
IOT17	  1146#
IOT18	  1153#
IOT18A	  1176#
IOT19	  1183#
IOT2	  1087#
IOT20	  1191#
IOT22	  1198#
IOT24	  1231#
IOT25	  1249#
IOT26	  1267#
IOT3	  1094#
IOT33B	  1276#
IOT34	  1285#                                                                                                            SEQ 0179
IOT35	  1292#
IOT36	  1300#
IOT38	  1314#
IOT39	  1321#
IOT40	  1329#
IOT41	  1336#
IOT42	  1343#
IOT43	  1350#
IOT44	  1358#
IOT45	  1365#
IOT46	  1373#
IOT47	  1380#
IOT48	  1388#
IOT49	  1395#
IOT50	  1403#
IOT51	  1410#
IOT6	  1105#
IOTXX	  1081#
IOTXXX	  1079#
IOTXYZ	  1418#
ITERAT	    81#	   364
ITRCH1	   424#
ITRCNT	   364#	   714	   720	   724	   730
JENDIS	  4625#
JOB41	   318#
JOBAPR	   318#
JOBCNI	   318#
JOBDDT	   318#
JOBFF	   318#
JOBOPC	   318#
JOBREL	   318#
JOBREN	   318#
JOBSA	   318#
JOBSYM	   318#
JOBTPC	   318#
JOBUSY	   318#
JOBUUO	   318#
JOBVER	   318#
KAIFLG	   381#
KLFLG	   382#
KNTRP	   318#	  7248
KTRP	   318#	  7249
LACLK	   318#
LACLKE	   318#
LAPRAL	   318#
LAPRP1	   318#	  3435
LAPRP2	   318#	  3457
LAPRP3	   318#	  3479
LAPRP4	   318#	  3501
LAPRP5	   318#	  3523
LAPRP6	   318#	  3546
LAPRP7	   318#	  3568
LCHNOF	   318#                                                                                                            SEQ 0180
LCHNON	   318#
LCNTXT	   318#
LCNXER	   318#	   792	  1214
LCPAER	   318#	   792	  1207
LCPSFT	   318#
LCPWRF	   318#	   792	  1199
LDATAF	   318#
LDLNK	   125#	   334	   336
LDNXER	   318#	   792	  4926	  4948	  4970	  4992	  5014	  5036	  5058
LDPAER	   318#	   792	  4926	  4948	  4970	  4992	  5014	  5036	  5058
LDPSFT	   318#
LDPWRF	   318#	   792	  4926	  4948	  4970	  4992	  5014	  5036	  5058
LEBXMH	   318#
LEBXML	   318#
LENXER	   318#	  3435	  4884
LEPAER	   318#	  3479	  4884
LEPSFT	   318#	  3457	  3523	  3750	  3768	  3786	  3804	  3822	  3840	  3858	  4884	  5116	  5156	  5196
	  5236	  5276	  5316	  5356
LEPWRF	   318#	  3546	  3568	  4884
LEUPFW	   318#
LEXCMP	   318#
LFLGCL	   318#
LFLGDS	   318#
LFLGEN	   318#
LFLGST	   318#
LFP	   521#
LINSTF	   318#
LINT	   318#
LIOCLR	   318#	   792
LLACBL	   318#
LLDUSB	   318#
LMBXMH	   318#
LMBXML	   318#
LNXMEN	   318#
LNXMER	   318#	  1163	  1216
LOOPER	   100#
LPAREN	   318#
LPARER	   318#	  1156	  1209
LPFWPC	   318#
LPGFTR	   318#
LPICH1	   318#
LPICH2	   318#
LPICH3	   318#
LPICH4	   318#
LPICH5	   318#
LPICH6	   318#
LPICH7	   318#
LPICHA	   318#
LPICLR	   318#
LPIIP1	   318#
LPIIP2	   318#
LPIIP3	   318#
LPIIP4	   318#                                                                                                            SEQ 0181
LPIIP5	   318#
LPIIP6	   318#
LPIIP7	   318#
LPIOFF	   318#
LPION	   318#
LPRCH1	   318#
LPRCH2	   318#
LPRCH3	   318#
LPRCH4	   318#
LPRCH5	   318#
LPRCH6	   318#
LPRCH7	   318#
LPRFMH	   318#
LPRFML	   318#
LPSFT	   318#
LPSFTE	   318#	  1170
LPWRFE	   318#
LPWRFL	   318#	  1149	  1201
LREQSE	   318#
LRQCLR	   318#	   793	  4646	  4680	  4714	  4748	  4782	  4816	  4850
LSECMO	   318#
LSMODE	   318#
LSNXER	   318#	  1161	  1213	  3435	  4884	  4926	  4948	  4970	  4992	  5014	  5036	  5058
LSPAER	   318#	  1154	  1206	  3479	  4884	  4926	  4948	  4970	  4992	  5014	  5036	  5058
LSPSFT	   318#	  1168	  3457	  3501	  3523	  3750	  3768	  3786	  3804	  3822	  3840	  3858	  4884	  4926
	  4948	  4970	  4992	  5014	  5036	  5058	  5116	  5156	  5196	  5236	  5276	  5316	  5356
LSPWRF	   318#	  1147	  1198	  3546	  3568	  4884	  4926	  4948	  4970	  4992	  5014	  5036	  5058
LTBASH	   318#
LTBASL	   318#
LTRPAE	   318#
LTRPEN	   318#
LUSCMP	   318#
LUUO	   318#
LUUO1	   451	   452
LUUO10	   451	   456
LUUO11	   451	   456
LUUO12	   451	   457
LUUO13	   451	   457
LUUO14	   451	   458
LUUO15	   451	   458
LUUO16	   451	   459
LUUO17	   451	   459
LUUO2	   451	   453
LUUO20	   451	   460
LUUO21	   451	   460
LUUO22	   451	   461
LUUO23	   451	   461
LUUO24	   451	   462
LUUO25	   451	   462
LUUO26	   451	   463
LUUO27	   451	   463
LUUO3	   451	   453
LUUO30	   451	   464                                                                                                     SEQ 0182
LUUO31	   451	   464
LUUO32	   451	   465
LUUO33	   451	   465
LUUO4	   451	   454
LUUO5	   451	   454
LUUO6	   451	   455
LUUO7	   451	   455
LUUOI	   318#
LWRITE	   318#
MACHTP	  7468#	  7485	  7486	  7487	  7488	  7489	  7490	  7491	  7492
MAPNEW	   472#
MARGIN	   394#
MCNVER	     4#	    12	    27	   366
MEMLOW	   474#
MEMMAP	   372
MEMSIZ	   475#
MEMTOT	   473#
MINUS	   516#
MLUUO	  5388#	  5418#	  5448#	  5478#	  5508#	  5538#	  5568#	  5598#	  5628#	  5658#	  5688#	  5718#	  5748#	  5778#
	  5808#	  5838#	  5868#	  5898#	  5928#	  5958#	  5988#	  6018#	  6048#	  6078#	  6108#	  6138#	  6168#	  6198#
	  6228#	  6258#	  6288#
MODDVC	   108#
MODDVL	   307	   307#	   367
MODDVU	   308	   308#	   368
MODLNK	   127#	   331
MONCTL	   384#	   745
MONFLG	   383#	   708	   741	   776	  3443	  3465	  3487	  3509	  3531	  3554	  3576	  3609	  3628	  3647
	  3666	  3685	  3704	  3723	  3758	  3776	  3794	  3812	  3830	  3848	  3866	  3891	  3926	  3961
	  3996	  4031	  4066	  4101	  4136	  4171	  4206	  4241	  4276	  4311	  4346	  4381	  4416	  4451
	  4486	  4521	  4556	  4591	  7298	  7313	  7422
MONTEN	   385#	   713	   726	   732
MONTYP	   598#
MPVU	   318#
MUHLT	  7258	  7264#
MULT0	  3854	  3864#
MULT1	  3836	  3846#
MULT2	  3818	  3828#
MULT3	  3800	  3810#
MULT4	  3782	  3792#
MULT5	  3764	  3774#
MULT6	  3746	  3756#
MULTI	  3741#
MUUO	   318#	  7256	  7257	  7272	  7276
MUUOPC	   318#
NOPNT	    96#
NXMU	   318#
OPRSEL	   110#
OPTIME	   486#
P	   153	   154	   155	   156	   318#	   406
PAG	   318#
PALERS	   102#
PAREA0	    74#
PAREA1	    75#	   362                                                                                                     SEQ 0183
PAREA2	    76#	   363
PAREA3	    77#	   360
PAREA4	    78#	   361
PAREA5	    79#	   373
PAREA6	    80#	   374
PAREA7	   373#
PAREA8	   374#
PARU	   318#
PASCNT	   388#	   719
PDISF	   483#
PDLOVU	   318#
PDOVTP	   318#
PERIOD	   513#
PFSTRT	   340#
PGMEND	    35#	  7693
PGMNAM	   365	   746	   749#
PI	   793	  1111	  1277	  1285	  1286	  1292	  1293	  1294	  1314	  1315	  1321	  1322	  1323	  1329
	  1330	  1336	  1337	  1338	  1343	  1344	  1350	  1351	  1352	  1358	  1359	  1365	  1366	  1367
	  1373	  1374	  1380	  1381	  1382	  1388	  1389	  1395	  1396	  1397	  1403	  1404	  1410	  1411
	  1412	  1441	  1445	  1467	  1471	  1493	  1497	  1519	  1523	  1545	  1549	  1571	  1575	  1597
	  1601	  1642	  1646	  1672	  1676	  1702	  1706	  1732	  1736	  1762	  1766	  1792	  1796	  1822
	  1826	  1876	  1878	  1916	  1918	  1956	  1958	  1996	  1998	  2036	  2038	  2076	  2078	  2116
	  2118	  2158	  2159	  2178	  2179	  2180	  2199	  2200	  2201	  2220	  2221	  2240	  2241	  2242
	  2263	  2264	  2283	  2284	  2285	  2304	  2305	  2306	  2325	  2326	  2345	  2346	  2347	  2368
	  2369	  2388	  2389	  2390	  2409	  2410	  2411	  2430	  2431	  2450	  2451	  2452	  2473	  2474
	  2493	  2494	  2495	  2514	  2515	  2516	  2535	  2536	  2555	  2556	  2557	  2578	  2579	  2598
	  2599	  2600	  2619	  2620	  2621	  2640	  2641	  2660	  2661	  2662	  2683	  2684	  2703	  2704
	  2705	  2724	  2725	  2726	  2745	  2746	  2765	  2766	  2767	  2788	  2789	  2808	  2809	  2810
	  2829	  2830	  2831	  2850	  2851	  2870	  2871	  2872	  2893	  2894	  2913	  2914	  2915	  2934
	  2935	  2936	  2955	  2956	  2975	  2976	  2977	  2998	  2999	  3018	  3019	  3020	  3039	  3040
	  3041	  3060	  3061	  3080	  3081	  3082	  3103	  3104	  3123	  3124	  3125	  3144	  3145	  3146
	  3165	  3166	  3185	  3186	  3187	  3227	  3231	  3232	  3256	  3260	  3261	  3285	  3289	  3290
	  3314	  3318	  3319	  3343	  3347	  3348	  3372	  3376	  3377	  3401	  3405	  3406	  3434	  3456
	  3478	  3500	  3522	  3545	  3567	  3600	  3619	  3638	  3657	  3676	  3695	  3714	  3748	  3766
	  3784	  3802	  3820	  3838	  3856	  3901	  3902	  3936	  3937	  3971	  3972	  4006	  4007	  4041
	  4042	  4076	  4077	  4111	  4112	  4146	  4147	  4181	  4182	  4216	  4217	  4251	  4252	  4286
	  4287	  4321	  4322	  4356	  4357	  4391	  4392	  4426	  4427	  4461	  4462	  4496	  4497	  4531
	  4532	  4566	  4567	  4601	  4602	  4640	  4646	  4648	  4674	  4680	  4682	  4708	  4714	  4716
	  4742	  4748	  4750	  4776	  4782	  4784	  4810	  4816	  4818	  4844	  4850	  4852	  4883	  4925
	  4947	  4969	  4991	  5013	  5035	  5057	  5076	  5078	  5090	  5115	  5155	  5195	  5235	  5275
	  5315	  5355
PICHN1	   318#
PICHN2	   318#
PICHN3	   318#
PICHN4	   318#
PICHN5	   318#
PICHN6	   318#
PICHN7	   318#
PICHNA	   318#
PICLR	   318#	   793	  1878	  1918	  1958	  1998	  2038	  2078	  2118	  2200	  2305	  2410	  2515	  2620
	  2725	  2830	  2935	  3040	  3145	  3231	  3260	  3289	  3318	  3347	  3376	  3405	  5090
PIOFF	   318#	   793
PION	   318#	  1441	  1467	  1493	  1519	  1545	  1571	  1597	  3227	  3256	  3285	  3314	  3343	  3372     SEQ 0184
	  3401	  3748	  3766	  3784	  3802	  3820	  3838	  3856	  3901	  3936	  3971	  4006	  4041	  4076
	  4111	  4146	  4181	  4216	  4251	  4286	  4321	  4356	  4391	  4426	  4461	  4496	  4531	  4566
	  4601	  4640	  4646	  4674	  4680	  4708	  4714	  4742	  4748	  4776	  4782	  4810	  4816	  4844
	  4850	  4883	  4925	  4947	  4969	  4991	  5013	  5035	  5057	  5076	  5079
PIOT00	  1427#
PIOT01	  1623#
PIOT02	  1849#
PIOT03	  3211#
PLIST	   552#	   552
PLISTE	   552	   554#
PLISTS	   553#
PLUS	   518#
PNTENB	   482#
PNTEXT	   361#
PNTFLG	   481#
PNTINH	   484#
PNTLPT	    97#
PNTNAM	   360#
PNTRP	   318#	  7254
PNTSPC	   485#
PTRP	   318#	  7255
PVPAGI	   579#
QUEST	   524#
RADIX	   527#
RADLSC	   529#
RADLSP	   528#
RANDBS	   362#
REENTR	   342#
RELIAB	   104#
REPT	   318#
REPT1	   318#
REPTU	   440#
REQSET	   318#	  1642	  1672	  1702	  1732	  1762	  1792	  1822	  1876	  1916	  1956	  1996	  2036	  2076
	  2116	  3227	  3256	  3285	  3314	  3343	  3372	  3401	  3902	  3937	  3972	  4007	  4042	  4077
	  4112	  4147	  4182	  4217	  4252	  4287	  4322	  4357	  4392	  4427	  4462	  4497	  4532	  4567
	  4602	  4640	  4674	  4708	  4742	  4776	  4810	  4844
RESET1	  5073#
RESET2	  5086#
RESRT1	   417#
RESRT2	   418#
RETURN	   349#	   728	   734
RSTART	    93#
RTP	   522#
RUNFLG	   389#
SADR1	    62#	   338
SADR10	    71#	   354
SADR11	    72#	   355
SADR2	    63#	   340
SADR3	    64#	   342
SADR4	    65#
SADR5	    66#	   403
SADR6	    67#	   404
SADR7	    68#	   351                                                                                                     SEQ 0185
SADR8	    69#	   352
SADR9	    70#	   353
SBINIT	   166	   348#
SCOPE	   441#
SFSTRT	   338#
SLASH	   525#
SM10	   629#
SNTRP	   318#	  7250
SPACE	   514#
SRTDDT	   344#
START	   332	   711	   715	   737#
START1	   351#
START2	   352#
START3	   353#
START4	   354#
START5	   355#
STARTA	    62	    63	    64	    65	    66	    67	    68	    69	    70	    71	    72	   347	   725	   731
	   744	   747	   769#
STRP	   318#	  7251
SUBLNK	   128#	   348
SWPTAB	   635#
SWTEXR	   363#
SYSEXR	   336#
TAB	   515#
TABLE	  7477#	  7498
TESTPC	   390#
TICKS	   393#
TN0	   318#
TN1	   318#
TNUMB	  1104#	  1104	  1222	  1230#	  1230	  1240	  1248#	  1248	  1258	  1266#	  1266	  1437#	  1437	  1450
	  1463#	  1463	  1476	  1489#	  1489	  1502	  1515#	  1515	  1528	  1541#	  1541	  1554	  1567#	  1567
	  1580	  1593#	  1593	  1606	  1638#	  1638	  1651	  1668#	  1668	  1681	  1698#	  1698	  1711	  1728#
	  1728	  1741	  1758#	  1758	  1771	  1788#	  1788	  1801	  1818#	  1818	  1831	  1872#	  1872	  1887
	  1912#	  1912	  1927	  1952#	  1952	  1967	  1992#	  1992	  2007	  2032#	  2032	  2047	  2072#	  2072
	  2087	  2112#	  2112	  2127	  2154#	  2154	  2165	  2173#	  2173	  2186	  2194#	  2194	  2207	  2215#
	  2215	  2227	  2235#	  2235	  2247	  2259#	  2259	  2270	  2278#	  2278	  2291	  2299#	  2299	  2312
	  2320#	  2320	  2332	  2340#	  2340	  2352	  2364#	  2364	  2375	  2383#	  2383	  2396	  2404#	  2404
	  2417	  2425#	  2425	  2437	  2445#	  2445	  2457	  2469#	  2469	  2480	  2488#	  2488	  2501	  2509#
	  2509	  2522	  2530#	  2530	  2542	  2550#	  2550	  2562	  2574#	  2574	  2585	  2593#	  2593	  2606
	  2614#	  2614	  2627	  2635#	  2635	  2647	  2655#	  2655	  2667	  2679#	  2679	  2690	  2698#	  2698
	  2711	  2719#	  2719	  2732	  2740#	  2740	  2752	  2760#	  2760	  2772	  2784#	  2784	  2795	  2803#
	  2803	  2816	  2824#	  2824	  2837	  2845#	  2845	  2857	  2865#	  2865	  2877	  2889#	  2889	  2900
	  2908#	  2908	  2921	  2929#	  2929	  2942	  2950#	  2950	  2962	  2970#	  2970	  2982	  2994#	  2994
	  3005	  3013#	  3013	  3026	  3034#	  3034	  3047	  3055#	  3055	  3067	  3075#	  3075	  3087	  3099#
	  3099	  3110	  3118#	  3118	  3131	  3139#	  3139	  3152	  3160#	  3160	  3172	  3180#	  3180	  3192
	  3223#	  3223	  3237	  3252#	  3252	  3266	  3281#	  3281	  3295	  3310#	  3310	  3324	  3339#	  3339
	  3353	  3368#	  3368	  3382	  3397#	  3397	  3411	  3884#	  3884	  3911	  3919#	  3919	  3946	  3954#
	  3954	  3981	  3989#	  3989	  4016	  4024#	  4024	  4051	  4059#	  4059	  4086	  4094#	  4094	  4121
	  4129#	  4129	  4156	  4164#	  4164	  4191	  4199#	  4199	  4226	  4234#	  4234	  4261	  4269#	  4269
	  4296	  4304#	  4304	  4331	  4339#	  4339	  4366	  4374#	  4374	  4401	  4409#	  4409	  4436	  4444#
	  4444	  4471	  4479#	  4479	  4506	  4514#	  4514	  4541	  4549#	  4549	  4576	  4584#	  4584	  4611
	  4637#	  4637	  4653	  4671#	  4671	  4687	  4705#	  4705	  4721	  4739#	  4739	  4755	  4773#	  4773
	  4789	  4807#	  4807	  4823	  4841#	  4841	  4857	  5107#	  5107	  5121	  5147#	  5147	  5161	  5187#    SEQ 0186
	  5187	  5201	  5227#	  5227	  5241	  5267#	  5267	  5281	  5307#	  5307	  5321	  5347#	  5347	  5361
	  5392#	  5392	  5409	  5422#	  5422	  5439	  5452#	  5452	  5469	  5482#	  5482	  5499	  5512#	  5512
	  5529	  5542#	  5542	  5559	  5572#	  5572	  5589	  5602#	  5602	  5619	  5632#	  5632	  5649	  5662#
	  5662	  5679	  5692#	  5692	  5709	  5722#	  5722	  5739	  5752#	  5752	  5769	  5782#	  5782	  5799
	  5812#	  5812	  5829	  5842#	  5842	  5859	  5872#	  5872	  5889	  5902#	  5902	  5919	  5932#	  5932
	  5949	  5962#	  5962	  5979	  5992#	  5992	  6009	  6022#	  6022	  6039	  6052#	  6052	  6069	  6082#
	  6082	  6099	  6112#	  6112	  6129	  6142#	  6142	  6159	  6172#	  6172	  6189	  6202#	  6202	  6219
	  6232#	  6232	  6249	  6262#	  6262	  6279	  6292#	  6292	  6309	  6337#	  6337	  6349	  6365#	  6365
	  6377	  6393#	  6393	  6405	  6421#	  6421	  6433	  6449#	  6449	  6461	  6477#	  6477	  6489	  6505#
	  6505	  6517	  6533#	  6533	  6545	  6561#	  6561	  6573	  6589#	  6589	  6601	  6617#	  6617	  6629
	  6645#	  6645	  6657	  6673#	  6673	  6685	  6701#	  6701	  6713	  6729#	  6729	  6741	  6757#	  6757
	  6769	  6785#	  6785	  6797	  6813#	  6813	  6825	  6841#	  6841	  6853	  6868#	  6868	  6880	  6895#
	  6895	  6907	  6922#	  6922	  6934	  7002#	  7002	  7016	  7032#	  7032	  7046	  7062#	  7062	  7076
	  7092#	  7092	  7106	  7122#	  7122	  7136	  7152#	  7152	  7166	  7182#	  7182	  7196	  7212#	  7212
	  7226	  7239#	  7239	  7267	  7283	  7294#	  7294	  7308	  7320#	  7320	  7333	  7339
TOTALS	    94#
TPEND	  7395	  7399	  7403	  7407	  7411	  7415	  7419	  7420	  7422#
TRAPPI	   788	  7375#	  7387
TRP0A	  3432	  3441#
TRP1A	  3454	  3463#
TRP2A	  3476	  3485#
TRP3A	  3498	  3507#
TRP3TP	   318#
TRP4A	  3520	  3529#
TRP5A	  3543	  3552#
TRP6A	  3565	  3574#
TRPCLR	   790	  7347#	  7355
TRPFIL	  7378	  7392#
TRPSET	  1085	  7494#	  7509
TTNBRF	   573#
TTYFIL	   489#
TTYSPD	   490#
TXTINH	   105#
UBAVEC	   318#
USER	   380#	   704	   707	   709	   710	   721	   737#	   737	   740	   742	   743	   772	   775	   777
	   778
USERF	    40#	   318#	   706	   739	   774	  3446	  3468	  3490	  3512	  3534	  3557	  3579	  3587	  3612
	  3631	  3650	  3669	  3688	  3707	  3726	  3761	  3779	  3797	  3815	  3833	  3851	  3869	  3894
	  3929	  3964	  3999	  4034	  4069	  4104	  4139	  4174	  4209	  4244	  4279	  4314	  4349	  4384
	  4419	  4454	  4489	  4524	  4559	  4594	  7241
USRASB	   370
USRCRF	   499#
USRIO0	  7242	  7291#
USRIO1	  7317#
USRLFF	   498#
UUO	  3430	  7467#
UUO01	  5384#
UUO02	  5404	  5414#
UUO03	  5434	  5444#
UUO04	  5464	  5474#
UUO05	  5494	  5504#
UUO06	  5524	  5534#
UUO07	  5554	  5564#                                                                                                    SEQ 0187
UUO10	  5584	  5594#
UUO11	  5614	  5624#
UUO12	  5644	  5654#
UUO13	  5674	  5684#
UUO14	  5704	  5714#
UUO15	  5734	  5744#
UUO16	  5764	  5774#
UUO17	  5794	  5804#
UUO20	  5824	  5834#
UUO21	  5854	  5864#
UUO22	  5884	  5894#
UUO23	  5914	  5924#
UUO24	  5944	  5954#
UUO25	  5974	  5984#
UUO26	  6004	  6014#
UUO27	  6034	  6044#
UUO30	  6064	  6074#
UUO31	  6094	  6104#
UUO32	  6124	  6134#
UUO33	  6154	  6164#
UUO34	  6184	  6194#
UUO35	  6214	  6224#
UUO36	  6244	  6254#
UUO37	  6274	  6284#
UUOBTH	  6977#
UUODIS	   452#
UUOEXT	   408#
UUOIND	  6945#
UUOINX	  6961#
UUOPC	  6304	  6322#
UUOPCA	  6323#
UUORTN	   409#
UUOSKP	   406#
X	  1419#	  1445	  1455	  1455#	  1471	  1481	  1481#	  1497	  1507	  1507#	  1523	  1533	  1533#	  1549
	  1559	  1559#	  1575	  1585	  1585#	  1601	  1611	  1611#	  1621#	  1646	  1656	  1656#	  1676	  1686
	  1686#	  1706	  1716	  1716#	  1736	  1746	  1746#	  1766	  1776	  1776#	  1796	  1806	  1806#	  1826
	  1836	  1836#	  1848#	  1876	  1878	  1892	  1892#	  1916	  1918	  1932	  1932#	  1956	  1958	  1972
	  1972#	  1996	  1998	  2012	  2012#	  2036	  2038	  2052	  2052#	  2076	  2078	  2092	  2092#	  2116
	  2118	  2132	  2132#	  3209#	  3232	  3242	  3242#	  3261	  3271	  3271#	  3290	  3300	  3300#	  3319
	  3329	  3329#	  3348	  3358	  3358#	  3377	  3387	  3387#	  3406	  3416	  3416#	  4623#	  4639	  4661
	  4661#	  4673	  4695	  4695#	  4707	  4729	  4729#	  4741	  4763	  4763#	  4775	  4797	  4797#	  4809
	  4831	  4831#	  4843	  4865	  4865#	  4898#	  4926	  4935	  4935#	  4948	  4957	  4957#	  4970	  4979
	  4979#	  4992	  5001	  5001#	  5014	  5023	  5023#	  5036	  5045	  5045#	  5058	  5067	  5067#	  6321#
	  6333	  6340	  6344	  6354	  6354#	  6361	  6368	  6372	  6382	  6382#	  6389	  6396	  6400	  6410
	  6410#	  6417	  6424	  6428	  6438	  6438#	  6445	  6452	  6456	  6466	  6466#	  6473	  6480	  6484
	  6494	  6494#	  6501	  6508	  6512	  6522	  6522#	  6529	  6536	  6540	  6550	  6550#	  6557	  6564
	  6568	  6578	  6578#	  6585	  6592	  6596	  6606	  6606#	  6613	  6620	  6624	  6634	  6634#	  6641
	  6648	  6652	  6662	  6662#	  6669	  6676	  6680	  6690	  6690#	  6697	  6704	  6708	  6718	  6718#
	  6725	  6732	  6736	  6746	  6746#	  6753	  6760	  6764	  6774	  6774#	  6781	  6788	  6792	  6802
	  6802#	  6809	  6816	  6820	  6830	  6830#	  6832#	  6837	  6844	  6848	  6859#	  6864	  6871	  6875
	  6886#	  6891	  6898	  6902	  6913#	  6918	  6925	  6929	  6939#
XAC0	  7360#	  7360	  7369	  7376#	  7376	  7385	  7495#	  7495	  7506
XAC1	  7361#	  7361	  7370	  7377#	  7377	  7386	  7496#	  7496	  7507                                             SEQ 0188
XAC15	  7348#	  7348	  7354
XAC16	  7497#	  7497	  7508
XMUPC	  7247	  7266#
XMUUO	  7247#
XMUUO0	  7261#	  7277
Y	  1622#	  1642	  1657	  1657#	  1672	  1687	  1687#	  1702	  1717	  1717#	  1732	  1747	  1747#	  1762
	  1777	  1777#	  1792	  1807	  1807#	  1822	  1837	  1837#	  3210#	  3227	  3243	  3243#	  3256	  3272
	  3272#	  3285	  3301	  3301#	  3314	  3330	  3330#	  3343	  3359	  3359#	  3372	  3388	  3388#	  3401
	  3417	  3417#
Z1	  4624#	  4640	  4646	  4662	  4662#	  4674	  4680	  4696	  4696#	  4708	  4714	  4730	  4730#	  4742
	  4748	  4764	  4764#	  4776	  4782	  4798	  4798#	  4810	  4816	  4832	  4832#	  4844	  4850	  4866
	  4866#
$$420	   678#
$$421	   679#
$$422	   680#
$$423	   681#
$$424	   682#
$$425	   683#
$$426	   684#
$$427	   685#
$$430	   686#
$$431	   687#
$$432	   688#
$$433	   689#
$$434	   690#
$$435	   691#
$$436	   692#
$$437	   693#
$$500	   696#
$$501	   697#
$$502	   698#
$$503	   699#
$$BEGI	   666#
$$LOC	   663#	   700
$$MUUO	   604#
$$OUTE	   610#
$$STAR	   666	   667	   704#
$$TAX1	   622#
$$TAX2	   623#
$$TOGG	   616#
$$UUO	   593#
$ACC0	   431#
$BEGEN	   673#
$BEND1	   401#
$BEND2	   402#
$CHRIN	   492#
$CRLF	   494#
$DDT	   657#
$DEVCH	   318#
$DSKUP	   371#
$DVOFF	   488#
$EMODE	   369#
$FFF	   496#                                                                                                            SEQ 0189
$IBUF	   544#
$INEXT	   546#
$INNM	   545#
$ITRHL	   412#
$ITRX1	   413#
$LPAPE	  7515
$MMAP	   372#
$MODVL	   367#
$MODVU	   368#
$OBUF	   535#
$ONETM	   395#
$OUTEX	   537#
$OUTNM	   536#
$PAPER	   318
$PARER	   419#
$PNAME	   365#
$PSHER	   423#
$PVER	   366#
$RSRTX	   415#
$RSRTY	   416#
$SPAG1	   435#
$SPB1	   721#
$SPBEN	   673	   719#
$SPBEX	   722	   730#
$SPBUS	   724#
$START	   332#
$STD	   656#	   670#
$STKIL	   713#
$STL	   658#
$STM	   659#
$SVAPR	   433#
$SVPAG	   434#
$SVPI	   432#
$SVUPC	   438#
$SVUUO	   437#
$TABF	   495#
$TTCHR	   491#
$TWCNT	   487#
$TYPNB	   493#
$UMODE	   370#
$UORTX	   410#
$USRHL	   414#
$UUOER	   411#	   452
$VTF	   497#
%ACTFL	   444#
%ACTUL	   445#
%COREC	   443#
%CORFL	   442#
%DISCR	   446#
%ERHI1	   585#
%ERHI2	   586#
%ERHI3	   587#
%X	  1102#	  1103	  1223	  1228#	  1229	  1241	  1246#	  1247	  1259	  1264#	  1265	  1435#	  1436	  1451     SEQ 0190
	  1461#	  1462	  1477	  1487#	  1488	  1503	  1513#	  1514	  1529	  1539#	  1540	  1555	  1565#	  1566
	  1581	  1591#	  1592	  1607	  1636#	  1637	  1652	  1666#	  1667	  1682	  1696#	  1697	  1712	  1726#
	  1727	  1742	  1756#	  1757	  1772	  1786#	  1787	  1802	  1816#	  1817	  1832	  1870#	  1871	  1888
	  1910#	  1911	  1928	  1950#	  1951	  1968	  1990#	  1991	  2008	  2030#	  2031	  2048	  2070#	  2071
	  2088	  2110#	  2111	  2128	  2152#	  2153	  2166	  2171#	  2172	  2187	  2192#	  2193	  2208	  2213#
	  2214	  2228	  2233#	  2234	  2248	  2257#	  2258	  2271	  2276#	  2277	  2292	  2297#	  2298	  2313
	  2318#	  2319	  2333	  2338#	  2339	  2353	  2362#	  2363	  2376	  2381#	  2382	  2397	  2402#	  2403
	  2418	  2423#	  2424	  2438	  2443#	  2444	  2458	  2467#	  2468	  2481	  2486#	  2487	  2502	  2507#
	  2508	  2523	  2528#	  2529	  2543	  2548#	  2549	  2563	  2572#	  2573	  2586	  2591#	  2592	  2607
	  2612#	  2613	  2628	  2633#	  2634	  2648	  2653#	  2654	  2668	  2677#	  2678	  2691	  2696#	  2697
	  2712	  2717#	  2718	  2733	  2738#	  2739	  2753	  2758#	  2759	  2773	  2782#	  2783	  2796	  2801#
	  2802	  2817	  2822#	  2823	  2838	  2843#	  2844	  2858	  2863#	  2864	  2878	  2887#	  2888	  2901
	  2906#	  2907	  2922	  2927#	  2928	  2943	  2948#	  2949	  2963	  2968#	  2969	  2983	  2992#	  2993
	  3006	  3011#	  3012	  3027	  3032#	  3033	  3048	  3053#	  3054	  3068	  3073#	  3074	  3088	  3097#
	  3098	  3111	  3116#	  3117	  3132	  3137#	  3138	  3153	  3158#	  3159	  3173	  3178#	  3179	  3193
	  3221#	  3222	  3238	  3250#	  3251	  3267	  3279#	  3280	  3296	  3308#	  3309	  3325	  3337#	  3338
	  3354	  3366#	  3367	  3383	  3395#	  3396	  3412	  3882#	  3883	  3912	  3917#	  3918	  3947	  3952#
	  3953	  3982	  3987#	  3988	  4017	  4022#	  4023	  4052	  4057#	  4058	  4087	  4092#	  4093	  4122
	  4127#	  4128	  4157	  4162#	  4163	  4192	  4197#	  4198	  4227	  4232#	  4233	  4262	  4267#	  4268
	  4297	  4302#	  4303	  4332	  4337#	  4338	  4367	  4372#	  4373	  4402	  4407#	  4408	  4437	  4442#
	  4443	  4472	  4477#	  4478	  4507	  4512#	  4513	  4542	  4547#	  4548	  4577	  4582#	  4583	  4612
	  4635#	  4636	  4654	  4669#	  4670	  4688	  4703#	  4704	  4722	  4737#	  4738	  4756	  4771#	  4772
	  4790	  4805#	  4806	  4824	  4839#	  4840	  4858	  5105#	  5106	  5122	  5145#	  5146	  5162	  5185#
	  5186	  5202	  5225#	  5226	  5242	  5265#	  5266	  5282	  5305#	  5306	  5322	  5345#	  5346	  5362
	  5390#	  5391	  5410	  5420#	  5421	  5440	  5450#	  5451	  5470	  5480#	  5481	  5500	  5510#	  5511
	  5530	  5540#	  5541	  5560	  5570#	  5571	  5590	  5600#	  5601	  5620	  5630#	  5631	  5650	  5660#
	  5661	  5680	  5690#	  5691	  5710	  5720#	  5721	  5740	  5750#	  5751	  5770	  5780#	  5781	  5800
	  5810#	  5811	  5830	  5840#	  5841	  5860	  5870#	  5871	  5890	  5900#	  5901	  5920	  5930#	  5931
	  5950	  5960#	  5961	  5980	  5990#	  5991	  6010	  6020#	  6021	  6040	  6050#	  6051	  6070	  6080#
	  6081	  6100	  6110#	  6111	  6130	  6140#	  6141	  6160	  6170#	  6171	  6190	  6200#	  6201	  6220
	  6230#	  6231	  6250	  6260#	  6261	  6280	  6290#	  6291	  6310	  6335#	  6336	  6350	  6363#	  6364
	  6378	  6391#	  6392	  6406	  6419#	  6420	  6434	  6447#	  6448	  6462	  6475#	  6476	  6490	  6503#
	  6504	  6518	  6531#	  6532	  6546	  6559#	  6560	  6574	  6587#	  6588	  6602	  6615#	  6616	  6630
	  6643#	  6644	  6658	  6671#	  6672	  6686	  6699#	  6700	  6714	  6727#	  6728	  6742	  6755#	  6756
	  6770	  6783#	  6784	  6798	  6811#	  6812	  6826	  6839#	  6840	  6854	  6866#	  6867	  6881	  6893#
	  6894	  6908	  6920#	  6921	  6935	  7000#	  7001	  7017	  7030#	  7031	  7047	  7060#	  7061	  7077
	  7090#	  7091	  7107	  7120#	  7121	  7137	  7150#	  7151	  7167	  7180#	  7181	  7197	  7210#	  7211
	  7227	  7237#	  7238	  7268	  7284	  7292#	  7293	  7309	  7318#	  7319	  7334
..0001	  1438#
..0002	  1464#
..0003	  1490#
..0004	  1516#
..0005	  1542#
..0006	  1568#
..0007	  1594#
..0010	  1639#
..0011	  1669#
..0012	  1699#
..0013	  1729#
..0014	  1759#
..0015	  1789#
..0016	  1819#
..0017	  1873#                                                                                                            SEQ 0191
..0020	  1913#
..0021	  1953#
..0022	  1993#
..0023	  2033#
..0024	  2073#
..0025	  2113#
..0026	  2155#
..0027	  2260#
..0030	  2365#
..0031	  2470#
..0032	  2575#
..0033	  2680#
..0034	  2785#
..0035	  2890#
..0036	  2995#
..0037	  3100#
..0040	  3224#
..0041	  3253#
..0042	  3282#
..0043	  3311#
..0044	  3340#
..0045	  3369#
..0046	  3398#
..0047	  3443#
..0050	  3465#
..0051	  3487#
..0052	  3509#
..0053	  3531#
..0054	  3554#
..0055	  3576#
..0056	  3609#
..0057	  3628#
..0060	  3647#
..0061	  3666#
..0062	  3685#
..0063	  3704#
..0064	  3723#
..0065	  3750#
..0066	  3758#
..0067	  3768#
..0070	  3776#
..0071	  3786#
..0072	  3794#
..0073	  3804#
..0074	  3812#
..0075	  3822#
..0076	  3830#
..0077	  3840#
..0100	  3848#
..0101	  3858#
..0102	  3866#
..0103	  3891#
..0104	  3926#                                                                                                            SEQ 0192
..0105	  3961#
..0106	  3996#
..0107	  4031#
..0110	  4066#
..0111	  4101#
..0112	  4136#
..0113	  4171#
..0114	  4206#
..0115	  4241#
..0116	  4276#
..0117	  4311#
..0120	  4346#
..0121	  4381#
..0122	  4416#
..0123	  4451#
..0124	  4486#
..0125	  4521#
..0126	  4556#
..0127	  4591#
..0130	  4638#
..0131	  4672#
..0132	  4706#
..0133	  4740#
..0134	  4774#
..0135	  4808#
..0136	  4842#
..0137	  5110	  5119#	  5126	  5128
..0140	  5150	  5159#	  5166	  5168
..0141	  5190	  5199#	  5206	  5208
..0142	  5230	  5239#	  5246	  5248
..0143	  5270	  5279#	  5286	  5288
..0144	  5310	  5319#	  5326	  5328
..0145	  5350	  5359#	  5366	  5368
..0146	  5393#
..0147	  5423#
..0150	  5453#
..0151	  5483#
..0152	  5513#
..0153	  5543#
..0154	  5573#
..0155	  5603#
..0156	  5633#
..0157	  5663#
..0160	  5693#
..0161	  5723#
..0162	  5753#
..0163	  5783#
..0164	  5813#
..0165	  5843#
..0166	  5873#
..0167	  5903#
..0170	  5933#
..0171	  5963#                                                                                                            SEQ 0193
..0172	  5993#
..0173	  6023#
..0174	  6053#
..0175	  6083#
..0176	  6113#
..0177	  6143#
..0200	  6173#
..0201	  6203#
..0202	  6233#
..0203	  6263#
..0204	  6293#
..0205	  6338#
..0206	  6341#
..0207	  6345#
..0210	  6366#
..0211	  6369#
..0212	  6373#
..0213	  6394#
..0214	  6397#
..0215	  6401#
..0216	  6422#
..0217	  6425#
..0220	  6429#
..0221	  6450#
..0222	  6453#
..0223	  6457#
..0224	  6478#
..0225	  6481#
..0226	  6485#
..0227	  6506#
..0230	  6509#
..0231	  6513#
..0232	  6534#
..0233	  6537#
..0234	  6541#
..0235	  6562#
..0236	  6565#
..0237	  6569#
..0240	  6590#
..0241	  6593#
..0242	  6597#
..0243	  6618#
..0244	  6621#
..0245	  6625#
..0246	  6646#
..0247	  6649#
..0250	  6653#
..0251	  6674#
..0252	  6677#
..0253	  6681#
..0254	  6702#
..0255	  6705#
..0256	  6709#                                                                                                            SEQ 0194
..0257	  6730#
..0260	  6733#
..0261	  6737#
..0262	  6758#
..0263	  6761#
..0264	  6765#
..0265	  6786#
..0266	  6789#
..0267	  6793#
..0270	  6814#
..0271	  6817#
..0272	  6821#
..0273	  6842#
..0274	  6845#
..0275	  6849#
..0276	  6869#
..0277	  6872#
..0300	  6876#
..0301	  6896#
..0302	  6899#
..0303	  6903#
..0304	  6923#
..0305	  6926#
..0306	  6930#
..0307	  7004	  7010#
..0310	  7006	  7008#
..0311	  7034	  7040#
..0312	  7036	  7038#
..0313	  7064	  7070#
..0314	  7066	  7068#
..0315	  7094	  7100#
..0316	  7096	  7098#
..0317	  7124	  7130#
..0320	  7126	  7128#
..0321	  7154	  7160#
..0322	  7156	  7158#
..0323	  7184	  7190#
..0324	  7186	  7188#
..0325	  7214	  7220#
..0326	  7216	  7218#
.JB41	   318#
.JBAPR	   318#
.JBCNI	   318#
.JBDDT	   318#
.JBFF	   318#
.JBOPC	   318#
.JBREL	   318#
.JBREN	   318#
.JBSA	   318#
.JBSYM	   318#
.JBTPC	   318#
.JBUSY	   318#
.JBUUO	   318#                                                                                                            SEQ 0195
.JBVER	   318#

APRID	   318#
BCIO	   318#                                                                                                            SEQ 0196
BCIOB	   318#
BLURB	   797#	  1304	  1420	  1613	  1840	  2135	  3199	  4872
BLURB1	   803#	  1859	  1899	  1939	  1979	  2019	  2059	  2099
BSIO	   318#
BSIOB	   318#
CFLUSH	   278#
CINVAL	   277#
CLOKOP	   272#
CLRAPR	   792#	  1082	  1146	  1153	  1160	  1167	  1174	  1439	  1465	  1491	  1517	  1543	  1569	  1595
	  1640	  1670	  1700	  1730	  1760	  1790	  1820	  1874	  1914	  1954	  1994	  2034	  2074	  2114
	  2156	  2175	  2196	  2217	  2237	  2261	  2280	  2301	  2322	  2342	  2366	  2385	  2406	  2427
	  2447	  2471	  2490	  2511	  2532	  2552	  2576	  2595	  2616	  2637	  2657	  2681	  2700	  2721
	  2742	  2762	  2786	  2805	  2826	  2847	  2867	  2891	  2910	  2931	  2952	  2972	  2996	  3015
	  3036	  3057	  3077	  3101	  3120	  3141	  3162	  3182	  3225	  3254	  3283	  3312	  3341	  3370
	  3399	  3429	  3448	  3470	  3492	  3514	  3536	  3559	  3591	  3596	  3615	  3634	  3653	  3672
	  3691	  3710	  3730	  3742	  3872	  3896	  3931	  3966	  4001	  4036	  4071	  4106	  4141	  4176
	  4211	  4246	  4281	  4316	  4351	  4386	  4421	  4456	  4491	  4526	  4561	  4596	  4617	  4659
	  4693	  4727	  4761	  4795	  4829	  4863	  4879	  4921	  4943	  4965	  4987	  5009	  5031	  5053
	  5074	  5087	  5113	  5135	  5153	  5175	  5193	  5215	  5233	  5255	  5273	  5295	  5313	  5335
	  5353	  5375	  6946	  6962	  6978	  7245	  7296	  7322
CLRBT1	   993#	  3741	  5112	  5152	  5192	  5232	  5272	  5312	  5352
CLRBTH	   989#	  1438	  1464	  1490	  1516	  1542	  1568	  1594	  1639	  1669	  1699	  1729	  1759	  1789
	  1819	  1873	  1913	  1953	  1993	  2033	  2073	  2113	  2155	  2174	  2195	  2216	  2236	  2260
	  2279	  2300	  2321	  2341	  2365	  2384	  2405	  2426	  2446	  2470	  2489	  2510	  2531	  2551
	  2575	  2594	  2615	  2636	  2656	  2680	  2699	  2720	  2741	  2761	  2785	  2804	  2825	  2846
	  2866	  2890	  2909	  2930	  2951	  2971	  2995	  3014	  3035	  3056	  3076	  3100	  3119	  3140
	  3161	  3181	  3224	  3253	  3282	  3311	  3340	  3369	  3398	  3590	  3871	  3895	  3930	  3965
	  4000	  4035	  4070	  4105	  4140	  4175	  4210	  4245	  4280	  4315	  4350	  4385	  4420	  4455
	  4490	  4525	  4560	  4595	  4616	  4658	  4692	  4726	  4760	  4794	  4828	  4862	  4878	  4920
	  4942	  4964	  4986	  5008	  5030	  5052	  5073	  5086	  5134	  5174	  5214	  5254	  5294	  5334
	  5374	  6945	  6961	  6977	  7244	  7295	  7321
CLRPI	   793#	  1083	  1440	  1466	  1492	  1518	  1544	  1570	  1596	  1641	  1671	  1701	  1731	  1761
	  1791	  1821	  1875	  1915	  1955	  1995	  2035	  2075	  2115	  2157	  2176	  2197	  2218	  2238
	  2262	  2281	  2302	  2323	  2343	  2367	  2386	  2407	  2428	  2448	  2472	  2491	  2512	  2533
	  2553	  2577	  2596	  2617	  2638	  2658	  2682	  2701	  2722	  2743	  2763	  2787	  2806	  2827
	  2848	  2868	  2892	  2911	  2932	  2953	  2973	  2997	  3016	  3037	  3058	  3078	  3102	  3121
	  3142	  3163	  3183	  3226	  3255	  3284	  3313	  3342	  3371	  3400	  3428	  3447	  3469	  3491
	  3513	  3535	  3558	  3592	  3595	  3614	  3633	  3652	  3671	  3690	  3709	  3729	  3743	  3873
	  3897	  3932	  3967	  4002	  4037	  4072	  4107	  4142	  4177	  4212	  4247	  4282	  4317	  4352
	  4387	  4422	  4457	  4492	  4527	  4562	  4597	  4618	  4660	  4694	  4728	  4762	  4796	  4830
	  4864	  4880	  4922	  4944	  4966	  4988	  5010	  5032	  5054	  5075	  5088	  5114	  5136	  5154
	  5176	  5194	  5216	  5234	  5256	  5274	  5296	  5314	  5336	  5354	  5376	  6947	  6963	  6979
	  7246	  7297	  7323
CLRPT	   318#
CLRTRP	   790#	  3728
CWRTBI	   279#
DROPDV	   239#
ENDUUO	   285#	   400
EOPUUO	   286#	   402
ERRHLT	   173#
EXECUT	   938#
EXIT	   727
FATAL	   172#                                                                                                            SEQ 0197
FMUUO	  1028#	  6992	  7022	  7052	  7082	  7112	  7142	  7172	  7202
FRD36	   314#
FRD8	   315#
FREAD	   313#
FSELEC	   312#
GET	   156#
GO	   153#
HALT	   158#	   421	   678	   680	   681	   685	   699	   733	  1091	  1098	  1108	  1116	  1127	  1135
	  1143	  1151	  1158	  1165	  1172	  1181	  1188	  1196	  1203	  1211	  1218	  1225	  1235	  1243
	  1253	  1261	  1272	  1281	  1289	  1297	  1318	  1326	  1333	  1341	  1347	  1355	  1362	  1370
	  1377	  1385	  1392	  1400	  1407	  1415	  1447	  1453	  1473	  1479	  1499	  1505	  1525	  1531
	  1551	  1557	  1577	  1583	  1603	  1609	  1648	  1654	  1678	  1684	  1708	  1714	  1738	  1744
	  1768	  1774	  1798	  1804	  1828	  1834	  1884	  1890	  1924	  1930	  1964	  1970	  2004	  2010
	  2044	  2050	  2084	  2090	  2124	  2130	  2161	  2168	  2182	  2189	  2203	  2210	  2223	  2230
	  2244	  2250	  2266	  2273	  2287	  2294	  2308	  2315	  2328	  2335	  2349	  2355	  2371	  2378
	  2392	  2399	  2413	  2420	  2433	  2440	  2454	  2460	  2476	  2483	  2497	  2504	  2518	  2525
	  2538	  2545	  2559	  2565	  2581	  2588	  2602	  2609	  2623	  2630	  2643	  2650	  2664	  2670
	  2686	  2693	  2707	  2714	  2728	  2735	  2748	  2755	  2769	  2775	  2791	  2798	  2812	  2819
	  2833	  2840	  2853	  2860	  2874	  2880	  2896	  2903	  2917	  2924	  2938	  2945	  2958	  2965
	  2979	  2985	  3001	  3008	  3022	  3029	  3043	  3050	  3063	  3070	  3084	  3090	  3106	  3113
	  3127	  3134	  3148	  3155	  3168	  3175	  3189	  3195	  3234	  3240	  3263	  3269	  3292	  3298
	  3321	  3327	  3350	  3356	  3379	  3385	  3408	  3414	  3914	  3949	  3984	  4019	  4054	  4089
	  4124	  4159	  4194	  4229	  4264	  4299	  4334	  4369	  4404	  4439	  4474	  4509	  4544	  4579
	  4614	  4650	  4656	  4684	  4690	  4718	  4724	  4752	  4758	  4786	  4792	  4820	  4826	  4854
	  4860	  4891	  4933	  4955	  4977	  4999	  5021	  5043	  5065	  5081	  5094	  5118	  5124	  5130
	  5158	  5164	  5170	  5198	  5204	  5210	  5238	  5244	  5250	  5278	  5284	  5290	  5318	  5324
	  5330	  5358	  5364	  5370	  5396	  5400	  5406	  5412	  5426	  5430	  5436	  5442	  5456	  5460
	  5466	  5472	  5486	  5490	  5496	  5502	  5516	  5520	  5526	  5532	  5546	  5550	  5556	  5562
	  5576	  5580	  5586	  5592	  5606	  5610	  5616	  5622	  5636	  5640	  5646	  5652	  5666	  5670
	  5676	  5682	  5696	  5700	  5706	  5712	  5726	  5730	  5736	  5742	  5756	  5760	  5766	  5772
	  5786	  5790	  5796	  5802	  5816	  5820	  5826	  5832	  5846	  5850	  5856	  5862	  5876	  5880
	  5886	  5892	  5906	  5910	  5916	  5922	  5936	  5940	  5946	  5952	  5966	  5970	  5976	  5982
	  5996	  6000	  6006	  6012	  6026	  6030	  6036	  6042	  6056	  6060	  6066	  6072	  6086	  6090
	  6096	  6102	  6116	  6120	  6126	  6132	  6146	  6150	  6156	  6162	  6176	  6180	  6186	  6192
	  6206	  6210	  6216	  6222	  6236	  6240	  6246	  6252	  6266	  6270	  6276	  6282	  6296	  6300
	  6306	  6312	  6341	  6346	  6352	  6369	  6374	  6380	  6397	  6402	  6408	  6425	  6430	  6436
	  6453	  6458	  6464	  6481	  6486	  6492	  6509	  6514	  6520	  6537	  6542	  6548	  6565	  6570
	  6576	  6593	  6598	  6604	  6621	  6626	  6632	  6649	  6654	  6660	  6677	  6682	  6688	  6705
	  6710	  6716	  6733	  6738	  6744	  6761	  6766	  6772	  6789	  6794	  6800	  6817	  6822	  6828
	  6845	  6850	  6856	  6872	  6877	  6883	  6899	  6904	  6910	  6926	  6931	  6937	  6952	  6956
	  6968	  6972	  6984	  6988	  7008	  7013	  7019	  7038	  7043	  7049	  7068	  7073	  7079	  7098
	  7103	  7109	  7128	  7133	  7139	  7158	  7163	  7169	  7188	  7193	  7199	  7218	  7223	  7229
	  7262	  7263	  7264	  7265	  7270	  7274	  7279	  7286	  7305	  7311	  7330	  7336	  7420	  7425
	  7432	  7436	  7440	  7444	  7448	  7452	  7456	  7460	  7467	  7468	  7469	  7470	  7471	  7472
	  7473	  7474	  7475	  7477	  7479	  7480
HALTPI	   789	  1311	  2146	  3427	  3453	  3475	  3497	  3519	  3542	  3564	  3594	  3613	  3632	  3651
	  3670	  3689	  3708	  3727	  3744	  3762	  3780	  3798	  3816	  3834	  3852	  3870	  3898	  3933
	  3968	  4003	  4038	  4073	  4108	  4143	  4178	  4213	  4248	  4283	  4318	  4353	  4388	  4423
	  4458	  4493	  4528	  4563	  4598
INDPI	  1048#	  5098	  5138	  5178	  5218	  5258	  5298	  5338
JEN	   160#	  4647	  4681	  4715	  4749	  4783	  4817	  4851	  5133	  5173	  5213	  5253	  5293	  5333
	  5373
JRSTF	   159#	  3445	  3467	  3489	  3511	  3533	  3556	  3578	  3611	  3630	  3649	  3668	  3687	  3706     SEQ 0198
	  3725	  3760	  3778	  3796	  3814	  3832	  3850	  3868	  3893	  3928	  3963	  3998	  4033	  4068
	  4103	  4138	  4173	  4208	  4243	  4278	  4313	  4348	  4383	  4418	  4453	  4488	  4523	  4558
	  4593	  7300	  7326	  7424
MAPADR	   295#
MAPCNK	   296#
MAPMEM	   292#
MAPPNT	   298#
MAPSET	   297#
MEMSEG	   294#
MEMZRO	   293#
MODPCP	   305#
MODPCU	   304#
MTROP	   273#
NAME	     9#	    12
PBELL	   248#
PCRL	   242#
PCRL2	   246#
PCRL2F	   247#
PCRLF	   243#
PFORCE	   250#
PGMINT	   166#
PIDIS	   886#	  4631	  4665	  4699	  4733	  4767	  4801	  4835
PIHCLR	   858#	  3217	  3246	  3275	  3304	  3333	  3362	  3391
PINO	   834#	  1430	  1456	  1482	  1508	  1534	  1560	  1586
PIONOF	   870#	  1855	  1895	  1935	  1975	  2015	  2055	  2095
PITEST	   902#	  2148	  2253	  2358	  2463	  2568	  2673	  2778	  2883	  2988	  3093
PIYES	   846#	  1630	  1660	  1690	  1720	  1750	  1780	  1810
PJRST	   157#
PMSG	   252#
PMSGF	   255#
PNT1	   208#
PNT11	   222#
PNT11F	   223#
PNT1F	   209#
PNT2	   210#
PNT2F	   211#
PNT3	   212#
PNT3F	   213#
PNT4	   214#
PNT4F	   215#
PNT5	   216#
PNT5F	   217#
PNT6	   218#
PNT6F	   219#
PNT7	   220#
PNT7F	   221#
PNTA	   194#
PNTADF	   225#
PNTADR	   224#
PNTAF	   195#
PNTAL	   196#
PNTALF	   197#
PNTCHF	   207#                                                                                                            SEQ 0199
PNTCHR	   206#
PNTCI	   204#
PNTCIF	   205#
PNTCW	   240#
PNTCWF	   241#
PNTDCF	   233#
PNTDEC	   232#
PNTDS	   234#
PNTDSF	   235#
PNTHW	   228#
PNTHWF	   229#
PNTMSF	   201#
PNTMSG	   200#
PNTNM	   236#
PNTOCF	   231#
PNTOCS	   230#
PNTOCT	   226#
PNTOTF	   227#
PNTSIX	   237#
PNTSXF	   238#
PSIXL	   198#
PSIXLF	   199#
PSIXM	   202#
PSIXMF	   203#
PSP	   244#
PSPF	   245#
PUT	   155#
RDAPR	   318#
RDCSB	   318#
RDCSTM	   318#
RDEBR	   318#
RDHSB	   318#
RDINT	   318#
RDIO	   318#
RDIOB	   318#
RDPI	   318#
RDPUR	   318#
RDSPB	   318#
RDTIM	   318#
RDUBR	   318#
RTN	   154#	   408
S	    84#	    86	    90	   119	   121	   130	   133	   148	   149	   151	   162	   164	   168	   170
	   175	   179	   318	   323	   329	   356	   358	   376	   378	   396	   398	   427	   429	   447
	   449	   467	   469	   477	   479	   500	   505	   531	   533	   540	   542	   548	   550	   556
	   558	   562	   564	   569	   571	   575	   577	   581	   583	   589	   591	   594	   596	   600
	   602	   606	   608	   612	   614	   618	   620	   625	   627	   631	   633	   637	   639	   641
	   643
SBWAIT	  1005#	  3749	  3767	  3785	  3803	  3821	  3839	  3857
SFLAG	    56#
SIXBTZ	   261#
STOP	    48#	   945#	  1090	  1097	  1107	  1115	  1126	  1134	  1142	  1150	  1157	  1164	  1171	  1180
	  1187	  1195	  1202	  1210	  1217	  1234	  1252	  1271	  1280	  1288	  1296	  1317	  1325	  1332
	  1340	  1346	  1354	  1361	  1369	  1376	  1384	  1391	  1399	  1406	  1414	  1446	  1472	  1498     SEQ 0200
	  1524	  1550	  1576	  1602	  1647	  1677	  1707	  1737	  1767	  1797	  1827	  1883	  1923	  1963
	  2003	  2043	  2083	  2123	  2160	  2181	  2202	  2222	  2243	  2265	  2286	  2307	  2327	  2348
	  2370	  2391	  2412	  2432	  2453	  2475	  2496	  2517	  2537	  2558	  2580	  2601	  2622	  2642
	  2663	  2685	  2706	  2727	  2747	  2768	  2790	  2811	  2832	  2852	  2873	  2895	  2916	  2937
	  2957	  2978	  3000	  3021	  3042	  3062	  3083	  3105	  3126	  3147	  3167	  3188	  3233	  3262
	  3291	  3320	  3349	  3378	  3407	  4649	  4683	  4717	  4751	  4785	  4819	  4853	  4890	  4932
	  4954	  4976	  4998	  5020	  5042	  5064	  5080	  5093	  5129	  5169	  5209	  5249	  5289	  5329
	  5369	  6955	  6971	  6987	  7012	  7042	  7072	  7102	  7132	  7162	  7192	  7222	  7273	  7278
	  7304	  7329
STOP1	   949#	  5405	  5435	  5465	  5495	  5525	  5555	  5585	  5615	  5645	  5675	  5705	  5735	  5765
	  5795	  5825	  5855	  5885	  5915	  5945	  5975	  6005	  6035	  6065	  6095	  6125	  6155	  6185
	  6215	  6245	  6275	  6305	  6345	  6373	  6401	  6429	  6457	  6485	  6513	  6541	  6569	  6597
	  6625	  6653	  6681	  6709	  6737	  6765	  6793	  6821	  6849	  6876	  6903	  6930
STOP2	   816#	  1224	  1242	  1260	  1452	  1478	  1504	  1530	  1556	  1582	  1608	  1653	  1683	  1713
	  1743	  1773	  1803	  1833	  1889	  1929	  1969	  2009	  2049	  2089	  2129	  2167	  2188	  2209
	  2229	  2249	  2272	  2293	  2314	  2334	  2354	  2377	  2398	  2419	  2439	  2459	  2482	  2503
	  2524	  2544	  2564	  2587	  2608	  2629	  2649	  2669	  2692	  2713	  2734	  2754	  2774	  2797
	  2818	  2839	  2859	  2879	  2902	  2923	  2944	  2964	  2984	  3007	  3028	  3049	  3069	  3089
	  3112	  3133	  3154	  3174	  3194	  3239	  3268	  3297	  3326	  3355	  3384	  3413	  3913	  3948
	  3983	  4018	  4053	  4088	  4123	  4158	  4193	  4228	  4263	  4298	  4333	  4368	  4403	  4438
	  4473	  4508	  4543	  4578	  4613	  4655	  4689	  4723	  4757	  4791	  4825	  4859	  5123	  5163
	  5203	  5243	  5283	  5323	  5363	  5411	  5441	  5471	  5501	  5531	  5561	  5591	  5621	  5651
	  5681	  5711	  5741	  5771	  5801	  5831	  5861	  5891	  5921	  5951	  5981	  6011	  6041	  6071
	  6101	  6131	  6161	  6191	  6221	  6251	  6281	  6311	  6351	  6379	  6407	  6435	  6463	  6491
	  6519	  6547	  6575	  6603	  6631	  6659	  6687	  6715	  6743	  6771	  6799	  6827	  6855	  6882
	  6909	  6936	  7018	  7048	  7078	  7108	  7138	  7168	  7198	  7228	  7269	  7285	  7310	  7335
STUCK	  1001#	  3436	  3458	  3480	  3502	  3524	  3547	  3569	  3601	  3620	  3639	  3658	  3677	  3696
	  3715	  3751	  3769	  3787	  3805	  3823	  3841	  3859	  3903	  3938	  3973	  4008	  4043	  4078
	  4113	  4148	  4183	  4218	  4253	  4288	  4323	  4358	  4393	  4428	  4463	  4498	  4533	  4568
	  4603
SWITCH	   267#
TBOTH	   830#	  1220	  1238	  1256	  2163	  2184	  2205	  2225	  2268	  2289	  2310	  2330	  2373	  2394
	  2415	  2435	  2478	  2499	  2520	  2540	  2583	  2604	  2625	  2645	  2688	  2709	  2730	  2750
	  2793	  2814	  2835	  2855	  2898	  2919	  2940	  2960	  3003	  3024	  3045	  3065	  3108	  3129
	  3150	  3170	  3909	  3944	  3979	  4014	  4049	  4084	  4119	  4154	  4189	  4224	  4259	  4294
	  4329	  4364	  4399	  4434	  4469	  4504	  4539	  4574
TGET	   825#	  1221	  1239	  1257	  1449	  1475	  1501	  1527	  1553	  1579	  1605	  1650	  1680	  1710
	  1740	  1770	  1800	  1830	  1886	  1926	  1966	  2006	  2046	  2086	  2126	  2164	  2185	  2206
	  2226	  2246	  2269	  2290	  2311	  2331	  2351	  2374	  2395	  2416	  2436	  2456	  2479	  2500
	  2521	  2541	  2561	  2584	  2605	  2626	  2646	  2666	  2689	  2710	  2731	  2751	  2771	  2794
	  2815	  2836	  2856	  2876	  2899	  2920	  2941	  2961	  2981	  3004	  3025	  3046	  3066	  3086
	  3109	  3130	  3151	  3171	  3191	  3236	  3265	  3294	  3323	  3352	  3381	  3410	  3910	  3945
	  3980	  4015	  4050	  4085	  4120	  4155	  4190	  4225	  4260	  4295	  4330	  4365	  4400	  4435
	  4470	  4505	  4540	  4575	  4610	  4652	  4686	  4720	  4754	  4788	  4822	  4856	  5120	  5160
	  5200	  5240	  5280	  5320	  5360	  5408	  5438	  5468	  5498	  5528	  5558	  5588	  5618	  5648
	  5678	  5708	  5738	  5768	  5798	  5828	  5858	  5888	  5918	  5948	  5978	  6008	  6038	  6068
	  6098	  6128	  6158	  6188	  6218	  6248	  6278	  6308	  6348	  6376	  6404	  6432	  6460	  6488
	  6516	  6544	  6572	  6600	  6628	  6656	  6684	  6712	  6740	  6768	  6796	  6824	  6852	  6879
	  6906	  6933	  7015	  7045	  7075	  7105	  7135	  7165	  7195	  7225	  7266	  7282	  7307	  7332
TIOE	   318#
TIOEB	   318#
TION	   318#
TIONB	   318#                                                                                                            SEQ 0201
TRAP	   997#	  3597	  3616	  3635	  3654	  3673	  3692	  3711	  3745	  3763	  3781	  3799	  3817	  3835
	  3853
TRPCHK	  1009#	  3442	  3464	  3486	  3508	  3530	  3553	  3575	  3608	  3627	  3646	  3665	  3684	  3703
	  3722	  3757	  3775	  3793	  3811	  3829	  3847	  3865	  3890	  3925	  3960	  3995	  4030	  4065
	  4100	  4135	  4170	  4205	  4240	  4275	  4310	  4345	  4380	  4415	  4450	  4485	  4520	  4555
	  4590
TRPPI	   788#	  1426	  1620	  1847	  3208	  4881	  4923	  4945	  4967	  4989	  5011	  5033	  5055
TSET	   820#	  1101	  1227	  1245	  1263	  1434	  1460	  1486	  1512	  1538	  1564	  1590	  1635	  1665
	  1695	  1725	  1755	  1785	  1815	  1869	  1909	  1949	  1989	  2029	  2069	  2109	  2151	  2170
	  2191	  2212	  2232	  2256	  2275	  2296	  2317	  2337	  2361	  2380	  2401	  2422	  2442	  2466
	  2485	  2506	  2527	  2547	  2571	  2590	  2611	  2632	  2652	  2676	  2695	  2716	  2737	  2757
	  2781	  2800	  2821	  2842	  2862	  2886	  2905	  2926	  2947	  2967	  2991	  3010	  3031	  3052
	  3072	  3096	  3115	  3136	  3157	  3177	  3220	  3249	  3278	  3307	  3336	  3365	  3394	  3881
	  3916	  3951	  3986	  4021	  4056	  4091	  4126	  4161	  4196	  4231	  4266	  4301	  4336	  4371
	  4406	  4441	  4476	  4511	  4546	  4581	  4634	  4668	  4702	  4736	  4770	  4804	  4838	  5104
	  5144	  5184	  5224	  5264	  5304	  5344	  5389	  5419	  5449	  5479	  5509	  5539	  5569	  5599
	  5629	  5659	  5689	  5719	  5749	  5779	  5809	  5839	  5869	  5899	  5929	  5959	  5989	  6019
	  6049	  6079	  6109	  6139	  6169	  6199	  6229	  6259	  6289	  6334	  6362	  6390	  6418	  6446
	  6474	  6502	  6530	  6558	  6586	  6614	  6642	  6670	  6698	  6726	  6754	  6782	  6810	  6838
	  6865	  6892	  6919	  6999	  7029	  7059	  7089	  7119	  7149	  7179	  7209	  7236	  7291	  7317
TTALTM	   188#
TTICHR	   181#
TTICLR	   191#
TTICNV	   186#
TTIDEC	   185#
TTINO	   183#
TTIOCT	   184#
TTIYES	   182#
TTLOOK	   187#
TTSIXB	   189#
TTYINP	   190#
WATINT	   812#	  1442	  1468	  1494	  1520	  1546	  1572	  1598	  1643	  1673	  1703	  1733	  1763	  1793
	  1823	  1879	  1919	  1959	  1999	  2039	  2079	  2119	  3228	  3257	  3286	  3315	  3344	  3373
	  3402	  3437	  3459	  3481	  3503	  3525	  3548	  3570	  3602	  3621	  3640	  3659	  3678	  3697
	  3716	  3752	  3770	  3788	  3806	  3824	  3842	  3860	  3904	  3939	  3974	  4009	  4044	  4079
	  4114	  4149	  4184	  4219	  4254	  4289	  4324	  4359	  4394	  4429	  4464	  4499	  4534	  4569
	  4604	  4641	  4675	  4709	  4743	  4777	  4811	  4845	  4886	  4928	  4950	  4972	  4994	  5016
	  5038	  5060
WRAPR	   318#
WRCSB	   318#
WRCSTM	   318#
WREBR	   318#
WRHSB	   318#
WRINT	   318#
WRIO	   318#
WRIOB	   318#
WRPI	   318#
WRPUR	   318#
WRSPB	   318#
WRTIM	   318#
WRUBR	   318#
XCHN2	  1014#	  3885	  3920	  3955	  3990	  4025	  4060	  4095	  4130	  4165	  4200	  4235	  4270	  4305
	  4340	  4375	  4410	  4445	  4480	  4515	  4550	  4585                                                     SEQ 0202
XUUO	   953#	  5384	  5414	  5444	  5474	  5504	  5534	  5564	  5594	  5624	  5654	  5684	  5714	  5744
	  5774	  5804	  5834	  5864	  5894	  5924	  5954	  5984	  6014	  6044	  6074	  6104	  6134	  6164
	  6194	  6224	  6254	  6284
XUUOA	   973#	  6329	  6357	  6385	  6413	  6441	  6469	  6497	  6525	  6553	  6581	  6609	  6637	  6665
	  6693	  6721	  6749	  6777	  6805	  6833	  6860	  6887	  6914

ADDI	  7351	  7365	  7366	  7381	  7382	  7502	  7503
ANDI	  5127	  5167	  5207	  5247	  5287	  5327	  5367	  5398	  5428	  5458	  5488	  5518	  5548	  5578     SEQ 0203
	  5608	  5638	  5668	  5698	  5728	  5758	  5788	  5818	  5848	  5878	  5908	  5938	  5968	  5998
	  6028	  6058	  6088	  6118	  6148	  6178	  6208	  6238	  6268	  6298	  6343	  6371	  6399	  6427
	  6455	  6483	  6511	  6539	  6567	  6595	  6623	  6651	  6679	  6707	  6735	  6763	  6791	  6819
	  6847	  6874	  6901	  6928	  7010	  7040	  7070	  7100	  7130	  7160	  7190	  7220
AOS	   406	   719
ASCII	   507	   509	   512	   513	   514	   515	   517	   518	   519	   520	   521	   522	   524	   525
	   526
ASCIZ	   749
BLOCK	   475	   535	   538	   544	   547	   553
BYTE	   523
CAIE	  1223	  1241	  1259	  1451	  1477	  1503	  1529	  1555	  1581	  1607	  1652	  1682	  1712	  1742
	  1772	  1802	  1832	  1888	  1928	  1968	  2008	  2048	  2088	  2128	  2166	  2187	  2208	  2228
	  2248	  2271	  2292	  2313	  2333	  2353	  2376	  2397	  2418	  2438	  2458	  2481	  2502	  2523
	  2543	  2563	  2586	  2607	  2628	  2648	  2668	  2691	  2712	  2733	  2753	  2773	  2796	  2817
	  2838	  2858	  2878	  2901	  2922	  2943	  2963	  2983	  3006	  3027	  3048	  3068	  3088	  3111
	  3132	  3153	  3173	  3193	  3238	  3267	  3296	  3325	  3354	  3383	  3412	  3912	  3947	  3982
	  4017	  4052	  4087	  4122	  4157	  4192	  4227	  4262	  4297	  4332	  4367	  4402	  4437	  4472
	  4507	  4542	  4577	  4612	  4654	  4688	  4722	  4756	  4790	  4824	  4858	  5122	  5128	  5162
	  5168	  5202	  5208	  5242	  5248	  5282	  5288	  5322	  5328	  5362	  5368	  5410	  5440	  5470
	  5500	  5530	  5560	  5590	  5620	  5650	  5680	  5710	  5740	  5770	  5800	  5830	  5860	  5890
	  5920	  5950	  5980	  6010	  6040	  6070	  6100	  6130	  6160	  6190	  6220	  6250	  6280	  6310
	  6344	  6350	  6372	  6378	  6400	  6406	  6428	  6434	  6456	  6462	  6484	  6490	  6512	  6518
	  6540	  6546	  6568	  6574	  6596	  6602	  6624	  6630	  6652	  6658	  6680	  6686	  6708	  6714
	  6736	  6742	  6764	  6770	  6792	  6798	  6820	  6826	  6848	  6854	  6875	  6881	  6902	  6908
	  6929	  6935	  7011	  7017	  7041	  7047	  7071	  7077	  7101	  7107	  7131	  7137	  7161	  7167
	  7191	  7197	  7221	  7227	  7268	  7277	  7284	  7309	  7334	  7504
CAIG	  7352
CAIGE	  7367	  7383
CAME	  1096	  5399	  5402	  5429	  5432	  5459	  5462	  5489	  5492	  5519	  5522	  5549	  5552	  5579
	  5582	  5609	  5612	  5639	  5642	  5669	  5672	  5699	  5702	  5729	  5732	  5759	  5762	  5789
	  5792	  5819	  5822	  5849	  5852	  5879	  5882	  5909	  5912	  5939	  5942	  5969	  5972	  5999
	  6002	  6029	  6032	  6059	  6062	  6089	  6092	  6119	  6122	  6149	  6152	  6179	  6182	  6209
	  6212	  6239	  6242	  6269	  6272	  6299	  6302
CAMN	  1089
CONI	  1088	  1095	  1113	  1124	  1132	  1140	  1148	  1155	  1162	  1169	  1178	  1185	  1193	  1200
	  1208	  1215	  1250	  1268	  1278	  1286	  1294	  1315	  1323	  1330	  1338	  1344	  1352	  1359
	  1367	  1374	  1382	  1389	  1397	  1404	  1412	  5078	  5091
CONO	   792	   793	  1084	  1111	  1112	  1122	  1123	  1130	  1131	  1138	  1139	  1147	  1154	  1161
	  1168	  1176	  1177	  1183	  1184	  1191	  1192	  1198	  1199	  1206	  1207	  1213	  1214	  1231
	  1249	  1267	  1276	  1277	  1283	  1285	  1292	  1293	  1314	  1321	  1322	  1329	  1336	  1337
	  1343	  1350	  1351	  1358	  1365	  1366	  1373	  1380	  1381	  1388	  1395	  1396	  1403	  1410
	  1411	  1441	  1467	  1493	  1519	  1545	  1571	  1597	  1642	  1672	  1702	  1732	  1762	  1792
	  1822	  1876	  1878	  1916	  1918	  1956	  1958	  1996	  1998	  2036	  2038	  2076	  2078	  2116
	  2118	  2158	  2178	  2179	  2199	  2200	  2220	  2240	  2241	  2263	  2283	  2284	  2304	  2305
	  2325	  2345	  2346	  2368	  2388	  2389	  2409	  2410	  2430	  2450	  2451	  2473	  2493	  2494
	  2514	  2515	  2535	  2555	  2556	  2578	  2598	  2599	  2619	  2620	  2640	  2660	  2661	  2683
	  2703	  2704	  2724	  2725	  2745	  2765	  2766	  2788	  2808	  2809	  2829	  2830	  2850	  2870
	  2871	  2893	  2913	  2914	  2934	  2935	  2955	  2975	  2976	  2998	  3018	  3019	  3039	  3040
	  3060	  3080	  3081	  3103	  3123	  3124	  3144	  3145	  3165	  3185	  3186	  3227	  3231	  3256
	  3260	  3285	  3289	  3314	  3318	  3343	  3347	  3372	  3376	  3401	  3405	  3434	  3435	  3456
	  3457	  3478	  3479	  3500	  3501	  3522	  3523	  3545	  3546	  3567	  3568	  3600	  3619	  3638
	  3657	  3676	  3695	  3714	  3748	  3750	  3766	  3768	  3784	  3786	  3802	  3804	  3820	  3822
	  3838	  3840	  3856	  3858	  3901	  3902	  3936	  3937	  3971	  3972	  4006	  4007	  4041	  4042     SEQ 0204
	  4076	  4077	  4111	  4112	  4146	  4147	  4181	  4182	  4216	  4217	  4251	  4252	  4286	  4287
	  4321	  4322	  4356	  4357	  4391	  4392	  4426	  4427	  4461	  4462	  4496	  4497	  4531	  4532
	  4566	  4567	  4601	  4602	  4640	  4646	  4674	  4680	  4708	  4714	  4742	  4748	  4776	  4782
	  4810	  4816	  4844	  4850	  4883	  4884	  4925	  4926	  4947	  4948	  4969	  4970	  4991	  4992
	  5013	  5014	  5035	  5036	  5057	  5058	  5076	  5077	  5089	  5090	  5115	  5116	  5155	  5156
	  5195	  5196	  5235	  5236	  5275	  5276	  5315	  5316	  5355	  5356
CONSO	  1232	  2159	  2242	  2264	  2347	  2369	  2452	  2474	  2557	  2579	  2662	  2684	  2767	  2789
	  2872	  2894	  2977	  2999	  3082	  3104	  3187
CONSZ	  1106	  1445	  1471	  1497	  1523	  1549	  1575	  1601	  1646	  1676	  1706	  1736	  1766	  1796
	  1826	  2180	  2201	  2221	  2285	  2306	  2326	  2390	  2411	  2431	  2495	  2516	  2536	  2600
	  2621	  2641	  2705	  2726	  2746	  2810	  2831	  2851	  2915	  2936	  2956	  3020	  3041	  3061
	  3125	  3146	  3166	  3232	  3261	  3290	  3319	  3348	  3377	  3406	  4648	  4682	  4716	  4750
	  4784	  4818	  4852
DEFINE	     9	    48	    56	    84	   252	   255	   261	   797	   803	   812	   816	   820	   825	   830
	   834	   846	   858	   870	   886	   902	   938	   945	   949	   953	   973	   989	   993	   997
	  1001	  1005	  1009	  1014	  1028	  1048
END	  7695
HRRZ	  7276
IFDEF	   318	   369	   370	   371	   372	  7686	  7693
IFNDEF	   307	   308	   318	   369	   370	   371	   372	   451	  7515
JFCL	   409	   410	   411	   412	   413	   414	   415	   416	   417	   418	   419	   420	   679	  1418
	  1612	  1839	  2134	  3198	  3419	  3581	  3731	  3874	  4608	  4868	  6315	  6940	  7281	  7478
JRST	    66	    67	    68	    69	    70	    71	    72	   157	   158	   159	   160	   331	   332	   334
	   336	   338	   340	   342	   345	   347	   348	   401	   666	   667	   670	   673	   711	   715
	   722	   725	   728	   731	   734	   744	   747	   769	   779	   781	  1092	  1099	  1109	  1117
	  1128	  1136	  1144	  1152	  1159	  1166	  1173	  1182	  1189	  1197	  1204	  1212	  1219	  1226
	  1236	  1244	  1254	  1262	  1273	  1282	  1290	  1298	  1319	  1327	  1334	  1342	  1348	  1356
	  1363	  1371	  1378	  1386	  1393	  1401	  1408	  1416	  1448	  1454	  1474	  1480	  1500	  1506
	  1526	  1532	  1552	  1558	  1578	  1584	  1604	  1610	  1649	  1655	  1679	  1685	  1709	  1715
	  1739	  1745	  1769	  1775	  1799	  1805	  1829	  1835	  1885	  1891	  1925	  1931	  1965	  1971
	  2005	  2011	  2045	  2051	  2085	  2091	  2125	  2131	  2162	  2169	  2183	  2190	  2204	  2211
	  2224	  2231	  2245	  2251	  2267	  2274	  2288	  2295	  2309	  2316	  2329	  2336	  2350	  2356
	  2372	  2379	  2393	  2400	  2414	  2421	  2434	  2441	  2455	  2461	  2477	  2484	  2498	  2505
	  2519	  2526	  2539	  2546	  2560	  2566	  2582	  2589	  2603	  2610	  2624	  2631	  2644	  2651
	  2665	  2671	  2687	  2694	  2708	  2715	  2729	  2736	  2749	  2756	  2770	  2776	  2792	  2799
	  2813	  2820	  2834	  2841	  2854	  2861	  2875	  2881	  2897	  2904	  2918	  2925	  2939	  2946
	  2959	  2966	  2980	  2986	  3002	  3009	  3023	  3030	  3044	  3051	  3064	  3071	  3085	  3091
	  3107	  3114	  3128	  3135	  3149	  3156	  3169	  3176	  3190	  3196	  3235	  3241	  3264	  3270
	  3293	  3299	  3322	  3328	  3351	  3357	  3380	  3386	  3409	  3415	  3440	  3444	  3462	  3466
	  3484	  3488	  3506	  3510	  3528	  3532	  3551	  3555	  3573	  3577	  3588	  3605	  3610	  3624
	  3629	  3643	  3648	  3662	  3667	  3681	  3686	  3700	  3705	  3719	  3724	  3755	  3759	  3773
	  3777	  3791	  3795	  3809	  3813	  3827	  3831	  3845	  3849	  3863	  3867	  3892	  3907	  3915
	  3927	  3942	  3950	  3962	  3977	  3985	  3997	  4012	  4020	  4032	  4047	  4055	  4067	  4082
	  4090	  4102	  4117	  4125	  4137	  4152	  4160	  4172	  4187	  4195	  4207	  4222	  4230	  4242
	  4257	  4265	  4277	  4292	  4300	  4312	  4327	  4335	  4347	  4362	  4370	  4382	  4397	  4405
	  4417	  4432	  4440	  4452	  4467	  4475	  4487	  4502	  4510	  4522	  4537	  4545	  4557	  4572
	  4580	  4592	  4607	  4615	  4644	  4651	  4657	  4678	  4685	  4691	  4712	  4719	  4725	  4746
	  4753	  4759	  4780	  4787	  4793	  4814	  4821	  4827	  4848	  4855	  4861	  4892	  4934	  4956
	  4978	  5000	  5022	  5044	  5066	  5082	  5095	  5117	  5125	  5131	  5157	  5165	  5171	  5197
	  5205	  5211	  5237	  5245	  5251	  5277	  5285	  5291	  5317	  5325	  5331	  5357	  5365	  5371
	  5404	  5407	  5413	  5434	  5437	  5443	  5464	  5467	  5473	  5494	  5497	  5503	  5524	  5527
	  5533	  5554	  5557	  5563	  5584	  5587	  5593	  5614	  5617	  5623	  5644	  5647	  5653	  5674
	  5677	  5683	  5704	  5707	  5713	  5734	  5737	  5743	  5764	  5767	  5773	  5794	  5797	  5803     SEQ 0205
	  5824	  5827	  5833	  5854	  5857	  5863	  5884	  5887	  5893	  5914	  5917	  5923	  5944	  5947
	  5953	  5974	  5977	  5983	  6004	  6007	  6013	  6034	  6037	  6043	  6064	  6067	  6073	  6094
	  6097	  6103	  6124	  6127	  6133	  6154	  6157	  6163	  6184	  6187	  6193	  6214	  6217	  6223
	  6244	  6247	  6253	  6274	  6277	  6283	  6304	  6307	  6313	  6338	  6347	  6353	  6366	  6375
	  6381	  6394	  6403	  6409	  6422	  6431	  6437	  6450	  6459	  6465	  6478	  6487	  6493	  6506
	  6515	  6521	  6534	  6543	  6549	  6562	  6571	  6577	  6590	  6599	  6605	  6618	  6627	  6633
	  6646	  6655	  6661	  6674	  6683	  6689	  6702	  6711	  6717	  6730	  6739	  6745	  6758	  6767
	  6773	  6786	  6795	  6801	  6814	  6823	  6829	  6842	  6851	  6857	  6869	  6878	  6884	  6896
	  6905	  6911	  6923	  6932	  6938	  6949	  6957	  6965	  6973	  6981	  6989	  7006	  7007	  7009
	  7014	  7020	  7036	  7037	  7039	  7044	  7050	  7066	  7067	  7069	  7074	  7080	  7096	  7097
	  7099	  7104	  7110	  7126	  7127	  7129	  7134	  7140	  7156	  7157	  7159	  7164	  7170	  7186
	  7187	  7189	  7194	  7200	  7216	  7217	  7219	  7224	  7230	  7242	  7258	  7271	  7275	  7280
	  7287	  7299	  7306	  7312	  7314	  7331	  7337	  7340	  7353	  7355	  7368	  7371	  7384	  7387
	  7395	  7399	  7403	  7407	  7411	  7415	  7419	  7423	  7505	  7509
JSP	   166	   705	   738	   773	  3430	  3586	  5393	  5423	  5453	  5483	  5513	  5543	  5573	  5603
	  5633	  5663	  5693	  5723	  5753	  5783	  5813	  5843	  5873	  5903	  5933	  5963	  5993	  6023
	  6053	  6083	  6113	  6143	  6173	  6203	  6233	  6263	  6293	  7004	  7034	  7064	  7094	  7124
	  7154	  7184	  7214	  7240	  7302	  7327
JSR	   788	   789	   790	  1085	  3432	  3454	  3476	  3498	  3520	  3543	  3565	  3598	  3617	  3636
	  3655	  3674	  3693	  3712	  3746	  3764	  3782	  3800	  3818	  3836	  3854	  3899	  3934	  3969
	  4004	  4039	  4074	  4109	  4144	  4179	  4214	  4249	  4284	  4319	  4354	  4389	  4424	  4459
	  4494	  4529	  4564	  4599	  4638	  4672	  4706	  4740	  4774	  4808	  4842	  5110	  5150	  5190
	  5230	  5270	  5310	  5350	  7362	  7378
LALL	    10	   784
LIST	     9	   318	   451	  7515	  7683
LIT	  7516
LOC	    26	   321	   645	   665	   669	   672	   677	   695	   700
MOVE	  1087	  1222	  1240	  1258	  1450	  1476	  1502	  1528	  1554	  1580	  1606	  1651	  1681	  1711
	  1741	  1771	  1801	  1831	  1887	  1927	  1967	  2007	  2047	  2087	  2127	  2165	  2186	  2207
	  2227	  2247	  2270	  2291	  2312	  2332	  2352	  2375	  2396	  2417	  2437	  2457	  2480	  2501
	  2522	  2542	  2562	  2585	  2606	  2627	  2647	  2667	  2690	  2711	  2732	  2752	  2772	  2795
	  2816	  2837	  2857	  2877	  2900	  2921	  2942	  2962	  2982	  3005	  3026	  3047	  3067	  3087
	  3110	  3131	  3152	  3172	  3192	  3237	  3266	  3295	  3324	  3353	  3382	  3411	  3430	  3432
	  3454	  3476	  3498	  3520	  3543	  3565	  3598	  3617	  3636	  3655	  3674	  3693	  3712	  3746
	  3764	  3782	  3800	  3818	  3836	  3854	  3899	  3911	  3934	  3946	  3969	  3981	  4004	  4016
	  4039	  4051	  4074	  4086	  4109	  4121	  4144	  4156	  4179	  4191	  4214	  4226	  4249	  4261
	  4284	  4296	  4319	  4331	  4354	  4366	  4389	  4401	  4424	  4436	  4459	  4471	  4494	  4506
	  4529	  4541	  4564	  4576	  4599	  4611	  4638	  4653	  4672	  4687	  4706	  4721	  4740	  4755
	  4774	  4789	  4808	  4823	  4842	  4857	  5110	  5121	  5126	  5150	  5161	  5166	  5190	  5201
	  5206	  5230	  5241	  5246	  5270	  5281	  5286	  5310	  5321	  5326	  5350	  5361	  5366	  5393
	  5401	  5409	  5423	  5431	  5439	  5453	  5461	  5469	  5483	  5491	  5499	  5513	  5521	  5529
	  5543	  5551	  5559	  5573	  5581	  5589	  5603	  5611	  5619	  5633	  5641	  5649	  5663	  5671
	  5679	  5693	  5701	  5709	  5723	  5731	  5739	  5753	  5761	  5769	  5783	  5791	  5799	  5813
	  5821	  5829	  5843	  5851	  5859	  5873	  5881	  5889	  5903	  5911	  5919	  5933	  5941	  5949
	  5963	  5971	  5979	  5993	  6001	  6009	  6023	  6031	  6039	  6053	  6061	  6069	  6083	  6091
	  6099	  6113	  6121	  6129	  6143	  6151	  6159	  6173	  6181	  6189	  6203	  6211	  6219	  6233
	  6241	  6249	  6263	  6271	  6279	  6293	  6301	  6309	  6338	  6342	  6349	  6366	  6370	  6377
	  6394	  6398	  6405	  6422	  6426	  6433	  6450	  6454	  6461	  6478	  6482	  6489	  6506	  6510
	  6517	  6534	  6538	  6545	  6562	  6566	  6573	  6590	  6594	  6601	  6618	  6622	  6629	  6646
	  6650	  6657	  6674	  6678	  6685	  6702	  6706	  6713	  6730	  6734	  6741	  6758	  6762	  6769
	  6786	  6790	  6797	  6814	  6818	  6825	  6842	  6846	  6853	  6869	  6873	  6880	  6896	  6900
	  6907	  6923	  6927	  6934	  6949	  6953	  6965	  6969	  6981	  6985	  7003	  7004	  7006	  7016
	  7033	  7034	  7036	  7046	  7063	  7064	  7066	  7076	  7093	  7094	  7096	  7106	  7123	  7124     SEQ 0206
	  7126	  7136	  7153	  7154	  7156	  7166	  7183	  7184	  7186	  7196	  7213	  7214	  7216	  7226
	  7258	  7267	  7283	  7308	  7325	  7333	  7354	  7362	  7369	  7370	  7378	  7385	  7386	  7393
	  7397	  7401	  7405	  7409	  7413	  7417	  7430	  7434	  7438	  7442	  7446	  7450	  7454	  7458
	  7500	  7506	  7507	  7508
MOVEI	  1103	  1229	  1247	  1265	  1436	  1443	  1462	  1469	  1488	  1495	  1514	  1521	  1540	  1547
	  1566	  1573	  1592	  1599	  1637	  1644	  1667	  1674	  1697	  1704	  1727	  1734	  1757	  1764
	  1787	  1794	  1817	  1824	  1871	  1880	  1911	  1920	  1951	  1960	  1991	  2000	  2031	  2040
	  2071	  2080	  2111	  2120	  2153	  2172	  2193	  2214	  2234	  2258	  2277	  2298	  2319	  2339
	  2363	  2382	  2403	  2424	  2444	  2468	  2487	  2508	  2529	  2549	  2573	  2592	  2613	  2634
	  2654	  2678	  2697	  2718	  2739	  2759	  2783	  2802	  2823	  2844	  2864	  2888	  2907	  2928
	  2949	  2969	  2993	  3012	  3033	  3054	  3074	  3098	  3117	  3138	  3159	  3179	  3222	  3229
	  3251	  3258	  3280	  3287	  3309	  3316	  3338	  3345	  3367	  3374	  3396	  3403	  3438	  3460
	  3482	  3504	  3526	  3549	  3571	  3603	  3622	  3641	  3660	  3679	  3698	  3717	  3753	  3771
	  3789	  3807	  3825	  3843	  3861	  3883	  3905	  3918	  3940	  3953	  3975	  3988	  4010	  4023
	  4045	  4058	  4080	  4093	  4115	  4128	  4150	  4163	  4185	  4198	  4220	  4233	  4255	  4268
	  4290	  4303	  4325	  4338	  4360	  4373	  4395	  4408	  4430	  4443	  4465	  4478	  4500	  4513
	  4535	  4548	  4570	  4583	  4605	  4636	  4642	  4670	  4676	  4704	  4710	  4738	  4744	  4772
	  4778	  4806	  4812	  4840	  4846	  4887	  4929	  4951	  4973	  4995	  5017	  5039	  5061	  5106
	  5108	  5146	  5148	  5186	  5188	  5226	  5228	  5266	  5268	  5306	  5308	  5346	  5348	  5391
	  5397	  5421	  5427	  5451	  5457	  5481	  5487	  5511	  5517	  5541	  5547	  5571	  5577	  5601
	  5607	  5631	  5637	  5661	  5667	  5691	  5697	  5721	  5727	  5751	  5757	  5781	  5787	  5811
	  5817	  5841	  5847	  5871	  5877	  5901	  5907	  5931	  5937	  5961	  5967	  5991	  5997	  6021
	  6027	  6051	  6057	  6081	  6087	  6111	  6117	  6141	  6147	  6171	  6177	  6201	  6207	  6231
	  6237	  6261	  6267	  6291	  6297	  6336	  6364	  6392	  6420	  6448	  6476	  6504	  6532	  6560
	  6588	  6616	  6644	  6672	  6700	  6728	  6756	  6784	  6812	  6840	  6867	  6894	  6921	  7001
	  7031	  7061	  7091	  7121	  7151	  7181	  7211	  7238	  7247	  7293	  7319	  7349	  7363	  7379
	  7394	  7398	  7402	  7406	  7410	  7414	  7418	  7431	  7435	  7439	  7443	  7447	  7451	  7455
	  7498	  7499
MOVEM	  1104	  1230	  1248	  1266	  1437	  1463	  1489	  1515	  1541	  1567	  1593	  1638	  1668	  1698
	  1728	  1758	  1788	  1818	  1872	  1912	  1952	  1992	  2032	  2072	  2112	  2154	  2173	  2194
	  2215	  2235	  2259	  2278	  2299	  2320	  2340	  2364	  2383	  2404	  2425	  2445	  2469	  2488
	  2509	  2530	  2550	  2574	  2593	  2614	  2635	  2655	  2679	  2698	  2719	  2740	  2760	  2784
	  2803	  2824	  2845	  2865	  2889	  2908	  2929	  2950	  2970	  2994	  3013	  3034	  3055	  3075
	  3099	  3118	  3139	  3160	  3180	  3223	  3252	  3281	  3310	  3339	  3368	  3397	  3431	  3433
	  3455	  3477	  3499	  3521	  3544	  3566	  3599	  3618	  3637	  3656	  3675	  3694	  3713	  3747
	  3765	  3783	  3801	  3819	  3837	  3855	  3884	  3900	  3919	  3935	  3954	  3970	  3989	  4005
	  4024	  4040	  4059	  4075	  4094	  4110	  4129	  4145	  4164	  4180	  4199	  4215	  4234	  4250
	  4269	  4285	  4304	  4320	  4339	  4355	  4374	  4390	  4409	  4425	  4444	  4460	  4479	  4495
	  4514	  4530	  4549	  4565	  4584	  4600	  4637	  4639	  4671	  4673	  4705	  4707	  4739	  4741
	  4773	  4775	  4807	  4809	  4841	  4843	  5107	  5109	  5111	  5147	  5149	  5151	  5187	  5189
	  5191	  5227	  5229	  5231	  5267	  5269	  5271	  5307	  5309	  5311	  5347	  5349	  5351	  5392
	  5394	  5422	  5424	  5452	  5454	  5482	  5484	  5512	  5514	  5542	  5544	  5572	  5574	  5602
	  5604	  5632	  5634	  5662	  5664	  5692	  5694	  5722	  5724	  5752	  5754	  5782	  5784	  5812
	  5814	  5842	  5844	  5872	  5874	  5902	  5904	  5932	  5934	  5962	  5964	  5992	  5994	  6022
	  6024	  6052	  6054	  6082	  6084	  6112	  6114	  6142	  6144	  6172	  6174	  6202	  6204	  6232
	  6234	  6262	  6264	  6292	  6294	  6337	  6339	  6365	  6367	  6393	  6395	  6421	  6423	  6449
	  6451	  6477	  6479	  6505	  6507	  6533	  6535	  6561	  6563	  6589	  6591	  6617	  6619	  6645
	  6647	  6673	  6675	  6701	  6703	  6729	  6731	  6757	  6759	  6785	  6787	  6813	  6815	  6841
	  6843	  6868	  6870	  6895	  6897	  6922	  6924	  6950	  6966	  6982	  7002	  7005	  7032	  7035
	  7062	  7065	  7092	  7095	  7122	  7125	  7152	  7155	  7182	  7185	  7212	  7215	  7239	  7248
	  7249	  7250	  7251	  7252	  7253	  7254	  7255	  7259	  7294	  7320	  7348	  7360	  7361	  7364
	  7376	  7377	  7380	  7495	  7496	  7497	  7501
NOSYM	    29                                                                                                             SEQ 0207
OPDEF	   153	   154	   155	   156	   157	   158	   159	   160	   166	   172	   173	   181	   182	   183
	   184	   185	   186	   187	   188	   189	   190	   191	   194	   195	   196	   197	   198	   199
	   200	   201	   202	   203	   204	   205	   206	   207	   208	   209	   210	   211	   212	   213
	   214	   215	   216	   217	   218	   219	   220	   221	   222	   223	   224	   225	   226	   227
	   228	   229	   230	   231	   232	   233	   234	   235	   236	   237	   238	   239	   240	   241
	   242	   243	   244	   245	   246	   247	   248	   250	   267	   272	   273	   277	   278	   279
	   285	   286	   292	   293	   294	   295	   296	   297	   298	   304	   305	   312	   313	   314
	   315	   318	   788	   789	   790	   792	   793
POP	   156
POPJ	   154
PUSH	   155
PUSHJ	   153
REPEAT	  1427	  1624	  1850	  3211	  4625	  4899	  6324
SETO	  1094	  7459
SETOM	   707	   714	   740	   775	  7256	  7257
SETZ	  1105	  1877	  1917	  1957	  1997	  2037	  2077	  2117	  4882	  4924	  4946	  4968	  4990	  5012
	  5034	  5056	  6948	  7324
SETZB	  6964	  6980
SETZM	   704	   709	   737	   742	   772	   777	  7260	  7339	  7350
SIXBIT	    77	    78	   536	   537	   545	   546
SKIPA	  1233	  1270	  5403	  5433	  5463	  5493	  5523	  5553	  5583	  5613	  5643	  5673	  5703	  5733
	  5763	  5793	  5823	  5853	  5883	  5913	  5943	  5973	  6003	  6033	  6063	  6093	  6123	  6153
	  6183	  6213	  6243	  6273	  6303
SKIPE	   710	   724	   730	  1882	  1922	  1962	  2002	  2042	  2082	  2122	  3443	  3465	  3487	  3509
	  3531	  3554	  3576	  3609	  3628	  3647	  3666	  3685	  3704	  3723	  3758	  3776	  3794	  3812
	  3830	  3848	  3866	  3891	  3926	  3961	  3996	  4031	  4066	  4101	  4136	  4171	  4206	  4241
	  4276	  4311	  4346	  4381	  4416	  4451	  4486	  4521	  4556	  4591	  4889	  4931	  4953	  4975
	  4997	  5019	  5041	  5063	  7272	  7422
SKIPL	   745
SKIPN	   708	   713	   721	   726	   732	   741	   743	   776	   778	  1114	  7298	  7313
SOJG	  1444	  1470	  1496	  1522	  1548	  1574	  1600	  1645	  1675	  1705	  1735	  1765	  1795	  1825
	  1881	  1921	  1961	  2001	  2041	  2081	  2121	  3230	  3259	  3288	  3317	  3346	  3375	  3404
	  3439	  3461	  3483	  3505	  3527	  3550	  3572	  3604	  3623	  3642	  3661	  3680	  3699	  3718
	  3754	  3772	  3790	  3808	  3826	  3844	  3862	  3906	  3941	  3976	  4011	  4046	  4081	  4116
	  4151	  4186	  4221	  4256	  4291	  4326	  4361	  4396	  4431	  4466	  4501	  4536	  4571	  4606
	  4643	  4677	  4711	  4745	  4779	  4813	  4847	  4888	  4930	  4952	  4974	  4996	  5018	  5040
	  5062
SOS	   720
SOSE	  5132	  5172	  5212	  5252	  5292	  5332	  5372
SUBTTL	    30	    82	   117	   318	   319	   647	   735	   770	   782	  1073	  1120	  1274	  1301	  3420
	  3582	  3732	  3875	  4619	  4869	  5069	  5096	  5377	  6316	  6941	  6990	  7231	  7288	  7341
	  7461	  7510
TITLE	    14
TLNE	   706	   739	   774	  3587	  6954	  6970	  6986	  7241	  7303
TLNN	  7328
TRNE	  1179	  1186	  1194	  1201	  1209	  1216	  1269	  1295	  1324	  1339	  1353	  1368	  1383	  1398
	  1413
TRNN	  1125	  1133	  1141	  1149	  1156	  1163	  1170	  1251	  1279	  1287	  1316	  1331	  1345	  1360
	  1375	  1390	  1405	  5079	  5092
TTCALL	   746
VAR	  7691
XLIST	     8	   317	   318	   450	  7514
XWD	  7003	  7033	  7063	  7093	  7123	  7153	  7183	  7213
